# -*- coding: mbcs -*-
typelib_path = 'C:\\Program Files\\Microsoft Office\\Root\\Office16\\MSWORD.OLB'
_lcid = 0 # change this if required
from ctypes import *
import comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8
import comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0
from comtypes import GUID
from comtypes import CoClass
from ctypes import HRESULT
from comtypes.automation import IDispatch
from comtypes import helpstring
from comtypes import COMMETHOD
from comtypes import dispid
from comtypes.automation import VARIANT
from comtypes import BSTR
from ctypes.wintypes import VARIANT_BOOL
from comtypes.automation import VARIANT
from comtypes import IUnknown
import comtypes.gen._0002E157_0000_0000_C000_000000000046_0_5_3
from comtypes import DISPMETHOD, DISPPROPERTY, helpstring
from comtypes.automation import _midlSAFEARRAY



# values for enumeration 'WdPrintOutPages'
wdPrintAllPages = 0
wdPrintOddPagesOnly = 1
wdPrintEvenPagesOnly = 2
WdPrintOutPages = c_int # enum

# values for enumeration 'WdNumberForm'
wdNumberFormDefault = 0
wdNumberFormLining = 1
wdNumberFormOldStyle = 2
WdNumberForm = c_int # enum

# values for enumeration 'WdWordDialogTab'
wdDialogToolsOptionsTabView = 204
wdDialogToolsOptionsTabGeneral = 203
wdDialogToolsOptionsTabEdit = 224
wdDialogToolsOptionsTabPrint = 208
wdDialogToolsOptionsTabSave = 209
wdDialogToolsOptionsTabProofread = 211
wdDialogToolsOptionsTabTrackChanges = 386
wdDialogToolsOptionsTabUserInfo = 213
wdDialogToolsOptionsTabCompatibility = 525
wdDialogToolsOptionsTabTypography = 739
wdDialogToolsOptionsTabFileLocations = 225
wdDialogToolsOptionsTabFuzzy = 790
wdDialogToolsOptionsTabHangulHanjaConversion = 786
wdDialogToolsOptionsTabBidi = 1029
wdDialogToolsOptionsTabSecurity = 1361
wdDialogFilePageSetupTabMargins = 150000
wdDialogFilePageSetupTabPaper = 150001
wdDialogFilePageSetupTabLayout = 150003
wdDialogFilePageSetupTabCharsLines = 150004
wdDialogInsertSymbolTabSymbols = 200000
wdDialogInsertSymbolTabSpecialCharacters = 200001
wdDialogNoteOptionsTabAllFootnotes = 300000
wdDialogNoteOptionsTabAllEndnotes = 300001
wdDialogInsertIndexAndTablesTabIndex = 400000
wdDialogInsertIndexAndTablesTabTableOfContents = 400001
wdDialogInsertIndexAndTablesTabTableOfFigures = 400002
wdDialogInsertIndexAndTablesTabTableOfAuthorities = 400003
wdDialogOrganizerTabStyles = 500000
wdDialogOrganizerTabAutoText = 500001
wdDialogOrganizerTabCommandBars = 500002
wdDialogOrganizerTabMacros = 500003
wdDialogFormatFontTabFont = 600000
wdDialogFormatFontTabCharacterSpacing = 600001
wdDialogFormatFontTabAnimation = 600002
wdDialogFormatBordersAndShadingTabBorders = 700000
wdDialogFormatBordersAndShadingTabPageBorder = 700001
wdDialogFormatBordersAndShadingTabShading = 700002
wdDialogToolsEnvelopesAndLabelsTabEnvelopes = 800000
wdDialogToolsEnvelopesAndLabelsTabLabels = 800001
wdDialogFormatParagraphTabIndentsAndSpacing = 1000000
wdDialogFormatParagraphTabTextFlow = 1000001
wdDialogFormatParagraphTabTeisai = 1000002
wdDialogFormatDrawingObjectTabColorsAndLines = 1200000
wdDialogFormatDrawingObjectTabSize = 1200001
wdDialogFormatDrawingObjectTabPosition = 1200002
wdDialogFormatDrawingObjectTabWrapping = 1200003
wdDialogFormatDrawingObjectTabPicture = 1200004
wdDialogFormatDrawingObjectTabTextbox = 1200005
wdDialogFormatDrawingObjectTabWeb = 1200006
wdDialogFormatDrawingObjectTabHR = 1200007
wdDialogToolsAutoCorrectExceptionsTabFirstLetter = 1400000
wdDialogToolsAutoCorrectExceptionsTabInitialCaps = 1400001
wdDialogToolsAutoCorrectExceptionsTabHangulAndAlphabet = 1400002
wdDialogToolsAutoCorrectExceptionsTabIac = 1400003
wdDialogFormatBulletsAndNumberingTabBulleted = 1500000
wdDialogFormatBulletsAndNumberingTabNumbered = 1500001
wdDialogFormatBulletsAndNumberingTabOutlineNumbered = 1500002
wdDialogLetterWizardTabLetterFormat = 1600000
wdDialogLetterWizardTabRecipientInfo = 1600001
wdDialogLetterWizardTabOtherElements = 1600002
wdDialogLetterWizardTabSenderInfo = 1600003
wdDialogToolsAutoManagerTabAutoCorrect = 1700000
wdDialogToolsAutoManagerTabAutoFormatAsYouType = 1700001
wdDialogToolsAutoManagerTabAutoText = 1700002
wdDialogToolsAutoManagerTabAutoFormat = 1700003
wdDialogToolsAutoManagerTabSmartTags = 1700004
wdDialogTablePropertiesTabTable = 1800000
wdDialogTablePropertiesTabRow = 1800001
wdDialogTablePropertiesTabColumn = 1800002
wdDialogTablePropertiesTabCell = 1800003
wdDialogEmailOptionsTabSignature = 1900000
wdDialogEmailOptionsTabStationary = 1900001
wdDialogEmailOptionsTabQuoting = 1900002
wdDialogWebOptionsBrowsers = 2000000
wdDialogWebOptionsGeneral = 2000000
wdDialogWebOptionsFiles = 2000001
wdDialogWebOptionsPictures = 2000002
wdDialogWebOptionsEncoding = 2000003
wdDialogWebOptionsFonts = 2000004
wdDialogToolsOptionsTabAcetate = 1266
wdDialogTemplates = 2100000
wdDialogTemplatesXMLSchema = 2100001
wdDialogTemplatesXMLExpansionPacks = 2100002
wdDialogTemplatesLinkedCSS = 2100003
wdDialogStyleManagementTabEdit = 2200000
wdDialogStyleManagementTabRecommend = 2200001
wdDialogStyleManagementTabRestrict = 2200002
WdWordDialogTab = c_int # enum

# values for enumeration 'WdStatistic'
wdStatisticWords = 0
wdStatisticLines = 1
wdStatisticPages = 2
wdStatisticCharacters = 3
wdStatisticParagraphs = 4
wdStatisticCharactersWithSpaces = 5
wdStatisticFarEastCharacters = 6
WdStatistic = c_int # enum

# values for enumeration 'WdPrintOutRange'
wdPrintAllDocument = 0
wdPrintSelection = 1
wdPrintCurrentPage = 2
wdPrintFromTo = 3
wdPrintRangeOfPages = 4
WdPrintOutRange = c_int # enum

# values for enumeration 'WdBuiltInProperty'
wdPropertyTitle = 1
wdPropertySubject = 2
wdPropertyAuthor = 3
wdPropertyKeywords = 4
wdPropertyComments = 5
wdPropertyTemplate = 6
wdPropertyLastAuthor = 7
wdPropertyRevision = 8
wdPropertyAppName = 9
wdPropertyTimeLastPrinted = 10
wdPropertyTimeCreated = 11
wdPropertyTimeLastSaved = 12
wdPropertyVBATotalEdit = 13
wdPropertyPages = 14
wdPropertyWords = 15
wdPropertyCharacters = 16
wdPropertySecurity = 17
wdPropertyCategory = 18
wdPropertyFormat = 19
wdPropertyManager = 20
wdPropertyCompany = 21
wdPropertyBytes = 22
wdPropertyLines = 23
wdPropertyParas = 24
wdPropertySlides = 25
wdPropertyNotes = 26
wdPropertyHiddenSlides = 27
wdPropertyMMClips = 28
wdPropertyHyperlinkBase = 29
wdPropertyCharsWSpaces = 30
WdBuiltInProperty = c_int # enum

# values for enumeration 'WdEditionType'
wdPublisher = 0
wdSubscriber = 1
WdEditionType = c_int # enum

# values for enumeration 'XlLineStyle'
xlContinuous = 1
xlDash = -4115
xlDashDot = 4
xlDashDotDot = 5
xlDot = -4118
xlDouble = -4119
xlSlantDashDot = 13
xlLineStyleNone = -4142
XlLineStyle = c_int # enum

# values for enumeration 'WdPageNumberStyleHID'
emptyenum = 0
WdPageNumberStyleHID = c_int # enum

# values for enumeration 'WdFieldKind'
wdFieldKindNone = 0
wdFieldKindHot = 1
wdFieldKindWarm = 2
wdFieldKindCold = 3
WdFieldKind = c_int # enum
class ShadowFormat(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{000209CC-0000-0000-C000-000000000046}')
    _idlflags_ = ['dual', 'nonextensible', 'oleautomation']
class Application(CoClass):
    _reg_clsid_ = GUID('{000209FF-0000-0000-C000-000000000046}')
    _idlflags_ = []
    _typelib_path_ = typelib_path
    _reg_typelib_ = ('{00020905-0000-0000-C000-000000000046}', 8, 7)
class _Application(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{00020970-0000-0000-C000-000000000046}')
    _idlflags_ = ['hidden', 'dual', 'nonextensible', 'oleautomation']
class ApplicationEvents(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{000209F7-0000-0000-C000-000000000046}')
    _idlflags_ = ['hidden']
    _methods_ = []
class ApplicationEvents2(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{000209FE-0000-0000-C000-000000000046}')
    _idlflags_ = ['hidden']
    _methods_ = []
class ApplicationEvents3(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{00020A00-0000-0000-C000-000000000046}')
    _idlflags_ = ['hidden']
    _methods_ = []
class ApplicationEvents4(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{00020A01-0000-0000-C000-000000000046}')
    _idlflags_ = ['hidden', 'nonextensible']
    _methods_ = []
Application._com_interfaces_ = [_Application]
Application._outgoing_interfaces_ = [ApplicationEvents4, ApplicationEvents, ApplicationEvents2, ApplicationEvents3]

class ColorFormat(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{000209C6-0000-0000-C000-000000000046}')
    _idlflags_ = ['dual', 'nonextensible', 'oleautomation']
ShadowFormat._methods_ = [
    COMMETHOD([dispid(1000), 'propget'], HRESULT, 'Application',
              ( ['out', 'retval'], POINTER(POINTER(Application)), 'prop' )),
    COMMETHOD([dispid(1001), 'propget'], HRESULT, 'Creator',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(1), 'propget'], HRESULT, 'Parent',
              ( ['out', 'retval'], POINTER(POINTER(IDispatch)), 'prop' )),
    COMMETHOD([dispid(100), 'propget'], HRESULT, 'ForeColor',
              ( ['out', 'retval'], POINTER(POINTER(ColorFormat)), 'prop' )),
    COMMETHOD([dispid(101), 'propget'], HRESULT, 'Obscured',
              ( ['out', 'retval'], POINTER(comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoTriState), 'prop' )),
    COMMETHOD([dispid(101), 'propput'], HRESULT, 'Obscured',
              ( ['in'], comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoTriState, 'prop' )),
    COMMETHOD([dispid(102), 'propget'], HRESULT, 'OffsetX',
              ( ['out', 'retval'], POINTER(c_float), 'prop' )),
    COMMETHOD([dispid(102), 'propput'], HRESULT, 'OffsetX',
              ( ['in'], c_float, 'prop' )),
    COMMETHOD([dispid(103), 'propget'], HRESULT, 'OffsetY',
              ( ['out', 'retval'], POINTER(c_float), 'prop' )),
    COMMETHOD([dispid(103), 'propput'], HRESULT, 'OffsetY',
              ( ['in'], c_float, 'prop' )),
    COMMETHOD([dispid(104), 'propget'], HRESULT, 'Transparency',
              ( ['out', 'retval'], POINTER(c_float), 'prop' )),
    COMMETHOD([dispid(104), 'propput'], HRESULT, 'Transparency',
              ( ['in'], c_float, 'prop' )),
    COMMETHOD([dispid(105), 'propget'], HRESULT, 'Type',
              ( ['out', 'retval'], POINTER(comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoShadowType), 'prop' )),
    COMMETHOD([dispid(105), 'propput'], HRESULT, 'Type',
              ( ['in'], comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoShadowType, 'prop' )),
    COMMETHOD([dispid(106), 'propget'], HRESULT, 'Visible',
              ( ['out', 'retval'], POINTER(comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoTriState), 'prop' )),
    COMMETHOD([dispid(106), 'propput'], HRESULT, 'Visible',
              ( ['in'], comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoTriState, 'prop' )),
    COMMETHOD([dispid(10)], HRESULT, 'IncrementOffsetX',
              ( ['in'], c_float, 'Increment' )),
    COMMETHOD([dispid(11)], HRESULT, 'IncrementOffsetY',
              ( ['in'], c_float, 'Increment' )),
    COMMETHOD([dispid(107), 'propget'], HRESULT, 'Style',
              ( ['out', 'retval'], POINTER(comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoShadowStyle), 'prop' )),
    COMMETHOD([dispid(107), 'propput'], HRESULT, 'Style',
              ( ['in'], comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoShadowStyle, 'prop' )),
    COMMETHOD([dispid(108), 'propget'], HRESULT, 'Blur',
              ( ['out', 'retval'], POINTER(c_float), 'prop' )),
    COMMETHOD([dispid(108), 'propput'], HRESULT, 'Blur',
              ( ['in'], c_float, 'prop' )),
    COMMETHOD([dispid(109), 'propget'], HRESULT, 'Size',
              ( ['out', 'retval'], POINTER(c_float), 'prop' )),
    COMMETHOD([dispid(109), 'propput'], HRESULT, 'Size',
              ( ['in'], c_float, 'prop' )),
    COMMETHOD([dispid(110), 'propget'], HRESULT, 'RotateWithShape',
              ( ['out', 'retval'], POINTER(comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoTriState), 'prop' )),
    COMMETHOD([dispid(110), 'propput'], HRESULT, 'RotateWithShape',
              ( ['in'], comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoTriState, 'prop' )),
]
################################################################
## code template for ShadowFormat implementation
##class ShadowFormat_Impl(object):
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Creator(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def ForeColor(self):
##        '-no docstring-'
##        #return prop
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    Obscured = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    OffsetX = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    OffsetY = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    Transparency = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    Type = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    Visible = property(_get, _set, doc = _set.__doc__)
##
##    def IncrementOffsetX(self, Increment):
##        '-no docstring-'
##        #return 
##
##    def IncrementOffsetY(self, Increment):
##        '-no docstring-'
##        #return 
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    Style = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    Blur = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    Size = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    RotateWithShape = property(_get, _set, doc = _set.__doc__)
##


# values for enumeration 'WdHighAnsiText'
wdHighAnsiIsFarEast = 0
wdHighAnsiIsHighAnsi = 1
wdAutoDetectHighAnsiFarEast = 2
WdHighAnsiText = c_int # enum

# values for enumeration 'WdRevisedLinesMark'
wdRevisedLinesMarkNone = 0
wdRevisedLinesMarkLeftBorder = 1
wdRevisedLinesMarkRightBorder = 2
wdRevisedLinesMarkOutsideBorder = 3
WdRevisedLinesMark = c_int # enum

# values for enumeration 'WdMappedDataFields'
wdUniqueIdentifier = 1
wdCourtesyTitle = 2
wdFirstName = 3
wdMiddleName = 4
wdLastName = 5
wdSuffix = 6
wdNickname = 7
wdJobTitle = 8
wdCompany = 9
wdAddress1 = 10
wdAddress2 = 11
wdCity = 12
wdState = 13
wdPostalCode = 14
wdCountryRegion = 15
wdBusinessPhone = 16
wdBusinessFax = 17
wdHomePhone = 18
wdHomeFax = 19
wdEmailAddress = 20
wdWebPageURL = 21
wdSpouseCourtesyTitle = 22
wdSpouseFirstName = 23
wdSpouseMiddleName = 24
wdSpouseLastName = 25
wdSpouseNickname = 26
wdRubyFirstName = 27
wdRubyLastName = 28
wdAddress3 = 29
wdDepartment = 30
WdMappedDataFields = c_int # enum

# values for enumeration 'WdProtectedViewCloseReason'
wdProtectedViewCloseNormal = 0
wdProtectedViewCloseEdit = 1
wdProtectedViewCloseForced = 2
WdProtectedViewCloseReason = c_int # enum
class Mailer(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{000209BD-0000-0000-C000-000000000046}')
    _idlflags_ = ['dual', 'nonextensible', 'oleautomation']
Mailer._methods_ = [
    COMMETHOD([dispid(1000), 'hidden', 'propget'], HRESULT, 'Application',
              ( ['out', 'retval'], POINTER(POINTER(Application)), 'prop' )),
    COMMETHOD([dispid(1001), 'hidden', 'propget'], HRESULT, 'Creator',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(1002), 'hidden', 'propget'], HRESULT, 'Parent',
              ( ['out', 'retval'], POINTER(POINTER(IDispatch)), 'prop' )),
    COMMETHOD([dispid(100), 'hidden', 'propget'], HRESULT, 'BCCRecipients',
              ( ['out', 'retval'], POINTER(VARIANT), 'prop' )),
    COMMETHOD([dispid(100), 'hidden', 'propput'], HRESULT, 'BCCRecipients',
              ( ['in'], POINTER(VARIANT), 'prop' )),
    COMMETHOD([dispid(101), 'hidden', 'propget'], HRESULT, 'CCRecipients',
              ( ['out', 'retval'], POINTER(VARIANT), 'prop' )),
    COMMETHOD([dispid(101), 'hidden', 'propput'], HRESULT, 'CCRecipients',
              ( ['in'], POINTER(VARIANT), 'prop' )),
    COMMETHOD([dispid(102), 'hidden', 'propget'], HRESULT, 'Recipients',
              ( ['out', 'retval'], POINTER(VARIANT), 'prop' )),
    COMMETHOD([dispid(102), 'hidden', 'propput'], HRESULT, 'Recipients',
              ( ['in'], POINTER(VARIANT), 'prop' )),
    COMMETHOD([dispid(103), 'hidden', 'propget'], HRESULT, 'Enclosures',
              ( ['out', 'retval'], POINTER(VARIANT), 'prop' )),
    COMMETHOD([dispid(103), 'hidden', 'propput'], HRESULT, 'Enclosures',
              ( ['in'], POINTER(VARIANT), 'prop' )),
    COMMETHOD([dispid(104), 'hidden', 'propget'], HRESULT, 'Sender',
              ( ['out', 'retval'], POINTER(BSTR), 'prop' )),
    COMMETHOD([dispid(105), 'hidden', 'propget'], HRESULT, 'SendDateTime',
              ( ['out', 'retval'], POINTER(c_double), 'prop' )),
    COMMETHOD([dispid(106), 'hidden', 'propget'], HRESULT, 'Received',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'prop' )),
    COMMETHOD([dispid(107), 'hidden', 'propget'], HRESULT, 'Subject',
              ( ['out', 'retval'], POINTER(BSTR), 'prop' )),
    COMMETHOD([dispid(107), 'hidden', 'propput'], HRESULT, 'Subject',
              ( ['in'], BSTR, 'prop' )),
]
################################################################
## code template for Mailer implementation
##class Mailer_Impl(object):
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Creator(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return prop
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    BCCRecipients = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    CCRecipients = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    Recipients = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    Enclosures = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Sender(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def SendDateTime(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Received(self):
##        '-no docstring-'
##        #return prop
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    Subject = property(_get, _set, doc = _set.__doc__)
##


# values for enumeration 'WdDocumentMedium'
wdEmailMessage = 0
wdDocument = 1
wdWebPage = 2
WdDocumentMedium = c_int # enum
class SmartTagRecognizer(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{15EBE471-0182-4CCE-98D0-B6614D1C32A1}')
    _idlflags_ = ['hidden', 'dual', 'nonextensible', 'oleautomation']
SmartTagRecognizer._methods_ = [
    COMMETHOD([dispid(1), 'hidden', 'propget'], HRESULT, 'FullName',
              ( ['out', 'retval'], POINTER(BSTR), 'prop' )),
    COMMETHOD([dispid(1000), 'hidden', 'propget'], HRESULT, 'Application',
              ( ['out', 'retval'], POINTER(POINTER(Application)), 'prop' )),
    COMMETHOD([dispid(1001), 'hidden', 'propget'], HRESULT, 'Creator',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(1002), 'hidden', 'propget'], HRESULT, 'Parent',
              ( ['out', 'retval'], POINTER(POINTER(IDispatch)), 'prop' )),
    COMMETHOD([dispid(1003), 'hidden', 'propget'], HRESULT, 'Enabled',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'prop' )),
    COMMETHOD([dispid(1003), 'hidden', 'propput'], HRESULT, 'Enabled',
              ( ['in'], VARIANT_BOOL, 'prop' )),
    COMMETHOD([dispid(0), 'hidden', 'propget'], HRESULT, 'ProgID',
              ( ['out', 'retval'], POINTER(BSTR), 'prop' )),
    COMMETHOD([dispid(1004), 'hidden', 'propget'], HRESULT, 'Caption',
              ( ['out', 'retval'], POINTER(BSTR), 'prop' )),
]
################################################################
## code template for SmartTagRecognizer implementation
##class SmartTagRecognizer_Impl(object):
##    @property
##    def FullName(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Creator(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return prop
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    Enabled = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def ProgID(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Caption(self):
##        '-no docstring-'
##        #return prop
##


# values for enumeration 'WdDeletedTextMark'
wdDeletedTextMarkHidden = 0
wdDeletedTextMarkStrikeThrough = 1
wdDeletedTextMarkCaret = 2
wdDeletedTextMarkPound = 3
wdDeletedTextMarkNone = 4
wdDeletedTextMarkBold = 5
wdDeletedTextMarkItalic = 6
wdDeletedTextMarkUnderline = 7
wdDeletedTextMarkDoubleUnderline = 8
wdDeletedTextMarkColorOnly = 9
wdDeletedTextMarkDoubleStrikeThrough = 10
WdDeletedTextMark = c_int # enum
class FullSeriesCollection(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{4DACC469-630B-457E-9C8F-08158D57FC7C}')
    _idlflags_ = ['dual', 'nonextensible', 'oleautomation']
class Series(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{40810760-068A-4486-BEC9-8EA58C7029F5}')
    _idlflags_ = ['dual', 'nonextensible', 'oleautomation']
FullSeriesCollection._methods_ = [
    COMMETHOD([dispid(150), 'propget'], HRESULT, 'Parent',
              ( ['out', 'retval'], POINTER(POINTER(IDispatch)), 'prop' )),
    COMMETHOD([dispid(118), 'propget'], HRESULT, 'Count',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(0)], HRESULT, 'Item',
              ( ['in'], VARIANT, 'Index' ),
              ( ['out', 'retval'], POINTER(POINTER(Series)), 'prop' )),
    COMMETHOD([dispid(-4), 'nonbrowsable'], HRESULT, '_NewEnum',
              ( ['out', 'retval'], POINTER(POINTER(IUnknown)), 'prop' )),
    COMMETHOD([dispid(148), 'propget'], HRESULT, 'Application',
              ( ['out', 'retval'], POINTER(POINTER(IDispatch)), 'prop' )),
    COMMETHOD([dispid(149), 'propget'], HRESULT, 'Creator',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(1610743818), 'nonbrowsable'], HRESULT, '_Default',
              ( ['in'], VARIANT, 'Index' ),
              ( ['out', 'retval'], POINTER(POINTER(Series)), 'prop' )),
]
################################################################
## code template for FullSeriesCollection implementation
##class FullSeriesCollection_Impl(object):
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Count(self):
##        '-no docstring-'
##        #return prop
##
##    def Item(self, Index):
##        '-no docstring-'
##        #return prop
##
##    def _NewEnum(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Creator(self):
##        '-no docstring-'
##        #return prop
##
##    def _Default(self, Index):
##        '-no docstring-'
##        #return prop
##


# values for enumeration 'WdGutterStyleOld'
wdGutterStyleLatin = -10
wdGutterStyleBidi = 2
WdGutterStyleOld = c_int # enum
class DownBars(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{84A6A663-AEF4-4FCD-83FD-9BB707F157CA}')
    _idlflags_ = ['dual', 'nonextensible', 'oleautomation']
class ChartBorder(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{AB0D33A3-C9EA-485B-9443-4C1BB3656CEA}')
    _idlflags_ = ['dual', 'nonextensible', 'oleautomation']
class Interior(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{B184502B-587A-4C6A-8DC4-ECE4354883C6}')
    _idlflags_ = ['dual', 'nonextensible', 'oleautomation']
class ChartFillFormat(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{F152D349-7D20-4C01-A42B-2D6DE4F3891C}')
    _idlflags_ = ['hidden', 'dual', 'nonextensible', 'oleautomation']
class ChartFormat(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{B66D3C1A-4541-4961-B35B-A353C03F6A99}')
    _idlflags_ = ['dual', 'nonextensible', 'oleautomation']
DownBars._methods_ = [
    COMMETHOD([dispid(110), 'propget'], HRESULT, 'Name',
              ( ['out', 'retval'], POINTER(BSTR), 'prop' )),
    COMMETHOD([dispid(235)], HRESULT, 'Select',
              ( ['out', 'retval'], POINTER(VARIANT), 'prop' )),
    COMMETHOD([dispid(150), 'propget'], HRESULT, 'Parent',
              ( ['out', 'retval'], POINTER(POINTER(IDispatch)), 'prop' )),
    COMMETHOD([dispid(128), 'hidden', 'propget'], HRESULT, 'Border',
              ( ['out', 'retval'], POINTER(POINTER(ChartBorder)), 'prop' )),
    COMMETHOD([dispid(117)], HRESULT, 'Delete',
              ( ['out', 'retval'], POINTER(VARIANT), 'prop' )),
    COMMETHOD([dispid(129), 'hidden', 'propget'], HRESULT, 'Interior',
              ( ['out', 'retval'], POINTER(POINTER(Interior)), 'prop' )),
    COMMETHOD([dispid(1663), 'hidden', 'propget'], HRESULT, 'Fill',
              ( ['out', 'retval'], POINTER(POINTER(ChartFillFormat)), 'prop' )),
    COMMETHOD([dispid(1610743815), 'propget'], HRESULT, 'Format',
              ( ['out', 'retval'], POINTER(POINTER(ChartFormat)), 'prop' )),
    COMMETHOD([dispid(148), 'propget'], HRESULT, 'Application',
              ( ['out', 'retval'], POINTER(POINTER(IDispatch)), 'prop' )),
    COMMETHOD([dispid(149), 'propget'], HRESULT, 'Creator',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(253)], HRESULT, 'SetProperty',
              ( ['in'], BSTR, 'ID' ),
              ( ['in'], VARIANT, 'Value' )),
    COMMETHOD([dispid(254)], HRESULT, 'GetProperty',
              ( ['in'], BSTR, 'ID' ),
              ( ['out', 'retval'], POINTER(VARIANT), 'prop' )),
]
################################################################
## code template for DownBars implementation
##class DownBars_Impl(object):
##    @property
##    def Name(self):
##        '-no docstring-'
##        #return prop
##
##    def Select(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Border(self):
##        '-no docstring-'
##        #return prop
##
##    def Delete(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Interior(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Fill(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Format(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Creator(self):
##        '-no docstring-'
##        #return prop
##
##    def SetProperty(self, ID, Value):
##        '-no docstring-'
##        #return 
##
##    def GetProperty(self, ID):
##        '-no docstring-'
##        #return prop
##


# values for enumeration 'WdScrollbarType'
wdScrollbarTypeAuto = 0
wdScrollbarTypeYes = 1
wdScrollbarTypeNo = 2
WdScrollbarType = c_int # enum

# values for enumeration 'WdRevisedPropertiesMark'
wdRevisedPropertiesMarkNone = 0
wdRevisedPropertiesMarkBold = 1
wdRevisedPropertiesMarkItalic = 2
wdRevisedPropertiesMarkUnderline = 3
wdRevisedPropertiesMarkDoubleUnderline = 4
wdRevisedPropertiesMarkColorOnly = 5
wdRevisedPropertiesMarkStrikeThrough = 6
wdRevisedPropertiesMarkDoubleStrikeThrough = 7
WdRevisedPropertiesMark = c_int # enum
class OMathLimLow(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{74DE9576-8E99-4E28-912B-CB30747C60CE}')
    _idlflags_ = ['dual', 'nonextensible', 'oleautomation']
class OMath(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{E4442A83-F623-459C-8E95-8BFB44DCF23A}')
    _idlflags_ = ['dual', 'nonextensible', 'oleautomation']
class OMathFunction(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{F1F37152-1DB1-4901-AD9A-C740F99464B4}')
    _idlflags_ = ['dual', 'nonextensible', 'oleautomation']
OMathLimLow._methods_ = [
    COMMETHOD([dispid(100), 'propget'], HRESULT, 'Application',
              ( ['out', 'retval'], POINTER(POINTER(Application)), 'prop' )),
    COMMETHOD([dispid(101), 'propget'], HRESULT, 'Creator',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(102), 'propget'], HRESULT, 'Parent',
              ( ['out', 'retval'], POINTER(POINTER(IDispatch)), 'prop' )),
    COMMETHOD([dispid(103), 'propget'], HRESULT, 'E',
              ( ['out', 'retval'], POINTER(POINTER(OMath)), 'prop' )),
    COMMETHOD([dispid(104), 'propget'], HRESULT, 'Lim',
              ( ['out', 'retval'], POINTER(POINTER(OMath)), 'prop' )),
    COMMETHOD([dispid(201)], HRESULT, 'ToLimUpp',
              ( ['out', 'retval'], POINTER(POINTER(OMathFunction)), 'prop' )),
]
################################################################
## code template for OMathLimLow implementation
##class OMathLimLow_Impl(object):
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Creator(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def E(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Lim(self):
##        '-no docstring-'
##        #return prop
##
##    def ToLimUpp(self):
##        '-no docstring-'
##        #return prop
##

class Task(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{00020982-0000-0000-C000-000000000046}')
    _idlflags_ = ['dual', 'nonextensible', 'oleautomation']

# values for enumeration 'WdWindowState'
wdWindowStateNormal = 0
wdWindowStateMaximize = 1
wdWindowStateMinimize = 2
WdWindowState = c_int # enum
Task._methods_ = [
    COMMETHOD([dispid(1000), 'propget'], HRESULT, 'Application',
              ( ['out', 'retval'], POINTER(POINTER(Application)), 'prop' )),
    COMMETHOD([dispid(1001), 'propget'], HRESULT, 'Creator',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(1002), 'propget'], HRESULT, 'Parent',
              ( ['out', 'retval'], POINTER(POINTER(IDispatch)), 'prop' )),
    COMMETHOD([dispid(0), 'propget'], HRESULT, 'Name',
              ( ['out', 'retval'], POINTER(BSTR), 'prop' )),
    COMMETHOD([dispid(1), 'propget'], HRESULT, 'Left',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(1), 'propput'], HRESULT, 'Left',
              ( ['in'], c_int, 'prop' )),
    COMMETHOD([dispid(2), 'propget'], HRESULT, 'Top',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(2), 'propput'], HRESULT, 'Top',
              ( ['in'], c_int, 'prop' )),
    COMMETHOD([dispid(3), 'propget'], HRESULT, 'Width',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(3), 'propput'], HRESULT, 'Width',
              ( ['in'], c_int, 'prop' )),
    COMMETHOD([dispid(4), 'propget'], HRESULT, 'Height',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(4), 'propput'], HRESULT, 'Height',
              ( ['in'], c_int, 'prop' )),
    COMMETHOD([dispid(5), 'propget'], HRESULT, 'WindowState',
              ( ['out', 'retval'], POINTER(WdWindowState), 'prop' )),
    COMMETHOD([dispid(5), 'propput'], HRESULT, 'WindowState',
              ( ['in'], WdWindowState, 'prop' )),
    COMMETHOD([dispid(6), 'propget'], HRESULT, 'Visible',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'prop' )),
    COMMETHOD([dispid(6), 'propput'], HRESULT, 'Visible',
              ( ['in'], VARIANT_BOOL, 'prop' )),
    COMMETHOD([dispid(10)], HRESULT, 'Activate',
              ( ['in', 'optional'], POINTER(VARIANT), 'Wait' )),
    COMMETHOD([dispid(11)], HRESULT, 'Close'),
    COMMETHOD([dispid(12)], HRESULT, 'Move',
              ( ['in'], c_int, 'Left' ),
              ( ['in'], c_int, 'Top' )),
    COMMETHOD([dispid(13)], HRESULT, 'Resize',
              ( ['in'], c_int, 'Width' ),
              ( ['in'], c_int, 'Height' )),
    COMMETHOD([dispid(14)], HRESULT, 'SendWindowMessage',
              ( ['in'], c_int, 'Message' ),
              ( ['in'], c_int, 'wParam' ),
              ( ['in'], c_int, 'lParam' )),
]
################################################################
## code template for Task implementation
##class Task_Impl(object):
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Creator(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Name(self):
##        '-no docstring-'
##        #return prop
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    Left = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    Top = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    Width = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    Height = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    WindowState = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    Visible = property(_get, _set, doc = _set.__doc__)
##
##    def Activate(self, Wait):
##        '-no docstring-'
##        #return 
##
##    def Close(self):
##        '-no docstring-'
##        #return 
##
##    def Move(self, Left, Top):
##        '-no docstring-'
##        #return 
##
##    def Resize(self, Width, Height):
##        '-no docstring-'
##        #return 
##
##    def SendWindowMessage(self, Message, wParam, lParam):
##        '-no docstring-'
##        #return 
##

class LegendKey(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{DF076FDE-8781-4051-A5BC-99F6B7DC04D4}')
    _idlflags_ = ['dual', 'nonextensible', 'oleautomation']

# values for enumeration 'XlColorIndex'
xlColorIndexAutomatic = -4105
xlColorIndexNone = -4142
XlColorIndex = c_int # enum

# values for enumeration 'XlMarkerStyle'
xlMarkerStyleAutomatic = -4105
xlMarkerStyleCircle = 8
xlMarkerStyleDash = -4115
xlMarkerStyleDiamond = 2
xlMarkerStyleDot = -4118
xlMarkerStyleNone = -4142
xlMarkerStylePicture = -4147
xlMarkerStylePlus = 9
xlMarkerStyleSquare = 1
xlMarkerStyleStar = 5
xlMarkerStyleTriangle = 3
xlMarkerStyleX = -4168
XlMarkerStyle = c_int # enum
LegendKey._methods_ = [
    COMMETHOD([dispid(150), 'propget'], HRESULT, 'Parent',
              ( ['out', 'retval'], POINTER(POINTER(IDispatch)), 'prop' )),
    COMMETHOD([dispid(128), 'hidden', 'propget'], HRESULT, 'Border',
              ( ['out', 'retval'], POINTER(POINTER(ChartBorder)), 'prop' )),
    COMMETHOD([dispid(112)], HRESULT, 'ClearFormats',
              ( ['out', 'retval'], POINTER(VARIANT), 'prop' )),
    COMMETHOD([dispid(117)], HRESULT, 'Delete',
              ( ['out', 'retval'], POINTER(VARIANT), 'prop' )),
    COMMETHOD([dispid(129), 'hidden', 'propget'], HRESULT, 'Interior',
              ( ['out', 'retval'], POINTER(POINTER(Interior)), 'prop' )),
    COMMETHOD([dispid(1663), 'hidden', 'propget'], HRESULT, 'Fill',
              ( ['out', 'retval'], POINTER(POINTER(ChartFillFormat)), 'prop' )),
    COMMETHOD([dispid(132), 'propget'], HRESULT, 'InvertIfNegative',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'prop' )),
    COMMETHOD([dispid(132), 'propput'], HRESULT, 'InvertIfNegative',
              ( ['in'], VARIANT_BOOL, 'prop' )),
    COMMETHOD([dispid(73), 'propget'], HRESULT, 'MarkerBackgroundColor',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(73), 'propput'], HRESULT, 'MarkerBackgroundColor',
              ( ['in'], c_int, 'prop' )),
    COMMETHOD([dispid(74), 'propget'], HRESULT, 'MarkerBackgroundColorIndex',
              ( ['out', 'retval'], POINTER(XlColorIndex), 'prop' )),
    COMMETHOD([dispid(74), 'propput'], HRESULT, 'MarkerBackgroundColorIndex',
              ( ['in'], XlColorIndex, 'prop' )),
    COMMETHOD([dispid(75), 'propget'], HRESULT, 'MarkerForegroundColor',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(75), 'propput'], HRESULT, 'MarkerForegroundColor',
              ( ['in'], c_int, 'prop' )),
    COMMETHOD([dispid(76), 'propget'], HRESULT, 'MarkerForegroundColorIndex',
              ( ['out', 'retval'], POINTER(XlColorIndex), 'prop' )),
    COMMETHOD([dispid(76), 'propput'], HRESULT, 'MarkerForegroundColorIndex',
              ( ['in'], XlColorIndex, 'prop' )),
    COMMETHOD([dispid(231), 'propget'], HRESULT, 'MarkerSize',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(231), 'propput'], HRESULT, 'MarkerSize',
              ( ['in'], c_int, 'prop' )),
    COMMETHOD([dispid(72), 'propget'], HRESULT, 'MarkerStyle',
              ( ['out', 'retval'], POINTER(XlMarkerStyle), 'prop' )),
    COMMETHOD([dispid(72), 'propput'], HRESULT, 'MarkerStyle',
              ( ['in'], XlMarkerStyle, 'prop' )),
    COMMETHOD([dispid(161), 'propget'], HRESULT, 'PictureType',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(161), 'propput'], HRESULT, 'PictureType',
              ( ['in'], c_int, 'prop' )),
    COMMETHOD([dispid(162), 'hidden', 'propget'], HRESULT, 'PictureUnit',
              ( ['out', 'retval'], POINTER(c_double), 'prop' )),
    COMMETHOD([dispid(162), 'hidden', 'propput'], HRESULT, 'PictureUnit',
              ( ['in'], c_double, 'prop' )),
    COMMETHOD([dispid(235), 'hidden'], HRESULT, 'Select',
              ( ['out', 'retval'], POINTER(VARIANT), 'prop' )),
    COMMETHOD([dispid(163), 'propget'], HRESULT, 'Smooth',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'prop' )),
    COMMETHOD([dispid(163), 'propput'], HRESULT, 'Smooth',
              ( ['in'], VARIANT_BOOL, 'prop' )),
    COMMETHOD([dispid(127), 'propget'], HRESULT, 'Left',
              ( ['out', 'retval'], POINTER(c_double), 'prop' )),
    COMMETHOD([dispid(126), 'propget'], HRESULT, 'Top',
              ( ['out', 'retval'], POINTER(c_double), 'prop' )),
    COMMETHOD([dispid(122), 'propget'], HRESULT, 'Width',
              ( ['out', 'retval'], POINTER(c_double), 'prop' )),
    COMMETHOD([dispid(123), 'propget'], HRESULT, 'Height',
              ( ['out', 'retval'], POINTER(c_double), 'prop' )),
    COMMETHOD([dispid(103), 'propget'], HRESULT, 'Shadow',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'prop' )),
    COMMETHOD([dispid(103), 'propput'], HRESULT, 'Shadow',
              ( ['in'], VARIANT_BOOL, 'prop' )),
    COMMETHOD([dispid(1610743841), 'propget'], HRESULT, 'Format',
              ( ['out', 'retval'], POINTER(POINTER(ChartFormat)), 'prop' )),
    COMMETHOD([dispid(148), 'propget'], HRESULT, 'Application',
              ( ['out', 'retval'], POINTER(POINTER(IDispatch)), 'prop' )),
    COMMETHOD([dispid(149), 'propget'], HRESULT, 'Creator',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(2649), 'propget'], HRESULT, 'PictureUnit2',
              ( ['out', 'retval'], POINTER(c_double), 'prop' )),
    COMMETHOD([dispid(2649), 'propput'], HRESULT, 'PictureUnit2',
              ( ['in'], c_double, 'prop' )),
]
################################################################
## code template for LegendKey implementation
##class LegendKey_Impl(object):
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Border(self):
##        '-no docstring-'
##        #return prop
##
##    def ClearFormats(self):
##        '-no docstring-'
##        #return prop
##
##    def Delete(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Interior(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Fill(self):
##        '-no docstring-'
##        #return prop
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    InvertIfNegative = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    MarkerBackgroundColor = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    MarkerBackgroundColorIndex = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    MarkerForegroundColor = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    MarkerForegroundColorIndex = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    MarkerSize = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    MarkerStyle = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    PictureType = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    PictureUnit = property(_get, _set, doc = _set.__doc__)
##
##    def Select(self):
##        '-no docstring-'
##        #return prop
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    Smooth = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Left(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Top(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Width(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Height(self):
##        '-no docstring-'
##        #return prop
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    Shadow = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Format(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Creator(self):
##        '-no docstring-'
##        #return prop
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    PictureUnit2 = property(_get, _set, doc = _set.__doc__)
##

class PlotArea(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{56AFD330-440C-4F4C-A39C-ED306D084D5F}')
    _idlflags_ = ['dual', 'nonextensible', 'oleautomation']

# values for enumeration 'XlChartElementPosition'
xlChartElementPositionAutomatic = -4105
xlChartElementPositionCustom = -4114
XlChartElementPosition = c_int # enum
PlotArea._methods_ = [
    COMMETHOD([dispid(110), 'propget'], HRESULT, 'Name',
              ( ['out', 'retval'], POINTER(BSTR), 'prop' )),
    COMMETHOD([dispid(235)], HRESULT, 'Select',
              ( ['out', 'retval'], POINTER(VARIANT), 'prop' )),
    COMMETHOD([dispid(150), 'propget'], HRESULT, 'Parent',
              ( ['out', 'retval'], POINTER(POINTER(IDispatch)), 'prop' )),
    COMMETHOD([dispid(128), 'hidden', 'propget'], HRESULT, 'Border',
              ( ['out', 'retval'], POINTER(POINTER(ChartBorder)), 'prop' )),
    COMMETHOD([dispid(112)], HRESULT, 'ClearFormats',
              ( ['out', 'retval'], POINTER(VARIANT), 'prop' )),
    COMMETHOD([dispid(123), 'propget'], HRESULT, 'Height',
              ( ['out', 'retval'], POINTER(c_double), 'prop' )),
    COMMETHOD([dispid(123), 'propput'], HRESULT, 'Height',
              ( ['in'], c_double, 'prop' )),
    COMMETHOD([dispid(129), 'hidden', 'propget'], HRESULT, 'Interior',
              ( ['out', 'retval'], POINTER(POINTER(Interior)), 'prop' )),
    COMMETHOD([dispid(1663), 'hidden', 'propget'], HRESULT, 'Fill',
              ( ['out', 'retval'], POINTER(POINTER(ChartFillFormat)), 'prop' )),
    COMMETHOD([dispid(127), 'propget'], HRESULT, 'Left',
              ( ['out', 'retval'], POINTER(c_double), 'prop' )),
    COMMETHOD([dispid(127), 'propput'], HRESULT, 'Left',
              ( ['in'], c_double, 'prop' )),
    COMMETHOD([dispid(126), 'propget'], HRESULT, 'Top',
              ( ['out', 'retval'], POINTER(c_double), 'prop' )),
    COMMETHOD([dispid(126), 'propput'], HRESULT, 'Top',
              ( ['in'], c_double, 'prop' )),
    COMMETHOD([dispid(122), 'propget'], HRESULT, 'Width',
              ( ['out', 'retval'], POINTER(c_double), 'prop' )),
    COMMETHOD([dispid(122), 'propput'], HRESULT, 'Width',
              ( ['in'], c_double, 'prop' )),
    COMMETHOD([dispid(1667), 'propget'], HRESULT, 'InsideLeft',
              ( ['out', 'retval'], POINTER(c_double), 'prop' )),
    COMMETHOD([dispid(1667), 'propput'], HRESULT, 'InsideLeft',
              ( ['in'], c_double, 'prop' )),
    COMMETHOD([dispid(1668), 'propget'], HRESULT, 'InsideTop',
              ( ['out', 'retval'], POINTER(c_double), 'prop' )),
    COMMETHOD([dispid(1668), 'propput'], HRESULT, 'InsideTop',
              ( ['in'], c_double, 'prop' )),
    COMMETHOD([dispid(1669), 'propget'], HRESULT, 'InsideWidth',
              ( ['out', 'retval'], POINTER(c_double), 'prop' )),
    COMMETHOD([dispid(1669), 'propput'], HRESULT, 'InsideWidth',
              ( ['in'], c_double, 'prop' )),
    COMMETHOD([dispid(1670), 'propget'], HRESULT, 'InsideHeight',
              ( ['out', 'retval'], POINTER(c_double), 'prop' )),
    COMMETHOD([dispid(1670), 'propput'], HRESULT, 'InsideHeight',
              ( ['in'], c_double, 'prop' )),
    COMMETHOD([dispid(1671), 'propget'], HRESULT, 'Position',
              ( ['out', 'retval'], POINTER(XlChartElementPosition), 'prop' )),
    COMMETHOD([dispid(1671), 'propput'], HRESULT, 'Position',
              ( ['in'], XlChartElementPosition, 'prop' )),
    COMMETHOD([dispid(1610743833), 'propget'], HRESULT, 'Format',
              ( ['out', 'retval'], POINTER(POINTER(ChartFormat)), 'prop' )),
    COMMETHOD([dispid(148), 'propget'], HRESULT, 'Application',
              ( ['out', 'retval'], POINTER(POINTER(IDispatch)), 'prop' )),
    COMMETHOD([dispid(149), 'propget'], HRESULT, 'Creator',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(253)], HRESULT, 'SetProperty',
              ( ['in'], BSTR, 'ID' ),
              ( ['in'], VARIANT, 'Value' )),
    COMMETHOD([dispid(254)], HRESULT, 'GetProperty',
              ( ['in'], BSTR, 'ID' ),
              ( ['out', 'retval'], POINTER(VARIANT), 'prop' )),
]
################################################################
## code template for PlotArea implementation
##class PlotArea_Impl(object):
##    @property
##    def Name(self):
##        '-no docstring-'
##        #return prop
##
##    def Select(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Border(self):
##        '-no docstring-'
##        #return prop
##
##    def ClearFormats(self):
##        '-no docstring-'
##        #return prop
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    Height = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Interior(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Fill(self):
##        '-no docstring-'
##        #return prop
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    Left = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    Top = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    Width = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    InsideLeft = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    InsideTop = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    InsideWidth = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    InsideHeight = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    Position = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Format(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Creator(self):
##        '-no docstring-'
##        #return prop
##
##    def SetProperty(self, ID, Value):
##        '-no docstring-'
##        #return 
##
##    def GetProperty(self, ID):
##        '-no docstring-'
##        #return prop
##

class ChartArea(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{C75AD98A-74E9-49FE-8BF1-544839CC08A5}')
    _idlflags_ = ['dual', 'nonextensible', 'oleautomation']
class ChartFont(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{CDB0FF41-E862-47BB-AE77-3FA7B1AE3189}')
    _idlflags_ = ['dual', 'nonextensible', 'oleautomation']
ChartArea._methods_ = [
    COMMETHOD([dispid(110), 'propget'], HRESULT, 'Name',
              ( ['out', 'retval'], POINTER(BSTR), 'prop' )),
    COMMETHOD([dispid(235)], HRESULT, 'Select',
              ( ['out', 'retval'], POINTER(VARIANT), 'prop' )),
    COMMETHOD([dispid(150), 'propget'], HRESULT, 'Parent',
              ( ['out', 'retval'], POINTER(POINTER(IDispatch)), 'prop' )),
    COMMETHOD([dispid(128), 'hidden', 'propget'], HRESULT, 'Border',
              ( ['out', 'retval'], POINTER(POINTER(ChartBorder)), 'prop' )),
    COMMETHOD([dispid(111)], HRESULT, 'Clear',
              ( ['out', 'retval'], POINTER(VARIANT), 'prop' )),
    COMMETHOD([dispid(113)], HRESULT, 'ClearContents',
              ( ['out', 'retval'], POINTER(VARIANT), 'prop' )),
    COMMETHOD([dispid(551)], HRESULT, 'Copy',
              ( ['out', 'retval'], POINTER(VARIANT), 'prop' )),
    COMMETHOD([dispid(146), 'hidden', 'propget'], HRESULT, 'Font',
              ( ['out', 'retval'], POINTER(POINTER(ChartFont)), 'prop' )),
    COMMETHOD([dispid(103), 'propget'], HRESULT, 'Shadow',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'prop' )),
    COMMETHOD([dispid(103), 'propput'], HRESULT, 'Shadow',
              ( ['in'], VARIANT_BOOL, 'prop' )),
    COMMETHOD([dispid(112)], HRESULT, 'ClearFormats',
              ( ['out', 'retval'], POINTER(VARIANT), 'prop' )),
    COMMETHOD([dispid(123), 'propget'], HRESULT, 'Height',
              ( ['out', 'retval'], POINTER(c_double), 'prop' )),
    COMMETHOD([dispid(123), 'propput'], HRESULT, 'Height',
              ( ['in'], c_double, 'prop' )),
    COMMETHOD([dispid(129), 'hidden', 'propget'], HRESULT, 'Interior',
              ( ['out', 'retval'], POINTER(POINTER(Interior)), 'prop' )),
    COMMETHOD([dispid(1663), 'hidden', 'propget'], HRESULT, 'Fill',
              ( ['out', 'retval'], POINTER(POINTER(ChartFillFormat)), 'prop' )),
    COMMETHOD([dispid(127), 'propget'], HRESULT, 'Left',
              ( ['out', 'retval'], POINTER(c_double), 'prop' )),
    COMMETHOD([dispid(127), 'propput'], HRESULT, 'Left',
              ( ['in'], c_double, 'prop' )),
    COMMETHOD([dispid(126), 'propget'], HRESULT, 'Top',
              ( ['out', 'retval'], POINTER(c_double), 'prop' )),
    COMMETHOD([dispid(126), 'propput'], HRESULT, 'Top',
              ( ['in'], c_double, 'prop' )),
    COMMETHOD([dispid(122), 'propget'], HRESULT, 'Width',
              ( ['out', 'retval'], POINTER(c_double), 'prop' )),
    COMMETHOD([dispid(122), 'propput'], HRESULT, 'Width',
              ( ['in'], c_double, 'prop' )),
    COMMETHOD([dispid(1525), 'hidden', 'propget'], HRESULT, 'AutoScaleFont',
              ( ['out', 'retval'], POINTER(VARIANT), 'prop' )),
    COMMETHOD([dispid(1525), 'hidden', 'propput'], HRESULT, 'AutoScaleFont',
              ( ['in'], VARIANT, 'prop' )),
    COMMETHOD([dispid(1610743831), 'propget'], HRESULT, 'Format',
              ( ['out', 'retval'], POINTER(POINTER(ChartFormat)), 'prop' )),
    COMMETHOD([dispid(148), 'propget'], HRESULT, 'Application',
              ( ['out', 'retval'], POINTER(POINTER(IDispatch)), 'prop' )),
    COMMETHOD([dispid(149), 'propget'], HRESULT, 'Creator',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
]
################################################################
## code template for ChartArea implementation
##class ChartArea_Impl(object):
##    @property
##    def Name(self):
##        '-no docstring-'
##        #return prop
##
##    def Select(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Border(self):
##        '-no docstring-'
##        #return prop
##
##    def Clear(self):
##        '-no docstring-'
##        #return prop
##
##    def ClearContents(self):
##        '-no docstring-'
##        #return prop
##
##    def Copy(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Font(self):
##        '-no docstring-'
##        #return prop
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    Shadow = property(_get, _set, doc = _set.__doc__)
##
##    def ClearFormats(self):
##        '-no docstring-'
##        #return prop
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    Height = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Interior(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Fill(self):
##        '-no docstring-'
##        #return prop
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    Left = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    Top = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    Width = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    AutoScaleFont = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Format(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Creator(self):
##        '-no docstring-'
##        #return prop
##


# values for enumeration 'WdNumberSpacing'
wdNumberSpacingDefault = 0
wdNumberSpacingProportional = 1
wdNumberSpacingTabular = 2
WdNumberSpacing = c_int # enum
class CoAuthors(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{256B6ABA-6A38-4D39-971C-91FDA9922814}')
    _idlflags_ = ['dual', 'nonextensible', 'oleautomation']
class CoAuthor(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{E59544D5-C299-46A0-84C1-C51AB38F9759}')
    _idlflags_ = ['dual', 'nonextensible', 'oleautomation']
CoAuthors._methods_ = [
    COMMETHOD([dispid(1000), 'propget'], HRESULT, 'Application',
              ( ['out', 'retval'], POINTER(POINTER(Application)), 'prop' )),
    COMMETHOD([dispid(1001), 'propget'], HRESULT, 'Creator',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(1002), 'propget'], HRESULT, 'Parent',
              ( ['out', 'retval'], POINTER(POINTER(IDispatch)), 'prop' )),
    COMMETHOD([dispid(1), 'propget'], HRESULT, 'Count',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(-4), 'nonbrowsable', 'propget'], HRESULT, '_NewEnum',
              ( ['out', 'retval'], POINTER(POINTER(IUnknown)), 'prop' )),
    COMMETHOD([dispid(0)], HRESULT, 'Item',
              ( ['in'], VARIANT, 'Index' ),
              ( ['out', 'retval'], POINTER(POINTER(CoAuthor)), 'prop' )),
]
################################################################
## code template for CoAuthors implementation
##class CoAuthors_Impl(object):
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Creator(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Count(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def _NewEnum(self):
##        '-no docstring-'
##        #return prop
##
##    def Item(self, Index):
##        '-no docstring-'
##        #return prop
##


# values for enumeration 'WdPreferredWidthType'
wdPreferredWidthAuto = 1
wdPreferredWidthPercent = 2
wdPreferredWidthPoints = 3
WdPreferredWidthType = c_int # enum

# values for enumeration 'WdFieldType'
wdFieldEmpty = -1
wdFieldRef = 3
wdFieldIndexEntry = 4
wdFieldFootnoteRef = 5
wdFieldSet = 6
wdFieldIf = 7
wdFieldIndex = 8
wdFieldTOCEntry = 9
wdFieldStyleRef = 10
wdFieldRefDoc = 11
wdFieldSequence = 12
wdFieldTOC = 13
wdFieldInfo = 14
wdFieldTitle = 15
wdFieldSubject = 16
wdFieldAuthor = 17
wdFieldKeyWord = 18
wdFieldComments = 19
wdFieldLastSavedBy = 20
wdFieldCreateDate = 21
wdFieldSaveDate = 22
wdFieldPrintDate = 23
wdFieldRevisionNum = 24
wdFieldEditTime = 25
wdFieldNumPages = 26
wdFieldNumWords = 27
wdFieldNumChars = 28
wdFieldFileName = 29
wdFieldTemplate = 30
wdFieldDate = 31
wdFieldTime = 32
wdFieldPage = 33
wdFieldExpression = 34
wdFieldQuote = 35
wdFieldInclude = 36
wdFieldPageRef = 37
wdFieldAsk = 38
wdFieldFillIn = 39
wdFieldData = 40
wdFieldNext = 41
wdFieldNextIf = 42
wdFieldSkipIf = 43
wdFieldMergeRec = 44
wdFieldDDE = 45
wdFieldDDEAuto = 46
wdFieldGlossary = 47
wdFieldPrint = 48
wdFieldFormula = 49
wdFieldGoToButton = 50
wdFieldMacroButton = 51
wdFieldAutoNumOutline = 52
wdFieldAutoNumLegal = 53
wdFieldAutoNum = 54
wdFieldImport = 55
wdFieldLink = 56
wdFieldSymbol = 57
wdFieldEmbed = 58
wdFieldMergeField = 59
wdFieldUserName = 60
wdFieldUserInitials = 61
wdFieldUserAddress = 62
wdFieldBarCode = 63
wdFieldDocVariable = 64
wdFieldSection = 65
wdFieldSectionPages = 66
wdFieldIncludePicture = 67
wdFieldIncludeText = 68
wdFieldFileSize = 69
wdFieldFormTextInput = 70
wdFieldFormCheckBox = 71
wdFieldNoteRef = 72
wdFieldTOA = 73
wdFieldTOAEntry = 74
wdFieldMergeSeq = 75
wdFieldPrivate = 77
wdFieldDatabase = 78
wdFieldAutoText = 79
wdFieldCompare = 80
wdFieldAddin = 81
wdFieldSubscriber = 82
wdFieldFormDropDown = 83
wdFieldAdvance = 84
wdFieldDocProperty = 85
wdFieldOCX = 87
wdFieldHyperlink = 88
wdFieldAutoTextList = 89
wdFieldListNum = 90
wdFieldHTMLActiveX = 91
wdFieldBidiOutline = 92
wdFieldAddressBlock = 93
wdFieldGreetingLine = 94
wdFieldShape = 95
wdFieldCitation = 96
wdFieldBibliography = 97
wdFieldMergeBarcode = 98
wdFieldDisplayBarcode = 99
WdFieldType = c_int # enum

# values for enumeration 'WdWordDialogHID'
emptyenum = 0
WdWordDialogHID = c_int # enum

# values for enumeration 'WdCellColor'
wdCellColorByAuthor = -1
wdCellColorNoHighlight = 0
wdCellColorPink = 1
wdCellColorLightBlue = 2
wdCellColorLightYellow = 3
wdCellColorLightPurple = 4
wdCellColorLightOrange = 5
wdCellColorLightGreen = 6
wdCellColorLightGray = 7
WdCellColor = c_int # enum
class XMLNamespace(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{B140A023-4850-4DA6-BC5F-CC459C4507BC}')
    _idlflags_ = ['dual', 'nonextensible', 'oleautomation']
class XSLTransforms(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{C774F5EA-A539-4284-A1BE-30AEC052D899}')
    _idlflags_ = ['dual', 'nonextensible', 'oleautomation']
class XSLTransform(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{E3124493-7D6A-410F-9A48-CC822C033CEC}')
    _idlflags_ = ['dual', 'nonextensible', 'oleautomation']
XMLNamespace._methods_ = [
    COMMETHOD([dispid(1000), 'propget'], HRESULT, 'Application',
              ( ['out', 'retval'], POINTER(POINTER(Application)), 'prop' )),
    COMMETHOD([dispid(1001), 'propget'], HRESULT, 'Creator',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(1002), 'propget'], HRESULT, 'Parent',
              ( ['out', 'retval'], POINTER(POINTER(IDispatch)), 'prop' )),
    COMMETHOD([dispid(2), 'propget'], HRESULT, 'URI',
              ( ['out', 'retval'], POINTER(BSTR), 'prop' )),
    COMMETHOD([dispid(3), 'propget'], HRESULT, 'Location',
              ( ['in', 'optional'], VARIANT_BOOL, 'AllUsers', False ),
              ( ['out', 'retval'], POINTER(BSTR), 'prop' )),
    COMMETHOD([dispid(3), 'propput'], HRESULT, 'Location',
              ( ['in', 'optional'], VARIANT_BOOL, 'AllUsers', False ),
              ( ['in'], BSTR, 'prop' )),
    COMMETHOD([dispid(4), 'propget'], HRESULT, 'Alias',
              ( ['in', 'optional'], VARIANT_BOOL, 'AllUsers', False ),
              ( ['out', 'retval'], POINTER(BSTR), 'prop' )),
    COMMETHOD([dispid(4), 'propput'], HRESULT, 'Alias',
              ( ['in', 'optional'], VARIANT_BOOL, 'AllUsers', False ),
              ( ['in'], BSTR, 'prop' )),
    COMMETHOD([dispid(5), 'propget'], HRESULT, 'XSLTransforms',
              ( ['out', 'retval'], POINTER(POINTER(XSLTransforms)), 'prop' )),
    COMMETHOD([dispid(6), 'propget'], HRESULT, 'DefaultTransform',
              ( ['in', 'optional'], VARIANT_BOOL, 'AllUsers', False ),
              ( ['out', 'retval'], POINTER(POINTER(XSLTransform)), 'prop' )),
    COMMETHOD([dispid(6), 'propput'], HRESULT, 'DefaultTransform',
              ( ['in', 'optional'], VARIANT_BOOL, 'AllUsers', False ),
              ( ['in'], POINTER(XSLTransform), 'prop' )),
    COMMETHOD([dispid(100)], HRESULT, 'AttachToDocument',
              ( ['in'], POINTER(VARIANT), 'Document' )),
    COMMETHOD([dispid(101)], HRESULT, 'Delete'),
]
################################################################
## code template for XMLNamespace implementation
##class XMLNamespace_Impl(object):
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Creator(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def URI(self):
##        '-no docstring-'
##        #return prop
##
##    def _get(self, AllUsers):
##        '-no docstring-'
##        #return prop
##    def _set(self, AllUsers, prop):
##        '-no docstring-'
##    Location = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self, AllUsers):
##        '-no docstring-'
##        #return prop
##    def _set(self, AllUsers, prop):
##        '-no docstring-'
##    Alias = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def XSLTransforms(self):
##        '-no docstring-'
##        #return prop
##
##    def _get(self, AllUsers):
##        '-no docstring-'
##        #return prop
##    def _set(self, AllUsers, prop):
##        '-no docstring-'
##    DefaultTransform = property(_get, _set, doc = _set.__doc__)
##
##    def AttachToDocument(self, Document):
##        '-no docstring-'
##        #return 
##
##    def Delete(self):
##        '-no docstring-'
##        #return 
##


# values for enumeration 'WdOMathBreakBin'
wdOMathBreakBinBefore = 0
wdOMathBreakBinAfter = 1
wdOMathBreakBinRepeat = 2
WdOMathBreakBin = c_int # enum

# values for enumeration 'WdCompatibilityMode'
wdWord2003 = 11
wdWord2007 = 12
wdWord2010 = 14
wdWord2013 = 15
wdCurrent = 65535
WdCompatibilityMode = c_int # enum

# values for enumeration 'WdDictionaryTypeHID'
emptyenum = 0
WdDictionaryTypeHID = c_int # enum

# values for enumeration 'WdTextboxTightWrap'
wdTightNone = 0
wdTightAll = 1
wdTightFirstAndLastLines = 2
wdTightFirstLineOnly = 3
wdTightLastLineOnly = 4
WdTextboxTightWrap = c_int # enum
class MailMergeDataFields(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{0002091A-0000-0000-C000-000000000046}')
    _idlflags_ = ['dual', 'nonextensible', 'oleautomation']
class MailMergeDataField(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{00020919-0000-0000-C000-000000000046}')
    _idlflags_ = ['dual', 'nonextensible', 'oleautomation']
MailMergeDataFields._methods_ = [
    COMMETHOD([dispid(1000), 'propget'], HRESULT, 'Application',
              ( ['out', 'retval'], POINTER(POINTER(Application)), 'prop' )),
    COMMETHOD([dispid(1001), 'propget'], HRESULT, 'Creator',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(1002), 'propget'], HRESULT, 'Parent',
              ( ['out', 'retval'], POINTER(POINTER(IDispatch)), 'prop' )),
    COMMETHOD([dispid(-4), 'nonbrowsable', 'propget'], HRESULT, '_NewEnum',
              ( ['out', 'retval'], POINTER(POINTER(IUnknown)), 'prop' )),
    COMMETHOD([dispid(1), 'propget'], HRESULT, 'Count',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(0)], HRESULT, 'Item',
              ( ['in'], POINTER(VARIANT), 'Index' ),
              ( ['out', 'retval'], POINTER(POINTER(MailMergeDataField)), 'prop' )),
]
################################################################
## code template for MailMergeDataFields implementation
##class MailMergeDataFields_Impl(object):
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Creator(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def _NewEnum(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Count(self):
##        '-no docstring-'
##        #return prop
##
##    def Item(self, Index):
##        '-no docstring-'
##        #return prop
##


# values for enumeration 'WdContentControlType'
wdContentControlRichText = 0
wdContentControlText = 1
wdContentControlPicture = 2
wdContentControlComboBox = 3
wdContentControlDropdownList = 4
wdContentControlBuildingBlockGallery = 5
wdContentControlDate = 6
wdContentControlGroup = 7
wdContentControlCheckBox = 8
wdContentControlRepeatingSection = 9
WdContentControlType = c_int # enum
class Columns(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{0002094B-0000-0000-C000-000000000046}')
    _idlflags_ = ['dual', 'nonextensible', 'oleautomation']
class Column(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{0002094F-0000-0000-C000-000000000046}')
    _idlflags_ = ['dual', 'nonextensible', 'oleautomation']
class Borders(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{0002093C-0000-0000-C000-000000000046}')
    _idlflags_ = ['dual', 'nonextensible', 'oleautomation']
class Shading(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{0002093A-0000-0000-C000-000000000046}')
    _idlflags_ = ['dual', 'nonextensible', 'oleautomation']

# values for enumeration 'WdRulerStyle'
wdAdjustNone = 0
wdAdjustProportional = 1
wdAdjustFirstColumn = 2
wdAdjustSameWidth = 3
WdRulerStyle = c_int # enum
Columns._methods_ = [
    COMMETHOD([dispid(-4), 'nonbrowsable', 'propget'], HRESULT, '_NewEnum',
              ( ['out', 'retval'], POINTER(POINTER(IUnknown)), 'prop' )),
    COMMETHOD([dispid(2), 'propget'], HRESULT, 'Count',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(1000), 'propget'], HRESULT, 'Application',
              ( ['out', 'retval'], POINTER(POINTER(Application)), 'prop' )),
    COMMETHOD([dispid(1001), 'propget'], HRESULT, 'Creator',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(1002), 'propget'], HRESULT, 'Parent',
              ( ['out', 'retval'], POINTER(POINTER(IDispatch)), 'prop' )),
    COMMETHOD([dispid(100), 'propget'], HRESULT, 'First',
              ( ['out', 'retval'], POINTER(POINTER(Column)), 'prop' )),
    COMMETHOD([dispid(101), 'propget'], HRESULT, 'Last',
              ( ['out', 'retval'], POINTER(POINTER(Column)), 'prop' )),
    COMMETHOD([dispid(3), 'propget'], HRESULT, 'Width',
              ( ['out', 'retval'], POINTER(c_float), 'prop' )),
    COMMETHOD([dispid(3), 'propput'], HRESULT, 'Width',
              ( ['in'], c_float, 'prop' )),
    COMMETHOD([dispid(1100), 'propget'], HRESULT, 'Borders',
              ( ['out', 'retval'], POINTER(POINTER(Borders)), 'prop' )),
    COMMETHOD([dispid(1100), 'propput'], HRESULT, 'Borders',
              ( ['in'], POINTER(Borders), 'prop' )),
    COMMETHOD([dispid(103), 'propget'], HRESULT, 'Shading',
              ( ['out', 'retval'], POINTER(POINTER(Shading)), 'prop' )),
    COMMETHOD([dispid(0)], HRESULT, 'Item',
              ( ['in'], c_int, 'Index' ),
              ( ['out', 'retval'], POINTER(POINTER(Column)), 'prop' )),
    COMMETHOD([dispid(5)], HRESULT, 'Add',
              ( ['in', 'optional'], POINTER(VARIANT), 'BeforeColumn' ),
              ( ['out', 'retval'], POINTER(POINTER(Column)), 'prop' )),
    COMMETHOD([dispid(199)], HRESULT, 'Select'),
    COMMETHOD([dispid(200)], HRESULT, 'Delete'),
    COMMETHOD([dispid(201)], HRESULT, 'SetWidth',
              ( ['in'], c_float, 'ColumnWidth' ),
              ( ['in'], WdRulerStyle, 'RulerStyle' )),
    COMMETHOD([dispid(202)], HRESULT, 'AutoFit'),
    COMMETHOD([dispid(203)], HRESULT, 'DistributeWidth'),
    COMMETHOD([dispid(104), 'propget'], HRESULT, 'NestingLevel',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(105), 'propget'], HRESULT, 'PreferredWidth',
              ( ['out', 'retval'], POINTER(c_float), 'prop' )),
    COMMETHOD([dispid(105), 'propput'], HRESULT, 'PreferredWidth',
              ( ['in'], c_float, 'prop' )),
    COMMETHOD([dispid(106), 'propget'], HRESULT, 'PreferredWidthType',
              ( ['out', 'retval'], POINTER(WdPreferredWidthType), 'prop' )),
    COMMETHOD([dispid(106), 'propput'], HRESULT, 'PreferredWidthType',
              ( ['in'], WdPreferredWidthType, 'prop' )),
]
################################################################
## code template for Columns implementation
##class Columns_Impl(object):
##    @property
##    def _NewEnum(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Count(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Creator(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def First(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Last(self):
##        '-no docstring-'
##        #return prop
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    Width = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    Borders = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Shading(self):
##        '-no docstring-'
##        #return prop
##
##    def Item(self, Index):
##        '-no docstring-'
##        #return prop
##
##    def Add(self, BeforeColumn):
##        '-no docstring-'
##        #return prop
##
##    def Select(self):
##        '-no docstring-'
##        #return 
##
##    def Delete(self):
##        '-no docstring-'
##        #return 
##
##    def SetWidth(self, ColumnWidth, RulerStyle):
##        '-no docstring-'
##        #return 
##
##    def AutoFit(self):
##        '-no docstring-'
##        #return 
##
##    def DistributeWidth(self):
##        '-no docstring-'
##        #return 
##
##    @property
##    def NestingLevel(self):
##        '-no docstring-'
##        #return prop
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    PreferredWidth = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    PreferredWidthType = property(_get, _set, doc = _set.__doc__)
##

class ContentControl(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{EE95AFE3-3026-4172-B078-0E79DAB5CC3D}')
    _idlflags_ = ['dual', 'nonextensible', 'oleautomation']
class Range(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{0002095E-0000-0000-C000-000000000046}')
    _idlflags_ = ['dual', 'nonextensible', 'oleautomation']
class XMLMapping(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{0C1FABE7-F737-406F-9CA3-B07661F9D1A2}')
    _idlflags_ = ['dual', 'nonextensible', 'oleautomation']
class ContentControlListEntries(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{54F46DC4-F6A6-48CC-BD66-46C1DDEADD22}')
    _idlflags_ = ['dual', 'nonextensible', 'oleautomation']
class BuildingBlock(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{BFD3FC23-F763-4FF8-826E-1AFBF598A4E7}')
    _idlflags_ = ['dual', 'nonextensible', 'oleautomation']

# values for enumeration 'WdContentControlDateStorageFormat'
wdContentControlDateStorageText = 0
wdContentControlDateStorageDate = 1
wdContentControlDateStorageDateTime = 2
WdContentControlDateStorageFormat = c_int # enum

# values for enumeration 'WdBuildingBlockTypes'
wdTypeQuickParts = 1
wdTypeCoverPage = 2
wdTypeEquations = 3
wdTypeFooters = 4
wdTypeHeaders = 5
wdTypePageNumber = 6
wdTypeTables = 7
wdTypeWatermarks = 8
wdTypeAutoText = 9
wdTypeTextBox = 10
wdTypePageNumberTop = 11
wdTypePageNumberBottom = 12
wdTypePageNumberPage = 13
wdTypeTableOfContents = 14
wdTypeCustomQuickParts = 15
wdTypeCustomCoverPage = 16
wdTypeCustomEquations = 17
wdTypeCustomFooters = 18
wdTypeCustomHeaders = 19
wdTypeCustomPageNumber = 20
wdTypeCustomTables = 21
wdTypeCustomWatermarks = 22
wdTypeCustomAutoText = 23
wdTypeCustomTextBox = 24
wdTypeCustomPageNumberTop = 25
wdTypeCustomPageNumberBottom = 26
wdTypeCustomPageNumberPage = 27
wdTypeCustomTableOfContents = 28
wdTypeCustom1 = 29
wdTypeCustom2 = 30
wdTypeCustom3 = 31
wdTypeCustom4 = 32
wdTypeCustom5 = 33
wdTypeBibliography = 34
wdTypeCustomBibliography = 35
WdBuildingBlockTypes = c_int # enum

# values for enumeration 'WdLanguageID'
wdLanguageNone = 0
wdNoProofing = 1024
wdAfrikaans = 1078
wdAlbanian = 1052
wdAmharic = 1118
wdArabicAlgeria = 5121
wdArabicBahrain = 15361
wdArabicEgypt = 3073
wdArabicIraq = 2049
wdArabicJordan = 11265
wdArabicKuwait = 13313
wdArabicLebanon = 12289
wdArabicLibya = 4097
wdArabicMorocco = 6145
wdArabicOman = 8193
wdArabicQatar = 16385
wdArabic = 1025
wdArabicSyria = 10241
wdArabicTunisia = 7169
wdArabicUAE = 14337
wdArabicYemen = 9217
wdArmenian = 1067
wdAssamese = 1101
wdAzeriCyrillic = 2092
wdAzeriLatin = 1068
wdBasque = 1069
wdByelorussian = 1059
wdBengali = 1093
wdBulgarian = 1026
wdBurmese = 1109
wdCatalan = 1027
wdCherokee = 1116
wdChineseHongKongSAR = 3076
wdChineseMacaoSAR = 5124
wdSimplifiedChinese = 2052
wdChineseSingapore = 4100
wdTraditionalChinese = 1028
wdCroatian = 1050
wdCzech = 1029
wdDanish = 1030
wdDivehi = 1125
wdBelgianDutch = 2067
wdDutch = 1043
wdEdo = 1126
wdEnglishAUS = 3081
wdEnglishBelize = 10249
wdEnglishCanadian = 4105
wdEnglishCaribbean = 9225
wdEnglishIreland = 6153
wdEnglishJamaica = 8201
wdEnglishNewZealand = 5129
wdEnglishPhilippines = 13321
wdEnglishSouthAfrica = 7177
wdEnglishTrinidadTobago = 11273
wdEnglishUK = 2057
wdEnglishUS = 1033
wdEnglishZimbabwe = 12297
wdEnglishIndonesia = 14345
wdEstonian = 1061
wdFaeroese = 1080
wdPersian = 1065
wdFilipino = 1124
wdFinnish = 1035
wdFulfulde = 1127
wdBelgianFrench = 2060
wdFrenchCameroon = 11276
wdFrenchCanadian = 3084
wdFrenchCotedIvoire = 12300
wdFrench = 1036
wdFrenchLuxembourg = 5132
wdFrenchMali = 13324
wdFrenchMonaco = 6156
wdFrenchReunion = 8204
wdFrenchSenegal = 10252
wdFrenchMorocco = 14348
wdFrenchHaiti = 15372
wdSwissFrench = 4108
wdFrenchWestIndies = 7180
wdFrenchCongoDRC = 9228
wdFrisianNetherlands = 1122
wdGaelicIreland = 2108
wdGaelicScotland = 1084
wdGalician = 1110
wdGeorgian = 1079
wdGermanAustria = 3079
wdGerman = 1031
wdGermanLiechtenstein = 5127
wdGermanLuxembourg = 4103
wdSwissGerman = 2055
wdGreek = 1032
wdGuarani = 1140
wdGujarati = 1095
wdHausa = 1128
wdHawaiian = 1141
wdHebrew = 1037
wdHindi = 1081
wdHungarian = 1038
wdIbibio = 1129
wdIcelandic = 1039
wdIgbo = 1136
wdIndonesian = 1057
wdInuktitut = 1117
wdItalian = 1040
wdSwissItalian = 2064
wdJapanese = 1041
wdKannada = 1099
wdKanuri = 1137
wdKashmiri = 1120
wdKazakh = 1087
wdKhmer = 1107
wdKirghiz = 1088
wdKonkani = 1111
wdKorean = 1042
wdKyrgyz = 1088
wdLao = 1108
wdLatin = 1142
wdLatvian = 1062
wdLithuanian = 1063
wdMacedonianFYROM = 1071
wdMalaysian = 1086
wdMalayBruneiDarussalam = 2110
wdMalayalam = 1100
wdMaltese = 1082
wdManipuri = 1112
wdMarathi = 1102
wdMongolian = 1104
wdNepali = 1121
wdNorwegianBokmol = 1044
wdNorwegianNynorsk = 2068
wdOriya = 1096
wdOromo = 1138
wdPashto = 1123
wdPolish = 1045
wdPortugueseBrazil = 1046
wdPortuguese = 2070
wdPunjabi = 1094
wdRhaetoRomanic = 1047
wdRomanianMoldova = 2072
wdRomanian = 1048
wdRussianMoldova = 2073
wdRussian = 1049
wdSamiLappish = 1083
wdSanskrit = 1103
wdSerbianCyrillic = 3098
wdSerbianLatin = 2074
wdSinhalese = 1115
wdSindhi = 1113
wdSindhiPakistan = 2137
wdSlovak = 1051
wdSlovenian = 1060
wdSomali = 1143
wdSorbian = 1070
wdSpanishArgentina = 11274
wdSpanishBolivia = 16394
wdSpanishChile = 13322
wdSpanishColombia = 9226
wdSpanishCostaRica = 5130
wdSpanishDominicanRepublic = 7178
wdSpanishEcuador = 12298
wdSpanishElSalvador = 17418
wdSpanishGuatemala = 4106
wdSpanishHonduras = 18442
wdMexicanSpanish = 2058
wdSpanishNicaragua = 19466
wdSpanishPanama = 6154
wdSpanishParaguay = 15370
wdSpanishPeru = 10250
wdSpanishPuertoRico = 20490
wdSpanishModernSort = 3082
wdSpanish = 1034
wdSpanishUruguay = 14346
wdSpanishVenezuela = 8202
wdSesotho = 1072
wdSutu = 1072
wdSwahili = 1089
wdSwedishFinland = 2077
wdSwedish = 1053
wdSyriac = 1114
wdTajik = 1064
wdTamazight = 1119
wdTamazightLatin = 2143
wdTamil = 1097
wdTatar = 1092
wdTelugu = 1098
wdThai = 1054
wdTibetan = 1105
wdTigrignaEthiopic = 1139
wdTigrignaEritrea = 2163
wdTsonga = 1073
wdTswana = 1074
wdTurkish = 1055
wdTurkmen = 1090
wdUkrainian = 1058
wdUrdu = 1056
wdUzbekCyrillic = 2115
wdUzbekLatin = 1091
wdVenda = 1075
wdVietnamese = 1066
wdWelsh = 1106
wdXhosa = 1076
wdYi = 1144
wdYiddish = 1085
wdYoruba = 1130
wdZulu = 1077
WdLanguageID = c_int # enum

# values for enumeration 'WdCalendarType'
wdCalendarWestern = 0
wdCalendarArabic = 1
wdCalendarHebrew = 2
wdCalendarTaiwan = 3
wdCalendarJapan = 4
wdCalendarThai = 5
wdCalendarKorean = 6
wdCalendarSakaEra = 7
wdCalendarTranslitEnglish = 8
wdCalendarTranslitFrench = 9
wdCalendarUmalqura = 13
WdCalendarType = c_int # enum

# values for enumeration 'WdColor'
wdColorAutomatic = -16777216
wdColorBlack = 0
wdColorBlue = 16711680
wdColorTurquoise = 16776960
wdColorBrightGreen = 65280
wdColorPink = 16711935
wdColorRed = 255
wdColorYellow = 65535
wdColorWhite = 16777215
wdColorDarkBlue = 8388608
wdColorTeal = 8421376
wdColorGreen = 32768
wdColorViolet = 8388736
wdColorDarkRed = 128
wdColorDarkYellow = 32896
wdColorBrown = 13209
wdColorOliveGreen = 13107
wdColorDarkGreen = 13056
wdColorDarkTeal = 6697728
wdColorIndigo = 10040115
wdColorOrange = 26367
wdColorBlueGray = 10053222
wdColorLightOrange = 39423
wdColorLime = 52377
wdColorSeaGreen = 6723891
wdColorAqua = 13421619
wdColorLightBlue = 16737843
wdColorGold = 52479
wdColorSkyBlue = 16763904
wdColorPlum = 6697881
wdColorRose = 13408767
wdColorTan = 10079487
wdColorLightYellow = 10092543
wdColorLightGreen = 13434828
wdColorLightTurquoise = 16777164
wdColorPaleBlue = 16764057
wdColorLavender = 16751052
wdColorGray05 = 15987699
wdColorGray10 = 15132390
wdColorGray125 = 14737632
wdColorGray15 = 14277081
wdColorGray20 = 13421772
wdColorGray25 = 12632256
wdColorGray30 = 11776947
wdColorGray35 = 10921638
wdColorGray375 = 10526880
wdColorGray40 = 10066329
wdColorGray45 = 9211020
wdColorGray50 = 8421504
wdColorGray55 = 7566195
wdColorGray60 = 6710886
wdColorGray625 = 6316128
wdColorGray65 = 5855577
wdColorGray70 = 5000268
wdColorGray75 = 4210752
wdColorGray80 = 3355443
wdColorGray85 = 2500134
wdColorGray875 = 2105376
wdColorGray90 = 1644825
wdColorGray95 = 789516
WdColor = c_int # enum

# values for enumeration 'WdContentControlAppearance'
wdContentControlBoundingBox = 0
wdContentControlTags = 1
wdContentControlHidden = 2
WdContentControlAppearance = c_int # enum

# values for enumeration 'WdContentControlLevel'
wdContentControlLevelInline = 0
wdContentControlLevelParagraph = 1
wdContentControlLevelRow = 2
wdContentControlLevelCell = 3
WdContentControlLevel = c_int # enum
class RepeatingSectionItemColl(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{53FACA33-DB22-473F-BB51-96C2C86C9304}')
    _idlflags_ = ['dual', 'nonextensible', 'oleautomation']
ContentControl._methods_ = [
    COMMETHOD([dispid(1000), 'propget'], HRESULT, 'Application',
              ( ['out', 'retval'], POINTER(POINTER(Application)), 'prop' )),
    COMMETHOD([dispid(1001), 'propget'], HRESULT, 'Creator',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(1002), 'propget'], HRESULT, 'Parent',
              ( ['out', 'retval'], POINTER(POINTER(IDispatch)), 'prop' )),
    COMMETHOD([dispid(1), 'propget'], HRESULT, 'Range',
              ( ['out', 'retval'], POINTER(POINTER(Range)), 'prop' )),
    COMMETHOD([dispid(2), 'propget'], HRESULT, 'LockContentControl',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'prop' )),
    COMMETHOD([dispid(2), 'propput'], HRESULT, 'LockContentControl',
              ( ['in'], VARIANT_BOOL, 'prop' )),
    COMMETHOD([dispid(3), 'propget'], HRESULT, 'LockContents',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'prop' )),
    COMMETHOD([dispid(3), 'propput'], HRESULT, 'LockContents',
              ( ['in'], VARIANT_BOOL, 'prop' )),
    COMMETHOD([dispid(4), 'propget'], HRESULT, 'XMLMapping',
              ( ['out', 'retval'], POINTER(POINTER(XMLMapping)), 'prop' )),
    COMMETHOD([dispid(5), 'propget'], HRESULT, 'Type',
              ( ['out', 'retval'], POINTER(WdContentControlType), 'prop' )),
    COMMETHOD([dispid(5), 'propput'], HRESULT, 'Type',
              ( ['in'], WdContentControlType, 'prop' )),
    COMMETHOD([dispid(6)], HRESULT, 'Copy'),
    COMMETHOD([dispid(7)], HRESULT, 'Cut'),
    COMMETHOD([dispid(8)], HRESULT, 'Delete',
              ( ['in', 'optional'], VARIANT_BOOL, 'DeleteContents', False )),
    COMMETHOD([dispid(9), 'propget'], HRESULT, 'DropdownListEntries',
              ( ['out', 'retval'], POINTER(POINTER(ContentControlListEntries)), 'prop' )),
    COMMETHOD([dispid(10), 'propget'], HRESULT, 'PlaceholderText',
              ( ['out', 'retval'], POINTER(POINTER(BuildingBlock)), 'prop' )),
    COMMETHOD([dispid(11)], HRESULT, 'SetPlaceholderText',
              ( ['in', 'optional'], POINTER(BuildingBlock), 'BuildingBlock', 0 ),
              ( ['in', 'optional'], POINTER(Range), 'Range', 0 ),
              ( ['in', 'optional'], BSTR, 'Text' )),
    COMMETHOD([dispid(12), 'propget'], HRESULT, 'Title',
              ( ['out', 'retval'], POINTER(BSTR), 'prop' )),
    COMMETHOD([dispid(12), 'propput'], HRESULT, 'Title',
              ( ['in'], BSTR, 'prop' )),
    COMMETHOD([dispid(13), 'propget'], HRESULT, 'DateDisplayFormat',
              ( ['out', 'retval'], POINTER(BSTR), 'prop' )),
    COMMETHOD([dispid(13), 'propput'], HRESULT, 'DateDisplayFormat',
              ( ['in'], BSTR, 'prop' )),
    COMMETHOD([dispid(15), 'propget'], HRESULT, 'MultiLine',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'prop' )),
    COMMETHOD([dispid(15), 'propput'], HRESULT, 'MultiLine',
              ( ['in'], VARIANT_BOOL, 'prop' )),
    COMMETHOD([dispid(16), 'propget'], HRESULT, 'ParentContentControl',
              ( ['out', 'retval'], POINTER(POINTER(ContentControl)), 'prop' )),
    COMMETHOD([dispid(17), 'propget'], HRESULT, 'Temporary',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'prop' )),
    COMMETHOD([dispid(17), 'propput'], HRESULT, 'Temporary',
              ( ['in'], VARIANT_BOOL, 'prop' )),
    COMMETHOD([dispid(18), 'propget'], HRESULT, 'ID',
              ( ['out', 'retval'], POINTER(BSTR), 'prop' )),
    COMMETHOD([dispid(19), 'propget'], HRESULT, 'ShowingPlaceholderText',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'prop' )),
    COMMETHOD([dispid(20), 'propget'], HRESULT, 'DateStorageFormat',
              ( ['out', 'retval'], POINTER(WdContentControlDateStorageFormat), 'prop' )),
    COMMETHOD([dispid(20), 'propput'], HRESULT, 'DateStorageFormat',
              ( ['in'], WdContentControlDateStorageFormat, 'prop' )),
    COMMETHOD([dispid(21), 'propget'], HRESULT, 'BuildingBlockType',
              ( ['out', 'retval'], POINTER(WdBuildingBlockTypes), 'prop' )),
    COMMETHOD([dispid(21), 'propput'], HRESULT, 'BuildingBlockType',
              ( ['in'], WdBuildingBlockTypes, 'prop' )),
    COMMETHOD([dispid(22), 'propget'], HRESULT, 'BuildingBlockCategory',
              ( ['out', 'retval'], POINTER(BSTR), 'prop' )),
    COMMETHOD([dispid(22), 'propput'], HRESULT, 'BuildingBlockCategory',
              ( ['in'], BSTR, 'prop' )),
    COMMETHOD([dispid(23), 'propget'], HRESULT, 'DateDisplayLocale',
              ( ['out', 'retval'], POINTER(WdLanguageID), 'prop' )),
    COMMETHOD([dispid(23), 'propput'], HRESULT, 'DateDisplayLocale',
              ( ['in'], WdLanguageID, 'prop' )),
    COMMETHOD([dispid(24)], HRESULT, 'Ungroup'),
    COMMETHOD([dispid(25), 'propget'], HRESULT, 'DefaultTextStyle',
              ( ['out', 'retval'], POINTER(VARIANT), 'prop' )),
    COMMETHOD([dispid(25), 'propput'], HRESULT, 'DefaultTextStyle',
              ( ['in'], POINTER(VARIANT), 'prop' )),
    COMMETHOD([dispid(26), 'propget'], HRESULT, 'DateCalendarType',
              ( ['out', 'retval'], POINTER(WdCalendarType), 'prop' )),
    COMMETHOD([dispid(26), 'propput'], HRESULT, 'DateCalendarType',
              ( ['in'], WdCalendarType, 'prop' )),
    COMMETHOD([dispid(27), 'propget'], HRESULT, 'Tag',
              ( ['out', 'retval'], POINTER(BSTR), 'prop' )),
    COMMETHOD([dispid(27), 'propput'], HRESULT, 'Tag',
              ( ['in'], BSTR, 'prop' )),
    COMMETHOD([dispid(28), 'propget'], HRESULT, 'Checked',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'prop' )),
    COMMETHOD([dispid(28), 'propput'], HRESULT, 'Checked',
              ( ['in'], VARIANT_BOOL, 'prop' )),
    COMMETHOD([dispid(29)], HRESULT, 'SetCheckedSymbol',
              ( ['in'], c_int, 'CharacterNumber' ),
              ( ['in', 'optional'], BSTR, 'Font' )),
    COMMETHOD([dispid(30)], HRESULT, 'SetUncheckedSymbol',
              ( ['in'], c_int, 'CharacterNumber' ),
              ( ['in', 'optional'], BSTR, 'Font' )),
    COMMETHOD([dispid(31), 'propget'], HRESULT, 'Color',
              ( ['out', 'retval'], POINTER(WdColor), 'prop' )),
    COMMETHOD([dispid(31), 'propput'], HRESULT, 'Color',
              ( ['in'], WdColor, 'prop' )),
    COMMETHOD([dispid(32), 'propget'], HRESULT, 'Appearance',
              ( ['out', 'retval'], POINTER(WdContentControlAppearance), 'prop' )),
    COMMETHOD([dispid(32), 'propput'], HRESULT, 'Appearance',
              ( ['in'], WdContentControlAppearance, 'prop' )),
    COMMETHOD([dispid(33), 'propget'], HRESULT, 'Level',
              ( ['out', 'retval'], POINTER(WdContentControlLevel), 'prop' )),
    COMMETHOD([dispid(34), 'propget'], HRESULT, 'RepeatingSectionItems',
              ( ['out', 'retval'], POINTER(POINTER(RepeatingSectionItemColl)), 'prop' )),
    COMMETHOD([dispid(35), 'propget'], HRESULT, 'RepeatingSectionItemTitle',
              ( ['out', 'retval'], POINTER(BSTR), 'prop' )),
    COMMETHOD([dispid(35), 'propput'], HRESULT, 'RepeatingSectionItemTitle',
              ( ['in'], BSTR, 'prop' )),
    COMMETHOD([dispid(36), 'propget'], HRESULT, 'AllowInsertDeleteSection',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'prop' )),
    COMMETHOD([dispid(36), 'propput'], HRESULT, 'AllowInsertDeleteSection',
              ( ['in'], VARIANT_BOOL, 'prop' )),
]
################################################################
## code template for ContentControl implementation
##class ContentControl_Impl(object):
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Creator(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Range(self):
##        '-no docstring-'
##        #return prop
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    LockContentControl = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    LockContents = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def XMLMapping(self):
##        '-no docstring-'
##        #return prop
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    Type = property(_get, _set, doc = _set.__doc__)
##
##    def Copy(self):
##        '-no docstring-'
##        #return 
##
##    def Cut(self):
##        '-no docstring-'
##        #return 
##
##    def Delete(self, DeleteContents):
##        '-no docstring-'
##        #return 
##
##    @property
##    def DropdownListEntries(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def PlaceholderText(self):
##        '-no docstring-'
##        #return prop
##
##    def SetPlaceholderText(self, BuildingBlock, Range, Text):
##        '-no docstring-'
##        #return 
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    Title = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    DateDisplayFormat = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    MultiLine = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def ParentContentControl(self):
##        '-no docstring-'
##        #return prop
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    Temporary = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def ID(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def ShowingPlaceholderText(self):
##        '-no docstring-'
##        #return prop
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    DateStorageFormat = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    BuildingBlockType = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    BuildingBlockCategory = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    DateDisplayLocale = property(_get, _set, doc = _set.__doc__)
##
##    def Ungroup(self):
##        '-no docstring-'
##        #return 
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    DefaultTextStyle = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    DateCalendarType = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    Tag = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    Checked = property(_get, _set, doc = _set.__doc__)
##
##    def SetCheckedSymbol(self, CharacterNumber, Font):
##        '-no docstring-'
##        #return 
##
##    def SetUncheckedSymbol(self, CharacterNumber, Font):
##        '-no docstring-'
##        #return 
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    Color = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    Appearance = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Level(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def RepeatingSectionItems(self):
##        '-no docstring-'
##        #return prop
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    RepeatingSectionItemTitle = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    AllowInsertDeleteSection = property(_get, _set, doc = _set.__doc__)
##

class TableOfFigures(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{00020921-0000-0000-C000-000000000046}')
    _idlflags_ = ['dual', 'nonextensible', 'oleautomation']
class HeadingStyles(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{0002098A-0000-0000-C000-000000000046}')
    _idlflags_ = ['dual', 'nonextensible', 'oleautomation']

# values for enumeration 'WdTabLeader'
wdTabLeaderSpaces = 0
wdTabLeaderDots = 1
wdTabLeaderDashes = 2
wdTabLeaderLines = 3
wdTabLeaderHeavy = 4
wdTabLeaderMiddleDot = 5
WdTabLeader = c_int # enum
TableOfFigures._methods_ = [
    COMMETHOD([dispid(1000), 'propget'], HRESULT, 'Application',
              ( ['out', 'retval'], POINTER(POINTER(Application)), 'prop' )),
    COMMETHOD([dispid(1001), 'propget'], HRESULT, 'Creator',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(1002), 'propget'], HRESULT, 'Parent',
              ( ['out', 'retval'], POINTER(POINTER(IDispatch)), 'prop' )),
    COMMETHOD([dispid(1), 'propget'], HRESULT, 'Caption',
              ( ['out', 'retval'], POINTER(BSTR), 'prop' )),
    COMMETHOD([dispid(1), 'propput'], HRESULT, 'Caption',
              ( ['in'], BSTR, 'prop' )),
    COMMETHOD([dispid(2), 'propget'], HRESULT, 'IncludeLabel',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'prop' )),
    COMMETHOD([dispid(2), 'propput'], HRESULT, 'IncludeLabel',
              ( ['in'], VARIANT_BOOL, 'prop' )),
    COMMETHOD([dispid(3), 'propget'], HRESULT, 'RightAlignPageNumbers',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'prop' )),
    COMMETHOD([dispid(3), 'propput'], HRESULT, 'RightAlignPageNumbers',
              ( ['in'], VARIANT_BOOL, 'prop' )),
    COMMETHOD([dispid(4), 'propget'], HRESULT, 'UseHeadingStyles',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'prop' )),
    COMMETHOD([dispid(4), 'propput'], HRESULT, 'UseHeadingStyles',
              ( ['in'], VARIANT_BOOL, 'prop' )),
    COMMETHOD([dispid(5), 'propget'], HRESULT, 'LowerHeadingLevel',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(5), 'propput'], HRESULT, 'LowerHeadingLevel',
              ( ['in'], c_int, 'prop' )),
    COMMETHOD([dispid(6), 'propget'], HRESULT, 'UpperHeadingLevel',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(6), 'propput'], HRESULT, 'UpperHeadingLevel',
              ( ['in'], c_int, 'prop' )),
    COMMETHOD([dispid(7), 'propget'], HRESULT, 'IncludePageNumbers',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'prop' )),
    COMMETHOD([dispid(7), 'propput'], HRESULT, 'IncludePageNumbers',
              ( ['in'], VARIANT_BOOL, 'prop' )),
    COMMETHOD([dispid(8), 'propget'], HRESULT, 'Range',
              ( ['out', 'retval'], POINTER(POINTER(Range)), 'prop' )),
    COMMETHOD([dispid(9), 'propget'], HRESULT, 'UseFields',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'prop' )),
    COMMETHOD([dispid(9), 'propput'], HRESULT, 'UseFields',
              ( ['in'], VARIANT_BOOL, 'prop' )),
    COMMETHOD([dispid(10), 'propget'], HRESULT, 'TableID',
              ( ['out', 'retval'], POINTER(BSTR), 'prop' )),
    COMMETHOD([dispid(10), 'propput'], HRESULT, 'TableID',
              ( ['in'], BSTR, 'prop' )),
    COMMETHOD([dispid(11), 'propget'], HRESULT, 'HeadingStyles',
              ( ['out', 'retval'], POINTER(POINTER(HeadingStyles)), 'prop' )),
    COMMETHOD([dispid(12), 'propget'], HRESULT, 'TabLeader',
              ( ['out', 'retval'], POINTER(WdTabLeader), 'prop' )),
    COMMETHOD([dispid(12), 'propput'], HRESULT, 'TabLeader',
              ( ['in'], WdTabLeader, 'prop' )),
    COMMETHOD([dispid(100)], HRESULT, 'Delete'),
    COMMETHOD([dispid(101)], HRESULT, 'UpdatePageNumbers'),
    COMMETHOD([dispid(102)], HRESULT, 'Update'),
    COMMETHOD([dispid(13), 'propget'], HRESULT, 'UseHyperlinks',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'prop' )),
    COMMETHOD([dispid(13), 'propput'], HRESULT, 'UseHyperlinks',
              ( ['in'], VARIANT_BOOL, 'prop' )),
    COMMETHOD([dispid(14), 'propget'], HRESULT, 'HidePageNumbersInWeb',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'prop' )),
    COMMETHOD([dispid(14), 'propput'], HRESULT, 'HidePageNumbersInWeb',
              ( ['in'], VARIANT_BOOL, 'prop' )),
]
################################################################
## code template for TableOfFigures implementation
##class TableOfFigures_Impl(object):
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Creator(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return prop
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    Caption = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    IncludeLabel = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    RightAlignPageNumbers = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    UseHeadingStyles = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    LowerHeadingLevel = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    UpperHeadingLevel = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    IncludePageNumbers = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Range(self):
##        '-no docstring-'
##        #return prop
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    UseFields = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    TableID = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def HeadingStyles(self):
##        '-no docstring-'
##        #return prop
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    TabLeader = property(_get, _set, doc = _set.__doc__)
##
##    def Delete(self):
##        '-no docstring-'
##        #return 
##
##    def UpdatePageNumbers(self):
##        '-no docstring-'
##        #return 
##
##    def Update(self):
##        '-no docstring-'
##        #return 
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    UseHyperlinks = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    HidePageNumbersInWeb = property(_get, _set, doc = _set.__doc__)
##

class DisplayUnitLabel(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{C04865A3-9F8A-486C-BB58-B4C3E6563136}')
    _idlflags_ = ['dual', 'nonextensible', 'oleautomation']
class ChartCharacters(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{FF06FEF2-DA89-41C0-A0A8-5CD434E210AD}')
    _idlflags_ = ['dual', 'nonextensible', 'oleautomation']
DisplayUnitLabel._methods_ = [
    COMMETHOD([dispid(1610743808), 'propget'], HRESULT, 'Caption',
              ( ['out', 'retval'], POINTER(BSTR), 'prop' )),
    COMMETHOD([dispid(1610743808), 'propput'], HRESULT, 'Caption',
              ( ['in'], BSTR, 'prop' )),
    COMMETHOD([dispid(1610743810), 'propget'], HRESULT, 'Characters',
              ( ['in', 'optional'], VARIANT, 'Start' ),
              ( ['in', 'optional'], VARIANT, 'Length' ),
              ( ['out', 'retval'], POINTER(POINTER(ChartCharacters)), 'prop' )),
    COMMETHOD([dispid(1610743811), 'hidden', 'propget'], HRESULT, 'Font',
              ( ['out', 'retval'], POINTER(POINTER(ChartFont)), 'prop' )),
    COMMETHOD([dispid(1610743812), 'propget'], HRESULT, 'HorizontalAlignment',
              ( ['out', 'retval'], POINTER(VARIANT), 'prop' )),
    COMMETHOD([dispid(1610743812), 'propput'], HRESULT, 'HorizontalAlignment',
              ( ['in'], VARIANT, 'prop' )),
    COMMETHOD([dispid(1610743814), 'propget'], HRESULT, 'Left',
              ( ['out', 'retval'], POINTER(c_double), 'prop' )),
    COMMETHOD([dispid(1610743814), 'propput'], HRESULT, 'Left',
              ( ['in'], c_double, 'prop' )),
    COMMETHOD([dispid(1610743816), 'propget'], HRESULT, 'Orientation',
              ( ['out', 'retval'], POINTER(VARIANT), 'prop' )),
    COMMETHOD([dispid(1610743816), 'propput'], HRESULT, 'Orientation',
              ( ['in'], VARIANT, 'prop' )),
    COMMETHOD([dispid(1610743818), 'propget'], HRESULT, 'Shadow',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'prop' )),
    COMMETHOD([dispid(1610743818), 'propput'], HRESULT, 'Shadow',
              ( ['in'], VARIANT_BOOL, 'prop' )),
    COMMETHOD([dispid(1610743820), 'propget'], HRESULT, 'Text',
              ( ['out', 'retval'], POINTER(BSTR), 'prop' )),
    COMMETHOD([dispid(1610743820), 'propput'], HRESULT, 'Text',
              ( ['in'], BSTR, 'prop' )),
    COMMETHOD([dispid(1610743822), 'propget'], HRESULT, 'Top',
              ( ['out', 'retval'], POINTER(c_double), 'prop' )),
    COMMETHOD([dispid(1610743822), 'propput'], HRESULT, 'Top',
              ( ['in'], c_double, 'prop' )),
    COMMETHOD([dispid(1610743824), 'propget'], HRESULT, 'VerticalAlignment',
              ( ['out', 'retval'], POINTER(VARIANT), 'prop' )),
    COMMETHOD([dispid(1610743824), 'propput'], HRESULT, 'VerticalAlignment',
              ( ['in'], VARIANT, 'prop' )),
    COMMETHOD([dispid(1610743826), 'propget'], HRESULT, 'ReadingOrder',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(1610743826), 'propput'], HRESULT, 'ReadingOrder',
              ( ['in'], c_int, 'prop' )),
    COMMETHOD([dispid(1610743828), 'hidden', 'propget'], HRESULT, 'AutoScaleFont',
              ( ['out', 'retval'], POINTER(VARIANT), 'prop' )),
    COMMETHOD([dispid(1610743828), 'hidden', 'propput'], HRESULT, 'AutoScaleFont',
              ( ['in'], VARIANT, 'prop' )),
    COMMETHOD([dispid(1610743830), 'hidden', 'propget'], HRESULT, 'Interior',
              ( ['out', 'retval'], POINTER(POINTER(Interior)), 'prop' )),
    COMMETHOD([dispid(1610743831), 'hidden', 'propget'], HRESULT, 'Fill',
              ( ['out', 'retval'], POINTER(POINTER(ChartFillFormat)), 'prop' )),
    COMMETHOD([dispid(1610743832)], HRESULT, 'Delete',
              ( ['out', 'retval'], POINTER(VARIANT), 'prop' )),
    COMMETHOD([dispid(1610743833), 'hidden', 'propget'], HRESULT, 'Border',
              ( ['out', 'retval'], POINTER(POINTER(ChartBorder)), 'prop' )),
    COMMETHOD([dispid(1610743834), 'propget'], HRESULT, 'Name',
              ( ['out', 'retval'], POINTER(BSTR), 'prop' )),
    COMMETHOD([dispid(1610743835), 'propget'], HRESULT, 'Parent',
              ( ['out', 'retval'], POINTER(POINTER(IDispatch)), 'prop' )),
    COMMETHOD([dispid(1610743836)], HRESULT, 'Select',
              ( ['out', 'retval'], POINTER(VARIANT), 'prop' )),
    COMMETHOD([dispid(2418), 'propget'], HRESULT, 'IncludeInLayout',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'prop' )),
    COMMETHOD([dispid(2418), 'propput'], HRESULT, 'IncludeInLayout',
              ( ['in'], VARIANT_BOOL, 'prop' )),
    COMMETHOD([dispid(1671), 'propget'], HRESULT, 'Position',
              ( ['out', 'retval'], POINTER(XlChartElementPosition), 'prop' )),
    COMMETHOD([dispid(1671), 'propput'], HRESULT, 'Position',
              ( ['in'], XlChartElementPosition, 'prop' )),
    COMMETHOD([dispid(1610743841), 'propget'], HRESULT, 'Format',
              ( ['out', 'retval'], POINTER(POINTER(ChartFormat)), 'prop' )),
    COMMETHOD([dispid(148), 'propget'], HRESULT, 'Application',
              ( ['out', 'retval'], POINTER(POINTER(IDispatch)), 'prop' )),
    COMMETHOD([dispid(149), 'propget'], HRESULT, 'Creator',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(1610743842), 'propget'], HRESULT, 'Height',
              ( ['out', 'retval'], POINTER(c_double), 'prop' )),
    COMMETHOD([dispid(1610743845), 'propget'], HRESULT, 'Width',
              ( ['out', 'retval'], POINTER(c_double), 'prop' )),
    COMMETHOD([dispid(1610743846), 'propget'], HRESULT, 'Formula',
              ( ['out', 'retval'], POINTER(BSTR), 'prop' )),
    COMMETHOD([dispid(1610743846), 'propput'], HRESULT, 'Formula',
              ( ['in'], BSTR, 'prop' )),
    COMMETHOD([dispid(1610743848), 'propget'], HRESULT, 'FormulaR1C1',
              ( ['out', 'retval'], POINTER(BSTR), 'prop' )),
    COMMETHOD([dispid(1610743848), 'propput'], HRESULT, 'FormulaR1C1',
              ( ['in'], BSTR, 'prop' )),
    COMMETHOD([dispid(1610743850), 'propget'], HRESULT, 'FormulaLocal',
              ( ['out', 'retval'], POINTER(BSTR), 'prop' )),
    COMMETHOD([dispid(1610743850), 'propput'], HRESULT, 'FormulaLocal',
              ( ['in'], BSTR, 'prop' )),
    COMMETHOD([dispid(1610743852), 'propget'], HRESULT, 'FormulaR1C1Local',
              ( ['out', 'retval'], POINTER(BSTR), 'prop' )),
    COMMETHOD([dispid(1610743852), 'propput'], HRESULT, 'FormulaR1C1Local',
              ( ['in'], BSTR, 'prop' )),
    COMMETHOD([dispid(253)], HRESULT, 'SetProperty',
              ( ['in'], BSTR, 'ID' ),
              ( ['in'], VARIANT, 'Value' )),
    COMMETHOD([dispid(254)], HRESULT, 'GetProperty',
              ( ['in'], BSTR, 'ID' ),
              ( ['out', 'retval'], POINTER(VARIANT), 'prop' )),
]
################################################################
## code template for DisplayUnitLabel implementation
##class DisplayUnitLabel_Impl(object):
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    Caption = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Characters(self, Start, Length):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Font(self):
##        '-no docstring-'
##        #return prop
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    HorizontalAlignment = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    Left = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    Orientation = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    Shadow = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    Text = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    Top = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    VerticalAlignment = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    ReadingOrder = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    AutoScaleFont = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Interior(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Fill(self):
##        '-no docstring-'
##        #return prop
##
##    def Delete(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Border(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Name(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return prop
##
##    def Select(self):
##        '-no docstring-'
##        #return prop
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    IncludeInLayout = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    Position = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Format(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Creator(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Height(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Width(self):
##        '-no docstring-'
##        #return prop
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    Formula = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    FormulaR1C1 = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    FormulaLocal = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    FormulaR1C1Local = property(_get, _set, doc = _set.__doc__)
##
##    def SetProperty(self, ID, Value):
##        '-no docstring-'
##        #return 
##
##    def GetProperty(self, ID):
##        '-no docstring-'
##        #return prop
##


# values for enumeration 'WdAutoFitBehavior'
wdAutoFitFixed = 0
wdAutoFitContent = 1
wdAutoFitWindow = 2
WdAutoFitBehavior = c_int # enum

# values for enumeration 'XlPictureAppearance'
xlPrinter = 2
xlScreen = 1
XlPictureAppearance = c_int # enum
class FirstLetterExceptions(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{00020946-0000-0000-C000-000000000046}')
    _idlflags_ = ['dual', 'nonextensible', 'oleautomation']
class FirstLetterException(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{00020945-0000-0000-C000-000000000046}')
    _idlflags_ = ['dual', 'nonextensible', 'oleautomation']
FirstLetterExceptions._methods_ = [
    COMMETHOD([dispid(1000), 'propget'], HRESULT, 'Application',
              ( ['out', 'retval'], POINTER(POINTER(Application)), 'prop' )),
    COMMETHOD([dispid(1001), 'propget'], HRESULT, 'Creator',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(1002), 'propget'], HRESULT, 'Parent',
              ( ['out', 'retval'], POINTER(POINTER(IDispatch)), 'prop' )),
    COMMETHOD([dispid(-4), 'nonbrowsable', 'propget'], HRESULT, '_NewEnum',
              ( ['out', 'retval'], POINTER(POINTER(IUnknown)), 'prop' )),
    COMMETHOD([dispid(1), 'propget'], HRESULT, 'Count',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(0)], HRESULT, 'Item',
              ( ['in'], POINTER(VARIANT), 'Index' ),
              ( ['out', 'retval'], POINTER(POINTER(FirstLetterException)), 'prop' )),
    COMMETHOD([dispid(101)], HRESULT, 'Add',
              ( ['in'], BSTR, 'Name' ),
              ( ['out', 'retval'], POINTER(POINTER(FirstLetterException)), 'prop' )),
]
################################################################
## code template for FirstLetterExceptions implementation
##class FirstLetterExceptions_Impl(object):
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Creator(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def _NewEnum(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Count(self):
##        '-no docstring-'
##        #return prop
##
##    def Item(self, Index):
##        '-no docstring-'
##        #return prop
##
##    def Add(self, Name):
##        '-no docstring-'
##        #return prop
##

class KeyBinding(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{00020998-0000-0000-C000-000000000046}')
    _idlflags_ = ['dual', 'nonextensible', 'oleautomation']

# values for enumeration 'WdKeyCategory'
wdKeyCategoryNil = -1
wdKeyCategoryDisable = 0
wdKeyCategoryCommand = 1
wdKeyCategoryMacro = 2
wdKeyCategoryFont = 3
wdKeyCategoryAutoText = 4
wdKeyCategoryStyle = 5
wdKeyCategorySymbol = 6
wdKeyCategoryPrefix = 7
WdKeyCategory = c_int # enum
KeyBinding._methods_ = [
    COMMETHOD([dispid(1000), 'propget'], HRESULT, 'Application',
              ( ['out', 'retval'], POINTER(POINTER(Application)), 'prop' )),
    COMMETHOD([dispid(1001), 'propget'], HRESULT, 'Creator',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(1002), 'propget'], HRESULT, 'Parent',
              ( ['out', 'retval'], POINTER(POINTER(IDispatch)), 'prop' )),
    COMMETHOD([dispid(1), 'propget'], HRESULT, 'Command',
              ( ['out', 'retval'], POINTER(BSTR), 'prop' )),
    COMMETHOD([dispid(2), 'propget'], HRESULT, 'KeyString',
              ( ['out', 'retval'], POINTER(BSTR), 'prop' )),
    COMMETHOD([dispid(3), 'propget'], HRESULT, 'Protected',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'prop' )),
    COMMETHOD([dispid(4), 'propget'], HRESULT, 'KeyCategory',
              ( ['out', 'retval'], POINTER(WdKeyCategory), 'prop' )),
    COMMETHOD([dispid(6), 'propget'], HRESULT, 'KeyCode',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(7), 'propget'], HRESULT, 'KeyCode2',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(8), 'propget'], HRESULT, 'CommandParameter',
              ( ['out', 'retval'], POINTER(BSTR), 'prop' )),
    COMMETHOD([dispid(10), 'propget'], HRESULT, 'Context',
              ( ['out', 'retval'], POINTER(POINTER(IDispatch)), 'prop' )),
    COMMETHOD([dispid(101)], HRESULT, 'Clear'),
    COMMETHOD([dispid(102)], HRESULT, 'Disable'),
    COMMETHOD([dispid(103)], HRESULT, 'Execute'),
    COMMETHOD([dispid(104)], HRESULT, 'Rebind',
              ( ['in'], WdKeyCategory, 'KeyCategory' ),
              ( ['in'], BSTR, 'Command' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'CommandParameter' )),
]
################################################################
## code template for KeyBinding implementation
##class KeyBinding_Impl(object):
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Creator(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Command(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def KeyString(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Protected(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def KeyCategory(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def KeyCode(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def KeyCode2(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def CommandParameter(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Context(self):
##        '-no docstring-'
##        #return prop
##
##    def Clear(self):
##        '-no docstring-'
##        #return 
##
##    def Disable(self):
##        '-no docstring-'
##        #return 
##
##    def Execute(self):
##        '-no docstring-'
##        #return 
##
##    def Rebind(self, KeyCategory, Command, CommandParameter):
##        '-no docstring-'
##        #return 
##


# values for enumeration 'WdSectionDirection'
wdSectionDirectionRtl = 0
wdSectionDirectionLtr = 1
WdSectionDirection = c_int # enum

# values for enumeration 'WdDefaultFilePath'
wdDocumentsPath = 0
wdPicturesPath = 1
wdUserTemplatesPath = 2
wdWorkgroupTemplatesPath = 3
wdUserOptionsPath = 4
wdAutoRecoverPath = 5
wdToolsPath = 6
wdTutorialPath = 7
wdStartupPath = 8
wdProgramPath = 9
wdGraphicsFiltersPath = 10
wdTextConvertersPath = 11
wdProofingToolsPath = 12
wdTempFilePath = 13
wdCurrentFolderPath = 14
wdStyleGalleryPath = 15
wdBorderArtPath = 19
WdDefaultFilePath = c_int # enum

# values for enumeration 'WdSpellingWordType'
wdSpellword = 0
wdWildcard = 1
wdAnagram = 2
WdSpellingWordType = c_int # enum

# values for enumeration 'WdRevisionsBalloonPrintOrientation'
wdBalloonPrintOrientationAuto = 0
wdBalloonPrintOrientationPreserve = 1
wdBalloonPrintOrientationForceLandscape = 2
WdRevisionsBalloonPrintOrientation = c_int # enum

# values for enumeration 'WdStatisticHID'
emptyenum = 0
WdStatisticHID = c_int # enum

# values for enumeration 'WdEditionOption'
wdCancelPublisher = 0
wdSendPublisher = 1
wdSelectPublisher = 2
wdAutomaticUpdate = 3
wdManualUpdate = 4
wdChangeAttributes = 5
wdUpdateSubscriber = 6
wdOpenSource = 7
WdEditionOption = c_int # enum

# values for enumeration 'XlCopyPictureFormat'
xlBitmap = 2
xlPicture = -4147
XlCopyPictureFormat = c_int # enum
class XMLSchemaReferences(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{356B06EC-4908-42A4-81FC-4B5A51F3483B}')
    _idlflags_ = ['dual', 'nonextensible', 'oleautomation']
class XMLSchemaReference(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{FE0971F0-5E60-4985-BCDA-95CB0B8E0308}')
    _idlflags_ = ['dual', 'nonextensible', 'oleautomation']
XMLSchemaReferences._methods_ = [
    COMMETHOD([dispid(-4), 'nonbrowsable', 'propget'], HRESULT, '_NewEnum',
              ( ['out', 'retval'], POINTER(POINTER(IUnknown)), 'prop' )),
    COMMETHOD([dispid(2), 'propget'], HRESULT, 'Count',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(1000), 'propget'], HRESULT, 'Application',
              ( ['out', 'retval'], POINTER(POINTER(Application)), 'prop' )),
    COMMETHOD([dispid(1001), 'propget'], HRESULT, 'Creator',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(1002), 'propget'], HRESULT, 'Parent',
              ( ['out', 'retval'], POINTER(POINTER(IDispatch)), 'prop' )),
    COMMETHOD([dispid(3), 'hidden', 'propget'], HRESULT, 'AutomaticValidation',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'prop' )),
    COMMETHOD([dispid(3), 'hidden', 'propput'], HRESULT, 'AutomaticValidation',
              ( ['in'], VARIANT_BOOL, 'prop' )),
    COMMETHOD([dispid(4), 'hidden', 'propget'], HRESULT, 'AllowSaveAsXMLWithoutValidation',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'prop' )),
    COMMETHOD([dispid(4), 'hidden', 'propput'], HRESULT, 'AllowSaveAsXMLWithoutValidation',
              ( ['in'], VARIANT_BOOL, 'prop' )),
    COMMETHOD([dispid(5), 'propget'], HRESULT, 'HideValidationErrors',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'prop' )),
    COMMETHOD([dispid(5), 'propput'], HRESULT, 'HideValidationErrors',
              ( ['in'], VARIANT_BOOL, 'prop' )),
    COMMETHOD([dispid(6), 'propget'], HRESULT, 'IgnoreMixedContent',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'prop' )),
    COMMETHOD([dispid(6), 'propput'], HRESULT, 'IgnoreMixedContent',
              ( ['in'], VARIANT_BOOL, 'prop' )),
    COMMETHOD([dispid(7), 'propget'], HRESULT, 'ShowPlaceholderText',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'prop' )),
    COMMETHOD([dispid(7), 'propput'], HRESULT, 'ShowPlaceholderText',
              ( ['in'], VARIANT_BOOL, 'prop' )),
    COMMETHOD([dispid(0)], HRESULT, 'Item',
              ( ['in'], POINTER(VARIANT), 'Index' ),
              ( ['out', 'retval'], POINTER(POINTER(XMLSchemaReference)), 'prop' )),
    COMMETHOD([dispid(100)], HRESULT, 'Validate'),
    COMMETHOD([dispid(101)], HRESULT, 'Add',
              ( ['in', 'optional'], POINTER(VARIANT), 'NamespaceURI' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'Alias' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'FileName' ),
              ( ['in', 'optional'], VARIANT_BOOL, 'InstallForAllUsers', False ),
              ( ['out', 'retval'], POINTER(POINTER(XMLSchemaReference)), 'prop' )),
]
################################################################
## code template for XMLSchemaReferences implementation
##class XMLSchemaReferences_Impl(object):
##    @property
##    def _NewEnum(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Count(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Creator(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return prop
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    AutomaticValidation = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    AllowSaveAsXMLWithoutValidation = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    HideValidationErrors = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    IgnoreMixedContent = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    ShowPlaceholderText = property(_get, _set, doc = _set.__doc__)
##
##    def Item(self, Index):
##        '-no docstring-'
##        #return prop
##
##    def Validate(self):
##        '-no docstring-'
##        #return 
##
##    def Add(self, NamespaceURI, Alias, FileName, InstallForAllUsers):
##        '-no docstring-'
##        #return prop
##

class Languages(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{0002096E-0000-0000-C000-000000000046}')
    _idlflags_ = ['dual', 'nonextensible', 'oleautomation']
class Language(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{0002096D-0000-0000-C000-000000000046}')
    _idlflags_ = ['dual', 'nonextensible', 'oleautomation']
Languages._methods_ = [
    COMMETHOD([dispid(-4), 'nonbrowsable', 'propget'], HRESULT, '_NewEnum',
              ( ['out', 'retval'], POINTER(POINTER(IUnknown)), 'prop' )),
    COMMETHOD([dispid(2), 'propget'], HRESULT, 'Count',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(1000), 'propget'], HRESULT, 'Application',
              ( ['out', 'retval'], POINTER(POINTER(Application)), 'prop' )),
    COMMETHOD([dispid(1001), 'propget'], HRESULT, 'Creator',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(1002), 'propget'], HRESULT, 'Parent',
              ( ['out', 'retval'], POINTER(POINTER(IDispatch)), 'prop' )),
    COMMETHOD([dispid(0)], HRESULT, 'Item',
              ( ['in'], POINTER(VARIANT), 'Index' ),
              ( ['out', 'retval'], POINTER(POINTER(Language)), 'prop' )),
]
################################################################
## code template for Languages implementation
##class Languages_Impl(object):
##    @property
##    def _NewEnum(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Count(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Creator(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return prop
##
##    def Item(self, Index):
##        '-no docstring-'
##        #return prop
##

class MailingLabel(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{00020917-0000-0000-C000-000000000046}')
    _idlflags_ = ['dual', 'nonextensible', 'oleautomation']

# values for enumeration 'WdPaperTray'
wdPrinterDefaultBin = 0
wdPrinterUpperBin = 1
wdPrinterOnlyBin = 1
wdPrinterLowerBin = 2
wdPrinterMiddleBin = 3
wdPrinterManualFeed = 4
wdPrinterEnvelopeFeed = 5
wdPrinterManualEnvelopeFeed = 6
wdPrinterAutomaticSheetFeed = 7
wdPrinterTractorFeed = 8
wdPrinterSmallFormatBin = 9
wdPrinterLargeFormatBin = 10
wdPrinterLargeCapacityBin = 11
wdPrinterPaperCassette = 14
wdPrinterFormSource = 15
WdPaperTray = c_int # enum
class CustomLabels(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{00020916-0000-0000-C000-000000000046}')
    _idlflags_ = ['dual', 'nonextensible', 'oleautomation']
class Document(CoClass):
    _reg_clsid_ = GUID('{00020906-0000-0000-C000-000000000046}')
    _idlflags_ = []
    _typelib_path_ = typelib_path
    _reg_typelib_ = ('{00020905-0000-0000-C000-000000000046}', 8, 7)
class _Document(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{0002096B-0000-0000-C000-000000000046}')
    _idlflags_ = ['hidden', 'dual', 'oleautomation']
class DocumentEvents(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{000209F6-0000-0000-C000-000000000046}')
    _idlflags_ = ['hidden']
    _methods_ = []
class DocumentEvents2(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{00020A02-0000-0000-C000-000000000046}')
    _idlflags_ = ['hidden']
    _methods_ = []
Document._com_interfaces_ = [_Document]
Document._outgoing_interfaces_ = [DocumentEvents2, DocumentEvents]

MailingLabel._methods_ = [
    COMMETHOD([dispid(1000), 'propget'], HRESULT, 'Application',
              ( ['out', 'retval'], POINTER(POINTER(Application)), 'prop' )),
    COMMETHOD([dispid(1001), 'propget'], HRESULT, 'Creator',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(1002), 'propget'], HRESULT, 'Parent',
              ( ['out', 'retval'], POINTER(POINTER(IDispatch)), 'prop' )),
    COMMETHOD([dispid(2), 'hidden', 'propget'], HRESULT, 'DefaultPrintBarCode',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'prop' )),
    COMMETHOD([dispid(2), 'hidden', 'propput'], HRESULT, 'DefaultPrintBarCode',
              ( ['in'], VARIANT_BOOL, 'prop' )),
    COMMETHOD([dispid(4), 'propget'], HRESULT, 'DefaultLaserTray',
              ( ['out', 'retval'], POINTER(WdPaperTray), 'prop' )),
    COMMETHOD([dispid(4), 'propput'], HRESULT, 'DefaultLaserTray',
              ( ['in'], WdPaperTray, 'prop' )),
    COMMETHOD([dispid(8), 'propget'], HRESULT, 'CustomLabels',
              ( ['out', 'retval'], POINTER(POINTER(CustomLabels)), 'prop' )),
    COMMETHOD([dispid(9), 'propget'], HRESULT, 'DefaultLabelName',
              ( ['out', 'retval'], POINTER(BSTR), 'prop' )),
    COMMETHOD([dispid(9), 'propput'], HRESULT, 'DefaultLabelName',
              ( ['in'], BSTR, 'prop' )),
    COMMETHOD([dispid(101), 'hidden'], HRESULT, 'CreateNewDocument2000',
              ( ['in', 'optional'], POINTER(VARIANT), 'Name' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'Address' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'AutoText' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'ExtractAddress' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'LaserTray' ),
              ( ['out', 'retval'], POINTER(POINTER(Document)), 'prop' )),
    COMMETHOD([dispid(102), 'hidden'], HRESULT, 'PrintOut2000',
              ( ['in', 'optional'], POINTER(VARIANT), 'Name' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'Address' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'ExtractAddress' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'LaserTray' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'SingleLabel' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'Row' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'Column' )),
    COMMETHOD([dispid(103)], HRESULT, 'LabelOptions'),
    COMMETHOD([dispid(104)], HRESULT, 'CreateNewDocument',
              ( ['in', 'optional'], POINTER(VARIANT), 'Name' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'Address' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'AutoText' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'ExtractAddress' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'LaserTray' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'PrintEPostageLabel' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'Vertical' ),
              ( ['out', 'retval'], POINTER(POINTER(Document)), 'prop' )),
    COMMETHOD([dispid(105)], HRESULT, 'PrintOut',
              ( ['in', 'optional'], POINTER(VARIANT), 'Name' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'Address' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'ExtractAddress' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'LaserTray' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'SingleLabel' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'Row' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'Column' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'PrintEPostageLabel' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'Vertical' )),
    COMMETHOD([dispid(10), 'propget'], HRESULT, 'Vertical',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'prop' )),
    COMMETHOD([dispid(10), 'propput'], HRESULT, 'Vertical',
              ( ['in'], VARIANT_BOOL, 'prop' )),
    COMMETHOD([dispid(106)], HRESULT, 'CreateNewDocumentByID',
              ( ['in', 'optional'], POINTER(VARIANT), 'LabelID' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'Address' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'AutoText' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'ExtractAddress' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'LaserTray' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'PrintEPostageLabel' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'Vertical' ),
              ( ['out', 'retval'], POINTER(POINTER(Document)), 'prop' )),
    COMMETHOD([dispid(107)], HRESULT, 'PrintOutByID',
              ( ['in', 'optional'], POINTER(VARIANT), 'LabelID' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'Address' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'ExtractAddress' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'LaserTray' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'SingleLabel' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'Row' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'Column' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'PrintEPostageLabel' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'Vertical' )),
]
################################################################
## code template for MailingLabel implementation
##class MailingLabel_Impl(object):
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Creator(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return prop
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    DefaultPrintBarCode = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    DefaultLaserTray = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def CustomLabels(self):
##        '-no docstring-'
##        #return prop
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    DefaultLabelName = property(_get, _set, doc = _set.__doc__)
##
##    def CreateNewDocument2000(self, Name, Address, AutoText, ExtractAddress, LaserTray):
##        '-no docstring-'
##        #return prop
##
##    def PrintOut2000(self, Name, Address, ExtractAddress, LaserTray, SingleLabel, Row, Column):
##        '-no docstring-'
##        #return 
##
##    def LabelOptions(self):
##        '-no docstring-'
##        #return 
##
##    def CreateNewDocument(self, Name, Address, AutoText, ExtractAddress, LaserTray, PrintEPostageLabel, Vertical):
##        '-no docstring-'
##        #return prop
##
##    def PrintOut(self, Name, Address, ExtractAddress, LaserTray, SingleLabel, Row, Column, PrintEPostageLabel, Vertical):
##        '-no docstring-'
##        #return 
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    Vertical = property(_get, _set, doc = _set.__doc__)
##
##    def CreateNewDocumentByID(self, LabelID, Address, AutoText, ExtractAddress, LaserTray, PrintEPostageLabel, Vertical):
##        '-no docstring-'
##        #return prop
##
##    def PrintOutByID(self, LabelID, Address, ExtractAddress, LaserTray, SingleLabel, Row, Column, PrintEPostageLabel, Vertical):
##        '-no docstring-'
##        #return 
##

class EmailOptions(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{000209DB-0000-0000-C000-000000000046}')
    _idlflags_ = ['dual', 'nonextensible', 'oleautomation']
class EmailSignature(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{000209DC-0000-0000-C000-000000000046}')
    _idlflags_ = ['dual', 'nonextensible', 'oleautomation']
class Style(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{0002092C-0000-0000-C000-000000000046}')
    _idlflags_ = ['dual', 'nonextensible', 'oleautomation']

# values for enumeration 'WdEmailHTMLFidelity'
wdEmailHTMLFidelityLow = 1
wdEmailHTMLFidelityMedium = 2
wdEmailHTMLFidelityHigh = 3
WdEmailHTMLFidelity = c_int # enum
EmailOptions._methods_ = [
    COMMETHOD([dispid(100), 'propget'], HRESULT, 'Application',
              ( ['out', 'retval'], POINTER(POINTER(Application)), 'prop' )),
    COMMETHOD([dispid(101), 'propget'], HRESULT, 'Creator',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(102), 'propget'], HRESULT, 'Parent',
              ( ['out', 'retval'], POINTER(POINTER(IDispatch)), 'prop' )),
    COMMETHOD([dispid(103), 'propget'], HRESULT, 'UseThemeStyle',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'prop' )),
    COMMETHOD([dispid(103), 'propput'], HRESULT, 'UseThemeStyle',
              ( ['in'], VARIANT_BOOL, 'prop' )),
    COMMETHOD([dispid(106), 'propget'], HRESULT, 'MarkCommentsWith',
              ( ['out', 'retval'], POINTER(BSTR), 'prop' )),
    COMMETHOD([dispid(106), 'propput'], HRESULT, 'MarkCommentsWith',
              ( ['in'], BSTR, 'prop' )),
    COMMETHOD([dispid(107), 'propget'], HRESULT, 'MarkComments',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'prop' )),
    COMMETHOD([dispid(107), 'propput'], HRESULT, 'MarkComments',
              ( ['in'], VARIANT_BOOL, 'prop' )),
    COMMETHOD([dispid(108), 'propget'], HRESULT, 'EmailSignature',
              ( ['out', 'retval'], POINTER(POINTER(EmailSignature)), 'prop' )),
    COMMETHOD([dispid(109), 'propget'], HRESULT, 'ComposeStyle',
              ( ['out', 'retval'], POINTER(POINTER(Style)), 'prop' )),
    COMMETHOD([dispid(110), 'propget'], HRESULT, 'ReplyStyle',
              ( ['out', 'retval'], POINTER(POINTER(Style)), 'prop' )),
    COMMETHOD([dispid(114), 'propget'], HRESULT, 'ThemeName',
              ( ['out', 'retval'], POINTER(BSTR), 'prop' )),
    COMMETHOD([dispid(114), 'propput'], HRESULT, 'ThemeName',
              ( ['in'], BSTR, 'prop' )),
    COMMETHOD([dispid(111), 'hidden', 'propget'], HRESULT, 'Dummy1',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'prop' )),
    COMMETHOD([dispid(112), 'hidden', 'propget'], HRESULT, 'Dummy2',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'prop' )),
    COMMETHOD([dispid(113), 'hidden'], HRESULT, 'Dummy3'),
    COMMETHOD([dispid(116), 'propget'], HRESULT, 'NewColorOnReply',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'prop' )),
    COMMETHOD([dispid(116), 'propput'], HRESULT, 'NewColorOnReply',
              ( ['in'], VARIANT_BOOL, 'prop' )),
    COMMETHOD([dispid(117), 'propget'], HRESULT, 'PlainTextStyle',
              ( ['out', 'retval'], POINTER(POINTER(Style)), 'prop' )),
    COMMETHOD([dispid(118), 'propget'], HRESULT, 'UseThemeStyleOnReply',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'prop' )),
    COMMETHOD([dispid(118), 'propput'], HRESULT, 'UseThemeStyleOnReply',
              ( ['in'], VARIANT_BOOL, 'prop' )),
    COMMETHOD([dispid(260), 'propget'], HRESULT, 'AutoFormatAsYouTypeApplyHeadings',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'prop' )),
    COMMETHOD([dispid(260), 'propput'], HRESULT, 'AutoFormatAsYouTypeApplyHeadings',
              ( ['in'], VARIANT_BOOL, 'prop' )),
    COMMETHOD([dispid(261), 'propget'], HRESULT, 'AutoFormatAsYouTypeApplyBorders',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'prop' )),
    COMMETHOD([dispid(261), 'propput'], HRESULT, 'AutoFormatAsYouTypeApplyBorders',
              ( ['in'], VARIANT_BOOL, 'prop' )),
    COMMETHOD([dispid(262), 'propget'], HRESULT, 'AutoFormatAsYouTypeApplyBulletedLists',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'prop' )),
    COMMETHOD([dispid(262), 'propput'], HRESULT, 'AutoFormatAsYouTypeApplyBulletedLists',
              ( ['in'], VARIANT_BOOL, 'prop' )),
    COMMETHOD([dispid(263), 'propget'], HRESULT, 'AutoFormatAsYouTypeApplyNumberedLists',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'prop' )),
    COMMETHOD([dispid(263), 'propput'], HRESULT, 'AutoFormatAsYouTypeApplyNumberedLists',
              ( ['in'], VARIANT_BOOL, 'prop' )),
    COMMETHOD([dispid(264), 'propget'], HRESULT, 'AutoFormatAsYouTypeReplaceQuotes',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'prop' )),
    COMMETHOD([dispid(264), 'propput'], HRESULT, 'AutoFormatAsYouTypeReplaceQuotes',
              ( ['in'], VARIANT_BOOL, 'prop' )),
    COMMETHOD([dispid(265), 'propget'], HRESULT, 'AutoFormatAsYouTypeReplaceSymbols',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'prop' )),
    COMMETHOD([dispid(265), 'propput'], HRESULT, 'AutoFormatAsYouTypeReplaceSymbols',
              ( ['in'], VARIANT_BOOL, 'prop' )),
    COMMETHOD([dispid(266), 'propget'], HRESULT, 'AutoFormatAsYouTypeReplaceOrdinals',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'prop' )),
    COMMETHOD([dispid(266), 'propput'], HRESULT, 'AutoFormatAsYouTypeReplaceOrdinals',
              ( ['in'], VARIANT_BOOL, 'prop' )),
    COMMETHOD([dispid(267), 'propget'], HRESULT, 'AutoFormatAsYouTypeReplaceFractions',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'prop' )),
    COMMETHOD([dispid(267), 'propput'], HRESULT, 'AutoFormatAsYouTypeReplaceFractions',
              ( ['in'], VARIANT_BOOL, 'prop' )),
    COMMETHOD([dispid(268), 'propget'], HRESULT, 'AutoFormatAsYouTypeReplacePlainTextEmphasis',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'prop' )),
    COMMETHOD([dispid(268), 'propput'], HRESULT, 'AutoFormatAsYouTypeReplacePlainTextEmphasis',
              ( ['in'], VARIANT_BOOL, 'prop' )),
    COMMETHOD([dispid(269), 'propget'], HRESULT, 'AutoFormatAsYouTypeFormatListItemBeginning',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'prop' )),
    COMMETHOD([dispid(269), 'propput'], HRESULT, 'AutoFormatAsYouTypeFormatListItemBeginning',
              ( ['in'], VARIANT_BOOL, 'prop' )),
    COMMETHOD([dispid(270), 'propget'], HRESULT, 'AutoFormatAsYouTypeDefineStyles',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'prop' )),
    COMMETHOD([dispid(270), 'propput'], HRESULT, 'AutoFormatAsYouTypeDefineStyles',
              ( ['in'], VARIANT_BOOL, 'prop' )),
    COMMETHOD([dispid(272), 'propget'], HRESULT, 'AutoFormatAsYouTypeReplaceHyperlinks',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'prop' )),
    COMMETHOD([dispid(272), 'propput'], HRESULT, 'AutoFormatAsYouTypeReplaceHyperlinks',
              ( ['in'], VARIANT_BOOL, 'prop' )),
    COMMETHOD([dispid(290), 'propget'], HRESULT, 'AutoFormatAsYouTypeApplyTables',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'prop' )),
    COMMETHOD([dispid(290), 'propput'], HRESULT, 'AutoFormatAsYouTypeApplyTables',
              ( ['in'], VARIANT_BOOL, 'prop' )),
    COMMETHOD([dispid(297), 'propget'], HRESULT, 'AutoFormatAsYouTypeApplyFirstIndents',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'prop' )),
    COMMETHOD([dispid(297), 'propput'], HRESULT, 'AutoFormatAsYouTypeApplyFirstIndents',
              ( ['in'], VARIANT_BOOL, 'prop' )),
    COMMETHOD([dispid(298), 'propget'], HRESULT, 'AutoFormatAsYouTypeApplyDates',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'prop' )),
    COMMETHOD([dispid(298), 'propput'], HRESULT, 'AutoFormatAsYouTypeApplyDates',
              ( ['in'], VARIANT_BOOL, 'prop' )),
    COMMETHOD([dispid(299), 'propget'], HRESULT, 'AutoFormatAsYouTypeApplyClosings',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'prop' )),
    COMMETHOD([dispid(299), 'propput'], HRESULT, 'AutoFormatAsYouTypeApplyClosings',
              ( ['in'], VARIANT_BOOL, 'prop' )),
    COMMETHOD([dispid(300), 'propget'], HRESULT, 'AutoFormatAsYouTypeMatchParentheses',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'prop' )),
    COMMETHOD([dispid(300), 'propput'], HRESULT, 'AutoFormatAsYouTypeMatchParentheses',
              ( ['in'], VARIANT_BOOL, 'prop' )),
    COMMETHOD([dispid(301), 'propget'], HRESULT, 'AutoFormatAsYouTypeReplaceFarEastDashes',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'prop' )),
    COMMETHOD([dispid(301), 'propput'], HRESULT, 'AutoFormatAsYouTypeReplaceFarEastDashes',
              ( ['in'], VARIANT_BOOL, 'prop' )),
    COMMETHOD([dispid(302), 'propget'], HRESULT, 'AutoFormatAsYouTypeDeleteAutoSpaces',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'prop' )),
    COMMETHOD([dispid(302), 'propput'], HRESULT, 'AutoFormatAsYouTypeDeleteAutoSpaces',
              ( ['in'], VARIANT_BOOL, 'prop' )),
    COMMETHOD([dispid(303), 'propget'], HRESULT, 'AutoFormatAsYouTypeInsertClosings',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'prop' )),
    COMMETHOD([dispid(303), 'propput'], HRESULT, 'AutoFormatAsYouTypeInsertClosings',
              ( ['in'], VARIANT_BOOL, 'prop' )),
    COMMETHOD([dispid(304), 'propget'], HRESULT, 'AutoFormatAsYouTypeAutoLetterWizard',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'prop' )),
    COMMETHOD([dispid(304), 'propput'], HRESULT, 'AutoFormatAsYouTypeAutoLetterWizard',
              ( ['in'], VARIANT_BOOL, 'prop' )),
    COMMETHOD([dispid(305), 'propget'], HRESULT, 'AutoFormatAsYouTypeInsertOvers',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'prop' )),
    COMMETHOD([dispid(305), 'propput'], HRESULT, 'AutoFormatAsYouTypeInsertOvers',
              ( ['in'], VARIANT_BOOL, 'prop' )),
    COMMETHOD([dispid(306), 'propget'], HRESULT, 'RelyOnCSS',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'prop' )),
    COMMETHOD([dispid(306), 'propput'], HRESULT, 'RelyOnCSS',
              ( ['in'], VARIANT_BOOL, 'prop' )),
    COMMETHOD([dispid(307), 'propget'], HRESULT, 'HTMLFidelity',
              ( ['out', 'retval'], POINTER(WdEmailHTMLFidelity), 'prop' )),
    COMMETHOD([dispid(307), 'propput'], HRESULT, 'HTMLFidelity',
              ( ['in'], WdEmailHTMLFidelity, 'prop' )),
    COMMETHOD([dispid(308), 'hidden', 'propget'], HRESULT, 'EmbedSmartTag',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'prop' )),
    COMMETHOD([dispid(308), 'hidden', 'propput'], HRESULT, 'EmbedSmartTag',
              ( ['in'], VARIANT_BOOL, 'prop' )),
    COMMETHOD([dispid(309), 'propget'], HRESULT, 'TabIndentKey',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'prop' )),
    COMMETHOD([dispid(309), 'propput'], HRESULT, 'TabIndentKey',
              ( ['in'], VARIANT_BOOL, 'prop' )),
]
################################################################
## code template for EmailOptions implementation
##class EmailOptions_Impl(object):
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Creator(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return prop
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    UseThemeStyle = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    MarkCommentsWith = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    MarkComments = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def EmailSignature(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def ComposeStyle(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def ReplyStyle(self):
##        '-no docstring-'
##        #return prop
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    ThemeName = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Dummy1(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Dummy2(self):
##        '-no docstring-'
##        #return prop
##
##    def Dummy3(self):
##        '-no docstring-'
##        #return 
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    NewColorOnReply = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def PlainTextStyle(self):
##        '-no docstring-'
##        #return prop
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    UseThemeStyleOnReply = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    AutoFormatAsYouTypeApplyHeadings = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    AutoFormatAsYouTypeApplyBorders = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    AutoFormatAsYouTypeApplyBulletedLists = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    AutoFormatAsYouTypeApplyNumberedLists = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    AutoFormatAsYouTypeReplaceQuotes = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    AutoFormatAsYouTypeReplaceSymbols = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    AutoFormatAsYouTypeReplaceOrdinals = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    AutoFormatAsYouTypeReplaceFractions = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    AutoFormatAsYouTypeReplacePlainTextEmphasis = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    AutoFormatAsYouTypeFormatListItemBeginning = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    AutoFormatAsYouTypeDefineStyles = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    AutoFormatAsYouTypeReplaceHyperlinks = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    AutoFormatAsYouTypeApplyTables = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    AutoFormatAsYouTypeApplyFirstIndents = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    AutoFormatAsYouTypeApplyDates = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    AutoFormatAsYouTypeApplyClosings = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    AutoFormatAsYouTypeMatchParentheses = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    AutoFormatAsYouTypeReplaceFarEastDashes = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    AutoFormatAsYouTypeDeleteAutoSpaces = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    AutoFormatAsYouTypeInsertClosings = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    AutoFormatAsYouTypeAutoLetterWizard = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    AutoFormatAsYouTypeInsertOvers = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    RelyOnCSS = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    HTMLFidelity = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    EmbedSmartTag = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    TabIndentKey = property(_get, _set, doc = _set.__doc__)
##


# values for enumeration 'WdLineStyle'
wdLineStyleNone = 0
wdLineStyleSingle = 1
wdLineStyleDot = 2
wdLineStyleDashSmallGap = 3
wdLineStyleDashLargeGap = 4
wdLineStyleDashDot = 5
wdLineStyleDashDotDot = 6
wdLineStyleDouble = 7
wdLineStyleTriple = 8
wdLineStyleThinThickSmallGap = 9
wdLineStyleThickThinSmallGap = 10
wdLineStyleThinThickThinSmallGap = 11
wdLineStyleThinThickMedGap = 12
wdLineStyleThickThinMedGap = 13
wdLineStyleThinThickThinMedGap = 14
wdLineStyleThinThickLargeGap = 15
wdLineStyleThickThinLargeGap = 16
wdLineStyleThinThickThinLargeGap = 17
wdLineStyleSingleWavy = 18
wdLineStyleDoubleWavy = 19
wdLineStyleDashDotStroked = 20
wdLineStyleEmboss3D = 21
wdLineStyleEngrave3D = 22
wdLineStyleOutset = 23
wdLineStyleInset = 24
WdLineStyle = c_int # enum

# values for enumeration 'WdLineWidth'
wdLineWidth025pt = 2
wdLineWidth050pt = 4
wdLineWidth075pt = 6
wdLineWidth100pt = 8
wdLineWidth150pt = 12
wdLineWidth225pt = 18
wdLineWidth300pt = 24
wdLineWidth450pt = 36
wdLineWidth600pt = 48
WdLineWidth = c_int # enum

# values for enumeration 'WdColorIndex'
wdAuto = 0
wdBlack = 1
wdBlue = 2
wdTurquoise = 3
wdBrightGreen = 4
wdPink = 5
wdRed = 6
wdYellow = 7
wdWhite = 8
wdDarkBlue = 9
wdTeal = 10
wdGreen = 11
wdViolet = 12
wdDarkRed = 13
wdDarkYellow = 14
wdGray50 = 15
wdGray25 = 16
wdClassicRed = 17
wdClassicBlue = 18
wdByAuthor = -1
wdNoHighlight = 0
WdColorIndex = c_int # enum

# values for enumeration 'WdBorderDistanceFrom'
wdBorderDistanceFromText = 0
wdBorderDistanceFromPageEdge = 1
WdBorderDistanceFrom = c_int # enum

# values for enumeration 'WdBorderType'
wdBorderTop = -1
wdBorderLeft = -2
wdBorderBottom = -3
wdBorderRight = -4
wdBorderHorizontal = -5
wdBorderVertical = -6
wdBorderDiagonalDown = -7
wdBorderDiagonalUp = -8
WdBorderType = c_int # enum
class Border(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{0002093B-0000-0000-C000-000000000046}')
    _idlflags_ = ['dual', 'nonextensible', 'oleautomation']
Borders._methods_ = [
    COMMETHOD([dispid(1000), 'propget'], HRESULT, 'Application',
              ( ['out', 'retval'], POINTER(POINTER(Application)), 'prop' )),
    COMMETHOD([dispid(1001), 'propget'], HRESULT, 'Creator',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(1002), 'propget'], HRESULT, 'Parent',
              ( ['out', 'retval'], POINTER(POINTER(IDispatch)), 'prop' )),
    COMMETHOD([dispid(-4), 'nonbrowsable', 'propget'], HRESULT, '_NewEnum',
              ( ['out', 'retval'], POINTER(POINTER(IUnknown)), 'prop' )),
    COMMETHOD([dispid(1), 'propget'], HRESULT, 'Count',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(2), 'propget'], HRESULT, 'Enable',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(2), 'propput'], HRESULT, 'Enable',
              ( ['in'], c_int, 'prop' )),
    COMMETHOD([dispid(4), 'propget'], HRESULT, 'DistanceFromTop',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(4), 'propput'], HRESULT, 'DistanceFromTop',
              ( ['in'], c_int, 'prop' )),
    COMMETHOD([dispid(5), 'propget'], HRESULT, 'Shadow',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'prop' )),
    COMMETHOD([dispid(5), 'propput'], HRESULT, 'Shadow',
              ( ['in'], VARIANT_BOOL, 'prop' )),
    COMMETHOD([dispid(6), 'propget'], HRESULT, 'InsideLineStyle',
              ( ['out', 'retval'], POINTER(WdLineStyle), 'prop' )),
    COMMETHOD([dispid(6), 'propput'], HRESULT, 'InsideLineStyle',
              ( ['in'], WdLineStyle, 'prop' )),
    COMMETHOD([dispid(7), 'propget'], HRESULT, 'OutsideLineStyle',
              ( ['out', 'retval'], POINTER(WdLineStyle), 'prop' )),
    COMMETHOD([dispid(7), 'propput'], HRESULT, 'OutsideLineStyle',
              ( ['in'], WdLineStyle, 'prop' )),
    COMMETHOD([dispid(8), 'propget'], HRESULT, 'InsideLineWidth',
              ( ['out', 'retval'], POINTER(WdLineWidth), 'prop' )),
    COMMETHOD([dispid(8), 'propput'], HRESULT, 'InsideLineWidth',
              ( ['in'], WdLineWidth, 'prop' )),
    COMMETHOD([dispid(9), 'propget'], HRESULT, 'OutsideLineWidth',
              ( ['out', 'retval'], POINTER(WdLineWidth), 'prop' )),
    COMMETHOD([dispid(9), 'propput'], HRESULT, 'OutsideLineWidth',
              ( ['in'], WdLineWidth, 'prop' )),
    COMMETHOD([dispid(10), 'propget'], HRESULT, 'InsideColorIndex',
              ( ['out', 'retval'], POINTER(WdColorIndex), 'prop' )),
    COMMETHOD([dispid(10), 'propput'], HRESULT, 'InsideColorIndex',
              ( ['in'], WdColorIndex, 'prop' )),
    COMMETHOD([dispid(11), 'propget'], HRESULT, 'OutsideColorIndex',
              ( ['out', 'retval'], POINTER(WdColorIndex), 'prop' )),
    COMMETHOD([dispid(11), 'propput'], HRESULT, 'OutsideColorIndex',
              ( ['in'], WdColorIndex, 'prop' )),
    COMMETHOD([dispid(20), 'propget'], HRESULT, 'DistanceFromLeft',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(20), 'propput'], HRESULT, 'DistanceFromLeft',
              ( ['in'], c_int, 'prop' )),
    COMMETHOD([dispid(21), 'propget'], HRESULT, 'DistanceFromBottom',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(21), 'propput'], HRESULT, 'DistanceFromBottom',
              ( ['in'], c_int, 'prop' )),
    COMMETHOD([dispid(22), 'propget'], HRESULT, 'DistanceFromRight',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(22), 'propput'], HRESULT, 'DistanceFromRight',
              ( ['in'], c_int, 'prop' )),
    COMMETHOD([dispid(23), 'propget'], HRESULT, 'AlwaysInFront',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'prop' )),
    COMMETHOD([dispid(23), 'propput'], HRESULT, 'AlwaysInFront',
              ( ['in'], VARIANT_BOOL, 'prop' )),
    COMMETHOD([dispid(24), 'propget'], HRESULT, 'SurroundHeader',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'prop' )),
    COMMETHOD([dispid(24), 'propput'], HRESULT, 'SurroundHeader',
              ( ['in'], VARIANT_BOOL, 'prop' )),
    COMMETHOD([dispid(25), 'propget'], HRESULT, 'SurroundFooter',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'prop' )),
    COMMETHOD([dispid(25), 'propput'], HRESULT, 'SurroundFooter',
              ( ['in'], VARIANT_BOOL, 'prop' )),
    COMMETHOD([dispid(26), 'propget'], HRESULT, 'JoinBorders',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'prop' )),
    COMMETHOD([dispid(26), 'propput'], HRESULT, 'JoinBorders',
              ( ['in'], VARIANT_BOOL, 'prop' )),
    COMMETHOD([dispid(27), 'propget'], HRESULT, 'HasHorizontal',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'prop' )),
    COMMETHOD([dispid(28), 'propget'], HRESULT, 'HasVertical',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'prop' )),
    COMMETHOD([dispid(29), 'propget'], HRESULT, 'DistanceFrom',
              ( ['out', 'retval'], POINTER(WdBorderDistanceFrom), 'prop' )),
    COMMETHOD([dispid(29), 'propput'], HRESULT, 'DistanceFrom',
              ( ['in'], WdBorderDistanceFrom, 'prop' )),
    COMMETHOD([dispid(30), 'propget'], HRESULT, 'EnableFirstPageInSection',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'prop' )),
    COMMETHOD([dispid(30), 'propput'], HRESULT, 'EnableFirstPageInSection',
              ( ['in'], VARIANT_BOOL, 'prop' )),
    COMMETHOD([dispid(31), 'propget'], HRESULT, 'EnableOtherPagesInSection',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'prop' )),
    COMMETHOD([dispid(31), 'propput'], HRESULT, 'EnableOtherPagesInSection',
              ( ['in'], VARIANT_BOOL, 'prop' )),
    COMMETHOD([dispid(0)], HRESULT, 'Item',
              ( ['in'], WdBorderType, 'Index' ),
              ( ['out', 'retval'], POINTER(POINTER(Border)), 'prop' )),
    COMMETHOD([dispid(2000)], HRESULT, 'ApplyPageBordersToAllSections'),
    COMMETHOD([dispid(32), 'propget'], HRESULT, 'InsideColor',
              ( ['out', 'retval'], POINTER(WdColor), 'prop' )),
    COMMETHOD([dispid(32), 'propput'], HRESULT, 'InsideColor',
              ( ['in'], WdColor, 'prop' )),
    COMMETHOD([dispid(33), 'propget'], HRESULT, 'OutsideColor',
              ( ['out', 'retval'], POINTER(WdColor), 'prop' )),
    COMMETHOD([dispid(33), 'propput'], HRESULT, 'OutsideColor',
              ( ['in'], WdColor, 'prop' )),
]
################################################################
## code template for Borders implementation
##class Borders_Impl(object):
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Creator(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def _NewEnum(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Count(self):
##        '-no docstring-'
##        #return prop
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    Enable = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    DistanceFromTop = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    Shadow = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    InsideLineStyle = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    OutsideLineStyle = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    InsideLineWidth = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    OutsideLineWidth = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    InsideColorIndex = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    OutsideColorIndex = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    DistanceFromLeft = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    DistanceFromBottom = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    DistanceFromRight = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    AlwaysInFront = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    SurroundHeader = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    SurroundFooter = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    JoinBorders = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def HasHorizontal(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def HasVertical(self):
##        '-no docstring-'
##        #return prop
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    DistanceFrom = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    EnableFirstPageInSection = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    EnableOtherPagesInSection = property(_get, _set, doc = _set.__doc__)
##
##    def Item(self, Index):
##        '-no docstring-'
##        #return prop
##
##    def ApplyPageBordersToAllSections(self):
##        '-no docstring-'
##        #return 
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    InsideColor = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    OutsideColor = property(_get, _set, doc = _set.__doc__)
##


# values for enumeration 'WdFieldShading'
wdFieldShadingNever = 0
wdFieldShadingAlways = 1
wdFieldShadingWhenSelected = 2
WdFieldShading = c_int # enum
class Sentences(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{0002095B-0000-0000-C000-000000000046}')
    _idlflags_ = ['dual', 'nonextensible', 'oleautomation']
Sentences._methods_ = [
    COMMETHOD([dispid(-4), 'nonbrowsable', 'propget'], HRESULT, '_NewEnum',
              ( ['out', 'retval'], POINTER(POINTER(IUnknown)), 'prop' )),
    COMMETHOD([dispid(2), 'propget'], HRESULT, 'Count',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(3), 'propget'], HRESULT, 'First',
              ( ['out', 'retval'], POINTER(POINTER(Range)), 'prop' )),
    COMMETHOD([dispid(4), 'propget'], HRESULT, 'Last',
              ( ['out', 'retval'], POINTER(POINTER(Range)), 'prop' )),
    COMMETHOD([dispid(1000), 'propget'], HRESULT, 'Application',
              ( ['out', 'retval'], POINTER(POINTER(Application)), 'prop' )),
    COMMETHOD([dispid(1001), 'propget'], HRESULT, 'Creator',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(1002), 'propget'], HRESULT, 'Parent',
              ( ['out', 'retval'], POINTER(POINTER(IDispatch)), 'prop' )),
    COMMETHOD([dispid(0)], HRESULT, 'Item',
              ( ['in'], c_int, 'Index' ),
              ( ['out', 'retval'], POINTER(POINTER(Range)), 'prop' )),
]
################################################################
## code template for Sentences implementation
##class Sentences_Impl(object):
##    @property
##    def _NewEnum(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Count(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def First(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Last(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Creator(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return prop
##
##    def Item(self, Index):
##        '-no docstring-'
##        #return prop
##

class Subdocuments(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{00020988-0000-0000-C000-000000000046}')
    _idlflags_ = ['dual', 'nonextensible', 'oleautomation']
class Subdocument(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{00020989-0000-0000-C000-000000000046}')
    _idlflags_ = ['dual', 'nonextensible', 'oleautomation']
Subdocuments._methods_ = [
    COMMETHOD([dispid(1000), 'propget'], HRESULT, 'Application',
              ( ['out', 'retval'], POINTER(POINTER(Application)), 'prop' )),
    COMMETHOD([dispid(1001), 'propget'], HRESULT, 'Creator',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(1002), 'propget'], HRESULT, 'Parent',
              ( ['out', 'retval'], POINTER(POINTER(IDispatch)), 'prop' )),
    COMMETHOD([dispid(1), 'propget'], HRESULT, 'Count',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(-4), 'nonbrowsable', 'propget'], HRESULT, '_NewEnum',
              ( ['out', 'retval'], POINTER(POINTER(IUnknown)), 'prop' )),
    COMMETHOD([dispid(2), 'propget'], HRESULT, 'Expanded',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'prop' )),
    COMMETHOD([dispid(2), 'propput'], HRESULT, 'Expanded',
              ( ['in'], VARIANT_BOOL, 'prop' )),
    COMMETHOD([dispid(0)], HRESULT, 'Item',
              ( ['in'], c_int, 'Index' ),
              ( ['out', 'retval'], POINTER(POINTER(Subdocument)), 'prop' )),
    COMMETHOD([dispid(100)], HRESULT, 'AddFromFile',
              ( ['in'], POINTER(VARIANT), 'Name' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'ConfirmConversions' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'ReadOnly' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'PasswordDocument' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'PasswordTemplate' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'Revert' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'WritePasswordDocument' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'WritePasswordTemplate' ),
              ( ['out', 'retval'], POINTER(POINTER(Subdocument)), 'prop' )),
    COMMETHOD([dispid(101)], HRESULT, 'AddFromRange',
              ( ['in'], POINTER(Range), 'Range' ),
              ( ['out', 'retval'], POINTER(POINTER(Subdocument)), 'prop' )),
    COMMETHOD([dispid(102)], HRESULT, 'Merge',
              ( ['in', 'optional'], POINTER(VARIANT), 'FirstSubdocument' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'LastSubdocument' )),
    COMMETHOD([dispid(103)], HRESULT, 'Delete'),
    COMMETHOD([dispid(104)], HRESULT, 'Select'),
]
################################################################
## code template for Subdocuments implementation
##class Subdocuments_Impl(object):
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Creator(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Count(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def _NewEnum(self):
##        '-no docstring-'
##        #return prop
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    Expanded = property(_get, _set, doc = _set.__doc__)
##
##    def Item(self, Index):
##        '-no docstring-'
##        #return prop
##
##    def AddFromFile(self, Name, ConfirmConversions, ReadOnly, PasswordDocument, PasswordTemplate, Revert, WritePasswordDocument, WritePasswordTemplate):
##        '-no docstring-'
##        #return prop
##
##    def AddFromRange(self, Range):
##        '-no docstring-'
##        #return prop
##
##    def Merge(self, FirstSubdocument, LastSubdocument):
##        '-no docstring-'
##        #return 
##
##    def Delete(self):
##        '-no docstring-'
##        #return 
##
##    def Select(self):
##        '-no docstring-'
##        #return 
##

class StoryRanges(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{0002098C-0000-0000-C000-000000000046}')
    _idlflags_ = ['dual', 'nonextensible', 'oleautomation']

# values for enumeration 'WdStoryType'
wdMainTextStory = 1
wdFootnotesStory = 2
wdEndnotesStory = 3
wdCommentsStory = 4
wdTextFrameStory = 5
wdEvenPagesHeaderStory = 6
wdPrimaryHeaderStory = 7
wdEvenPagesFooterStory = 8
wdPrimaryFooterStory = 9
wdFirstPageHeaderStory = 10
wdFirstPageFooterStory = 11
wdFootnoteSeparatorStory = 12
wdFootnoteContinuationSeparatorStory = 13
wdFootnoteContinuationNoticeStory = 14
wdEndnoteSeparatorStory = 15
wdEndnoteContinuationSeparatorStory = 16
wdEndnoteContinuationNoticeStory = 17
WdStoryType = c_int # enum
StoryRanges._methods_ = [
    COMMETHOD([dispid(-4), 'nonbrowsable', 'propget'], HRESULT, '_NewEnum',
              ( ['out', 'retval'], POINTER(POINTER(IUnknown)), 'prop' )),
    COMMETHOD([dispid(2), 'propget'], HRESULT, 'Count',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(1000), 'propget'], HRESULT, 'Application',
              ( ['out', 'retval'], POINTER(POINTER(Application)), 'prop' )),
    COMMETHOD([dispid(1001), 'propget'], HRESULT, 'Creator',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(1002), 'propget'], HRESULT, 'Parent',
              ( ['out', 'retval'], POINTER(POINTER(IDispatch)), 'prop' )),
    COMMETHOD([dispid(0)], HRESULT, 'Item',
              ( ['in'], WdStoryType, 'Index' ),
              ( ['out', 'retval'], POINTER(POINTER(Range)), 'prop' )),
]
################################################################
## code template for StoryRanges implementation
##class StoryRanges_Impl(object):
##    @property
##    def _NewEnum(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Count(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Creator(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return prop
##
##    def Item(self, Index):
##        '-no docstring-'
##        #return prop
##

class CoAuthoring(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{65DF9F31-B1E3-4651-87E8-51D55F302161}')
    _idlflags_ = ['dual', 'nonextensible', 'oleautomation']
class CoAuthLocks(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{DFF99AC2-CD2A-43AD-91B1-A2BE40BC7146}')
    _idlflags_ = ['dual', 'nonextensible', 'oleautomation']
class CoAuthUpdates(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{30225CFC-5A71-4FE6-B527-90A52C54AE77}')
    _idlflags_ = ['dual', 'nonextensible', 'oleautomation']
class Conflicts(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{C2B83A65-B061-4469-83B6-8877437CB8A0}')
    _idlflags_ = ['dual', 'nonextensible', 'oleautomation']
CoAuthoring._methods_ = [
    COMMETHOD([dispid(1000), 'propget'], HRESULT, 'Application',
              ( ['out', 'retval'], POINTER(POINTER(Application)), 'prop' )),
    COMMETHOD([dispid(1001), 'propget'], HRESULT, 'Creator',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(1002), 'propget'], HRESULT, 'Parent',
              ( ['out', 'retval'], POINTER(POINTER(IDispatch)), 'prop' )),
    COMMETHOD([dispid(1), 'propget'], HRESULT, 'Authors',
              ( ['out', 'retval'], POINTER(POINTER(CoAuthors)), 'prop' )),
    COMMETHOD([dispid(2), 'propget'], HRESULT, 'Me',
              ( ['out', 'retval'], POINTER(POINTER(CoAuthor)), 'prop' )),
    COMMETHOD([dispid(3), 'propget'], HRESULT, 'PendingUpdates',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'prop' )),
    COMMETHOD([dispid(5), 'propget'], HRESULT, 'Locks',
              ( ['out', 'retval'], POINTER(POINTER(CoAuthLocks)), 'prop' )),
    COMMETHOD([dispid(6), 'propget'], HRESULT, 'Updates',
              ( ['out', 'retval'], POINTER(POINTER(CoAuthUpdates)), 'prop' )),
    COMMETHOD([dispid(7), 'propget'], HRESULT, 'Conflicts',
              ( ['out', 'retval'], POINTER(POINTER(Conflicts)), 'prop' )),
    COMMETHOD([dispid(8), 'propget'], HRESULT, 'CanShare',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'prop' )),
    COMMETHOD([dispid(9), 'propget'], HRESULT, 'CanMerge',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'prop' )),
]
################################################################
## code template for CoAuthoring implementation
##class CoAuthoring_Impl(object):
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Creator(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Authors(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Me(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def PendingUpdates(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Locks(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Updates(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Conflicts(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def CanShare(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def CanMerge(self):
##        '-no docstring-'
##        #return prop
##

class AutoCaption(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{0002097B-0000-0000-C000-000000000046}')
    _idlflags_ = ['dual', 'nonextensible', 'oleautomation']
AutoCaption._methods_ = [
    COMMETHOD([dispid(1000), 'propget'], HRESULT, 'Application',
              ( ['out', 'retval'], POINTER(POINTER(Application)), 'prop' )),
    COMMETHOD([dispid(1001), 'propget'], HRESULT, 'Creator',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(1002), 'propget'], HRESULT, 'Parent',
              ( ['out', 'retval'], POINTER(POINTER(IDispatch)), 'prop' )),
    COMMETHOD([dispid(0), 'propget'], HRESULT, 'Name',
              ( ['out', 'retval'], POINTER(BSTR), 'prop' )),
    COMMETHOD([dispid(1), 'propget'], HRESULT, 'AutoInsert',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'prop' )),
    COMMETHOD([dispid(1), 'propput'], HRESULT, 'AutoInsert',
              ( ['in'], VARIANT_BOOL, 'prop' )),
    COMMETHOD([dispid(2), 'propget'], HRESULT, 'Index',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(3), 'propget'], HRESULT, 'CaptionLabel',
              ( ['out', 'retval'], POINTER(VARIANT), 'prop' )),
    COMMETHOD([dispid(3), 'propput'], HRESULT, 'CaptionLabel',
              ( ['in'], POINTER(VARIANT), 'prop' )),
]
################################################################
## code template for AutoCaption implementation
##class AutoCaption_Impl(object):
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Creator(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Name(self):
##        '-no docstring-'
##        #return prop
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    AutoInsert = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Index(self):
##        '-no docstring-'
##        #return prop
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    CaptionLabel = property(_get, _set, doc = _set.__doc__)
##


# values for enumeration 'WdMergeTarget'
wdMergeTargetSelected = 0
wdMergeTargetCurrent = 1
wdMergeTargetNew = 2
WdMergeTarget = c_int # enum
class Axes(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{354AB591-A217-48B4-99E4-14F58F15667D}')
    _idlflags_ = ['dual', 'nonextensible', 'oleautomation']

# values for enumeration 'XlAxisType'
xlCategory = 1
xlSeriesAxis = 3
xlValue = 2
XlAxisType = c_int # enum

# values for enumeration 'XlAxisGroup'
xlPrimary = 1
xlSecondary = 2
XlAxisGroup = c_int # enum
class Axis(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{7EBC66BD-F788-42C3-91F4-E8C841A69005}')
    _idlflags_ = ['dual', 'nonextensible', 'oleautomation']
Axes._methods_ = [
    COMMETHOD([dispid(1610743808), 'propget'], HRESULT, 'Count',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(0)], HRESULT, 'Item',
              ( ['in'], XlAxisType, 'Type' ),
              ( ['in', 'optional'], XlAxisGroup, 'AxisGroup', 1 ),
              ( ['out', 'retval'], POINTER(POINTER(Axis)), 'prop' )),
    COMMETHOD([dispid(-4), 'nonbrowsable'], HRESULT, '_NewEnum',
              ( ['out', 'retval'], POINTER(POINTER(IUnknown)), 'prop' )),
    COMMETHOD([dispid(148), 'propget'], HRESULT, 'Application',
              ( ['out', 'retval'], POINTER(POINTER(IDispatch)), 'prop' )),
    COMMETHOD([dispid(149), 'propget'], HRESULT, 'Creator',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(1610743813), 'nonbrowsable'], HRESULT, '_Default',
              ( ['in'], XlAxisType, 'Type' ),
              ( ['in', 'optional'], XlAxisGroup, 'AxisGroup', 1 ),
              ( ['out', 'retval'], POINTER(POINTER(Axis)), 'prop' )),
    COMMETHOD([dispid(150), 'propget'], HRESULT, 'Parent',
              ( ['out', 'retval'], POINTER(POINTER(IDispatch)), 'prop' )),
]
################################################################
## code template for Axes implementation
##class Axes_Impl(object):
##    @property
##    def Count(self):
##        '-no docstring-'
##        #return prop
##
##    def Item(self, Type, AxisGroup):
##        '-no docstring-'
##        #return prop
##
##    def _NewEnum(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Creator(self):
##        '-no docstring-'
##        #return prop
##
##    def _Default(self, Type, AxisGroup):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return prop
##


# values for enumeration 'WdCompareTarget'
wdCompareTargetSelected = 0
wdCompareTargetCurrent = 1
wdCompareTargetNew = 2
WdCompareTarget = c_int # enum

# values for enumeration 'WdDocumentDirection'
wdLeftToRight = 0
wdRightToLeft = 1
WdDocumentDirection = c_int # enum
class ChartGroups(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{F8DDB497-CA6C-4711-9BA4-2718FA3BB6FE}')
    _idlflags_ = ['dual', 'nonextensible', 'oleautomation']
class ChartGroup(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{86488FB4-9633-4C93-8057-FC1FA7A847AE}')
    _idlflags_ = ['dual', 'nonextensible', 'oleautomation']
ChartGroups._methods_ = [
    COMMETHOD([dispid(150), 'propget'], HRESULT, 'Parent',
              ( ['out', 'retval'], POINTER(POINTER(IDispatch)), 'prop' )),
    COMMETHOD([dispid(118), 'propget'], HRESULT, 'Count',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(0)], HRESULT, 'Item',
              ( ['in'], VARIANT, 'Index' ),
              ( ['out', 'retval'], POINTER(POINTER(ChartGroup)), 'prop' )),
    COMMETHOD([dispid(-4), 'nonbrowsable'], HRESULT, '_NewEnum',
              ( ['out', 'retval'], POINTER(POINTER(IUnknown)), 'prop' )),
    COMMETHOD([dispid(148), 'propget'], HRESULT, 'Application',
              ( ['out', 'retval'], POINTER(POINTER(IDispatch)), 'prop' )),
    COMMETHOD([dispid(149), 'propget'], HRESULT, 'Creator',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
]
################################################################
## code template for ChartGroups implementation
##class ChartGroups_Impl(object):
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Count(self):
##        '-no docstring-'
##        #return prop
##
##    def Item(self, Index):
##        '-no docstring-'
##        #return prop
##
##    def _NewEnum(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Creator(self):
##        '-no docstring-'
##        #return prop
##

class Rectangles(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{7D0F7985-68D9-4D93-91CB-8109280E76CC}')
    _idlflags_ = ['dual', 'nonextensible', 'oleautomation']
class Rectangle(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{ADD4EDF3-2F33-4734-9CE6-D476097C5ADA}')
    _idlflags_ = ['dual', 'nonextensible', 'oleautomation']
Rectangles._methods_ = [
    COMMETHOD([dispid(-4), 'nonbrowsable', 'propget'], HRESULT, '_NewEnum',
              ( ['out', 'retval'], POINTER(POINTER(IUnknown)), 'prop' )),
    COMMETHOD([dispid(2), 'propget'], HRESULT, 'Count',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(1000), 'propget'], HRESULT, 'Application',
              ( ['out', 'retval'], POINTER(POINTER(Application)), 'prop' )),
    COMMETHOD([dispid(1001), 'propget'], HRESULT, 'Creator',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(1002), 'propget'], HRESULT, 'Parent',
              ( ['out', 'retval'], POINTER(POINTER(IDispatch)), 'prop' )),
    COMMETHOD([dispid(0)], HRESULT, 'Item',
              ( ['in'], c_int, 'Index' ),
              ( ['out', 'retval'], POINTER(POINTER(Rectangle)), 'prop' )),
]
################################################################
## code template for Rectangles implementation
##class Rectangles_Impl(object):
##    @property
##    def _NewEnum(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Count(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Creator(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return prop
##
##    def Item(self, Index):
##        '-no docstring-'
##        #return prop
##


# values for enumeration 'WdOMathBreakSub'
wdOMathBreakSubMinusMinus = 0
wdOMathBreakSubPlusMinus = 1
wdOMathBreakSubMinusPlus = 2
WdOMathBreakSub = c_int # enum

# values for enumeration 'WdOMathFracType'
wdOMathFracBar = 0
wdOMathFracNoBar = 1
wdOMathFracSkw = 2
wdOMathFracLin = 3
WdOMathFracType = c_int # enum

# values for enumeration 'WdSpellingErrorType'
wdSpellingCorrect = 0
wdSpellingNotInDictionary = 1
wdSpellingCapitalization = 2
WdSpellingErrorType = c_int # enum

# values for enumeration 'WdTaskPanes'
wdTaskPaneFormatting = 0
wdTaskPaneRevealFormatting = 1
wdTaskPaneMailMerge = 2
wdTaskPaneTranslate = 3
wdTaskPaneSearch = 4
wdTaskPaneXMLStructure = 5
wdTaskPaneDocumentProtection = 6
wdTaskPaneDocumentActions = 7
wdTaskPaneSharedWorkspace = 8
wdTaskPaneHelp = 9
wdTaskPaneResearch = 10
wdTaskPaneFaxService = 11
wdTaskPaneXMLDocument = 12
wdTaskPaneDocumentUpdates = 13
wdTaskPaneSignature = 14
wdTaskPaneStyleInspector = 15
wdTaskPaneDocumentManagement = 16
wdTaskPaneApplyStyles = 17
wdTaskPaneNav = 18
wdTaskPaneSelection = 19
wdTaskPaneProofing = 20
wdTaskPaneXMLMapping = 21
wdTaskPaneRevPaneFlex = 22
wdTaskPaneThesaurus = 23
WdTaskPanes = c_int # enum

# values for enumeration 'WdUseFormattingFrom'
wdFormattingFromCurrent = 0
wdFormattingFromSelected = 1
wdFormattingFromPrompt = 2
WdUseFormattingFrom = c_int # enum

# values for enumeration 'XlTickMark'
xlTickMarkCross = 4
xlTickMarkInside = 2
xlTickMarkNone = -4142
xlTickMarkOutside = 3
XlTickMark = c_int # enum

# values for enumeration 'WdRelativeHorizontalPosition'
wdRelativeHorizontalPositionMargin = 0
wdRelativeHorizontalPositionPage = 1
wdRelativeHorizontalPositionColumn = 2
wdRelativeHorizontalPositionCharacter = 3
wdRelativeHorizontalPositionLeftMarginArea = 4
wdRelativeHorizontalPositionRightMarginArea = 5
wdRelativeHorizontalPositionInnerMarginArea = 6
wdRelativeHorizontalPositionOuterMarginArea = 7
WdRelativeHorizontalPosition = c_int # enum
class OMaths(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{873E774B-926A-4CB1-878D-635A45187595}')
    _idlflags_ = ['dual', 'nonextensible', 'oleautomation']
OMaths._methods_ = [
    COMMETHOD([dispid(-4), 'nonbrowsable', 'propget'], HRESULT, '_NewEnum',
              ( ['out', 'retval'], POINTER(POINTER(IUnknown)), 'prop' )),
    COMMETHOD([dispid(100), 'propget'], HRESULT, 'Application',
              ( ['out', 'retval'], POINTER(POINTER(Application)), 'prop' )),
    COMMETHOD([dispid(101), 'propget'], HRESULT, 'Creator',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(102), 'propget'], HRESULT, 'Parent',
              ( ['out', 'retval'], POINTER(POINTER(IDispatch)), 'prop' )),
    COMMETHOD([dispid(103), 'propget'], HRESULT, 'Count',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(0)], HRESULT, 'Item',
              ( ['in'], c_int, 'Index' ),
              ( ['out', 'retval'], POINTER(POINTER(OMath)), 'prop' )),
    COMMETHOD([dispid(200)], HRESULT, 'Linearize'),
    COMMETHOD([dispid(201)], HRESULT, 'BuildUp'),
    COMMETHOD([dispid(202)], HRESULT, 'Add',
              ( ['in'], POINTER(Range), 'Range' ),
              ( ['out', 'retval'], POINTER(POINTER(Range)), 'prop' )),
]
################################################################
## code template for OMaths implementation
##class OMaths_Impl(object):
##    @property
##    def _NewEnum(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Creator(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Count(self):
##        '-no docstring-'
##        #return prop
##
##    def Item(self, Index):
##        '-no docstring-'
##        #return prop
##
##    def Linearize(self):
##        '-no docstring-'
##        #return 
##
##    def BuildUp(self):
##        '-no docstring-'
##        #return 
##
##    def Add(self, Range):
##        '-no docstring-'
##        #return prop
##

class DataTable(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{DCE9F2C4-4C02-43BA-840E-B4276550EF79}')
    _idlflags_ = ['dual', 'nonextensible', 'oleautomation']
DataTable._methods_ = [
    COMMETHOD([dispid(1610743808), 'propget'], HRESULT, 'ShowLegendKey',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'prop' )),
    COMMETHOD([dispid(1610743808), 'propput'], HRESULT, 'ShowLegendKey',
              ( ['in'], VARIANT_BOOL, 'prop' )),
    COMMETHOD([dispid(1610743810), 'propget'], HRESULT, 'HasBorderHorizontal',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'prop' )),
    COMMETHOD([dispid(1610743810), 'propput'], HRESULT, 'HasBorderHorizontal',
              ( ['in'], VARIANT_BOOL, 'prop' )),
    COMMETHOD([dispid(1610743812), 'propget'], HRESULT, 'HasBorderVertical',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'prop' )),
    COMMETHOD([dispid(1610743812), 'propput'], HRESULT, 'HasBorderVertical',
              ( ['in'], VARIANT_BOOL, 'prop' )),
    COMMETHOD([dispid(1610743814), 'propget'], HRESULT, 'HasBorderOutline',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'prop' )),
    COMMETHOD([dispid(1610743814), 'propput'], HRESULT, 'HasBorderOutline',
              ( ['in'], VARIANT_BOOL, 'prop' )),
    COMMETHOD([dispid(1610743816), 'propget'], HRESULT, 'Border',
              ( ['out', 'retval'], POINTER(POINTER(ChartBorder)), 'prop' )),
    COMMETHOD([dispid(1610743817), 'propget'], HRESULT, 'Font',
              ( ['out', 'retval'], POINTER(POINTER(ChartFont)), 'prop' )),
    COMMETHOD([dispid(1610743818)], HRESULT, 'Select'),
    COMMETHOD([dispid(1610743819)], HRESULT, 'Delete'),
    COMMETHOD([dispid(1610743820), 'propget'], HRESULT, 'Parent',
              ( ['out', 'retval'], POINTER(POINTER(IDispatch)), 'prop' )),
    COMMETHOD([dispid(1610743821), 'hidden', 'propget'], HRESULT, 'AutoScaleFont',
              ( ['out', 'retval'], POINTER(VARIANT), 'prop' )),
    COMMETHOD([dispid(1610743821), 'hidden', 'propput'], HRESULT, 'AutoScaleFont',
              ( ['in'], VARIANT, 'prop' )),
    COMMETHOD([dispid(1610743823), 'propget'], HRESULT, 'Format',
              ( ['out', 'retval'], POINTER(POINTER(ChartFormat)), 'prop' )),
    COMMETHOD([dispid(148), 'propget'], HRESULT, 'Application',
              ( ['out', 'retval'], POINTER(POINTER(IDispatch)), 'prop' )),
    COMMETHOD([dispid(149), 'propget'], HRESULT, 'Creator',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
]
################################################################
## code template for DataTable implementation
##class DataTable_Impl(object):
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    ShowLegendKey = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    HasBorderHorizontal = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    HasBorderVertical = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    HasBorderOutline = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Border(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Font(self):
##        '-no docstring-'
##        #return prop
##
##    def Select(self):
##        '-no docstring-'
##        #return 
##
##    def Delete(self):
##        '-no docstring-'
##        #return 
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return prop
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    AutoScaleFont = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Format(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Creator(self):
##        '-no docstring-'
##        #return prop
##

class InlineShapes(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{000209A9-0000-0000-C000-000000000046}')
    _idlflags_ = ['dual', 'nonextensible', 'oleautomation']
class InlineShape(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{000209A8-0000-0000-C000-000000000046}')
    _idlflags_ = ['dual', 'nonextensible', 'oleautomation']
InlineShapes._methods_ = [
    COMMETHOD([dispid(1000), 'propget'], HRESULT, 'Application',
              ( ['out', 'retval'], POINTER(POINTER(Application)), 'prop' )),
    COMMETHOD([dispid(1001), 'propget'], HRESULT, 'Creator',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(1002), 'propget'], HRESULT, 'Parent',
              ( ['out', 'retval'], POINTER(POINTER(IDispatch)), 'prop' )),
    COMMETHOD([dispid(1), 'propget'], HRESULT, 'Count',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(-4), 'nonbrowsable', 'propget'], HRESULT, '_NewEnum',
              ( ['out', 'retval'], POINTER(POINTER(IUnknown)), 'prop' )),
    COMMETHOD([dispid(0)], HRESULT, 'Item',
              ( ['in'], c_int, 'Index' ),
              ( ['out', 'retval'], POINTER(POINTER(InlineShape)), 'prop' )),
    COMMETHOD([dispid(100)], HRESULT, 'AddPicture',
              ( ['in'], BSTR, 'FileName' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'LinkToFile' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'SaveWithDocument' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'Range' ),
              ( ['out', 'retval'], POINTER(POINTER(InlineShape)), 'prop' )),
    COMMETHOD([dispid(24)], HRESULT, 'AddOLEObject',
              ( ['in', 'optional'], POINTER(VARIANT), 'ClassType' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'FileName' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'LinkToFile' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'DisplayAsIcon' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'IconFileName' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'IconIndex' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'IconLabel' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'Range' ),
              ( ['out', 'retval'], POINTER(POINTER(InlineShape)), 'prop' )),
    COMMETHOD([dispid(102)], HRESULT, 'AddOLEControl',
              ( ['in', 'optional'], POINTER(VARIANT), 'ClassType' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'Range' ),
              ( ['out', 'retval'], POINTER(POINTER(InlineShape)), 'prop' )),
    COMMETHOD([dispid(200)], HRESULT, 'New',
              ( ['in'], POINTER(Range), 'Range' ),
              ( ['out', 'retval'], POINTER(POINTER(InlineShape)), 'prop' )),
    COMMETHOD([dispid(104)], HRESULT, 'AddHorizontalLine',
              ( ['in'], BSTR, 'FileName' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'Range' ),
              ( ['out', 'retval'], POINTER(POINTER(InlineShape)), 'prop' )),
    COMMETHOD([dispid(105)], HRESULT, 'AddHorizontalLineStandard',
              ( ['in', 'optional'], POINTER(VARIANT), 'Range' ),
              ( ['out', 'retval'], POINTER(POINTER(InlineShape)), 'prop' )),
    COMMETHOD([dispid(106)], HRESULT, 'AddPictureBullet',
              ( ['in'], BSTR, 'FileName' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'Range' ),
              ( ['out', 'retval'], POINTER(POINTER(InlineShape)), 'prop' )),
    COMMETHOD([dispid(107), 'hidden'], HRESULT, 'AddChart',
              ( ['in', 'optional'], comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.XlChartType, 'Type', -1 ),
              ( ['in', 'optional'], POINTER(VARIANT), 'Range' ),
              ( ['out', 'retval'], POINTER(POINTER(InlineShape)), 'prop' )),
    COMMETHOD([dispid(108)], HRESULT, 'AddSmartArt',
              ( ['in'], POINTER(comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.SmartArtLayout), 'Layout' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'Range' ),
              ( ['out', 'retval'], POINTER(POINTER(InlineShape)), 'prop' )),
    COMMETHOD([dispid(109)], HRESULT, 'AddWebVideo',
              ( ['in'], BSTR, 'EmbedCode' ),
              ( ['in'], POINTER(VARIANT), 'VideoWidth' ),
              ( ['in'], POINTER(VARIANT), 'VideoHeight' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'PosterFrameImage' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'Url' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'Range' ),
              ( ['out', 'retval'], POINTER(POINTER(InlineShape)), 'prop' )),
    COMMETHOD([dispid(110)], HRESULT, 'AddChart2',
              ( ['in', 'optional'], c_int, 'Style', -1 ),
              ( ['in', 'optional'], comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.XlChartType, 'Type', -1 ),
              ( ['in', 'optional'], POINTER(VARIANT), 'Range' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'NewLayout' ),
              ( ['out', 'retval'], POINTER(POINTER(InlineShape)), 'prop' )),
    COMMETHOD([dispid(111)], HRESULT, 'Add3DModel',
              ( ['in'], BSTR, 'FileName' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'LinkToFile' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'SaveWithDocument' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'Range' ),
              ( ['out', 'retval'], POINTER(POINTER(InlineShape)), 'prop' )),
]
################################################################
## code template for InlineShapes implementation
##class InlineShapes_Impl(object):
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Creator(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Count(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def _NewEnum(self):
##        '-no docstring-'
##        #return prop
##
##    def Item(self, Index):
##        '-no docstring-'
##        #return prop
##
##    def AddPicture(self, FileName, LinkToFile, SaveWithDocument, Range):
##        '-no docstring-'
##        #return prop
##
##    def AddOLEObject(self, ClassType, FileName, LinkToFile, DisplayAsIcon, IconFileName, IconIndex, IconLabel, Range):
##        '-no docstring-'
##        #return prop
##
##    def AddOLEControl(self, ClassType, Range):
##        '-no docstring-'
##        #return prop
##
##    def New(self, Range):
##        '-no docstring-'
##        #return prop
##
##    def AddHorizontalLine(self, FileName, Range):
##        '-no docstring-'
##        #return prop
##
##    def AddHorizontalLineStandard(self, Range):
##        '-no docstring-'
##        #return prop
##
##    def AddPictureBullet(self, FileName, Range):
##        '-no docstring-'
##        #return prop
##
##    def AddChart(self, Type, Range):
##        '-no docstring-'
##        #return prop
##
##    def AddSmartArt(self, Layout, Range):
##        '-no docstring-'
##        #return prop
##
##    def AddWebVideo(self, EmbedCode, VideoWidth, VideoHeight, PosterFrameImage, Url, Range):
##        '-no docstring-'
##        #return prop
##
##    def AddChart2(self, Style, Type, Range, NewLayout):
##        '-no docstring-'
##        #return prop
##
##    def Add3DModel(self, FileName, LinkToFile, SaveWithDocument, Range):
##        '-no docstring-'
##        #return prop
##


# values for enumeration 'WdRevisionsView'
wdRevisionsViewFinal = 0
wdRevisionsViewOriginal = 1
WdRevisionsView = c_int # enum
class CaptionLabels(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{00020978-0000-0000-C000-000000000046}')
    _idlflags_ = ['dual', 'nonextensible', 'oleautomation']
class CaptionLabel(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{00020979-0000-0000-C000-000000000046}')
    _idlflags_ = ['dual', 'nonextensible', 'oleautomation']
CaptionLabels._methods_ = [
    COMMETHOD([dispid(1000), 'propget'], HRESULT, 'Application',
              ( ['out', 'retval'], POINTER(POINTER(Application)), 'prop' )),
    COMMETHOD([dispid(1001), 'propget'], HRESULT, 'Creator',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(1002), 'propget'], HRESULT, 'Parent',
              ( ['out', 'retval'], POINTER(POINTER(IDispatch)), 'prop' )),
    COMMETHOD([dispid(-4), 'nonbrowsable', 'propget'], HRESULT, '_NewEnum',
              ( ['out', 'retval'], POINTER(POINTER(IUnknown)), 'prop' )),
    COMMETHOD([dispid(1), 'propget'], HRESULT, 'Count',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(0)], HRESULT, 'Item',
              ( ['in'], POINTER(VARIANT), 'Index' ),
              ( ['out', 'retval'], POINTER(POINTER(CaptionLabel)), 'prop' )),
    COMMETHOD([dispid(100)], HRESULT, 'Add',
              ( ['in'], BSTR, 'Name' ),
              ( ['out', 'retval'], POINTER(POINTER(CaptionLabel)), 'prop' )),
]
################################################################
## code template for CaptionLabels implementation
##class CaptionLabels_Impl(object):
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Creator(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def _NewEnum(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Count(self):
##        '-no docstring-'
##        #return prop
##
##    def Item(self, Index):
##        '-no docstring-'
##        #return prop
##
##    def Add(self, Name):
##        '-no docstring-'
##        #return prop
##


# values for enumeration 'WdStylisticSet'
wdStylisticSetDefault = 0
wdStylisticSet01 = 1
wdStylisticSet02 = 2
wdStylisticSet03 = 4
wdStylisticSet04 = 8
wdStylisticSet05 = 16
wdStylisticSet06 = 32
wdStylisticSet07 = 64
wdStylisticSet08 = 128
wdStylisticSet09 = 256
wdStylisticSet10 = 512
wdStylisticSet11 = 1024
wdStylisticSet12 = 2048
wdStylisticSet13 = 4096
wdStylisticSet14 = 8192
wdStylisticSet15 = 16384
wdStylisticSet16 = 32768
wdStylisticSet17 = 65536
wdStylisticSet18 = 131072
wdStylisticSet19 = 262144
wdStylisticSet20 = 524288
WdStylisticSet = c_int # enum
class ShapeRange(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{000209B5-0000-0000-C000-000000000046}')
    _idlflags_ = ['dual', 'nonextensible', 'oleautomation']
class Adjustments(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{000209C4-0000-0000-C000-000000000046}')
    _idlflags_ = ['dual', 'nonextensible', 'oleautomation']
class CalloutFormat(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{000209C5-0000-0000-C000-000000000046}')
    _idlflags_ = ['dual', 'nonextensible', 'oleautomation']
class ConnectorFormat(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{000209C7-0000-0000-C000-000000000046}')
    _idlflags_ = ['hidden', 'dual', 'nonextensible', 'oleautomation']
class FillFormat(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{000209C8-0000-0000-C000-000000000046}')
    _idlflags_ = ['dual', 'nonextensible', 'oleautomation']
class GroupShapes(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{000209B6-0000-0000-C000-000000000046}')
    _idlflags_ = ['dual', 'nonextensible', 'oleautomation']
class LineFormat(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{000209CA-0000-0000-C000-000000000046}')
    _idlflags_ = ['dual', 'nonextensible', 'oleautomation']
class ShapeNodes(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{000209CE-0000-0000-C000-000000000046}')
    _idlflags_ = ['dual', 'nonextensible', 'oleautomation']
class PictureFormat(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{000209CB-0000-0000-C000-000000000046}')
    _idlflags_ = ['dual', 'nonextensible', 'oleautomation']
class TextEffectFormat(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{000209CF-0000-0000-C000-000000000046}')
    _idlflags_ = ['dual', 'nonextensible', 'oleautomation']
class TextFrame(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{000209B2-0000-0000-C000-000000000046}')
    _idlflags_ = ['dual', 'nonextensible', 'oleautomation']
class ThreeDFormat(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{000209D0-0000-0000-C000-000000000046}')
    _idlflags_ = ['dual', 'nonextensible', 'oleautomation']
class Hyperlink(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{0002099D-0000-0000-C000-000000000046}')
    _idlflags_ = ['dual', 'nonextensible', 'oleautomation']

# values for enumeration 'WdRelativeVerticalPosition'
wdRelativeVerticalPositionMargin = 0
wdRelativeVerticalPositionPage = 1
wdRelativeVerticalPositionParagraph = 2
wdRelativeVerticalPositionLine = 3
wdRelativeVerticalPositionTopMarginArea = 4
wdRelativeVerticalPositionBottomMarginArea = 5
wdRelativeVerticalPositionInnerMarginArea = 6
wdRelativeVerticalPositionOuterMarginArea = 7
WdRelativeVerticalPosition = c_int # enum
class WrapFormat(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{000209C3-0000-0000-C000-000000000046}')
    _idlflags_ = ['dual', 'nonextensible', 'oleautomation']
class Shape(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{000209A0-0000-0000-C000-000000000046}')
    _idlflags_ = ['dual', 'nonextensible', 'oleautomation']
class Frame(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{0002092A-0000-0000-C000-000000000046}')
    _idlflags_ = ['dual', 'nonextensible', 'oleautomation']
class DiagramNode(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{000209E9-0000-0000-C000-000000000046}')
    _idlflags_ = ['hidden', 'dual', 'nonextensible', 'oleautomation']
class CanvasShapes(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{396F9073-F9FD-11D3-8EA0-0050049A1A01}')
    _idlflags_ = ['dual', 'nonextensible', 'oleautomation']

# values for enumeration 'WdRelativeHorizontalSize'
wdRelativeHorizontalSizeMargin = 0
wdRelativeHorizontalSizePage = 1
wdRelativeHorizontalSizeLeftMarginArea = 2
wdRelativeHorizontalSizeRightMarginArea = 3
wdRelativeHorizontalSizeInnerMarginArea = 4
wdRelativeHorizontalSizeOuterMarginArea = 5
WdRelativeHorizontalSize = c_int # enum

# values for enumeration 'WdRelativeVerticalSize'
wdRelativeVerticalSizeMargin = 0
wdRelativeVerticalSizePage = 1
wdRelativeVerticalSizeTopMarginArea = 2
wdRelativeVerticalSizeBottomMarginArea = 3
wdRelativeVerticalSizeInnerMarginArea = 4
wdRelativeVerticalSizeOuterMarginArea = 5
WdRelativeVerticalSize = c_int # enum
class SoftEdgeFormat(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{D040DAF9-6CE4-4BE8-839D-F4538A4301CF}')
    _idlflags_ = ['dual', 'nonextensible', 'oleautomation']
class GlowFormat(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{F1B14F40-5C32-4C8C-B5B2-DE537BB6B89D}')
    _idlflags_ = ['dual', 'nonextensible', 'oleautomation']
class ReflectionFormat(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{F01943FF-1985-445E-8602-8FB8F39CCA75}')
    _idlflags_ = ['dual', 'nonextensible', 'oleautomation']
class Model3DFormat(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{00020909-0000-0000-C000-000000000046}')
    _idlflags_ = ['dual', 'nonextensible', 'oleautomation']
ShapeRange._methods_ = [
    COMMETHOD([dispid(8000), 'propget'], HRESULT, 'Application',
              ( ['out', 'retval'], POINTER(POINTER(Application)), 'prop' )),
    COMMETHOD([dispid(8001), 'propget'], HRESULT, 'Creator',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(1), 'propget'], HRESULT, 'Parent',
              ( ['out', 'retval'], POINTER(POINTER(IDispatch)), 'prop' )),
    COMMETHOD([dispid(2), 'propget'], HRESULT, 'Count',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(-4), 'nonbrowsable', 'propget'], HRESULT, '_NewEnum',
              ( ['out', 'retval'], POINTER(POINTER(IUnknown)), 'prop' )),
    COMMETHOD([dispid(100), 'propget'], HRESULT, 'Adjustments',
              ( ['out', 'retval'], POINTER(POINTER(Adjustments)), 'prop' )),
    COMMETHOD([dispid(101), 'propget'], HRESULT, 'AutoShapeType',
              ( ['out', 'retval'], POINTER(comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoAutoShapeType), 'prop' )),
    COMMETHOD([dispid(101), 'propput'], HRESULT, 'AutoShapeType',
              ( ['in'], comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoAutoShapeType, 'prop' )),
    COMMETHOD([dispid(103), 'propget'], HRESULT, 'Callout',
              ( ['out', 'retval'], POINTER(POINTER(CalloutFormat)), 'prop' )),
    COMMETHOD([dispid(104), 'hidden', 'propget'], HRESULT, 'ConnectionSiteCount',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(105), 'hidden', 'propget'], HRESULT, 'Connector',
              ( ['out', 'retval'], POINTER(comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoTriState), 'prop' )),
    COMMETHOD([dispid(106), 'hidden', 'propget'], HRESULT, 'ConnectorFormat',
              ( ['out', 'retval'], POINTER(POINTER(ConnectorFormat)), 'prop' )),
    COMMETHOD([dispid(107), 'propget'], HRESULT, 'Fill',
              ( ['out', 'retval'], POINTER(POINTER(FillFormat)), 'prop' )),
    COMMETHOD([dispid(108), 'propget'], HRESULT, 'GroupItems',
              ( ['out', 'retval'], POINTER(POINTER(GroupShapes)), 'prop' )),
    COMMETHOD([dispid(109), 'propget'], HRESULT, 'Height',
              ( ['out', 'retval'], POINTER(c_float), 'prop' )),
    COMMETHOD([dispid(109), 'propput'], HRESULT, 'Height',
              ( ['in'], c_float, 'prop' )),
    COMMETHOD([dispid(110), 'propget'], HRESULT, 'HorizontalFlip',
              ( ['out', 'retval'], POINTER(comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoTriState), 'prop' )),
    COMMETHOD([dispid(111), 'propget'], HRESULT, 'Left',
              ( ['out', 'retval'], POINTER(c_float), 'prop' )),
    COMMETHOD([dispid(111), 'propput'], HRESULT, 'Left',
              ( ['in'], c_float, 'prop' )),
    COMMETHOD([dispid(112), 'propget'], HRESULT, 'Line',
              ( ['out', 'retval'], POINTER(POINTER(LineFormat)), 'prop' )),
    COMMETHOD([dispid(113), 'propget'], HRESULT, 'LockAspectRatio',
              ( ['out', 'retval'], POINTER(comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoTriState), 'prop' )),
    COMMETHOD([dispid(113), 'propput'], HRESULT, 'LockAspectRatio',
              ( ['in'], comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoTriState, 'prop' )),
    COMMETHOD([dispid(115), 'propget'], HRESULT, 'Name',
              ( ['out', 'retval'], POINTER(BSTR), 'prop' )),
    COMMETHOD([dispid(115), 'propput'], HRESULT, 'Name',
              ( ['in'], BSTR, 'prop' )),
    COMMETHOD([dispid(116), 'propget'], HRESULT, 'Nodes',
              ( ['out', 'retval'], POINTER(POINTER(ShapeNodes)), 'prop' )),
    COMMETHOD([dispid(117), 'propget'], HRESULT, 'Rotation',
              ( ['out', 'retval'], POINTER(c_float), 'prop' )),
    COMMETHOD([dispid(117), 'propput'], HRESULT, 'Rotation',
              ( ['in'], c_float, 'prop' )),
    COMMETHOD([dispid(118), 'propget'], HRESULT, 'PictureFormat',
              ( ['out', 'retval'], POINTER(POINTER(PictureFormat)), 'prop' )),
    COMMETHOD([dispid(119), 'propget'], HRESULT, 'Shadow',
              ( ['out', 'retval'], POINTER(POINTER(ShadowFormat)), 'prop' )),
    COMMETHOD([dispid(120), 'propget'], HRESULT, 'TextEffect',
              ( ['out', 'retval'], POINTER(POINTER(TextEffectFormat)), 'prop' )),
    COMMETHOD([dispid(121), 'propget'], HRESULT, 'TextFrame',
              ( ['out', 'retval'], POINTER(POINTER(TextFrame)), 'prop' )),
    COMMETHOD([dispid(122), 'propget'], HRESULT, 'ThreeD',
              ( ['out', 'retval'], POINTER(POINTER(ThreeDFormat)), 'prop' )),
    COMMETHOD([dispid(123), 'propget'], HRESULT, 'Top',
              ( ['out', 'retval'], POINTER(c_float), 'prop' )),
    COMMETHOD([dispid(123), 'propput'], HRESULT, 'Top',
              ( ['in'], c_float, 'prop' )),
    COMMETHOD([dispid(124), 'propget'], HRESULT, 'Type',
              ( ['out', 'retval'], POINTER(comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoShapeType), 'prop' )),
    COMMETHOD([dispid(125), 'propget'], HRESULT, 'VerticalFlip',
              ( ['out', 'retval'], POINTER(comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoTriState), 'prop' )),
    COMMETHOD([dispid(126), 'propget'], HRESULT, 'Vertices',
              ( ['out', 'retval'], POINTER(VARIANT), 'prop' )),
    COMMETHOD([dispid(127), 'propget'], HRESULT, 'Visible',
              ( ['out', 'retval'], POINTER(comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoTriState), 'prop' )),
    COMMETHOD([dispid(127), 'propput'], HRESULT, 'Visible',
              ( ['in'], comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoTriState, 'prop' )),
    COMMETHOD([dispid(128), 'propget'], HRESULT, 'Width',
              ( ['out', 'retval'], POINTER(c_float), 'prop' )),
    COMMETHOD([dispid(128), 'propput'], HRESULT, 'Width',
              ( ['in'], c_float, 'prop' )),
    COMMETHOD([dispid(129), 'propget'], HRESULT, 'ZOrderPosition',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(1001), 'propget'], HRESULT, 'Hyperlink',
              ( ['out', 'retval'], POINTER(POINTER(Hyperlink)), 'prop' )),
    COMMETHOD([dispid(300), 'propget'], HRESULT, 'RelativeHorizontalPosition',
              ( ['out', 'retval'], POINTER(WdRelativeHorizontalPosition), 'prop' )),
    COMMETHOD([dispid(300), 'propput'], HRESULT, 'RelativeHorizontalPosition',
              ( ['in'], WdRelativeHorizontalPosition, 'prop' )),
    COMMETHOD([dispid(301), 'propget'], HRESULT, 'RelativeVerticalPosition',
              ( ['out', 'retval'], POINTER(WdRelativeVerticalPosition), 'prop' )),
    COMMETHOD([dispid(301), 'propput'], HRESULT, 'RelativeVerticalPosition',
              ( ['in'], WdRelativeVerticalPosition, 'prop' )),
    COMMETHOD([dispid(302), 'propget'], HRESULT, 'LockAnchor',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(302), 'propput'], HRESULT, 'LockAnchor',
              ( ['in'], c_int, 'prop' )),
    COMMETHOD([dispid(303), 'propget'], HRESULT, 'WrapFormat',
              ( ['out', 'retval'], POINTER(POINTER(WrapFormat)), 'prop' )),
    COMMETHOD([dispid(304), 'propget'], HRESULT, 'Anchor',
              ( ['out', 'retval'], POINTER(POINTER(Range)), 'prop' )),
    COMMETHOD([dispid(0)], HRESULT, 'Item',
              ( ['in'], POINTER(VARIANT), 'Index' ),
              ( ['out', 'retval'], POINTER(POINTER(Shape)), 'prop' )),
    COMMETHOD([dispid(10)], HRESULT, 'Align',
              ( ['in'], comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoAlignCmd, 'Align' ),
              ( ['in'], c_int, 'RelativeTo' )),
    COMMETHOD([dispid(11)], HRESULT, 'Apply'),
    COMMETHOD([dispid(12)], HRESULT, 'Delete'),
    COMMETHOD([dispid(13)], HRESULT, 'Distribute',
              ( ['in'], comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoDistributeCmd, 'Distribute' ),
              ( ['in'], c_int, 'RelativeTo' )),
    COMMETHOD([dispid(14)], HRESULT, 'Duplicate',
              ( ['out', 'retval'], POINTER(POINTER(ShapeRange)), 'prop' )),
    COMMETHOD([dispid(15)], HRESULT, 'Flip',
              ( ['in'], comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoFlipCmd, 'FlipCmd' )),
    COMMETHOD([dispid(16)], HRESULT, 'IncrementLeft',
              ( ['in'], c_float, 'Increment' )),
    COMMETHOD([dispid(17)], HRESULT, 'IncrementRotation',
              ( ['in'], c_float, 'Increment' )),
    COMMETHOD([dispid(18)], HRESULT, 'IncrementTop',
              ( ['in'], c_float, 'Increment' )),
    COMMETHOD([dispid(19)], HRESULT, 'Group',
              ( ['out', 'retval'], POINTER(POINTER(Shape)), 'prop' )),
    COMMETHOD([dispid(20)], HRESULT, 'PickUp'),
    COMMETHOD([dispid(21), 'hidden'], HRESULT, 'Regroup',
              ( ['out', 'retval'], POINTER(POINTER(Shape)), 'prop' )),
    COMMETHOD([dispid(22), 'hidden'], HRESULT, 'RerouteConnections'),
    COMMETHOD([dispid(23)], HRESULT, 'ScaleHeight',
              ( ['in'], c_float, 'Factor' ),
              ( ['in'], comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoTriState, 'RelativeToOriginalSize' ),
              ( ['in', 'optional'], comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoScaleFrom, 'Scale', 0 )),
    COMMETHOD([dispid(24)], HRESULT, 'ScaleWidth',
              ( ['in'], c_float, 'Factor' ),
              ( ['in'], comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoTriState, 'RelativeToOriginalSize' ),
              ( ['in', 'optional'], comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoScaleFrom, 'Scale', 0 )),
    COMMETHOD([dispid(25)], HRESULT, 'Select',
              ( ['in', 'optional'], POINTER(VARIANT), 'Replace' )),
    COMMETHOD([dispid(26)], HRESULT, 'SetShapesDefaultProperties'),
    COMMETHOD([dispid(27)], HRESULT, 'Ungroup',
              ( ['out', 'retval'], POINTER(POINTER(ShapeRange)), 'prop' )),
    COMMETHOD([dispid(28)], HRESULT, 'ZOrder',
              ( ['in'], comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoZOrderCmd, 'ZOrderCmd' )),
    COMMETHOD([dispid(29), 'hidden'], HRESULT, 'ConvertToFrame',
              ( ['out', 'retval'], POINTER(POINTER(Frame)), 'prop' )),
    COMMETHOD([dispid(30)], HRESULT, 'ConvertToInlineShape',
              ( ['out', 'retval'], POINTER(POINTER(InlineShape)), 'prop' )),
    COMMETHOD([dispid(50), 'hidden'], HRESULT, 'Activate'),
    COMMETHOD([dispid(131), 'propget'], HRESULT, 'AlternativeText',
              ( ['out', 'retval'], POINTER(BSTR), 'prop' )),
    COMMETHOD([dispid(131), 'propput'], HRESULT, 'AlternativeText',
              ( ['in'], BSTR, 'prop' )),
    COMMETHOD([dispid(132), 'hidden', 'propget'], HRESULT, 'HasDiagram',
              ( ['out', 'retval'], POINTER(comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoTriState), 'prop' )),
    COMMETHOD([dispid(133), 'hidden', 'propget'], HRESULT, 'Diagram',
              ( ['out', 'retval'], POINTER(POINTER(comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.IMsoDiagram)), 'prop' )),
    COMMETHOD([dispid(134), 'hidden', 'propget'], HRESULT, 'HasDiagramNode',
              ( ['out', 'retval'], POINTER(comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoTriState), 'prop' )),
    COMMETHOD([dispid(135), 'hidden', 'propget'], HRESULT, 'DiagramNode',
              ( ['out', 'retval'], POINTER(POINTER(DiagramNode)), 'prop' )),
    COMMETHOD([dispid(136), 'propget'], HRESULT, 'Child',
              ( ['out', 'retval'], POINTER(comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoTriState), 'prop' )),
    COMMETHOD([dispid(137), 'propget'], HRESULT, 'ParentGroup',
              ( ['out', 'retval'], POINTER(POINTER(Shape)), 'prop' )),
    COMMETHOD([dispid(138), 'propget'], HRESULT, 'CanvasItems',
              ( ['out', 'retval'], POINTER(POINTER(CanvasShapes)), 'prop' )),
    COMMETHOD([dispid(139), 'propget'], HRESULT, 'ID',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(140)], HRESULT, 'CanvasCropLeft',
              ( ['in'], c_float, 'Increment' )),
    COMMETHOD([dispid(141)], HRESULT, 'CanvasCropTop',
              ( ['in'], c_float, 'Increment' )),
    COMMETHOD([dispid(142)], HRESULT, 'CanvasCropRight',
              ( ['in'], c_float, 'Increment' )),
    COMMETHOD([dispid(143)], HRESULT, 'CanvasCropBottom',
              ( ['in'], c_float, 'Increment' )),
    COMMETHOD([dispid(144), 'hidden', 'propput'], HRESULT, 'RTF',
              ( ['in'], BSTR, 'rhs' )),
    COMMETHOD([dispid(145), 'propget'], HRESULT, 'LayoutInCell',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(145), 'propput'], HRESULT, 'LayoutInCell',
              ( ['in'], c_int, 'prop' )),
    COMMETHOD([dispid(200), 'propget'], HRESULT, 'LeftRelative',
              ( ['out', 'retval'], POINTER(c_float), 'prop' )),
    COMMETHOD([dispid(200), 'propput'], HRESULT, 'LeftRelative',
              ( ['in'], c_float, 'prop' )),
    COMMETHOD([dispid(201), 'propget'], HRESULT, 'TopRelative',
              ( ['out', 'retval'], POINTER(c_float), 'prop' )),
    COMMETHOD([dispid(201), 'propput'], HRESULT, 'TopRelative',
              ( ['in'], c_float, 'prop' )),
    COMMETHOD([dispid(202), 'propget'], HRESULT, 'WidthRelative',
              ( ['out', 'retval'], POINTER(c_float), 'prop' )),
    COMMETHOD([dispid(202), 'propput'], HRESULT, 'WidthRelative',
              ( ['in'], c_float, 'prop' )),
    COMMETHOD([dispid(203), 'propget'], HRESULT, 'HeightRelative',
              ( ['out', 'retval'], POINTER(c_float), 'prop' )),
    COMMETHOD([dispid(203), 'propput'], HRESULT, 'HeightRelative',
              ( ['in'], c_float, 'prop' )),
    COMMETHOD([dispid(204), 'propget'], HRESULT, 'RelativeHorizontalSize',
              ( ['out', 'retval'], POINTER(WdRelativeHorizontalSize), 'prop' )),
    COMMETHOD([dispid(204), 'propput'], HRESULT, 'RelativeHorizontalSize',
              ( ['in'], WdRelativeHorizontalSize, 'prop' )),
    COMMETHOD([dispid(205), 'propget'], HRESULT, 'RelativeVerticalSize',
              ( ['out', 'retval'], POINTER(WdRelativeVerticalSize), 'prop' )),
    COMMETHOD([dispid(205), 'propput'], HRESULT, 'RelativeVerticalSize',
              ( ['in'], WdRelativeVerticalSize, 'prop' )),
    COMMETHOD([dispid(152), 'propget'], HRESULT, 'SoftEdge',
              ( ['out', 'retval'], POINTER(POINTER(SoftEdgeFormat)), 'prop' )),
    COMMETHOD([dispid(153), 'propget'], HRESULT, 'Glow',
              ( ['out', 'retval'], POINTER(POINTER(GlowFormat)), 'prop' )),
    COMMETHOD([dispid(154), 'propget'], HRESULT, 'Reflection',
              ( ['out', 'retval'], POINTER(POINTER(ReflectionFormat)), 'prop' )),
    COMMETHOD([dispid(155), 'propget'], HRESULT, 'TextFrame2',
              ( ['out', 'retval'], POINTER(POINTER(comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.TextFrame2)), 'prop' )),
    COMMETHOD([dispid(150), 'propget'], HRESULT, 'ShapeStyle',
              ( ['out', 'retval'], POINTER(comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoShapeStyleIndex), 'prop' )),
    COMMETHOD([dispid(150), 'propput'], HRESULT, 'ShapeStyle',
              ( ['in'], comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoShapeStyleIndex, 'prop' )),
    COMMETHOD([dispid(151), 'propget'], HRESULT, 'BackgroundStyle',
              ( ['out', 'retval'], POINTER(comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoBackgroundStyleIndex), 'prop' )),
    COMMETHOD([dispid(151), 'propput'], HRESULT, 'BackgroundStyle',
              ( ['in'], comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoBackgroundStyleIndex, 'prop' )),
    COMMETHOD([dispid(206), 'propget'], HRESULT, 'Title',
              ( ['out', 'retval'], POINTER(BSTR), 'prop' )),
    COMMETHOD([dispid(206), 'propput'], HRESULT, 'Title',
              ( ['in'], BSTR, 'prop' )),
    COMMETHOD([dispid(207), 'propget'], HRESULT, 'GraphicStyle',
              ( ['out', 'retval'], POINTER(comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoGraphicStyleIndex), 'prop' )),
    COMMETHOD([dispid(207), 'propput'], HRESULT, 'GraphicStyle',
              ( ['in'], comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoGraphicStyleIndex, 'prop' )),
    COMMETHOD([dispid(208), 'propget'], HRESULT, 'Model3D',
              ( ['out', 'retval'], POINTER(POINTER(Model3DFormat)), 'prop' )),
    COMMETHOD([dispid(209), 'propget'], HRESULT, 'Decorative',
              ( ['out', 'retval'], POINTER(comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoTriState), 'prop' )),
    COMMETHOD([dispid(209), 'propput'], HRESULT, 'Decorative',
              ( ['in'], comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoTriState, 'prop' )),
]
################################################################
## code template for ShapeRange implementation
##class ShapeRange_Impl(object):
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Creator(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Count(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def _NewEnum(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Adjustments(self):
##        '-no docstring-'
##        #return prop
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    AutoShapeType = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Callout(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def ConnectionSiteCount(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Connector(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def ConnectorFormat(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Fill(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def GroupItems(self):
##        '-no docstring-'
##        #return prop
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    Height = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def HorizontalFlip(self):
##        '-no docstring-'
##        #return prop
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    Left = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Line(self):
##        '-no docstring-'
##        #return prop
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    LockAspectRatio = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    Name = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Nodes(self):
##        '-no docstring-'
##        #return prop
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    Rotation = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def PictureFormat(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Shadow(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def TextEffect(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def TextFrame(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def ThreeD(self):
##        '-no docstring-'
##        #return prop
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    Top = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Type(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def VerticalFlip(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Vertices(self):
##        '-no docstring-'
##        #return prop
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    Visible = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    Width = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def ZOrderPosition(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Hyperlink(self):
##        '-no docstring-'
##        #return prop
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    RelativeHorizontalPosition = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    RelativeVerticalPosition = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    LockAnchor = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def WrapFormat(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Anchor(self):
##        '-no docstring-'
##        #return prop
##
##    def Item(self, Index):
##        '-no docstring-'
##        #return prop
##
##    def Align(self, Align, RelativeTo):
##        '-no docstring-'
##        #return 
##
##    def Apply(self):
##        '-no docstring-'
##        #return 
##
##    def Delete(self):
##        '-no docstring-'
##        #return 
##
##    def Distribute(self, Distribute, RelativeTo):
##        '-no docstring-'
##        #return 
##
##    def Duplicate(self):
##        '-no docstring-'
##        #return prop
##
##    def Flip(self, FlipCmd):
##        '-no docstring-'
##        #return 
##
##    def IncrementLeft(self, Increment):
##        '-no docstring-'
##        #return 
##
##    def IncrementRotation(self, Increment):
##        '-no docstring-'
##        #return 
##
##    def IncrementTop(self, Increment):
##        '-no docstring-'
##        #return 
##
##    def Group(self):
##        '-no docstring-'
##        #return prop
##
##    def PickUp(self):
##        '-no docstring-'
##        #return 
##
##    def Regroup(self):
##        '-no docstring-'
##        #return prop
##
##    def RerouteConnections(self):
##        '-no docstring-'
##        #return 
##
##    def ScaleHeight(self, Factor, RelativeToOriginalSize, Scale):
##        '-no docstring-'
##        #return 
##
##    def ScaleWidth(self, Factor, RelativeToOriginalSize, Scale):
##        '-no docstring-'
##        #return 
##
##    def Select(self, Replace):
##        '-no docstring-'
##        #return 
##
##    def SetShapesDefaultProperties(self):
##        '-no docstring-'
##        #return 
##
##    def Ungroup(self):
##        '-no docstring-'
##        #return prop
##
##    def ZOrder(self, ZOrderCmd):
##        '-no docstring-'
##        #return 
##
##    def ConvertToFrame(self):
##        '-no docstring-'
##        #return prop
##
##    def ConvertToInlineShape(self):
##        '-no docstring-'
##        #return prop
##
##    def Activate(self):
##        '-no docstring-'
##        #return 
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    AlternativeText = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def HasDiagram(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Diagram(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def HasDiagramNode(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def DiagramNode(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Child(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def ParentGroup(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def CanvasItems(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def ID(self):
##        '-no docstring-'
##        #return prop
##
##    def CanvasCropLeft(self, Increment):
##        '-no docstring-'
##        #return 
##
##    def CanvasCropTop(self, Increment):
##        '-no docstring-'
##        #return 
##
##    def CanvasCropRight(self, Increment):
##        '-no docstring-'
##        #return 
##
##    def CanvasCropBottom(self, Increment):
##        '-no docstring-'
##        #return 
##
##    def _set(self, rhs):
##        '-no docstring-'
##    RTF = property(fset = _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    LayoutInCell = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    LeftRelative = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    TopRelative = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    WidthRelative = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    HeightRelative = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    RelativeHorizontalSize = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    RelativeVerticalSize = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def SoftEdge(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Glow(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Reflection(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def TextFrame2(self):
##        '-no docstring-'
##        #return prop
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    ShapeStyle = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    BackgroundStyle = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    Title = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    GraphicStyle = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Model3D(self):
##        '-no docstring-'
##        #return prop
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    Decorative = property(_get, _set, doc = _set.__doc__)
##

Interior._methods_ = [
    COMMETHOD([dispid(1610743808), 'propget'], HRESULT, 'Color',
              ( ['out', 'retval'], POINTER(VARIANT), 'prop' )),
    COMMETHOD([dispid(1610743808), 'propput'], HRESULT, 'Color',
              ( ['in'], VARIANT, 'prop' )),
    COMMETHOD([dispid(1610743810), 'propget'], HRESULT, 'ColorIndex',
              ( ['out', 'retval'], POINTER(VARIANT), 'prop' )),
    COMMETHOD([dispid(1610743810), 'propput'], HRESULT, 'ColorIndex',
              ( ['in'], VARIANT, 'prop' )),
    COMMETHOD([dispid(1610743812), 'propget'], HRESULT, 'InvertIfNegative',
              ( ['out', 'retval'], POINTER(VARIANT), 'prop' )),
    COMMETHOD([dispid(1610743812), 'propput'], HRESULT, 'InvertIfNegative',
              ( ['in'], VARIANT, 'prop' )),
    COMMETHOD([dispid(1610743814), 'propget'], HRESULT, 'Pattern',
              ( ['out', 'retval'], POINTER(VARIANT), 'prop' )),
    COMMETHOD([dispid(1610743814), 'propput'], HRESULT, 'Pattern',
              ( ['in'], VARIANT, 'prop' )),
    COMMETHOD([dispid(1610743816), 'propget'], HRESULT, 'PatternColor',
              ( ['out', 'retval'], POINTER(VARIANT), 'prop' )),
    COMMETHOD([dispid(1610743816), 'propput'], HRESULT, 'PatternColor',
              ( ['in'], VARIANT, 'prop' )),
    COMMETHOD([dispid(1610743818), 'propget'], HRESULT, 'PatternColorIndex',
              ( ['out', 'retval'], POINTER(VARIANT), 'prop' )),
    COMMETHOD([dispid(1610743818), 'propput'], HRESULT, 'PatternColorIndex',
              ( ['in'], VARIANT, 'prop' )),
    COMMETHOD([dispid(148), 'propget'], HRESULT, 'Application',
              ( ['out', 'retval'], POINTER(POINTER(IDispatch)), 'prop' )),
    COMMETHOD([dispid(149), 'propget'], HRESULT, 'Creator',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(150), 'propget'], HRESULT, 'Parent',
              ( ['out', 'retval'], POINTER(POINTER(IDispatch)), 'prop' )),
]
################################################################
## code template for Interior implementation
##class Interior_Impl(object):
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    Color = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    ColorIndex = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    InvertIfNegative = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    Pattern = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    PatternColor = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    PatternColorIndex = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Creator(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return prop
##


# values for enumeration 'WdProofreadingErrorType'
wdSpellingError = 0
wdGrammaticalError = 1
WdProofreadingErrorType = c_int # enum
class MailMergeField(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{0002091E-0000-0000-C000-000000000046}')
    _idlflags_ = ['dual', 'nonextensible', 'oleautomation']
MailMergeField._methods_ = [
    COMMETHOD([dispid(1000), 'propget'], HRESULT, 'Application',
              ( ['out', 'retval'], POINTER(POINTER(Application)), 'prop' )),
    COMMETHOD([dispid(1001), 'propget'], HRESULT, 'Creator',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(1002), 'propget'], HRESULT, 'Parent',
              ( ['out', 'retval'], POINTER(POINTER(IDispatch)), 'prop' )),
    COMMETHOD([dispid(0), 'propget'], HRESULT, 'Type',
              ( ['out', 'retval'], POINTER(WdFieldType), 'prop' )),
    COMMETHOD([dispid(3), 'propget'], HRESULT, 'Locked',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'prop' )),
    COMMETHOD([dispid(3), 'propput'], HRESULT, 'Locked',
              ( ['in'], VARIANT_BOOL, 'prop' )),
    COMMETHOD([dispid(5), 'propget'], HRESULT, 'Code',
              ( ['out', 'retval'], POINTER(POINTER(Range)), 'prop' )),
    COMMETHOD([dispid(5), 'propput'], HRESULT, 'Code',
              ( ['in'], POINTER(Range), 'prop' )),
    COMMETHOD([dispid(8), 'propget'], HRESULT, 'Next',
              ( ['out', 'retval'], POINTER(POINTER(MailMergeField)), 'prop' )),
    COMMETHOD([dispid(9), 'propget'], HRESULT, 'Previous',
              ( ['out', 'retval'], POINTER(POINTER(MailMergeField)), 'prop' )),
    COMMETHOD([dispid(65535)], HRESULT, 'Select'),
    COMMETHOD([dispid(105)], HRESULT, 'Copy'),
    COMMETHOD([dispid(106)], HRESULT, 'Cut'),
    COMMETHOD([dispid(107)], HRESULT, 'Delete'),
]
################################################################
## code template for MailMergeField implementation
##class MailMergeField_Impl(object):
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Creator(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Type(self):
##        '-no docstring-'
##        #return prop
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    Locked = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    Code = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Next(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Previous(self):
##        '-no docstring-'
##        #return prop
##
##    def Select(self):
##        '-no docstring-'
##        #return 
##
##    def Copy(self):
##        '-no docstring-'
##        #return 
##
##    def Cut(self):
##        '-no docstring-'
##        #return 
##
##    def Delete(self):
##        '-no docstring-'
##        #return 
##


# values for enumeration 'WdInlineShapeType'
wdInlineShapeEmbeddedOLEObject = 1
wdInlineShapeLinkedOLEObject = 2
wdInlineShapePicture = 3
wdInlineShapeLinkedPicture = 4
wdInlineShapeOLEControlObject = 5
wdInlineShapeHorizontalLine = 6
wdInlineShapePictureHorizontalLine = 7
wdInlineShapeLinkedPictureHorizontalLine = 8
wdInlineShapePictureBullet = 9
wdInlineShapeScriptAnchor = 10
wdInlineShapeOWSAnchor = 11
wdInlineShapeChart = 12
wdInlineShapeDiagram = 13
wdInlineShapeLockedCanvas = 14
wdInlineShapeSmartArt = 15
wdInlineShapeWebVideo = 16
wdInlineShapeGraphic = 17
wdInlineShapeLinkedGraphic = 18
wdInlineShape3DModel = 19
wdInlineShapeLinked3DModel = 20
WdInlineShapeType = c_int # enum

# values for enumeration 'WdGutterStyle'
wdGutterPosLeft = 0
wdGutterPosTop = 1
wdGutterPosRight = 2
WdGutterStyle = c_int # enum
class SmartTag(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{000209ED-0000-0000-C000-000000000046}')
    _idlflags_ = ['hidden', 'dual', 'nonextensible', 'oleautomation']
class CustomProperties(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{B923FDE1-F08C-11D3-91B0-00105A0A19FD}')
    _idlflags_ = ['dual', 'nonextensible', 'oleautomation']
class SmartTagActions(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{CDE12CD8-767B-4757-8A31-13029A086305}')
    _idlflags_ = ['hidden', 'dual', 'nonextensible', 'oleautomation']
class XMLNode(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{09760240-0B89-49F7-A79D-479F24723F56}')
    _idlflags_ = ['dual', 'nonextensible', 'oleautomation']
SmartTag._methods_ = [
    COMMETHOD([dispid(0), 'hidden', 'propget'], HRESULT, 'Name',
              ( ['out', 'retval'], POINTER(BSTR), 'prop' )),
    COMMETHOD([dispid(2), 'hidden', 'propget'], HRESULT, 'XML',
              ( ['out', 'retval'], POINTER(BSTR), 'prop' )),
    COMMETHOD([dispid(3), 'hidden', 'propget'], HRESULT, 'Range',
              ( ['out', 'retval'], POINTER(POINTER(Range)), 'prop' )),
    COMMETHOD([dispid(4), 'hidden', 'propget'], HRESULT, 'DownloadURL',
              ( ['out', 'retval'], POINTER(BSTR), 'prop' )),
    COMMETHOD([dispid(5), 'hidden', 'propget'], HRESULT, 'Properties',
              ( ['out', 'retval'], POINTER(POINTER(CustomProperties)), 'prop' )),
    COMMETHOD([dispid(1000), 'hidden', 'propget'], HRESULT, 'Application',
              ( ['out', 'retval'], POINTER(POINTER(Application)), 'prop' )),
    COMMETHOD([dispid(1001), 'hidden', 'propget'], HRESULT, 'Creator',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(1002), 'hidden', 'propget'], HRESULT, 'Parent',
              ( ['out', 'retval'], POINTER(POINTER(IDispatch)), 'prop' )),
    COMMETHOD([dispid(65535), 'hidden'], HRESULT, 'Select'),
    COMMETHOD([dispid(11), 'hidden'], HRESULT, 'Delete'),
    COMMETHOD([dispid(1003), 'hidden', 'propget'], HRESULT, 'SmartTagActions',
              ( ['out', 'retval'], POINTER(POINTER(SmartTagActions)), 'prop' )),
    COMMETHOD([dispid(1004), 'hidden', 'propget'], HRESULT, 'XMLNode',
              ( ['out', 'retval'], POINTER(POINTER(XMLNode)), 'prop' )),
]
################################################################
## code template for SmartTag implementation
##class SmartTag_Impl(object):
##    @property
##    def Name(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def XML(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Range(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def DownloadURL(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Properties(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Creator(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return prop
##
##    def Select(self):
##        '-no docstring-'
##        #return 
##
##    def Delete(self):
##        '-no docstring-'
##        #return 
##
##    @property
##    def SmartTagActions(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def XMLNode(self):
##        '-no docstring-'
##        #return prop
##

class ContentControlListEntry(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{0C6FA8CA-E65F-4FC7-AB8F-20729EECBB14}')
    _idlflags_ = ['dual', 'nonextensible', 'oleautomation']
ContentControlListEntries._methods_ = [
    COMMETHOD([dispid(-4), 'nonbrowsable', 'propget'], HRESULT, '_NewEnum',
              ( ['out', 'retval'], POINTER(POINTER(IUnknown)), 'prop' )),
    COMMETHOD([dispid(100), 'propget'], HRESULT, 'Application',
              ( ['out', 'retval'], POINTER(POINTER(Application)), 'prop' )),
    COMMETHOD([dispid(101), 'propget'], HRESULT, 'Creator',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(102), 'propget'], HRESULT, 'Parent',
              ( ['out', 'retval'], POINTER(POINTER(IDispatch)), 'prop' )),
    COMMETHOD([dispid(103), 'propget'], HRESULT, 'Count',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(104)], HRESULT, 'Clear'),
    COMMETHOD([dispid(0)], HRESULT, 'Item',
              ( ['in'], c_int, 'Index' ),
              ( ['out', 'retval'], POINTER(POINTER(ContentControlListEntry)), 'prop' )),
    COMMETHOD([dispid(106)], HRESULT, 'Add',
              ( ['in'], BSTR, 'Text' ),
              ( ['in', 'optional'], BSTR, 'Value' ),
              ( ['in', 'optional'], c_int, 'Index', 0 ),
              ( ['out', 'retval'], POINTER(POINTER(ContentControlListEntry)), 'prop' )),
]
################################################################
## code template for ContentControlListEntries implementation
##class ContentControlListEntries_Impl(object):
##    @property
##    def _NewEnum(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Creator(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Count(self):
##        '-no docstring-'
##        #return prop
##
##    def Clear(self):
##        '-no docstring-'
##        #return 
##
##    def Item(self, Index):
##        '-no docstring-'
##        #return prop
##
##    def Add(self, Text, Value, Index):
##        '-no docstring-'
##        #return prop
##

CalloutFormat._methods_ = [
    COMMETHOD([dispid(1000), 'propget'], HRESULT, 'Application',
              ( ['out', 'retval'], POINTER(POINTER(Application)), 'prop' )),
    COMMETHOD([dispid(1001), 'propget'], HRESULT, 'Creator',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(1), 'propget'], HRESULT, 'Parent',
              ( ['out', 'retval'], POINTER(POINTER(IDispatch)), 'prop' )),
    COMMETHOD([dispid(100), 'propget'], HRESULT, 'Accent',
              ( ['out', 'retval'], POINTER(comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoTriState), 'prop' )),
    COMMETHOD([dispid(100), 'propput'], HRESULT, 'Accent',
              ( ['in'], comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoTriState, 'prop' )),
    COMMETHOD([dispid(101), 'propget'], HRESULT, 'Angle',
              ( ['out', 'retval'], POINTER(comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoCalloutAngleType), 'prop' )),
    COMMETHOD([dispid(101), 'propput'], HRESULT, 'Angle',
              ( ['in'], comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoCalloutAngleType, 'prop' )),
    COMMETHOD([dispid(102), 'hidden', 'propget'], HRESULT, 'AutoAttach',
              ( ['out', 'retval'], POINTER(comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoTriState), 'prop' )),
    COMMETHOD([dispid(102), 'hidden', 'propput'], HRESULT, 'AutoAttach',
              ( ['in'], comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoTriState, 'prop' )),
    COMMETHOD([dispid(103), 'propget'], HRESULT, 'AutoLength',
              ( ['out', 'retval'], POINTER(comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoTriState), 'prop' )),
    COMMETHOD([dispid(104), 'propget'], HRESULT, 'Border',
              ( ['out', 'retval'], POINTER(comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoTriState), 'prop' )),
    COMMETHOD([dispid(104), 'propput'], HRESULT, 'Border',
              ( ['in'], comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoTriState, 'prop' )),
    COMMETHOD([dispid(105), 'propget'], HRESULT, 'Drop',
              ( ['out', 'retval'], POINTER(c_float), 'prop' )),
    COMMETHOD([dispid(106), 'propget'], HRESULT, 'DropType',
              ( ['out', 'retval'], POINTER(comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoCalloutDropType), 'prop' )),
    COMMETHOD([dispid(107), 'propget'], HRESULT, 'Gap',
              ( ['out', 'retval'], POINTER(c_float), 'prop' )),
    COMMETHOD([dispid(107), 'propput'], HRESULT, 'Gap',
              ( ['in'], c_float, 'prop' )),
    COMMETHOD([dispid(108), 'propget'], HRESULT, 'Length',
              ( ['out', 'retval'], POINTER(c_float), 'prop' )),
    COMMETHOD([dispid(109), 'propget'], HRESULT, 'Type',
              ( ['out', 'retval'], POINTER(comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoCalloutType), 'prop' )),
    COMMETHOD([dispid(109), 'propput'], HRESULT, 'Type',
              ( ['in'], comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoCalloutType, 'prop' )),
    COMMETHOD([dispid(10), 'hidden'], HRESULT, 'AutomaticLength'),
    COMMETHOD([dispid(11)], HRESULT, 'CustomDrop',
              ( ['in'], c_float, 'Drop' )),
    COMMETHOD([dispid(12)], HRESULT, 'CustomLength',
              ( ['in'], c_float, 'Length' )),
    COMMETHOD([dispid(13)], HRESULT, 'PresetDrop',
              ( ['in'], comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoCalloutDropType, 'DropType' )),
]
################################################################
## code template for CalloutFormat implementation
##class CalloutFormat_Impl(object):
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Creator(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return prop
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    Accent = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    Angle = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    AutoAttach = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def AutoLength(self):
##        '-no docstring-'
##        #return prop
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    Border = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Drop(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def DropType(self):
##        '-no docstring-'
##        #return prop
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    Gap = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Length(self):
##        '-no docstring-'
##        #return prop
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    Type = property(_get, _set, doc = _set.__doc__)
##
##    def AutomaticLength(self):
##        '-no docstring-'
##        #return 
##
##    def CustomDrop(self, Drop):
##        '-no docstring-'
##        #return 
##
##    def CustomLength(self, Length):
##        '-no docstring-'
##        #return 
##
##    def PresetDrop(self, DropType):
##        '-no docstring-'
##        #return 
##


# values for enumeration 'WdGranularity'
wdGranularityCharLevel = 0
wdGranularityWordLevel = 1
WdGranularity = c_int # enum

# values for enumeration 'WdMergeSubType'
wdMergeSubTypeOther = 0
wdMergeSubTypeAccess = 1
wdMergeSubTypeOAL = 2
wdMergeSubTypeOLEDBWord = 3
wdMergeSubTypeWorks = 4
wdMergeSubTypeOLEDBText = 5
wdMergeSubTypeOutlook = 6
wdMergeSubTypeWord = 7
wdMergeSubTypeWord2000 = 8
WdMergeSubType = c_int # enum

# values for enumeration 'XlTimeUnit'
xlDays = 0
xlMonths = 1
xlYears = 2
XlTimeUnit = c_int # enum

# values for enumeration 'XlDataLabelsType'
xlDataLabelsShowNone = -4142
xlDataLabelsShowValue = 2
xlDataLabelsShowPercent = 3
xlDataLabelsShowLabel = 4
xlDataLabelsShowLabelAndPercent = 5
xlDataLabelsShowBubbleSizes = 6
XlDataLabelsType = c_int # enum

# values for enumeration 'WdAlertLevel'
wdAlertsNone = 0
wdAlertsMessageBox = -2
wdAlertsAll = -1
WdAlertLevel = c_int # enum
class TableStyle(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{B7564E97-0519-4C68-B400-3803E7C63242}')
    _idlflags_ = ['dual', 'nonextensible', 'oleautomation']

# values for enumeration 'WdRowAlignment'
wdAlignRowLeft = 0
wdAlignRowCenter = 1
wdAlignRowRight = 2
WdRowAlignment = c_int # enum

# values for enumeration 'WdConditionCode'
wdFirstRow = 0
wdLastRow = 1
wdOddRowBanding = 2
wdEvenRowBanding = 3
wdFirstColumn = 4
wdLastColumn = 5
wdOddColumnBanding = 6
wdEvenColumnBanding = 7
wdNECell = 8
wdNWCell = 9
wdSECell = 10
wdSWCell = 11
WdConditionCode = c_int # enum
class ConditionalStyle(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{1498F56D-ED33-41F9-B37B-EF30E50B08AC}')
    _idlflags_ = ['dual', 'nonextensible', 'oleautomation']

# values for enumeration 'WdTableDirection'
wdTableDirectionRtl = 0
wdTableDirectionLtr = 1
WdTableDirection = c_int # enum
TableStyle._methods_ = [
    COMMETHOD([dispid(1000), 'propget'], HRESULT, 'Application',
              ( ['out', 'retval'], POINTER(POINTER(Application)), 'prop' )),
    COMMETHOD([dispid(1001), 'propget'], HRESULT, 'Creator',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(100), 'propget'], HRESULT, 'Parent',
              ( ['out', 'retval'], POINTER(POINTER(IDispatch)), 'prop' )),
    COMMETHOD([dispid(2), 'propget'], HRESULT, 'AllowPageBreaks',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'prop' )),
    COMMETHOD([dispid(2), 'propput'], HRESULT, 'AllowPageBreaks',
              ( ['in'], VARIANT_BOOL, 'prop' )),
    COMMETHOD([dispid(3), 'propget'], HRESULT, 'Borders',
              ( ['out', 'retval'], POINTER(POINTER(Borders)), 'prop' )),
    COMMETHOD([dispid(3), 'propput'], HRESULT, 'Borders',
              ( ['in'], POINTER(Borders), 'prop' )),
    COMMETHOD([dispid(4), 'propget'], HRESULT, 'BottomPadding',
              ( ['out', 'retval'], POINTER(c_float), 'prop' )),
    COMMETHOD([dispid(4), 'propput'], HRESULT, 'BottomPadding',
              ( ['in'], c_float, 'prop' )),
    COMMETHOD([dispid(5), 'propget'], HRESULT, 'LeftPadding',
              ( ['out', 'retval'], POINTER(c_float), 'prop' )),
    COMMETHOD([dispid(5), 'propput'], HRESULT, 'LeftPadding',
              ( ['in'], c_float, 'prop' )),
    COMMETHOD([dispid(6), 'propget'], HRESULT, 'TopPadding',
              ( ['out', 'retval'], POINTER(c_float), 'prop' )),
    COMMETHOD([dispid(6), 'propput'], HRESULT, 'TopPadding',
              ( ['in'], c_float, 'prop' )),
    COMMETHOD([dispid(7), 'propget'], HRESULT, 'RightPadding',
              ( ['out', 'retval'], POINTER(c_float), 'prop' )),
    COMMETHOD([dispid(7), 'propput'], HRESULT, 'RightPadding',
              ( ['in'], c_float, 'prop' )),
    COMMETHOD([dispid(9), 'propget'], HRESULT, 'Alignment',
              ( ['out', 'retval'], POINTER(WdRowAlignment), 'prop' )),
    COMMETHOD([dispid(9), 'propput'], HRESULT, 'Alignment',
              ( ['in'], WdRowAlignment, 'prop' )),
    COMMETHOD([dispid(10), 'propget'], HRESULT, 'Spacing',
              ( ['out', 'retval'], POINTER(c_float), 'prop' )),
    COMMETHOD([dispid(10), 'propput'], HRESULT, 'Spacing',
              ( ['in'], c_float, 'prop' )),
    COMMETHOD([dispid(16)], HRESULT, 'Condition',
              ( ['in'], WdConditionCode, 'ConditionCode' ),
              ( ['out', 'retval'], POINTER(POINTER(ConditionalStyle)), 'prop' )),
    COMMETHOD([dispid(12), 'propget'], HRESULT, 'TableDirection',
              ( ['out', 'retval'], POINTER(WdTableDirection), 'prop' )),
    COMMETHOD([dispid(12), 'propput'], HRESULT, 'TableDirection',
              ( ['in'], WdTableDirection, 'prop' )),
    COMMETHOD([dispid(13), 'propget'], HRESULT, 'AllowBreakAcrossPage',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(13), 'propput'], HRESULT, 'AllowBreakAcrossPage',
              ( ['in'], c_int, 'prop' )),
    COMMETHOD([dispid(14), 'propget'], HRESULT, 'LeftIndent',
              ( ['out', 'retval'], POINTER(c_float), 'prop' )),
    COMMETHOD([dispid(14), 'propput'], HRESULT, 'LeftIndent',
              ( ['in'], c_float, 'prop' )),
    COMMETHOD([dispid(15), 'propget'], HRESULT, 'Shading',
              ( ['out', 'retval'], POINTER(POINTER(Shading)), 'prop' )),
    COMMETHOD([dispid(17), 'propget'], HRESULT, 'RowStripe',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(17), 'propput'], HRESULT, 'RowStripe',
              ( ['in'], c_int, 'prop' )),
    COMMETHOD([dispid(18), 'propget'], HRESULT, 'ColumnStripe',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(18), 'propput'], HRESULT, 'ColumnStripe',
              ( ['in'], c_int, 'prop' )),
]
################################################################
## code template for TableStyle implementation
##class TableStyle_Impl(object):
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Creator(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return prop
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    AllowPageBreaks = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    Borders = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    BottomPadding = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    LeftPadding = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    TopPadding = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    RightPadding = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    Alignment = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    Spacing = property(_get, _set, doc = _set.__doc__)
##
##    def Condition(self, ConditionCode):
##        '-no docstring-'
##        #return prop
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    TableDirection = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    AllowBreakAcrossPage = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    LeftIndent = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Shading(self):
##        '-no docstring-'
##        #return prop
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    RowStripe = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    ColumnStripe = property(_get, _set, doc = _set.__doc__)
##

class Zooms(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{000209A7-0000-0000-C000-000000000046}')
    _idlflags_ = ['dual', 'nonextensible', 'oleautomation']

# values for enumeration 'WdViewType'
wdNormalView = 1
wdOutlineView = 2
wdPrintView = 3
wdPrintPreview = 4
wdMasterView = 5
wdWebView = 6
wdReadingView = 7
wdConflictView = 8
WdViewType = c_int # enum
class Zoom(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{000209A6-0000-0000-C000-000000000046}')
    _idlflags_ = ['dual', 'nonextensible', 'oleautomation']
Zooms._methods_ = [
    COMMETHOD([dispid(1000), 'propget'], HRESULT, 'Application',
              ( ['out', 'retval'], POINTER(POINTER(Application)), 'prop' )),
    COMMETHOD([dispid(1001), 'propget'], HRESULT, 'Creator',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(1002), 'propget'], HRESULT, 'Parent',
              ( ['out', 'retval'], POINTER(POINTER(IDispatch)), 'prop' )),
    COMMETHOD([dispid(0)], HRESULT, 'Item',
              ( ['in'], WdViewType, 'Index' ),
              ( ['out', 'retval'], POINTER(POINTER(Zoom)), 'prop' )),
]
################################################################
## code template for Zooms implementation
##class Zooms_Impl(object):
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Creator(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return prop
##
##    def Item(self, Index):
##        '-no docstring-'
##        #return prop
##


# values for enumeration 'WdDeleteCells'
wdDeleteCellsShiftLeft = 0
wdDeleteCellsShiftUp = 1
wdDeleteCellsEntireRow = 2
wdDeleteCellsEntireColumn = 3
WdDeleteCells = c_int # enum

# values for enumeration 'WdOLEVerb'
wdOLEVerbPrimary = 0
wdOLEVerbShow = -1
wdOLEVerbOpen = -2
wdOLEVerbHide = -3
wdOLEVerbUIActivate = -4
wdOLEVerbInPlaceActivate = -5
wdOLEVerbDiscardUndoState = -6
WdOLEVerb = c_int # enum

# values for enumeration 'WdStyleType'
wdStyleTypeParagraph = 1
wdStyleTypeCharacter = 2
wdStyleTypeTable = 3
wdStyleTypeList = 4
wdStyleTypeParagraphOnly = 5
wdStyleTypeLinked = 6
WdStyleType = c_int # enum
SoftEdgeFormat._methods_ = [
    COMMETHOD([dispid(1), 'propget'], HRESULT, 'Type',
              ( ['out', 'retval'], POINTER(comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoSoftEdgeType), 'prop' )),
    COMMETHOD([dispid(1), 'propput'], HRESULT, 'Type',
              ( ['in'], comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoSoftEdgeType, 'prop' )),
    COMMETHOD([dispid(2), 'propget'], HRESULT, 'Radius',
              ( ['out', 'retval'], POINTER(c_float), 'prop' )),
    COMMETHOD([dispid(2), 'propput'], HRESULT, 'Radius',
              ( ['in'], c_float, 'prop' )),
    COMMETHOD([dispid(1000), 'propget'], HRESULT, 'Application',
              ( ['out', 'retval'], POINTER(POINTER(Application)), 'prop' )),
    COMMETHOD([dispid(1001), 'propget'], HRESULT, 'Creator',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(1002), 'propget'], HRESULT, 'Parent',
              ( ['out', 'retval'], POINTER(POINTER(IDispatch)), 'prop' )),
]
################################################################
## code template for SoftEdgeFormat implementation
##class SoftEdgeFormat_Impl(object):
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    Type = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    Radius = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Creator(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return prop
##


# values for enumeration 'WdOLEType'
wdOLELink = 0
wdOLEEmbed = 1
wdOLEControl = 2
WdOLEType = c_int # enum
class PageNumbers(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{00020986-0000-0000-C000-000000000046}')
    _idlflags_ = ['dual', 'nonextensible', 'oleautomation']

# values for enumeration 'WdPageNumberStyle'
wdPageNumberStyleArabic = 0
wdPageNumberStyleUppercaseRoman = 1
wdPageNumberStyleLowercaseRoman = 2
wdPageNumberStyleUppercaseLetter = 3
wdPageNumberStyleLowercaseLetter = 4
wdPageNumberStyleArabicFullWidth = 14
wdPageNumberStyleKanji = 10
wdPageNumberStyleKanjiDigit = 11
wdPageNumberStyleKanjiTraditional = 16
wdPageNumberStyleNumberInCircle = 18
wdPageNumberStyleHanjaRead = 41
wdPageNumberStyleHanjaReadDigit = 42
wdPageNumberStyleTradChinNum1 = 33
wdPageNumberStyleTradChinNum2 = 34
wdPageNumberStyleSimpChinNum1 = 37
wdPageNumberStyleSimpChinNum2 = 38
wdPageNumberStyleHebrewLetter1 = 45
wdPageNumberStyleArabicLetter1 = 46
wdPageNumberStyleHebrewLetter2 = 47
wdPageNumberStyleArabicLetter2 = 48
wdPageNumberStyleHindiLetter1 = 49
wdPageNumberStyleHindiLetter2 = 50
wdPageNumberStyleHindiArabic = 51
wdPageNumberStyleHindiCardinalText = 52
wdPageNumberStyleThaiLetter = 53
wdPageNumberStyleThaiArabic = 54
wdPageNumberStyleThaiCardinalText = 55
wdPageNumberStyleVietCardinalText = 56
wdPageNumberStyleNumberInDash = 57
WdPageNumberStyle = c_int # enum

# values for enumeration 'WdSeparatorType'
wdSeparatorHyphen = 0
wdSeparatorPeriod = 1
wdSeparatorColon = 2
wdSeparatorEmDash = 3
wdSeparatorEnDash = 4
WdSeparatorType = c_int # enum
class PageNumber(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{00020987-0000-0000-C000-000000000046}')
    _idlflags_ = ['dual', 'nonextensible', 'oleautomation']
PageNumbers._methods_ = [
    COMMETHOD([dispid(1000), 'propget'], HRESULT, 'Application',
              ( ['out', 'retval'], POINTER(POINTER(Application)), 'prop' )),
    COMMETHOD([dispid(1001), 'propget'], HRESULT, 'Creator',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(1002), 'propget'], HRESULT, 'Parent',
              ( ['out', 'retval'], POINTER(POINTER(IDispatch)), 'prop' )),
    COMMETHOD([dispid(-4), 'nonbrowsable', 'propget'], HRESULT, '_NewEnum',
              ( ['out', 'retval'], POINTER(POINTER(IUnknown)), 'prop' )),
    COMMETHOD([dispid(1), 'propget'], HRESULT, 'Count',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(2), 'propget'], HRESULT, 'NumberStyle',
              ( ['out', 'retval'], POINTER(WdPageNumberStyle), 'prop' )),
    COMMETHOD([dispid(2), 'propput'], HRESULT, 'NumberStyle',
              ( ['in'], WdPageNumberStyle, 'prop' )),
    COMMETHOD([dispid(3), 'propget'], HRESULT, 'IncludeChapterNumber',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'prop' )),
    COMMETHOD([dispid(3), 'propput'], HRESULT, 'IncludeChapterNumber',
              ( ['in'], VARIANT_BOOL, 'prop' )),
    COMMETHOD([dispid(4), 'propget'], HRESULT, 'HeadingLevelForChapter',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(4), 'propput'], HRESULT, 'HeadingLevelForChapter',
              ( ['in'], c_int, 'prop' )),
    COMMETHOD([dispid(5), 'propget'], HRESULT, 'ChapterPageSeparator',
              ( ['out', 'retval'], POINTER(WdSeparatorType), 'prop' )),
    COMMETHOD([dispid(5), 'propput'], HRESULT, 'ChapterPageSeparator',
              ( ['in'], WdSeparatorType, 'prop' )),
    COMMETHOD([dispid(6), 'propget'], HRESULT, 'RestartNumberingAtSection',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'prop' )),
    COMMETHOD([dispid(6), 'propput'], HRESULT, 'RestartNumberingAtSection',
              ( ['in'], VARIANT_BOOL, 'prop' )),
    COMMETHOD([dispid(7), 'propget'], HRESULT, 'StartingNumber',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(7), 'propput'], HRESULT, 'StartingNumber',
              ( ['in'], c_int, 'prop' )),
    COMMETHOD([dispid(8), 'propget'], HRESULT, 'ShowFirstPageNumber',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'prop' )),
    COMMETHOD([dispid(8), 'propput'], HRESULT, 'ShowFirstPageNumber',
              ( ['in'], VARIANT_BOOL, 'prop' )),
    COMMETHOD([dispid(0)], HRESULT, 'Item',
              ( ['in'], c_int, 'Index' ),
              ( ['out', 'retval'], POINTER(POINTER(PageNumber)), 'prop' )),
    COMMETHOD([dispid(101)], HRESULT, 'Add',
              ( ['in', 'optional'], POINTER(VARIANT), 'PageNumberAlignment' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'FirstPage' ),
              ( ['out', 'retval'], POINTER(POINTER(PageNumber)), 'prop' )),
    COMMETHOD([dispid(10), 'propget'], HRESULT, 'DoubleQuote',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'prop' )),
    COMMETHOD([dispid(10), 'propput'], HRESULT, 'DoubleQuote',
              ( ['in'], VARIANT_BOOL, 'prop' )),
]
################################################################
## code template for PageNumbers implementation
##class PageNumbers_Impl(object):
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Creator(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def _NewEnum(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Count(self):
##        '-no docstring-'
##        #return prop
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    NumberStyle = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    IncludeChapterNumber = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    HeadingLevelForChapter = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    ChapterPageSeparator = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    RestartNumberingAtSection = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    StartingNumber = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    ShowFirstPageNumber = property(_get, _set, doc = _set.__doc__)
##
##    def Item(self, Index):
##        '-no docstring-'
##        #return prop
##
##    def Add(self, PageNumberAlignment, FirstPage):
##        '-no docstring-'
##        #return prop
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    DoubleQuote = property(_get, _set, doc = _set.__doc__)
##


# values for enumeration 'WdSummaryLength'
wd10Sentences = -2
wd20Sentences = -3
wd100Words = -4
wd500Words = -5
wd10Percent = -6
wd25Percent = -7
wd50Percent = -8
wd75Percent = -9
WdSummaryLength = c_int # enum

# values for enumeration 'WdInsertCells'
wdInsertCellsShiftRight = 0
wdInsertCellsShiftDown = 1
wdInsertCellsEntireRow = 2
wdInsertCellsEntireColumn = 3
WdInsertCells = c_int # enum

# values for enumeration 'WdHorizontalLineAlignment'
wdHorizontalLineAlignLeft = 0
wdHorizontalLineAlignCenter = 1
wdHorizontalLineAlignRight = 2
WdHorizontalLineAlignment = c_int # enum
class SynonymInfo(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{0002099B-0000-0000-C000-000000000046}')
    _idlflags_ = ['dual', 'nonextensible', 'oleautomation']
SynonymInfo._methods_ = [
    COMMETHOD([dispid(1000), 'propget'], HRESULT, 'Application',
              ( ['out', 'retval'], POINTER(POINTER(Application)), 'prop' )),
    COMMETHOD([dispid(1001), 'propget'], HRESULT, 'Creator',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(1002), 'propget'], HRESULT, 'Parent',
              ( ['out', 'retval'], POINTER(POINTER(IDispatch)), 'prop' )),
    COMMETHOD([dispid(1), 'propget'], HRESULT, 'Word',
              ( ['out', 'retval'], POINTER(BSTR), 'prop' )),
    COMMETHOD([dispid(2), 'propget'], HRESULT, 'Found',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'prop' )),
    COMMETHOD([dispid(3), 'propget'], HRESULT, 'MeaningCount',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(4), 'propget'], HRESULT, 'MeaningList',
              ( ['out', 'retval'], POINTER(VARIANT), 'prop' )),
    COMMETHOD([dispid(5), 'propget'], HRESULT, 'PartOfSpeechList',
              ( ['out', 'retval'], POINTER(VARIANT), 'prop' )),
    COMMETHOD([dispid(7), 'propget'], HRESULT, 'SynonymList',
              ( ['in'], POINTER(VARIANT), 'Meaning' ),
              ( ['out', 'retval'], POINTER(VARIANT), 'prop' )),
    COMMETHOD([dispid(8), 'propget'], HRESULT, 'AntonymList',
              ( ['out', 'retval'], POINTER(VARIANT), 'prop' )),
    COMMETHOD([dispid(9), 'propget'], HRESULT, 'RelatedExpressionList',
              ( ['out', 'retval'], POINTER(VARIANT), 'prop' )),
    COMMETHOD([dispid(10), 'propget'], HRESULT, 'RelatedWordList',
              ( ['out', 'retval'], POINTER(VARIANT), 'prop' )),
]
################################################################
## code template for SynonymInfo implementation
##class SynonymInfo_Impl(object):
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Creator(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Word(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Found(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def MeaningCount(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def MeaningList(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def PartOfSpeechList(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def SynonymList(self, Meaning):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def AntonymList(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def RelatedExpressionList(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def RelatedWordList(self):
##        '-no docstring-'
##        #return prop
##

class Line(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{AE6CE2F5-B9D3-407D-85A8-0F10C63289A4}')
    _idlflags_ = ['dual', 'nonextensible', 'oleautomation']

# values for enumeration 'WdLineType'
wdTextLine = 0
wdTableRow = 1
WdLineType = c_int # enum
Line._methods_ = [
    COMMETHOD([dispid(1000), 'propget'], HRESULT, 'Application',
              ( ['out', 'retval'], POINTER(POINTER(Application)), 'prop' )),
    COMMETHOD([dispid(1001), 'propget'], HRESULT, 'Creator',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(1002), 'propget'], HRESULT, 'Parent',
              ( ['out', 'retval'], POINTER(POINTER(IDispatch)), 'prop' )),
    COMMETHOD([dispid(2), 'propget'], HRESULT, 'LineType',
              ( ['out', 'retval'], POINTER(WdLineType), 'prop' )),
    COMMETHOD([dispid(3), 'propget'], HRESULT, 'Left',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(4), 'propget'], HRESULT, 'Top',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(5), 'propget'], HRESULT, 'Width',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(6), 'propget'], HRESULT, 'Height',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(7), 'propget'], HRESULT, 'Range',
              ( ['out', 'retval'], POINTER(POINTER(Range)), 'prop' )),
    COMMETHOD([dispid(8), 'propget'], HRESULT, 'Rectangles',
              ( ['out', 'retval'], POINTER(POINTER(Rectangles)), 'prop' )),
]
################################################################
## code template for Line implementation
##class Line_Impl(object):
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Creator(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def LineType(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Left(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Top(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Width(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Height(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Range(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Rectangles(self):
##        '-no docstring-'
##        #return prop
##

class OMathAutoCorrect(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{6F9D1F68-06F7-49EF-8902-185E54EB5E87}')
    _idlflags_ = ['dual', 'nonextensible', 'oleautomation']
class OMathAutoCorrectEntries(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{18CD5EC8-8B7B-42C8-992A-2A407468642C}')
    _idlflags_ = ['dual', 'nonextensible', 'oleautomation']
class OMathRecognizedFunctions(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{44FEE887-6600-41AB-95A5-DE33C605116C}')
    _idlflags_ = ['dual', 'nonextensible', 'oleautomation']
OMathAutoCorrect._methods_ = [
    COMMETHOD([dispid(100), 'propget'], HRESULT, 'Application',
              ( ['out', 'retval'], POINTER(POINTER(Application)), 'prop' )),
    COMMETHOD([dispid(101), 'propget'], HRESULT, 'Creator',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(102), 'propget'], HRESULT, 'Parent',
              ( ['out', 'retval'], POINTER(POINTER(IDispatch)), 'prop' )),
    COMMETHOD([dispid(103), 'propget'], HRESULT, 'ReplaceText',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'prop' )),
    COMMETHOD([dispid(103), 'propput'], HRESULT, 'ReplaceText',
              ( ['in'], VARIANT_BOOL, 'prop' )),
    COMMETHOD([dispid(104), 'propget'], HRESULT, 'UseOutsideOMath',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'prop' )),
    COMMETHOD([dispid(104), 'propput'], HRESULT, 'UseOutsideOMath',
              ( ['in'], VARIANT_BOOL, 'prop' )),
    COMMETHOD([dispid(105), 'propget'], HRESULT, 'Entries',
              ( ['out', 'retval'], POINTER(POINTER(OMathAutoCorrectEntries)), 'prop' )),
    COMMETHOD([dispid(106), 'propget'], HRESULT, 'Functions',
              ( ['out', 'retval'], POINTER(POINTER(OMathRecognizedFunctions)), 'prop' )),
]
################################################################
## code template for OMathAutoCorrect implementation
##class OMathAutoCorrect_Impl(object):
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Creator(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return prop
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    ReplaceText = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    UseOutsideOMath = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Entries(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Functions(self):
##        '-no docstring-'
##        #return prop
##


# values for enumeration 'WdWordDialogTabHID'
wdDialogFilePageSetupTabPaperSize = 150001
wdDialogFilePageSetupTabPaperSource = 150002
WdWordDialogTabHID = c_int # enum

# values for enumeration 'WdListApplyTo'
wdListApplyToWholeList = 0
wdListApplyToThisPointForward = 1
wdListApplyToSelection = 2
WdListApplyTo = c_int # enum
class FormField(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{00020928-0000-0000-C000-000000000046}')
    _idlflags_ = ['dual', 'nonextensible', 'oleautomation']
class TextInput(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{00020927-0000-0000-C000-000000000046}')
    _idlflags_ = ['dual', 'nonextensible', 'oleautomation']
class CheckBox(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{00020926-0000-0000-C000-000000000046}')
    _idlflags_ = ['dual', 'nonextensible', 'oleautomation']
class DropDown(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{00020925-0000-0000-C000-000000000046}')
    _idlflags_ = ['dual', 'nonextensible', 'oleautomation']
FormField._methods_ = [
    COMMETHOD([dispid(1000), 'propget'], HRESULT, 'Application',
              ( ['out', 'retval'], POINTER(POINTER(Application)), 'prop' )),
    COMMETHOD([dispid(1001), 'propget'], HRESULT, 'Creator',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(1002), 'propget'], HRESULT, 'Parent',
              ( ['out', 'retval'], POINTER(POINTER(IDispatch)), 'prop' )),
    COMMETHOD([dispid(0), 'propget'], HRESULT, 'Type',
              ( ['out', 'retval'], POINTER(WdFieldType), 'prop' )),
    COMMETHOD([dispid(2), 'propget'], HRESULT, 'Name',
              ( ['out', 'retval'], POINTER(BSTR), 'prop' )),
    COMMETHOD([dispid(2), 'propput'], HRESULT, 'Name',
              ( ['in'], BSTR, 'prop' )),
    COMMETHOD([dispid(3), 'propget'], HRESULT, 'EntryMacro',
              ( ['out', 'retval'], POINTER(BSTR), 'prop' )),
    COMMETHOD([dispid(3), 'propput'], HRESULT, 'EntryMacro',
              ( ['in'], BSTR, 'prop' )),
    COMMETHOD([dispid(4), 'propget'], HRESULT, 'ExitMacro',
              ( ['out', 'retval'], POINTER(BSTR), 'prop' )),
    COMMETHOD([dispid(4), 'propput'], HRESULT, 'ExitMacro',
              ( ['in'], BSTR, 'prop' )),
    COMMETHOD([dispid(5), 'propget'], HRESULT, 'OwnHelp',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'prop' )),
    COMMETHOD([dispid(5), 'propput'], HRESULT, 'OwnHelp',
              ( ['in'], VARIANT_BOOL, 'prop' )),
    COMMETHOD([dispid(6), 'propget'], HRESULT, 'OwnStatus',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'prop' )),
    COMMETHOD([dispid(6), 'propput'], HRESULT, 'OwnStatus',
              ( ['in'], VARIANT_BOOL, 'prop' )),
    COMMETHOD([dispid(7), 'propget'], HRESULT, 'HelpText',
              ( ['out', 'retval'], POINTER(BSTR), 'prop' )),
    COMMETHOD([dispid(7), 'propput'], HRESULT, 'HelpText',
              ( ['in'], BSTR, 'prop' )),
    COMMETHOD([dispid(8), 'propget'], HRESULT, 'StatusText',
              ( ['out', 'retval'], POINTER(BSTR), 'prop' )),
    COMMETHOD([dispid(8), 'propput'], HRESULT, 'StatusText',
              ( ['in'], BSTR, 'prop' )),
    COMMETHOD([dispid(9), 'propget'], HRESULT, 'Enabled',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'prop' )),
    COMMETHOD([dispid(9), 'propput'], HRESULT, 'Enabled',
              ( ['in'], VARIANT_BOOL, 'prop' )),
    COMMETHOD([dispid(10), 'propget'], HRESULT, 'Result',
              ( ['out', 'retval'], POINTER(BSTR), 'prop' )),
    COMMETHOD([dispid(10), 'propput'], HRESULT, 'Result',
              ( ['in'], BSTR, 'prop' )),
    COMMETHOD([dispid(11), 'propget'], HRESULT, 'TextInput',
              ( ['out', 'retval'], POINTER(POINTER(TextInput)), 'prop' )),
    COMMETHOD([dispid(12), 'propget'], HRESULT, 'CheckBox',
              ( ['out', 'retval'], POINTER(POINTER(CheckBox)), 'prop' )),
    COMMETHOD([dispid(13), 'propget'], HRESULT, 'DropDown',
              ( ['out', 'retval'], POINTER(POINTER(DropDown)), 'prop' )),
    COMMETHOD([dispid(14), 'propget'], HRESULT, 'Next',
              ( ['out', 'retval'], POINTER(POINTER(FormField)), 'prop' )),
    COMMETHOD([dispid(15), 'propget'], HRESULT, 'Previous',
              ( ['out', 'retval'], POINTER(POINTER(FormField)), 'prop' )),
    COMMETHOD([dispid(16), 'propget'], HRESULT, 'CalculateOnExit',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'prop' )),
    COMMETHOD([dispid(16), 'propput'], HRESULT, 'CalculateOnExit',
              ( ['in'], VARIANT_BOOL, 'prop' )),
    COMMETHOD([dispid(17), 'propget'], HRESULT, 'Range',
              ( ['out', 'retval'], POINTER(POINTER(Range)), 'prop' )),
    COMMETHOD([dispid(65535)], HRESULT, 'Select'),
    COMMETHOD([dispid(101)], HRESULT, 'Copy'),
    COMMETHOD([dispid(102)], HRESULT, 'Cut'),
    COMMETHOD([dispid(103)], HRESULT, 'Delete'),
]
################################################################
## code template for FormField implementation
##class FormField_Impl(object):
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Creator(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Type(self):
##        '-no docstring-'
##        #return prop
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    Name = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    EntryMacro = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    ExitMacro = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    OwnHelp = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    OwnStatus = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    HelpText = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    StatusText = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    Enabled = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    Result = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def TextInput(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def CheckBox(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def DropDown(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Next(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Previous(self):
##        '-no docstring-'
##        #return prop
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    CalculateOnExit = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Range(self):
##        '-no docstring-'
##        #return prop
##
##    def Select(self):
##        '-no docstring-'
##        #return 
##
##    def Copy(self):
##        '-no docstring-'
##        #return 
##
##    def Cut(self):
##        '-no docstring-'
##        #return 
##
##    def Delete(self):
##        '-no docstring-'
##        #return 
##

ChartCharacters._methods_ = [
    COMMETHOD([dispid(150), 'propget'], HRESULT, 'Parent',
              ( ['out', 'retval'], POINTER(POINTER(IDispatch)), 'prop' )),
    COMMETHOD([dispid(139), 'propget'], HRESULT, 'Caption',
              ( ['out', 'retval'], POINTER(BSTR), 'prop' )),
    COMMETHOD([dispid(139), 'propput'], HRESULT, 'Caption',
              ( ['in'], BSTR, 'prop' )),
    COMMETHOD([dispid(118), 'propget'], HRESULT, 'Count',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(117)], HRESULT, 'Delete',
              ( ['out', 'retval'], POINTER(VARIANT), 'prop' )),
    COMMETHOD([dispid(146), 'propget'], HRESULT, 'Font',
              ( ['out', 'retval'], POINTER(POINTER(ChartFont)), 'prop' )),
    COMMETHOD([dispid(252)], HRESULT, 'Insert',
              ( ['in'], BSTR, 'String' ),
              ( ['out', 'retval'], POINTER(VARIANT), 'prop' )),
    COMMETHOD([dispid(138), 'propget'], HRESULT, 'Text',
              ( ['out', 'retval'], POINTER(BSTR), 'prop' )),
    COMMETHOD([dispid(138), 'propput'], HRESULT, 'Text',
              ( ['in'], BSTR, 'prop' )),
    COMMETHOD([dispid(1522), 'propget'], HRESULT, 'PhoneticCharacters',
              ( ['out', 'retval'], POINTER(BSTR), 'prop' )),
    COMMETHOD([dispid(1522), 'propput'], HRESULT, 'PhoneticCharacters',
              ( ['in'], BSTR, 'prop' )),
    COMMETHOD([dispid(148), 'propget'], HRESULT, 'Application',
              ( ['out', 'retval'], POINTER(POINTER(IDispatch)), 'prop' )),
    COMMETHOD([dispid(149), 'propget'], HRESULT, 'Creator',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
]
################################################################
## code template for ChartCharacters implementation
##class ChartCharacters_Impl(object):
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return prop
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    Caption = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Count(self):
##        '-no docstring-'
##        #return prop
##
##    def Delete(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Font(self):
##        '-no docstring-'
##        #return prop
##
##    def Insert(self, String):
##        '-no docstring-'
##        #return prop
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    Text = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    PhoneticCharacters = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Creator(self):
##        '-no docstring-'
##        #return prop
##


# values for enumeration 'WdListLevelAlignment'
wdListLevelAlignLeft = 0
wdListLevelAlignCenter = 1
wdListLevelAlignRight = 2
WdListLevelAlignment = c_int # enum
TextEffectFormat._methods_ = [
    COMMETHOD([dispid(1000), 'propget'], HRESULT, 'Application',
              ( ['out', 'retval'], POINTER(POINTER(Application)), 'prop' )),
    COMMETHOD([dispid(1001), 'propget'], HRESULT, 'Creator',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(1), 'propget'], HRESULT, 'Parent',
              ( ['out', 'retval'], POINTER(POINTER(IDispatch)), 'prop' )),
    COMMETHOD([dispid(100), 'propget'], HRESULT, 'Alignment',
              ( ['out', 'retval'], POINTER(comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoTextEffectAlignment), 'prop' )),
    COMMETHOD([dispid(100), 'propput'], HRESULT, 'Alignment',
              ( ['in'], comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoTextEffectAlignment, 'prop' )),
    COMMETHOD([dispid(101), 'propget'], HRESULT, 'FontBold',
              ( ['out', 'retval'], POINTER(comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoTriState), 'prop' )),
    COMMETHOD([dispid(101), 'propput'], HRESULT, 'FontBold',
              ( ['in'], comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoTriState, 'prop' )),
    COMMETHOD([dispid(102), 'propget'], HRESULT, 'FontItalic',
              ( ['out', 'retval'], POINTER(comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoTriState), 'prop' )),
    COMMETHOD([dispid(102), 'propput'], HRESULT, 'FontItalic',
              ( ['in'], comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoTriState, 'prop' )),
    COMMETHOD([dispid(103), 'propget'], HRESULT, 'FontName',
              ( ['out', 'retval'], POINTER(BSTR), 'prop' )),
    COMMETHOD([dispid(103), 'propput'], HRESULT, 'FontName',
              ( ['in'], BSTR, 'prop' )),
    COMMETHOD([dispid(104), 'propget'], HRESULT, 'FontSize',
              ( ['out', 'retval'], POINTER(c_float), 'prop' )),
    COMMETHOD([dispid(104), 'propput'], HRESULT, 'FontSize',
              ( ['in'], c_float, 'prop' )),
    COMMETHOD([dispid(105), 'propget'], HRESULT, 'KernedPairs',
              ( ['out', 'retval'], POINTER(comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoTriState), 'prop' )),
    COMMETHOD([dispid(105), 'propput'], HRESULT, 'KernedPairs',
              ( ['in'], comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoTriState, 'prop' )),
    COMMETHOD([dispid(106), 'propget'], HRESULT, 'NormalizedHeight',
              ( ['out', 'retval'], POINTER(comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoTriState), 'prop' )),
    COMMETHOD([dispid(106), 'propput'], HRESULT, 'NormalizedHeight',
              ( ['in'], comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoTriState, 'prop' )),
    COMMETHOD([dispid(107), 'propget'], HRESULT, 'PresetShape',
              ( ['out', 'retval'], POINTER(comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoPresetTextEffectShape), 'prop' )),
    COMMETHOD([dispid(107), 'propput'], HRESULT, 'PresetShape',
              ( ['in'], comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoPresetTextEffectShape, 'prop' )),
    COMMETHOD([dispid(108), 'propget'], HRESULT, 'PresetTextEffect',
              ( ['out', 'retval'], POINTER(comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoPresetTextEffect), 'prop' )),
    COMMETHOD([dispid(108), 'propput'], HRESULT, 'PresetTextEffect',
              ( ['in'], comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoPresetTextEffect, 'prop' )),
    COMMETHOD([dispid(109), 'propget'], HRESULT, 'RotatedChars',
              ( ['out', 'retval'], POINTER(comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoTriState), 'prop' )),
    COMMETHOD([dispid(109), 'propput'], HRESULT, 'RotatedChars',
              ( ['in'], comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoTriState, 'prop' )),
    COMMETHOD([dispid(110), 'propget'], HRESULT, 'Text',
              ( ['out', 'retval'], POINTER(BSTR), 'prop' )),
    COMMETHOD([dispid(110), 'propput'], HRESULT, 'Text',
              ( ['in'], BSTR, 'prop' )),
    COMMETHOD([dispid(111), 'propget'], HRESULT, 'Tracking',
              ( ['out', 'retval'], POINTER(c_float), 'prop' )),
    COMMETHOD([dispid(111), 'propput'], HRESULT, 'Tracking',
              ( ['in'], c_float, 'prop' )),
    COMMETHOD([dispid(10)], HRESULT, 'ToggleVerticalText'),
]
################################################################
## code template for TextEffectFormat implementation
##class TextEffectFormat_Impl(object):
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Creator(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return prop
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    Alignment = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    FontBold = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    FontItalic = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    FontName = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    FontSize = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    KernedPairs = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    NormalizedHeight = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    PresetShape = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    PresetTextEffect = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    RotatedChars = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    Text = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    Tracking = property(_get, _set, doc = _set.__doc__)
##
##    def ToggleVerticalText(self):
##        '-no docstring-'
##        #return 
##

class ChartColorFormat(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{DD8F80B8-9B80-4E89-9BEC-F12DF35E43B3}')
    _idlflags_ = ['dual', 'nonextensible', 'oleautomation']
ChartColorFormat._methods_ = [
    COMMETHOD([dispid(150), 'propget'], HRESULT, 'Parent',
              ( ['out', 'retval'], POINTER(POINTER(IDispatch)), 'prop' )),
    COMMETHOD([dispid(1646), 'propget'], HRESULT, 'SchemeColor',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(1646), 'propput'], HRESULT, 'SchemeColor',
              ( ['in'], c_int, 'prop' )),
    COMMETHOD([dispid(1055), 'propget'], HRESULT, 'RGB',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(1610743813), 'nonbrowsable', 'propget'], HRESULT, '_Default',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(108), 'propget'], HRESULT, 'Type',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(148), 'propget'], HRESULT, 'Application',
              ( ['out', 'retval'], POINTER(POINTER(IDispatch)), 'prop' )),
    COMMETHOD([dispid(149), 'propget'], HRESULT, 'Creator',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
]
################################################################
## code template for ChartColorFormat implementation
##class ChartColorFormat_Impl(object):
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return prop
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    SchemeColor = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def RGB(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def _Default(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Type(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Creator(self):
##        '-no docstring-'
##        #return prop
##


# values for enumeration 'WdVisualSelection'
wdVisualSelectionBlock = 0
wdVisualSelectionContinuous = 1
WdVisualSelection = c_int # enum

# values for enumeration 'WdCursorType'
wdCursorWait = 0
wdCursorIBeam = 1
wdCursorNormal = 2
wdCursorNorthwestArrow = 3
WdCursorType = c_int # enum
class Tasks(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{00020983-0000-0000-C000-000000000046}')
    _idlflags_ = ['dual', 'nonextensible', 'oleautomation']
Tasks._methods_ = [
    COMMETHOD([dispid(1000), 'propget'], HRESULT, 'Application',
              ( ['out', 'retval'], POINTER(POINTER(Application)), 'prop' )),
    COMMETHOD([dispid(1001), 'propget'], HRESULT, 'Creator',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(1002), 'propget'], HRESULT, 'Parent',
              ( ['out', 'retval'], POINTER(POINTER(IDispatch)), 'prop' )),
    COMMETHOD([dispid(-4), 'nonbrowsable', 'propget'], HRESULT, '_NewEnum',
              ( ['out', 'retval'], POINTER(POINTER(IUnknown)), 'prop' )),
    COMMETHOD([dispid(1), 'propget'], HRESULT, 'Count',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(0)], HRESULT, 'Item',
              ( ['in'], POINTER(VARIANT), 'Index' ),
              ( ['out', 'retval'], POINTER(POINTER(Task)), 'prop' )),
    COMMETHOD([dispid(2)], HRESULT, 'Exists',
              ( ['in'], BSTR, 'Name' ),
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'prop' )),
    COMMETHOD([dispid(3)], HRESULT, 'ExitWindows'),
]
################################################################
## code template for Tasks implementation
##class Tasks_Impl(object):
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Creator(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def _NewEnum(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Count(self):
##        '-no docstring-'
##        #return prop
##
##    def Item(self, Index):
##        '-no docstring-'
##        #return prop
##
##    def Exists(self, Name):
##        '-no docstring-'
##        #return prop
##
##    def ExitWindows(self):
##        '-no docstring-'
##        #return 
##


# values for enumeration 'XlTrendlineType'
xlExponential = 5
xlLinear = -4132
xlLogarithmic = -4133
xlMovingAvg = 6
xlPolynomial = 3
xlPower = 4
XlTrendlineType = c_int # enum
class PageSetup(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{00020971-0000-0000-C000-000000000046}')
    _idlflags_ = ['dual', 'nonextensible', 'oleautomation']

# values for enumeration 'WdOrientation'
wdOrientPortrait = 0
wdOrientLandscape = 1
WdOrientation = c_int # enum

# values for enumeration 'WdVerticalAlignment'
wdAlignVerticalTop = 0
wdAlignVerticalCenter = 1
wdAlignVerticalJustify = 2
wdAlignVerticalBottom = 3
WdVerticalAlignment = c_int # enum

# values for enumeration 'WdSectionStart'
wdSectionContinuous = 0
wdSectionNewColumn = 1
wdSectionNewPage = 2
wdSectionEvenPage = 3
wdSectionOddPage = 4
WdSectionStart = c_int # enum
class LineNumbering(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{00020972-0000-0000-C000-000000000046}')
    _idlflags_ = ['dual', 'nonextensible', 'oleautomation']
class TextColumns(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{00020973-0000-0000-C000-000000000046}')
    _idlflags_ = ['dual', 'nonextensible', 'oleautomation']

# values for enumeration 'WdPaperSize'
wdPaper10x14 = 0
wdPaper11x17 = 1
wdPaperLetter = 2
wdPaperLetterSmall = 3
wdPaperLegal = 4
wdPaperExecutive = 5
wdPaperA3 = 6
wdPaperA4 = 7
wdPaperA4Small = 8
wdPaperA5 = 9
wdPaperB4 = 10
wdPaperB5 = 11
wdPaperCSheet = 12
wdPaperDSheet = 13
wdPaperESheet = 14
wdPaperFanfoldLegalGerman = 15
wdPaperFanfoldStdGerman = 16
wdPaperFanfoldUS = 17
wdPaperFolio = 18
wdPaperLedger = 19
wdPaperNote = 20
wdPaperQuarto = 21
wdPaperStatement = 22
wdPaperTabloid = 23
wdPaperEnvelope9 = 24
wdPaperEnvelope10 = 25
wdPaperEnvelope11 = 26
wdPaperEnvelope12 = 27
wdPaperEnvelope14 = 28
wdPaperEnvelopeB4 = 29
wdPaperEnvelopeB5 = 30
wdPaperEnvelopeB6 = 31
wdPaperEnvelopeC3 = 32
wdPaperEnvelopeC4 = 33
wdPaperEnvelopeC5 = 34
wdPaperEnvelopeC6 = 35
wdPaperEnvelopeC65 = 36
wdPaperEnvelopeDL = 37
wdPaperEnvelopeItaly = 38
wdPaperEnvelopeMonarch = 39
wdPaperEnvelopePersonal = 40
wdPaperCustom = 41
WdPaperSize = c_int # enum

# values for enumeration 'WdLayoutMode'
wdLayoutModeDefault = 0
wdLayoutModeGrid = 1
wdLayoutModeLineGrid = 2
wdLayoutModeGenko = 3
WdLayoutMode = c_int # enum
PageSetup._methods_ = [
    COMMETHOD([dispid(1000), 'propget'], HRESULT, 'Application',
              ( ['out', 'retval'], POINTER(POINTER(Application)), 'prop' )),
    COMMETHOD([dispid(1001), 'propget'], HRESULT, 'Creator',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(1002), 'propget'], HRESULT, 'Parent',
              ( ['out', 'retval'], POINTER(POINTER(IDispatch)), 'prop' )),
    COMMETHOD([dispid(100), 'propget'], HRESULT, 'TopMargin',
              ( ['out', 'retval'], POINTER(c_float), 'prop' )),
    COMMETHOD([dispid(100), 'propput'], HRESULT, 'TopMargin',
              ( ['in'], c_float, 'prop' )),
    COMMETHOD([dispid(101), 'propget'], HRESULT, 'BottomMargin',
              ( ['out', 'retval'], POINTER(c_float), 'prop' )),
    COMMETHOD([dispid(101), 'propput'], HRESULT, 'BottomMargin',
              ( ['in'], c_float, 'prop' )),
    COMMETHOD([dispid(102), 'propget'], HRESULT, 'LeftMargin',
              ( ['out', 'retval'], POINTER(c_float), 'prop' )),
    COMMETHOD([dispid(102), 'propput'], HRESULT, 'LeftMargin',
              ( ['in'], c_float, 'prop' )),
    COMMETHOD([dispid(103), 'propget'], HRESULT, 'RightMargin',
              ( ['out', 'retval'], POINTER(c_float), 'prop' )),
    COMMETHOD([dispid(103), 'propput'], HRESULT, 'RightMargin',
              ( ['in'], c_float, 'prop' )),
    COMMETHOD([dispid(104), 'propget'], HRESULT, 'Gutter',
              ( ['out', 'retval'], POINTER(c_float), 'prop' )),
    COMMETHOD([dispid(104), 'propput'], HRESULT, 'Gutter',
              ( ['in'], c_float, 'prop' )),
    COMMETHOD([dispid(105), 'propget'], HRESULT, 'PageWidth',
              ( ['out', 'retval'], POINTER(c_float), 'prop' )),
    COMMETHOD([dispid(105), 'propput'], HRESULT, 'PageWidth',
              ( ['in'], c_float, 'prop' )),
    COMMETHOD([dispid(106), 'propget'], HRESULT, 'PageHeight',
              ( ['out', 'retval'], POINTER(c_float), 'prop' )),
    COMMETHOD([dispid(106), 'propput'], HRESULT, 'PageHeight',
              ( ['in'], c_float, 'prop' )),
    COMMETHOD([dispid(107), 'propget'], HRESULT, 'Orientation',
              ( ['out', 'retval'], POINTER(WdOrientation), 'prop' )),
    COMMETHOD([dispid(107), 'propput'], HRESULT, 'Orientation',
              ( ['in'], WdOrientation, 'prop' )),
    COMMETHOD([dispid(108), 'propget'], HRESULT, 'FirstPageTray',
              ( ['out', 'retval'], POINTER(WdPaperTray), 'prop' )),
    COMMETHOD([dispid(108), 'propput'], HRESULT, 'FirstPageTray',
              ( ['in'], WdPaperTray, 'prop' )),
    COMMETHOD([dispid(109), 'propget'], HRESULT, 'OtherPagesTray',
              ( ['out', 'retval'], POINTER(WdPaperTray), 'prop' )),
    COMMETHOD([dispid(109), 'propput'], HRESULT, 'OtherPagesTray',
              ( ['in'], WdPaperTray, 'prop' )),
    COMMETHOD([dispid(110), 'propget'], HRESULT, 'VerticalAlignment',
              ( ['out', 'retval'], POINTER(WdVerticalAlignment), 'prop' )),
    COMMETHOD([dispid(110), 'propput'], HRESULT, 'VerticalAlignment',
              ( ['in'], WdVerticalAlignment, 'prop' )),
    COMMETHOD([dispid(111), 'propget'], HRESULT, 'MirrorMargins',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(111), 'propput'], HRESULT, 'MirrorMargins',
              ( ['in'], c_int, 'prop' )),
    COMMETHOD([dispid(112), 'propget'], HRESULT, 'HeaderDistance',
              ( ['out', 'retval'], POINTER(c_float), 'prop' )),
    COMMETHOD([dispid(112), 'propput'], HRESULT, 'HeaderDistance',
              ( ['in'], c_float, 'prop' )),
    COMMETHOD([dispid(113), 'propget'], HRESULT, 'FooterDistance',
              ( ['out', 'retval'], POINTER(c_float), 'prop' )),
    COMMETHOD([dispid(113), 'propput'], HRESULT, 'FooterDistance',
              ( ['in'], c_float, 'prop' )),
    COMMETHOD([dispid(114), 'propget'], HRESULT, 'SectionStart',
              ( ['out', 'retval'], POINTER(WdSectionStart), 'prop' )),
    COMMETHOD([dispid(114), 'propput'], HRESULT, 'SectionStart',
              ( ['in'], WdSectionStart, 'prop' )),
    COMMETHOD([dispid(115), 'propget'], HRESULT, 'OddAndEvenPagesHeaderFooter',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(115), 'propput'], HRESULT, 'OddAndEvenPagesHeaderFooter',
              ( ['in'], c_int, 'prop' )),
    COMMETHOD([dispid(116), 'propget'], HRESULT, 'DifferentFirstPageHeaderFooter',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(116), 'propput'], HRESULT, 'DifferentFirstPageHeaderFooter',
              ( ['in'], c_int, 'prop' )),
    COMMETHOD([dispid(117), 'propget'], HRESULT, 'SuppressEndnotes',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(117), 'propput'], HRESULT, 'SuppressEndnotes',
              ( ['in'], c_int, 'prop' )),
    COMMETHOD([dispid(118), 'propget'], HRESULT, 'LineNumbering',
              ( ['out', 'retval'], POINTER(POINTER(LineNumbering)), 'prop' )),
    COMMETHOD([dispid(118), 'propput'], HRESULT, 'LineNumbering',
              ( ['in'], POINTER(LineNumbering), 'prop' )),
    COMMETHOD([dispid(119), 'propget'], HRESULT, 'TextColumns',
              ( ['out', 'retval'], POINTER(POINTER(TextColumns)), 'prop' )),
    COMMETHOD([dispid(119), 'propput'], HRESULT, 'TextColumns',
              ( ['in'], POINTER(TextColumns), 'prop' )),
    COMMETHOD([dispid(120), 'propget'], HRESULT, 'PaperSize',
              ( ['out', 'retval'], POINTER(WdPaperSize), 'prop' )),
    COMMETHOD([dispid(120), 'propput'], HRESULT, 'PaperSize',
              ( ['in'], WdPaperSize, 'prop' )),
    COMMETHOD([dispid(121), 'propget'], HRESULT, 'TwoPagesOnOne',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'prop' )),
    COMMETHOD([dispid(121), 'propput'], HRESULT, 'TwoPagesOnOne',
              ( ['in'], VARIANT_BOOL, 'prop' )),
    COMMETHOD([dispid(122), 'hidden', 'propget'], HRESULT, 'GutterOnTop',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'prop' )),
    COMMETHOD([dispid(122), 'hidden', 'propput'], HRESULT, 'GutterOnTop',
              ( ['in'], VARIANT_BOOL, 'prop' )),
    COMMETHOD([dispid(123), 'propget'], HRESULT, 'CharsLine',
              ( ['out', 'retval'], POINTER(c_float), 'prop' )),
    COMMETHOD([dispid(123), 'propput'], HRESULT, 'CharsLine',
              ( ['in'], c_float, 'prop' )),
    COMMETHOD([dispid(124), 'propget'], HRESULT, 'LinesPage',
              ( ['out', 'retval'], POINTER(c_float), 'prop' )),
    COMMETHOD([dispid(124), 'propput'], HRESULT, 'LinesPage',
              ( ['in'], c_float, 'prop' )),
    COMMETHOD([dispid(128), 'propget'], HRESULT, 'ShowGrid',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'prop' )),
    COMMETHOD([dispid(128), 'propput'], HRESULT, 'ShowGrid',
              ( ['in'], VARIANT_BOOL, 'prop' )),
    COMMETHOD([dispid(201)], HRESULT, 'TogglePortrait'),
    COMMETHOD([dispid(202)], HRESULT, 'SetAsTemplateDefault'),
    COMMETHOD([dispid(129), 'propget'], HRESULT, 'GutterStyle',
              ( ['out', 'retval'], POINTER(WdGutterStyleOld), 'prop' )),
    COMMETHOD([dispid(129), 'propput'], HRESULT, 'GutterStyle',
              ( ['in'], WdGutterStyleOld, 'prop' )),
    COMMETHOD([dispid(130), 'propget'], HRESULT, 'SectionDirection',
              ( ['out', 'retval'], POINTER(WdSectionDirection), 'prop' )),
    COMMETHOD([dispid(130), 'propput'], HRESULT, 'SectionDirection',
              ( ['in'], WdSectionDirection, 'prop' )),
    COMMETHOD([dispid(131), 'propget'], HRESULT, 'LayoutMode',
              ( ['out', 'retval'], POINTER(WdLayoutMode), 'prop' )),
    COMMETHOD([dispid(131), 'propput'], HRESULT, 'LayoutMode',
              ( ['in'], WdLayoutMode, 'prop' )),
    COMMETHOD([dispid(1222), 'propget'], HRESULT, 'GutterPos',
              ( ['out', 'retval'], POINTER(WdGutterStyle), 'prop' )),
    COMMETHOD([dispid(1222), 'propput'], HRESULT, 'GutterPos',
              ( ['in'], WdGutterStyle, 'prop' )),
    COMMETHOD([dispid(1223), 'propget'], HRESULT, 'BookFoldPrinting',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'prop' )),
    COMMETHOD([dispid(1223), 'propput'], HRESULT, 'BookFoldPrinting',
              ( ['in'], VARIANT_BOOL, 'prop' )),
    COMMETHOD([dispid(1224), 'propget'], HRESULT, 'BookFoldRevPrinting',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'prop' )),
    COMMETHOD([dispid(1224), 'propput'], HRESULT, 'BookFoldRevPrinting',
              ( ['in'], VARIANT_BOOL, 'prop' )),
    COMMETHOD([dispid(1225), 'propget'], HRESULT, 'BookFoldPrintingSheets',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(1225), 'propput'], HRESULT, 'BookFoldPrintingSheets',
              ( ['in'], c_int, 'prop' )),
]
################################################################
## code template for PageSetup implementation
##class PageSetup_Impl(object):
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Creator(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return prop
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    TopMargin = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    BottomMargin = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    LeftMargin = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    RightMargin = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    Gutter = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    PageWidth = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    PageHeight = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    Orientation = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    FirstPageTray = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    OtherPagesTray = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    VerticalAlignment = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    MirrorMargins = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    HeaderDistance = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    FooterDistance = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    SectionStart = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    OddAndEvenPagesHeaderFooter = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    DifferentFirstPageHeaderFooter = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    SuppressEndnotes = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    LineNumbering = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    TextColumns = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    PaperSize = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    TwoPagesOnOne = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    GutterOnTop = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    CharsLine = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    LinesPage = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    ShowGrid = property(_get, _set, doc = _set.__doc__)
##
##    def TogglePortrait(self):
##        '-no docstring-'
##        #return 
##
##    def SetAsTemplateDefault(self):
##        '-no docstring-'
##        #return 
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    GutterStyle = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    SectionDirection = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    LayoutMode = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    GutterPos = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    BookFoldPrinting = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    BookFoldRevPrinting = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    BookFoldPrintingSheets = property(_get, _set, doc = _set.__doc__)
##


# values for enumeration 'WdSpanishSpeller'
wdSpanishTuteoOnly = 0
wdSpanishTuteoAndVoseo = 1
wdSpanishVoseoOnly = 2
WdSpanishSpeller = c_int # enum

# values for enumeration 'XlErrorBarType'
xlErrorBarTypeCustom = -4114
xlErrorBarTypeFixedValue = 1
xlErrorBarTypePercent = 2
xlErrorBarTypeStDev = -4155
xlErrorBarTypeStError = 4
XlErrorBarType = c_int # enum

# values for enumeration 'WdFrenchSpeller'
wdFrenchBoth = 0
wdFrenchPreReform = 1
wdFrenchPostReform = 2
WdFrenchSpeller = c_int # enum
class UndoRecord(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{E598E358-2852-42D4-8775-160BD91B7244}')
    _idlflags_ = ['dual', 'nonextensible', 'oleautomation']
UndoRecord._methods_ = [
    COMMETHOD([dispid(1000), 'propget'], HRESULT, 'Application',
              ( ['out', 'retval'], POINTER(POINTER(Application)), 'prop' )),
    COMMETHOD([dispid(1001), 'propget'], HRESULT, 'Creator',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(1002), 'propget'], HRESULT, 'Parent',
              ( ['out', 'retval'], POINTER(POINTER(IDispatch)), 'prop' )),
    COMMETHOD([dispid(1)], HRESULT, 'StartCustomRecord',
              ( ['in', 'optional'], BSTR, 'Name' )),
    COMMETHOD([dispid(2)], HRESULT, 'EndCustomRecord'),
    COMMETHOD([dispid(3), 'propget'], HRESULT, 'IsRecordingCustomRecord',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'prop' )),
    COMMETHOD([dispid(4), 'propget'], HRESULT, 'CustomRecordName',
              ( ['out', 'retval'], POINTER(BSTR), 'prop' )),
    COMMETHOD([dispid(5), 'propget'], HRESULT, 'CustomRecordLevel',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
]
################################################################
## code template for UndoRecord implementation
##class UndoRecord_Impl(object):
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Creator(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return prop
##
##    def StartCustomRecord(self, Name):
##        '-no docstring-'
##        #return 
##
##    def EndCustomRecord(self):
##        '-no docstring-'
##        #return 
##
##    @property
##    def IsRecordingCustomRecord(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def CustomRecordName(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def CustomRecordLevel(self):
##        '-no docstring-'
##        #return prop
##


# values for enumeration 'WdHorizontalLineWidthType'
wdHorizontalLinePercentWidth = -1
wdHorizontalLineFixedWidth = -2
WdHorizontalLineWidthType = c_int # enum
class System(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{00020935-0000-0000-C000-000000000046}')
    _idlflags_ = ['dual', 'nonextensible', 'oleautomation']

# values for enumeration 'WdCountry'
wdUS = 1
wdCanada = 2
wdLatinAmerica = 3
wdNetherlands = 31
wdFrance = 33
wdSpain = 34
wdItaly = 39
wdUK = 44
wdDenmark = 45
wdSweden = 46
wdNorway = 47
wdGermany = 49
wdPeru = 51
wdMexico = 52
wdArgentina = 54
wdBrazil = 55
wdChile = 56
wdVenezuela = 58
wdJapan = 81
wdTaiwan = 886
wdChina = 86
wdKorea = 82
wdFinland = 358
wdIceland = 354
WdCountry = c_int # enum
System._methods_ = [
    COMMETHOD([dispid(1000), 'propget'], HRESULT, 'Application',
              ( ['out', 'retval'], POINTER(POINTER(Application)), 'prop' )),
    COMMETHOD([dispid(1001), 'propget'], HRESULT, 'Creator',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(1002), 'propget'], HRESULT, 'Parent',
              ( ['out', 'retval'], POINTER(POINTER(IDispatch)), 'prop' )),
    COMMETHOD([dispid(1), 'propget'], HRESULT, 'OperatingSystem',
              ( ['out', 'retval'], POINTER(BSTR), 'prop' )),
    COMMETHOD([dispid(2), 'hidden', 'propget'], HRESULT, 'ProcessorType',
              ( ['out', 'retval'], POINTER(BSTR), 'prop' )),
    COMMETHOD([dispid(3), 'propget'], HRESULT, 'Version',
              ( ['out', 'retval'], POINTER(BSTR), 'prop' )),
    COMMETHOD([dispid(4), 'propget'], HRESULT, 'FreeDiskSpace',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(5), 'hidden', 'propget'], HRESULT, 'Country',
              ( ['out', 'retval'], POINTER(WdCountry), 'prop' )),
    COMMETHOD([dispid(6), 'propget'], HRESULT, 'LanguageDesignation',
              ( ['out', 'retval'], POINTER(BSTR), 'prop' )),
    COMMETHOD([dispid(7), 'propget'], HRESULT, 'HorizontalResolution',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(8), 'propget'], HRESULT, 'VerticalResolution',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(9), 'propget'], HRESULT, 'ProfileString',
              ( ['in'], BSTR, 'Section' ),
              ( ['in'], BSTR, 'Key' ),
              ( ['out', 'retval'], POINTER(BSTR), 'prop' )),
    COMMETHOD([dispid(9), 'propput'], HRESULT, 'ProfileString',
              ( ['in'], BSTR, 'Section' ),
              ( ['in'], BSTR, 'Key' ),
              ( ['in'], BSTR, 'prop' )),
    COMMETHOD([dispid(10), 'propget'], HRESULT, 'PrivateProfileString',
              ( ['in'], BSTR, 'FileName' ),
              ( ['in'], BSTR, 'Section' ),
              ( ['in'], BSTR, 'Key' ),
              ( ['out', 'retval'], POINTER(BSTR), 'prop' )),
    COMMETHOD([dispid(10), 'propput'], HRESULT, 'PrivateProfileString',
              ( ['in'], BSTR, 'FileName' ),
              ( ['in'], BSTR, 'Section' ),
              ( ['in'], BSTR, 'Key' ),
              ( ['in'], BSTR, 'prop' )),
    COMMETHOD([dispid(11), 'propget'], HRESULT, 'MathCoprocessorInstalled',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'prop' )),
    COMMETHOD([dispid(12), 'propget'], HRESULT, 'ComputerType',
              ( ['out', 'retval'], POINTER(BSTR), 'prop' )),
    COMMETHOD([dispid(14), 'propget'], HRESULT, 'MacintoshName',
              ( ['out', 'retval'], POINTER(BSTR), 'prop' )),
    COMMETHOD([dispid(15), 'propget'], HRESULT, 'QuickDrawInstalled',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'prop' )),
    COMMETHOD([dispid(16), 'propget'], HRESULT, 'Cursor',
              ( ['out', 'retval'], POINTER(WdCursorType), 'prop' )),
    COMMETHOD([dispid(16), 'propput'], HRESULT, 'Cursor',
              ( ['in'], WdCursorType, 'prop' )),
    COMMETHOD([dispid(101)], HRESULT, 'MSInfo'),
    COMMETHOD([dispid(102)], HRESULT, 'Connect',
              ( ['in'], BSTR, 'Path' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'Drive' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'Password' )),
    COMMETHOD([dispid(103), 'propget'], HRESULT, 'CountryRegion',
              ( ['out', 'retval'], POINTER(WdCountry), 'prop' )),
]
################################################################
## code template for System implementation
##class System_Impl(object):
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Creator(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def OperatingSystem(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def ProcessorType(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Version(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def FreeDiskSpace(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Country(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def LanguageDesignation(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def HorizontalResolution(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def VerticalResolution(self):
##        '-no docstring-'
##        #return prop
##
##    def _get(self, Section, Key):
##        '-no docstring-'
##        #return prop
##    def _set(self, Section, Key, prop):
##        '-no docstring-'
##    ProfileString = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self, FileName, Section, Key):
##        '-no docstring-'
##        #return prop
##    def _set(self, FileName, Section, Key, prop):
##        '-no docstring-'
##    PrivateProfileString = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def MathCoprocessorInstalled(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def ComputerType(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def MacintoshName(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def QuickDrawInstalled(self):
##        '-no docstring-'
##        #return prop
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    Cursor = property(_get, _set, doc = _set.__doc__)
##
##    def MSInfo(self):
##        '-no docstring-'
##        #return 
##
##    def Connect(self, Path, Drive, Password):
##        '-no docstring-'
##        #return 
##
##    @property
##    def CountryRegion(self):
##        '-no docstring-'
##        #return prop
##

class IApplicationEvents3(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{00020A00-0001-0000-C000-000000000046}')
    _idlflags_ = ['hidden', 'dual', 'nonextensible', 'oleautomation']
class Window(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{00020962-0000-0000-C000-000000000046}')
    _idlflags_ = ['dual', 'nonextensible', 'oleautomation']
class Selection(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{00020975-0000-0000-C000-000000000046}')
    _idlflags_ = ['dual', 'nonextensible', 'oleautomation']
IApplicationEvents3._methods_ = [
    COMMETHOD([dispid(1), 'restricted', 'hidden'], HRESULT, 'Startup'),
    COMMETHOD([dispid(2)], HRESULT, 'Quit'),
    COMMETHOD([dispid(3)], HRESULT, 'DocumentChange'),
    COMMETHOD([dispid(4)], HRESULT, 'DocumentOpen',
              ( ['in'], POINTER(Document), 'Doc' )),
    COMMETHOD([dispid(6)], HRESULT, 'DocumentBeforeClose',
              ( ['in'], POINTER(Document), 'Doc' ),
              ( ['in'], POINTER(VARIANT_BOOL), 'Cancel' )),
    COMMETHOD([dispid(7)], HRESULT, 'DocumentBeforePrint',
              ( ['in'], POINTER(Document), 'Doc' ),
              ( ['in'], POINTER(VARIANT_BOOL), 'Cancel' )),
    COMMETHOD([dispid(8)], HRESULT, 'DocumentBeforeSave',
              ( ['in'], POINTER(Document), 'Doc' ),
              ( ['in'], POINTER(VARIANT_BOOL), 'SaveAsUI' ),
              ( ['in'], POINTER(VARIANT_BOOL), 'Cancel' )),
    COMMETHOD([dispid(9)], HRESULT, 'NewDocument',
              ( ['in'], POINTER(Document), 'Doc' )),
    COMMETHOD([dispid(10)], HRESULT, 'WindowActivate',
              ( ['in'], POINTER(Document), 'Doc' ),
              ( ['in'], POINTER(Window), 'Wn' )),
    COMMETHOD([dispid(11)], HRESULT, 'WindowDeactivate',
              ( ['in'], POINTER(Document), 'Doc' ),
              ( ['in'], POINTER(Window), 'Wn' )),
    COMMETHOD([dispid(12)], HRESULT, 'WindowSelectionChange',
              ( ['in'], POINTER(Selection), 'Sel' )),
    COMMETHOD([dispid(13)], HRESULT, 'WindowBeforeRightClick',
              ( ['in'], POINTER(Selection), 'Sel' ),
              ( ['in'], POINTER(VARIANT_BOOL), 'Cancel' )),
    COMMETHOD([dispid(14)], HRESULT, 'WindowBeforeDoubleClick',
              ( ['in'], POINTER(Selection), 'Sel' ),
              ( ['in'], POINTER(VARIANT_BOOL), 'Cancel' )),
    COMMETHOD([dispid(15)], HRESULT, 'EPostagePropertyDialog',
              ( ['in'], POINTER(Document), 'Doc' )),
    COMMETHOD([dispid(16)], HRESULT, 'EPostageInsert',
              ( ['in'], POINTER(Document), 'Doc' )),
    COMMETHOD([dispid(17)], HRESULT, 'MailMergeAfterMerge',
              ( ['in'], POINTER(Document), 'Doc' ),
              ( ['in'], POINTER(Document), 'DocResult' )),
    COMMETHOD([dispid(18)], HRESULT, 'MailMergeAfterRecordMerge',
              ( ['in'], POINTER(Document), 'Doc' )),
    COMMETHOD([dispid(19)], HRESULT, 'MailMergeBeforeMerge',
              ( ['in'], POINTER(Document), 'Doc' ),
              ( ['in'], c_int, 'StartRecord' ),
              ( ['in'], c_int, 'EndRecord' ),
              ( ['in'], POINTER(VARIANT_BOOL), 'Cancel' )),
    COMMETHOD([dispid(20)], HRESULT, 'MailMergeBeforeRecordMerge',
              ( ['in'], POINTER(Document), 'Doc' ),
              ( ['in'], POINTER(VARIANT_BOOL), 'Cancel' )),
    COMMETHOD([dispid(21)], HRESULT, 'MailMergeDataSourceLoad',
              ( ['in'], POINTER(Document), 'Doc' )),
    COMMETHOD([dispid(22)], HRESULT, 'MailMergeDataSourceValidate',
              ( ['in'], POINTER(Document), 'Doc' ),
              ( ['in'], POINTER(VARIANT_BOOL), 'Handled' )),
    COMMETHOD([dispid(23)], HRESULT, 'MailMergeWizardSendToCustom',
              ( ['in'], POINTER(Document), 'Doc' )),
    COMMETHOD([dispid(24)], HRESULT, 'MailMergeWizardStateChange',
              ( ['in'], POINTER(Document), 'Doc' ),
              ( ['in'], POINTER(c_int), 'FromState' ),
              ( ['in'], POINTER(c_int), 'ToState' ),
              ( ['in'], POINTER(VARIANT_BOOL), 'Handled' )),
    COMMETHOD([dispid(25)], HRESULT, 'WindowSize',
              ( ['in'], POINTER(Document), 'Doc' ),
              ( ['in'], POINTER(Window), 'Wn' )),
]
################################################################
## code template for IApplicationEvents3 implementation
##class IApplicationEvents3_Impl(object):
##    def Startup(self):
##        '-no docstring-'
##        #return 
##
##    def Quit(self):
##        '-no docstring-'
##        #return 
##
##    def DocumentChange(self):
##        '-no docstring-'
##        #return 
##
##    def DocumentOpen(self, Doc):
##        '-no docstring-'
##        #return 
##
##    def DocumentBeforeClose(self, Doc, Cancel):
##        '-no docstring-'
##        #return 
##
##    def DocumentBeforePrint(self, Doc, Cancel):
##        '-no docstring-'
##        #return 
##
##    def DocumentBeforeSave(self, Doc, SaveAsUI, Cancel):
##        '-no docstring-'
##        #return 
##
##    def NewDocument(self, Doc):
##        '-no docstring-'
##        #return 
##
##    def WindowActivate(self, Doc, Wn):
##        '-no docstring-'
##        #return 
##
##    def WindowDeactivate(self, Doc, Wn):
##        '-no docstring-'
##        #return 
##
##    def WindowSelectionChange(self, Sel):
##        '-no docstring-'
##        #return 
##
##    def WindowBeforeRightClick(self, Sel, Cancel):
##        '-no docstring-'
##        #return 
##
##    def WindowBeforeDoubleClick(self, Sel, Cancel):
##        '-no docstring-'
##        #return 
##
##    def EPostagePropertyDialog(self, Doc):
##        '-no docstring-'
##        #return 
##
##    def EPostageInsert(self, Doc):
##        '-no docstring-'
##        #return 
##
##    def MailMergeAfterMerge(self, Doc, DocResult):
##        '-no docstring-'
##        #return 
##
##    def MailMergeAfterRecordMerge(self, Doc):
##        '-no docstring-'
##        #return 
##
##    def MailMergeBeforeMerge(self, Doc, StartRecord, EndRecord, Cancel):
##        '-no docstring-'
##        #return 
##
##    def MailMergeBeforeRecordMerge(self, Doc, Cancel):
##        '-no docstring-'
##        #return 
##
##    def MailMergeDataSourceLoad(self, Doc):
##        '-no docstring-'
##        #return 
##
##    def MailMergeDataSourceValidate(self, Doc, Handled):
##        '-no docstring-'
##        #return 
##
##    def MailMergeWizardSendToCustom(self, Doc):
##        '-no docstring-'
##        #return 
##
##    def MailMergeWizardStateChange(self, Doc, FromState, ToState, Handled):
##        '-no docstring-'
##        #return 
##
##    def WindowSize(self, Doc, Wn):
##        '-no docstring-'
##        #return 
##


# values for enumeration 'XlLegendPosition'
xlLegendPositionBottom = -4107
xlLegendPositionCorner = 2
xlLegendPositionLeft = -4131
xlLegendPositionRight = -4152
xlLegendPositionTop = -4160
xlLegendPositionCustom = -4161
XlLegendPosition = c_int # enum

# values for enumeration 'WdNumberingRule'
wdRestartContinuous = 0
wdRestartSection = 1
wdRestartPage = 2
WdNumberingRule = c_int # enum
LineNumbering._methods_ = [
    COMMETHOD([dispid(1000), 'propget'], HRESULT, 'Application',
              ( ['out', 'retval'], POINTER(POINTER(Application)), 'prop' )),
    COMMETHOD([dispid(1001), 'propget'], HRESULT, 'Creator',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(1002), 'propget'], HRESULT, 'Parent',
              ( ['out', 'retval'], POINTER(POINTER(IDispatch)), 'prop' )),
    COMMETHOD([dispid(100), 'propget'], HRESULT, 'RestartMode',
              ( ['out', 'retval'], POINTER(WdNumberingRule), 'prop' )),
    COMMETHOD([dispid(100), 'propput'], HRESULT, 'RestartMode',
              ( ['in'], WdNumberingRule, 'prop' )),
    COMMETHOD([dispid(101), 'propget'], HRESULT, 'StartingNumber',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(101), 'propput'], HRESULT, 'StartingNumber',
              ( ['in'], c_int, 'prop' )),
    COMMETHOD([dispid(102), 'propget'], HRESULT, 'DistanceFromText',
              ( ['out', 'retval'], POINTER(c_float), 'prop' )),
    COMMETHOD([dispid(102), 'propput'], HRESULT, 'DistanceFromText',
              ( ['in'], c_float, 'prop' )),
    COMMETHOD([dispid(103), 'propget'], HRESULT, 'CountBy',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(103), 'propput'], HRESULT, 'CountBy',
              ( ['in'], c_int, 'prop' )),
    COMMETHOD([dispid(104), 'propget'], HRESULT, 'Active',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(104), 'propput'], HRESULT, 'Active',
              ( ['in'], c_int, 'prop' )),
]
################################################################
## code template for LineNumbering implementation
##class LineNumbering_Impl(object):
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Creator(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return prop
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    RestartMode = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    StartingNumber = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    DistanceFromText = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    CountBy = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    Active = property(_get, _set, doc = _set.__doc__)
##

class Variables(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{00020965-0000-0000-C000-000000000046}')
    _idlflags_ = ['dual', 'nonextensible', 'oleautomation']
class Variable(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{00020966-0000-0000-C000-000000000046}')
    _idlflags_ = ['dual', 'nonextensible', 'oleautomation']
Variables._methods_ = [
    COMMETHOD([dispid(-4), 'nonbrowsable', 'propget'], HRESULT, '_NewEnum',
              ( ['out', 'retval'], POINTER(POINTER(IUnknown)), 'prop' )),
    COMMETHOD([dispid(2), 'propget'], HRESULT, 'Count',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(1000), 'propget'], HRESULT, 'Application',
              ( ['out', 'retval'], POINTER(POINTER(Application)), 'prop' )),
    COMMETHOD([dispid(1001), 'propget'], HRESULT, 'Creator',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(1002), 'propget'], HRESULT, 'Parent',
              ( ['out', 'retval'], POINTER(POINTER(IDispatch)), 'prop' )),
    COMMETHOD([dispid(0)], HRESULT, 'Item',
              ( ['in'], POINTER(VARIANT), 'Index' ),
              ( ['out', 'retval'], POINTER(POINTER(Variable)), 'prop' )),
    COMMETHOD([dispid(7)], HRESULT, 'Add',
              ( ['in'], BSTR, 'Name' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'Value' ),
              ( ['out', 'retval'], POINTER(POINTER(Variable)), 'prop' )),
]
################################################################
## code template for Variables implementation
##class Variables_Impl(object):
##    @property
##    def _NewEnum(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Count(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Creator(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return prop
##
##    def Item(self, Index):
##        '-no docstring-'
##        #return prop
##
##    def Add(self, Name, Value):
##        '-no docstring-'
##        #return prop
##

class OMathRad(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{67A7EEC5-285D-4024-B071-BD6B33B88547}')
    _idlflags_ = ['dual', 'nonextensible', 'oleautomation']
OMathRad._methods_ = [
    COMMETHOD([dispid(100), 'propget'], HRESULT, 'Application',
              ( ['out', 'retval'], POINTER(POINTER(Application)), 'prop' )),
    COMMETHOD([dispid(101), 'propget'], HRESULT, 'Creator',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(102), 'propget'], HRESULT, 'Parent',
              ( ['out', 'retval'], POINTER(POINTER(IDispatch)), 'prop' )),
    COMMETHOD([dispid(103), 'propget'], HRESULT, 'Deg',
              ( ['out', 'retval'], POINTER(POINTER(OMath)), 'prop' )),
    COMMETHOD([dispid(104), 'propget'], HRESULT, 'E',
              ( ['out', 'retval'], POINTER(POINTER(OMath)), 'prop' )),
    COMMETHOD([dispid(105), 'propget'], HRESULT, 'HideDeg',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'prop' )),
    COMMETHOD([dispid(105), 'propput'], HRESULT, 'HideDeg',
              ( ['in'], VARIANT_BOOL, 'prop' )),
]
################################################################
## code template for OMathRad implementation
##class OMathRad_Impl(object):
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Creator(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Deg(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def E(self):
##        '-no docstring-'
##        #return prop
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    HideDeg = property(_get, _set, doc = _set.__doc__)
##

class Reviewer(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{47CEF4AE-DC32-4220-8AA5-19CCC0E6633A}')
    _idlflags_ = ['dual', 'nonextensible', 'oleautomation']
Reviewer._methods_ = [
    COMMETHOD([dispid(1000), 'propget'], HRESULT, 'Application',
              ( ['out', 'retval'], POINTER(POINTER(Application)), 'prop' )),
    COMMETHOD([dispid(1001), 'propget'], HRESULT, 'Creator',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(1002), 'propget'], HRESULT, 'Parent',
              ( ['out', 'retval'], POINTER(POINTER(IDispatch)), 'prop' )),
    COMMETHOD([dispid(0), 'propget'], HRESULT, 'Visible',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'prop' )),
    COMMETHOD([dispid(0), 'propput'], HRESULT, 'Visible',
              ( ['in'], VARIANT_BOOL, 'prop' )),
]
################################################################
## code template for Reviewer implementation
##class Reviewer_Impl(object):
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Creator(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return prop
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    Visible = property(_get, _set, doc = _set.__doc__)
##


# values for enumeration 'WdParagraphAlignment'
wdAlignParagraphLeft = 0
wdAlignParagraphCenter = 1
wdAlignParagraphRight = 2
wdAlignParagraphJustify = 3
wdAlignParagraphDistribute = 4
wdAlignParagraphJustifyMed = 5
wdAlignParagraphJustifyHi = 7
wdAlignParagraphJustifyLow = 8
wdAlignParagraphThaiJustify = 9
WdParagraphAlignment = c_int # enum

# values for enumeration 'WdParagraphAlignmentHID'
emptyenum = 0
WdParagraphAlignmentHID = c_int # enum
class Cell(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{0002094E-0000-0000-C000-000000000046}')
    _idlflags_ = ['dual', 'nonextensible', 'oleautomation']

# values for enumeration 'WdRowHeightRule'
wdRowHeightAuto = 0
wdRowHeightAtLeast = 1
wdRowHeightExactly = 2
WdRowHeightRule = c_int # enum

# values for enumeration 'WdCellVerticalAlignment'
wdCellAlignVerticalTop = 0
wdCellAlignVerticalCenter = 1
wdCellAlignVerticalBottom = 3
WdCellVerticalAlignment = c_int # enum
class Row(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{00020950-0000-0000-C000-000000000046}')
    _idlflags_ = ['dual', 'nonextensible', 'oleautomation']
class Tables(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{0002094D-0000-0000-C000-000000000046}')
    _idlflags_ = ['dual', 'nonextensible', 'oleautomation']
Cell._methods_ = [
    COMMETHOD([dispid(0), 'propget'], HRESULT, 'Range',
              ( ['out', 'retval'], POINTER(POINTER(Range)), 'prop' )),
    COMMETHOD([dispid(1000), 'propget'], HRESULT, 'Application',
              ( ['out', 'retval'], POINTER(POINTER(Application)), 'prop' )),
    COMMETHOD([dispid(1001), 'propget'], HRESULT, 'Creator',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(1002), 'propget'], HRESULT, 'Parent',
              ( ['out', 'retval'], POINTER(POINTER(IDispatch)), 'prop' )),
    COMMETHOD([dispid(4), 'propget'], HRESULT, 'RowIndex',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(5), 'propget'], HRESULT, 'ColumnIndex',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(6), 'propget'], HRESULT, 'Width',
              ( ['out', 'retval'], POINTER(c_float), 'prop' )),
    COMMETHOD([dispid(6), 'propput'], HRESULT, 'Width',
              ( ['in'], c_float, 'prop' )),
    COMMETHOD([dispid(7), 'propget'], HRESULT, 'Height',
              ( ['out', 'retval'], POINTER(c_float), 'prop' )),
    COMMETHOD([dispid(7), 'propput'], HRESULT, 'Height',
              ( ['in'], c_float, 'prop' )),
    COMMETHOD([dispid(8), 'propget'], HRESULT, 'HeightRule',
              ( ['out', 'retval'], POINTER(WdRowHeightRule), 'prop' )),
    COMMETHOD([dispid(8), 'propput'], HRESULT, 'HeightRule',
              ( ['in'], WdRowHeightRule, 'prop' )),
    COMMETHOD([dispid(1104), 'propget'], HRESULT, 'VerticalAlignment',
              ( ['out', 'retval'], POINTER(WdCellVerticalAlignment), 'prop' )),
    COMMETHOD([dispid(1104), 'propput'], HRESULT, 'VerticalAlignment',
              ( ['in'], WdCellVerticalAlignment, 'prop' )),
    COMMETHOD([dispid(101), 'propget'], HRESULT, 'Column',
              ( ['out', 'retval'], POINTER(POINTER(Column)), 'prop' )),
    COMMETHOD([dispid(102), 'propget'], HRESULT, 'Row',
              ( ['out', 'retval'], POINTER(POINTER(Row)), 'prop' )),
    COMMETHOD([dispid(103), 'propget'], HRESULT, 'Next',
              ( ['out', 'retval'], POINTER(POINTER(Cell)), 'prop' )),
    COMMETHOD([dispid(104), 'propget'], HRESULT, 'Previous',
              ( ['out', 'retval'], POINTER(POINTER(Cell)), 'prop' )),
    COMMETHOD([dispid(105), 'propget'], HRESULT, 'Shading',
              ( ['out', 'retval'], POINTER(POINTER(Shading)), 'prop' )),
    COMMETHOD([dispid(1100), 'propget'], HRESULT, 'Borders',
              ( ['out', 'retval'], POINTER(POINTER(Borders)), 'prop' )),
    COMMETHOD([dispid(1100), 'propput'], HRESULT, 'Borders',
              ( ['in'], POINTER(Borders), 'prop' )),
    COMMETHOD([dispid(65535)], HRESULT, 'Select'),
    COMMETHOD([dispid(200)], HRESULT, 'Delete',
              ( ['in', 'optional'], POINTER(VARIANT), 'ShiftCells' )),
    COMMETHOD([dispid(201)], HRESULT, 'Formula',
              ( ['in', 'optional'], POINTER(VARIANT), 'Formula' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'NumFormat' )),
    COMMETHOD([dispid(202)], HRESULT, 'SetWidth',
              ( ['in'], c_float, 'ColumnWidth' ),
              ( ['in'], WdRulerStyle, 'RulerStyle' )),
    COMMETHOD([dispid(203)], HRESULT, 'SetHeight',
              ( ['in'], POINTER(VARIANT), 'RowHeight' ),
              ( ['in'], WdRowHeightRule, 'HeightRule' )),
    COMMETHOD([dispid(204)], HRESULT, 'Merge',
              ( ['in'], POINTER(Cell), 'MergeTo' )),
    COMMETHOD([dispid(205)], HRESULT, 'Split',
              ( ['in', 'optional'], POINTER(VARIANT), 'NumRows' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'NumColumns' )),
    COMMETHOD([dispid(206)], HRESULT, 'AutoSum'),
    COMMETHOD([dispid(106), 'propget'], HRESULT, 'Tables',
              ( ['out', 'retval'], POINTER(POINTER(Tables)), 'prop' )),
    COMMETHOD([dispid(107), 'propget'], HRESULT, 'NestingLevel',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(108), 'propget'], HRESULT, 'WordWrap',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'prop' )),
    COMMETHOD([dispid(108), 'propput'], HRESULT, 'WordWrap',
              ( ['in'], VARIANT_BOOL, 'prop' )),
    COMMETHOD([dispid(109), 'propget'], HRESULT, 'PreferredWidth',
              ( ['out', 'retval'], POINTER(c_float), 'prop' )),
    COMMETHOD([dispid(109), 'propput'], HRESULT, 'PreferredWidth',
              ( ['in'], c_float, 'prop' )),
    COMMETHOD([dispid(110), 'propget'], HRESULT, 'FitText',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'prop' )),
    COMMETHOD([dispid(110), 'propput'], HRESULT, 'FitText',
              ( ['in'], VARIANT_BOOL, 'prop' )),
    COMMETHOD([dispid(111), 'propget'], HRESULT, 'TopPadding',
              ( ['out', 'retval'], POINTER(c_float), 'prop' )),
    COMMETHOD([dispid(111), 'propput'], HRESULT, 'TopPadding',
              ( ['in'], c_float, 'prop' )),
    COMMETHOD([dispid(112), 'propget'], HRESULT, 'BottomPadding',
              ( ['out', 'retval'], POINTER(c_float), 'prop' )),
    COMMETHOD([dispid(112), 'propput'], HRESULT, 'BottomPadding',
              ( ['in'], c_float, 'prop' )),
    COMMETHOD([dispid(113), 'propget'], HRESULT, 'LeftPadding',
              ( ['out', 'retval'], POINTER(c_float), 'prop' )),
    COMMETHOD([dispid(113), 'propput'], HRESULT, 'LeftPadding',
              ( ['in'], c_float, 'prop' )),
    COMMETHOD([dispid(114), 'propget'], HRESULT, 'RightPadding',
              ( ['out', 'retval'], POINTER(c_float), 'prop' )),
    COMMETHOD([dispid(114), 'propput'], HRESULT, 'RightPadding',
              ( ['in'], c_float, 'prop' )),
    COMMETHOD([dispid(115), 'propget'], HRESULT, 'ID',
              ( ['out', 'retval'], POINTER(BSTR), 'prop' )),
    COMMETHOD([dispid(115), 'propput'], HRESULT, 'ID',
              ( ['in'], BSTR, 'prop' )),
    COMMETHOD([dispid(116), 'propget'], HRESULT, 'PreferredWidthType',
              ( ['out', 'retval'], POINTER(WdPreferredWidthType), 'prop' )),
    COMMETHOD([dispid(116), 'propput'], HRESULT, 'PreferredWidthType',
              ( ['in'], WdPreferredWidthType, 'prop' )),
]
################################################################
## code template for Cell implementation
##class Cell_Impl(object):
##    @property
##    def Range(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Creator(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def RowIndex(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def ColumnIndex(self):
##        '-no docstring-'
##        #return prop
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    Width = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    Height = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    HeightRule = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    VerticalAlignment = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Column(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Row(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Next(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Previous(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Shading(self):
##        '-no docstring-'
##        #return prop
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    Borders = property(_get, _set, doc = _set.__doc__)
##
##    def Select(self):
##        '-no docstring-'
##        #return 
##
##    def Delete(self, ShiftCells):
##        '-no docstring-'
##        #return 
##
##    def Formula(self, Formula, NumFormat):
##        '-no docstring-'
##        #return 
##
##    def SetWidth(self, ColumnWidth, RulerStyle):
##        '-no docstring-'
##        #return 
##
##    def SetHeight(self, RowHeight, HeightRule):
##        '-no docstring-'
##        #return 
##
##    def Merge(self, MergeTo):
##        '-no docstring-'
##        #return 
##
##    def Split(self, NumRows, NumColumns):
##        '-no docstring-'
##        #return 
##
##    def AutoSum(self):
##        '-no docstring-'
##        #return 
##
##    @property
##    def Tables(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def NestingLevel(self):
##        '-no docstring-'
##        #return prop
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    WordWrap = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    PreferredWidth = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    FitText = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    TopPadding = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    BottomPadding = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    LeftPadding = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    RightPadding = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    ID = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    PreferredWidthType = property(_get, _set, doc = _set.__doc__)
##

class ListTemplate(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{0002098F-0000-0000-C000-000000000046}')
    _idlflags_ = ['dual', 'nonextensible', 'oleautomation']
class ListLevels(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{0002098E-0000-0000-C000-000000000046}')
    _idlflags_ = ['dual', 'nonextensible', 'oleautomation']
ListTemplate._methods_ = [
    COMMETHOD([dispid(1000), 'propget'], HRESULT, 'Application',
              ( ['out', 'retval'], POINTER(POINTER(Application)), 'prop' )),
    COMMETHOD([dispid(1001), 'propget'], HRESULT, 'Creator',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(1002), 'propget'], HRESULT, 'Parent',
              ( ['out', 'retval'], POINTER(POINTER(IDispatch)), 'prop' )),
    COMMETHOD([dispid(1), 'propget'], HRESULT, 'OutlineNumbered',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'prop' )),
    COMMETHOD([dispid(1), 'propput'], HRESULT, 'OutlineNumbered',
              ( ['in'], VARIANT_BOOL, 'prop' )),
    COMMETHOD([dispid(3), 'propget'], HRESULT, 'Name',
              ( ['out', 'retval'], POINTER(BSTR), 'prop' )),
    COMMETHOD([dispid(3), 'propput'], HRESULT, 'Name',
              ( ['in'], BSTR, 'prop' )),
    COMMETHOD([dispid(2), 'propget'], HRESULT, 'ListLevels',
              ( ['out', 'retval'], POINTER(POINTER(ListLevels)), 'prop' )),
    COMMETHOD([dispid(101)], HRESULT, 'Convert',
              ( ['in', 'optional'], POINTER(VARIANT), 'Level' ),
              ( ['out', 'retval'], POINTER(POINTER(ListTemplate)), 'prop' )),
]
################################################################
## code template for ListTemplate implementation
##class ListTemplate_Impl(object):
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Creator(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return prop
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    OutlineNumbered = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    Name = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def ListLevels(self):
##        '-no docstring-'
##        #return prop
##
##    def Convert(self, Level):
##        '-no docstring-'
##        #return prop
##


# values for enumeration 'WdUnits'
wdCharacter = 1
wdWord = 2
wdSentence = 3
wdParagraph = 4
wdLine = 5
wdStory = 6
wdScreen = 7
wdSection = 8
wdColumn = 9
wdRow = 10
wdWindow = 11
wdCell = 12
wdCharacterFormatting = 13
wdParagraphFormatting = 14
wdTable = 15
wdItem = 16
WdUnits = c_int # enum
class OtherCorrectionsException(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{000209E1-0000-0000-C000-000000000046}')
    _idlflags_ = ['dual', 'nonextensible', 'oleautomation']
OtherCorrectionsException._methods_ = [
    COMMETHOD([dispid(1000), 'propget'], HRESULT, 'Application',
              ( ['out', 'retval'], POINTER(POINTER(Application)), 'prop' )),
    COMMETHOD([dispid(1001), 'propget'], HRESULT, 'Creator',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(1002), 'propget'], HRESULT, 'Parent',
              ( ['out', 'retval'], POINTER(POINTER(IDispatch)), 'prop' )),
    COMMETHOD([dispid(1), 'propget'], HRESULT, 'Index',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(2), 'propget'], HRESULT, 'Name',
              ( ['out', 'retval'], POINTER(BSTR), 'prop' )),
    COMMETHOD([dispid(101)], HRESULT, 'Delete'),
]
################################################################
## code template for OtherCorrectionsException implementation
##class OtherCorrectionsException_Impl(object):
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Creator(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Index(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Name(self):
##        '-no docstring-'
##        #return prop
##
##    def Delete(self):
##        '-no docstring-'
##        #return 
##

class Comment(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{0002093D-0000-0000-C000-000000000046}')
    _idlflags_ = ['dual', 'nonextensible', 'oleautomation']
class Comments(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{00020940-0000-0000-C000-000000000046}')
    _idlflags_ = ['dual', 'nonextensible', 'oleautomation']
Comment._methods_ = [
    COMMETHOD([dispid(1000), 'propget'], HRESULT, 'Application',
              ( ['out', 'retval'], POINTER(POINTER(Application)), 'prop' )),
    COMMETHOD([dispid(1001), 'propget'], HRESULT, 'Creator',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(1002), 'propget'], HRESULT, 'Parent',
              ( ['out', 'retval'], POINTER(POINTER(IDispatch)), 'prop' )),
    COMMETHOD([dispid(1003), 'propget'], HRESULT, 'Range',
              ( ['out', 'retval'], POINTER(POINTER(Range)), 'prop' )),
    COMMETHOD([dispid(1004), 'propget'], HRESULT, 'Reference',
              ( ['out', 'retval'], POINTER(POINTER(Range)), 'prop' )),
    COMMETHOD([dispid(1005), 'propget'], HRESULT, 'Scope',
              ( ['out', 'retval'], POINTER(POINTER(Range)), 'prop' )),
    COMMETHOD([dispid(1006), 'propget'], HRESULT, 'Index',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(1007), 'hidden', 'propget'], HRESULT, 'Author',
              ( ['out', 'retval'], POINTER(BSTR), 'prop' )),
    COMMETHOD([dispid(1007), 'hidden', 'propput'], HRESULT, 'Author',
              ( ['in'], BSTR, 'prop' )),
    COMMETHOD([dispid(1008), 'hidden', 'propget'], HRESULT, 'Initial',
              ( ['out', 'retval'], POINTER(BSTR), 'prop' )),
    COMMETHOD([dispid(1008), 'hidden', 'propput'], HRESULT, 'Initial',
              ( ['in'], BSTR, 'prop' )),
    COMMETHOD([dispid(1009), 'hidden', 'propget'], HRESULT, 'ShowTip',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'prop' )),
    COMMETHOD([dispid(1009), 'hidden', 'propput'], HRESULT, 'ShowTip',
              ( ['in'], VARIANT_BOOL, 'prop' )),
    COMMETHOD([dispid(10), 'hidden'], HRESULT, 'Delete'),
    COMMETHOD([dispid(1011)], HRESULT, 'Edit'),
    COMMETHOD([dispid(1010), 'propget'], HRESULT, 'Date',
              ( ['out', 'retval'], POINTER(c_double), 'prop' )),
    COMMETHOD([dispid(1012), 'propget'], HRESULT, 'IsInk',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'prop' )),
    COMMETHOD([dispid(1013), 'propget'], HRESULT, 'Done',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'prop' )),
    COMMETHOD([dispid(1013), 'propput'], HRESULT, 'Done',
              ( ['in'], VARIANT_BOOL, 'prop' )),
    COMMETHOD([dispid(1014), 'propget'], HRESULT, 'Ancestor',
              ( ['out', 'retval'], POINTER(POINTER(Comment)), 'prop' )),
    COMMETHOD([dispid(1015), 'propget'], HRESULT, 'Contact',
              ( ['out', 'retval'], POINTER(POINTER(CoAuthor)), 'prop' )),
    COMMETHOD([dispid(1016)], HRESULT, 'DeleteRecursively'),
    COMMETHOD([dispid(1017), 'propget'], HRESULT, 'Replies',
              ( ['out', 'retval'], POINTER(POINTER(Comments)), 'prop' )),
]
################################################################
## code template for Comment implementation
##class Comment_Impl(object):
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Creator(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Range(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Reference(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Scope(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Index(self):
##        '-no docstring-'
##        #return prop
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    Author = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    Initial = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    ShowTip = property(_get, _set, doc = _set.__doc__)
##
##    def Delete(self):
##        '-no docstring-'
##        #return 
##
##    def Edit(self):
##        '-no docstring-'
##        #return 
##
##    @property
##    def Date(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def IsInk(self):
##        '-no docstring-'
##        #return prop
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    Done = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Ancestor(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Contact(self):
##        '-no docstring-'
##        #return prop
##
##    def DeleteRecursively(self):
##        '-no docstring-'
##        #return 
##
##    @property
##    def Replies(self):
##        '-no docstring-'
##        #return prop
##

class OMathArgs(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{8245795B-9AED-4943-A16D-E586ED8180D1}')
    _idlflags_ = ['dual', 'nonextensible', 'oleautomation']
OMathArgs._methods_ = [
    COMMETHOD([dispid(100), 'propget'], HRESULT, 'Application',
              ( ['out', 'retval'], POINTER(POINTER(Application)), 'prop' )),
    COMMETHOD([dispid(101), 'propget'], HRESULT, 'Creator',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(102), 'propget'], HRESULT, 'Parent',
              ( ['out', 'retval'], POINTER(POINTER(IDispatch)), 'prop' )),
    COMMETHOD([dispid(103), 'propget'], HRESULT, 'Count',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(0)], HRESULT, 'Item',
              ( ['in'], c_int, 'Index' ),
              ( ['out', 'retval'], POINTER(POINTER(OMath)), 'prop' )),
    COMMETHOD([dispid(200)], HRESULT, 'Add',
              ( ['in', 'optional'], POINTER(VARIANT), 'BeforeArg' ),
              ( ['out', 'retval'], POINTER(POINTER(OMath)), 'prop' )),
]
################################################################
## code template for OMathArgs implementation
##class OMathArgs_Impl(object):
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Creator(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Count(self):
##        '-no docstring-'
##        #return prop
##
##    def Item(self, Index):
##        '-no docstring-'
##        #return prop
##
##    def Add(self, BeforeArg):
##        '-no docstring-'
##        #return prop
##

class Panes(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{0002095F-0000-0000-C000-000000000046}')
    _idlflags_ = ['dual', 'nonextensible', 'oleautomation']
class Pane(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{00020960-0000-0000-C000-000000000046}')
    _idlflags_ = ['dual', 'nonextensible', 'oleautomation']
Panes._methods_ = [
    COMMETHOD([dispid(-4), 'nonbrowsable', 'propget'], HRESULT, '_NewEnum',
              ( ['out', 'retval'], POINTER(POINTER(IUnknown)), 'prop' )),
    COMMETHOD([dispid(2), 'propget'], HRESULT, 'Count',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(1000), 'propget'], HRESULT, 'Application',
              ( ['out', 'retval'], POINTER(POINTER(Application)), 'prop' )),
    COMMETHOD([dispid(1001), 'propget'], HRESULT, 'Creator',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(1002), 'propget'], HRESULT, 'Parent',
              ( ['out', 'retval'], POINTER(POINTER(IDispatch)), 'prop' )),
    COMMETHOD([dispid(0)], HRESULT, 'Item',
              ( ['in'], c_int, 'Index' ),
              ( ['out', 'retval'], POINTER(POINTER(Pane)), 'prop' )),
    COMMETHOD([dispid(3)], HRESULT, 'Add',
              ( ['in', 'optional'], POINTER(VARIANT), 'SplitVertical' ),
              ( ['out', 'retval'], POINTER(POINTER(Pane)), 'prop' )),
]
################################################################
## code template for Panes implementation
##class Panes_Impl(object):
##    @property
##    def _NewEnum(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Count(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Creator(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return prop
##
##    def Item(self, Index):
##        '-no docstring-'
##        #return prop
##
##    def Add(self, SplitVertical):
##        '-no docstring-'
##        #return prop
##


# values for enumeration 'WdPortugueseReform'
wdPortuguesePreReform = 1
wdPortuguesePostReform = 2
wdPortugueseBoth = 3
WdPortugueseReform = c_int # enum
class Categories(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{6E47678B-A879-4E56-8698-3B7CF169FAD4}')
    _idlflags_ = ['dual', 'nonextensible', 'oleautomation']
class Category(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{ECFBDB5E-ACD2-4530-AD79-4560B7FF055C}')
    _idlflags_ = ['dual', 'nonextensible', 'oleautomation']
Categories._methods_ = [
    COMMETHOD([dispid(1000), 'propget'], HRESULT, 'Application',
              ( ['out', 'retval'], POINTER(POINTER(Application)), 'prop' )),
    COMMETHOD([dispid(1001), 'propget'], HRESULT, 'Creator',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(1002), 'propget'], HRESULT, 'Parent',
              ( ['out', 'retval'], POINTER(POINTER(IDispatch)), 'prop' )),
    COMMETHOD([dispid(1), 'propget'], HRESULT, 'Count',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(0)], HRESULT, 'Item',
              ( ['in'], POINTER(VARIANT), 'Index' ),
              ( ['out', 'retval'], POINTER(POINTER(Category)), 'prop' )),
]
################################################################
## code template for Categories implementation
##class Categories_Impl(object):
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Creator(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Count(self):
##        '-no docstring-'
##        #return prop
##
##    def Item(self, Index):
##        '-no docstring-'
##        #return prop
##

class OMathRecognizedFunction(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{5C04BD93-2F3F-4668-918D-9738EC901039}')
    _idlflags_ = ['dual', 'nonextensible', 'oleautomation']
OMathRecognizedFunctions._methods_ = [
    COMMETHOD([dispid(100), 'propget'], HRESULT, 'Application',
              ( ['out', 'retval'], POINTER(POINTER(Application)), 'prop' )),
    COMMETHOD([dispid(101), 'propget'], HRESULT, 'Creator',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(102), 'propget'], HRESULT, 'Parent',
              ( ['out', 'retval'], POINTER(POINTER(IDispatch)), 'prop' )),
    COMMETHOD([dispid(-4), 'nonbrowsable', 'propget'], HRESULT, '_NewEnum',
              ( ['out', 'retval'], POINTER(POINTER(IUnknown)), 'prop' )),
    COMMETHOD([dispid(103), 'propget'], HRESULT, 'Count',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(0)], HRESULT, 'Item',
              ( ['in'], POINTER(VARIANT), 'Index' ),
              ( ['out', 'retval'], POINTER(POINTER(OMathRecognizedFunction)), 'prop' )),
    COMMETHOD([dispid(200)], HRESULT, 'Add',
              ( ['in'], BSTR, 'Name' ),
              ( ['out', 'retval'], POINTER(POINTER(OMathRecognizedFunction)), 'prop' )),
]
################################################################
## code template for OMathRecognizedFunctions implementation
##class OMathRecognizedFunctions_Impl(object):
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Creator(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def _NewEnum(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Count(self):
##        '-no docstring-'
##        #return prop
##
##    def Item(self, Index):
##        '-no docstring-'
##        #return prop
##
##    def Add(self, Name):
##        '-no docstring-'
##        #return prop
##

class ErrorBars(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{194F8476-B79D-4572-A609-294207DE77C1}')
    _idlflags_ = ['dual', 'nonextensible', 'oleautomation']

# values for enumeration 'XlEndStyleCap'
xlCap = 1
xlNoCap = 2
XlEndStyleCap = c_int # enum
ErrorBars._methods_ = [
    COMMETHOD([dispid(150), 'propget'], HRESULT, 'Parent',
              ( ['out', 'retval'], POINTER(POINTER(IDispatch)), 'prop' )),
    COMMETHOD([dispid(110), 'propget'], HRESULT, 'Name',
              ( ['out', 'retval'], POINTER(BSTR), 'prop' )),
    COMMETHOD([dispid(235)], HRESULT, 'Select',
              ( ['out', 'retval'], POINTER(VARIANT), 'prop' )),
    COMMETHOD([dispid(128), 'propget'], HRESULT, 'Border',
              ( ['out', 'retval'], POINTER(POINTER(ChartBorder)), 'prop' )),
    COMMETHOD([dispid(117)], HRESULT, 'Delete',
              ( ['out', 'retval'], POINTER(VARIANT), 'prop' )),
    COMMETHOD([dispid(112)], HRESULT, 'ClearFormats',
              ( ['out', 'retval'], POINTER(VARIANT), 'prop' )),
    COMMETHOD([dispid(1124), 'propget'], HRESULT, 'EndStyle',
              ( ['out', 'retval'], POINTER(XlEndStyleCap), 'prop' )),
    COMMETHOD([dispid(1124), 'propput'], HRESULT, 'EndStyle',
              ( ['in'], XlEndStyleCap, 'prop' )),
    COMMETHOD([dispid(1610743816), 'propget'], HRESULT, 'Format',
              ( ['out', 'retval'], POINTER(POINTER(ChartFormat)), 'prop' )),
    COMMETHOD([dispid(148), 'propget'], HRESULT, 'Application',
              ( ['out', 'retval'], POINTER(POINTER(IDispatch)), 'prop' )),
    COMMETHOD([dispid(149), 'propget'], HRESULT, 'Creator',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(253)], HRESULT, 'SetProperty',
              ( ['in'], BSTR, 'ID' ),
              ( ['in'], VARIANT, 'Value' )),
    COMMETHOD([dispid(254)], HRESULT, 'GetProperty',
              ( ['in'], BSTR, 'ID' ),
              ( ['out', 'retval'], POINTER(VARIANT), 'prop' )),
]
################################################################
## code template for ErrorBars implementation
##class ErrorBars_Impl(object):
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Name(self):
##        '-no docstring-'
##        #return prop
##
##    def Select(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Border(self):
##        '-no docstring-'
##        #return prop
##
##    def Delete(self):
##        '-no docstring-'
##        #return prop
##
##    def ClearFormats(self):
##        '-no docstring-'
##        #return prop
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    EndStyle = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Format(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Creator(self):
##        '-no docstring-'
##        #return prop
##
##    def SetProperty(self, ID, Value):
##        '-no docstring-'
##        #return 
##
##    def GetProperty(self, ID):
##        '-no docstring-'
##        #return prop
##


# values for enumeration 'XlParentDataLabelOptions'
xlParentDataLabelOptionsNone = 0
xlParentDataLabelOptionsBanner = 1
xlParentDataLabelOptionsOverlapping = 2
XlParentDataLabelOptions = c_int # enum
class OLEFormat(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{00020933-0000-0000-C000-000000000046}')
    _idlflags_ = ['dual', 'nonextensible', 'oleautomation']
OLEFormat._methods_ = [
    COMMETHOD([dispid(1000), 'propget'], HRESULT, 'Application',
              ( ['out', 'retval'], POINTER(POINTER(Application)), 'prop' )),
    COMMETHOD([dispid(1001), 'propget'], HRESULT, 'Creator',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(1002), 'propget'], HRESULT, 'Parent',
              ( ['out', 'retval'], POINTER(POINTER(IDispatch)), 'prop' )),
    COMMETHOD([dispid(2), 'propget'], HRESULT, 'ClassType',
              ( ['out', 'retval'], POINTER(BSTR), 'prop' )),
    COMMETHOD([dispid(2), 'propput'], HRESULT, 'ClassType',
              ( ['in'], BSTR, 'prop' )),
    COMMETHOD([dispid(3), 'propget'], HRESULT, 'DisplayAsIcon',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'prop' )),
    COMMETHOD([dispid(3), 'propput'], HRESULT, 'DisplayAsIcon',
              ( ['in'], VARIANT_BOOL, 'prop' )),
    COMMETHOD([dispid(7), 'propget'], HRESULT, 'IconName',
              ( ['out', 'retval'], POINTER(BSTR), 'prop' )),
    COMMETHOD([dispid(7), 'propput'], HRESULT, 'IconName',
              ( ['in'], BSTR, 'prop' )),
    COMMETHOD([dispid(8), 'propget'], HRESULT, 'IconPath',
              ( ['out', 'retval'], POINTER(BSTR), 'prop' )),
    COMMETHOD([dispid(9), 'propget'], HRESULT, 'IconIndex',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(9), 'propput'], HRESULT, 'IconIndex',
              ( ['in'], c_int, 'prop' )),
    COMMETHOD([dispid(10), 'propget'], HRESULT, 'IconLabel',
              ( ['out', 'retval'], POINTER(BSTR), 'prop' )),
    COMMETHOD([dispid(10), 'propput'], HRESULT, 'IconLabel',
              ( ['in'], BSTR, 'prop' )),
    COMMETHOD([dispid(12), 'propget'], HRESULT, 'Label',
              ( ['out', 'retval'], POINTER(BSTR), 'prop' )),
    COMMETHOD([dispid(14), 'propget'], HRESULT, 'Object',
              ( ['out', 'retval'], POINTER(POINTER(IDispatch)), 'prop' )),
    COMMETHOD([dispid(22), 'propget'], HRESULT, 'ProgID',
              ( ['out', 'retval'], POINTER(BSTR), 'prop' )),
    COMMETHOD([dispid(104)], HRESULT, 'Activate'),
    COMMETHOD([dispid(106)], HRESULT, 'Edit'),
    COMMETHOD([dispid(107)], HRESULT, 'Open'),
    COMMETHOD([dispid(109)], HRESULT, 'DoVerb',
              ( ['in', 'optional'], POINTER(VARIANT), 'VerbIndex' )),
    COMMETHOD([dispid(110)], HRESULT, 'ConvertTo',
              ( ['in', 'optional'], POINTER(VARIANT), 'ClassType' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'DisplayAsIcon' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'IconFileName' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'IconIndex' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'IconLabel' )),
    COMMETHOD([dispid(111)], HRESULT, 'ActivateAs',
              ( ['in'], BSTR, 'ClassType' )),
    COMMETHOD([dispid(112), 'propget'], HRESULT, 'PreserveFormattingOnUpdate',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'prop' )),
    COMMETHOD([dispid(112), 'propput'], HRESULT, 'PreserveFormattingOnUpdate',
              ( ['in'], VARIANT_BOOL, 'prop' )),
]
################################################################
## code template for OLEFormat implementation
##class OLEFormat_Impl(object):
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Creator(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return prop
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    ClassType = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    DisplayAsIcon = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    IconName = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def IconPath(self):
##        '-no docstring-'
##        #return prop
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    IconIndex = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    IconLabel = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Label(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Object(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def ProgID(self):
##        '-no docstring-'
##        #return prop
##
##    def Activate(self):
##        '-no docstring-'
##        #return 
##
##    def Edit(self):
##        '-no docstring-'
##        #return 
##
##    def Open(self):
##        '-no docstring-'
##        #return 
##
##    def DoVerb(self, VerbIndex):
##        '-no docstring-'
##        #return 
##
##    def ConvertTo(self, ClassType, DisplayAsIcon, IconFileName, IconIndex, IconLabel):
##        '-no docstring-'
##        #return 
##
##    def ActivateAs(self, ClassType):
##        '-no docstring-'
##        #return 
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    PreserveFormattingOnUpdate = property(_get, _set, doc = _set.__doc__)
##

class HiLoLines(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{7A1BCE11-5783-4C7D-BD02-F3D84AB40E7F}')
    _idlflags_ = ['dual', 'nonextensible', 'oleautomation']
HiLoLines._methods_ = [
    COMMETHOD([dispid(1610743808), 'propget'], HRESULT, 'Parent',
              ( ['out', 'retval'], POINTER(POINTER(IDispatch)), 'prop' )),
    COMMETHOD([dispid(1610743809), 'propget'], HRESULT, 'Name',
              ( ['out', 'retval'], POINTER(BSTR), 'prop' )),
    COMMETHOD([dispid(1610743810)], HRESULT, 'Select'),
    COMMETHOD([dispid(1610743811), 'propget'], HRESULT, 'Border',
              ( ['out', 'retval'], POINTER(POINTER(ChartBorder)), 'prop' )),
    COMMETHOD([dispid(1610743812)], HRESULT, 'Delete'),
    COMMETHOD([dispid(1610743813), 'propget'], HRESULT, 'Format',
              ( ['out', 'retval'], POINTER(POINTER(ChartFormat)), 'prop' )),
    COMMETHOD([dispid(148), 'propget'], HRESULT, 'Application',
              ( ['out', 'retval'], POINTER(POINTER(IDispatch)), 'prop' )),
    COMMETHOD([dispid(149), 'propget'], HRESULT, 'Creator',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
]
################################################################
## code template for HiLoLines implementation
##class HiLoLines_Impl(object):
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Name(self):
##        '-no docstring-'
##        #return prop
##
##    def Select(self):
##        '-no docstring-'
##        #return 
##
##    @property
##    def Border(self):
##        '-no docstring-'
##        #return prop
##
##    def Delete(self):
##        '-no docstring-'
##        #return 
##
##    @property
##    def Format(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Creator(self):
##        '-no docstring-'
##        #return prop
##


# values for enumeration 'WdPageBorderArt'
wdArtApples = 1
wdArtMapleMuffins = 2
wdArtCakeSlice = 3
wdArtCandyCorn = 4
wdArtIceCreamCones = 5
wdArtChampagneBottle = 6
wdArtPartyGlass = 7
wdArtChristmasTree = 8
wdArtTrees = 9
wdArtPalmsColor = 10
wdArtBalloons3Colors = 11
wdArtBalloonsHotAir = 12
wdArtPartyFavor = 13
wdArtConfettiStreamers = 14
wdArtHearts = 15
wdArtHeartBalloon = 16
wdArtStars3D = 17
wdArtStarsShadowed = 18
wdArtStars = 19
wdArtSun = 20
wdArtEarth2 = 21
wdArtEarth1 = 22
wdArtPeopleHats = 23
wdArtSombrero = 24
wdArtPencils = 25
wdArtPackages = 26
wdArtClocks = 27
wdArtFirecrackers = 28
wdArtRings = 29
wdArtMapPins = 30
wdArtConfetti = 31
wdArtCreaturesButterfly = 32
wdArtCreaturesLadyBug = 33
wdArtCreaturesFish = 34
wdArtBirdsFlight = 35
wdArtScaredCat = 36
wdArtBats = 37
wdArtFlowersRoses = 38
wdArtFlowersRedRose = 39
wdArtPoinsettias = 40
wdArtHolly = 41
wdArtFlowersTiny = 42
wdArtFlowersPansy = 43
wdArtFlowersModern2 = 44
wdArtFlowersModern1 = 45
wdArtWhiteFlowers = 46
wdArtVine = 47
wdArtFlowersDaisies = 48
wdArtFlowersBlockPrint = 49
wdArtDecoArchColor = 50
wdArtFans = 51
wdArtFilm = 52
wdArtLightning1 = 53
wdArtCompass = 54
wdArtDoubleD = 55
wdArtClassicalWave = 56
wdArtShadowedSquares = 57
wdArtTwistedLines1 = 58
wdArtWaveline = 59
wdArtQuadrants = 60
wdArtCheckedBarColor = 61
wdArtSwirligig = 62
wdArtPushPinNote1 = 63
wdArtPushPinNote2 = 64
wdArtPumpkin1 = 65
wdArtEggsBlack = 66
wdArtCup = 67
wdArtHeartGray = 68
wdArtGingerbreadMan = 69
wdArtBabyPacifier = 70
wdArtBabyRattle = 71
wdArtCabins = 72
wdArtHouseFunky = 73
wdArtStarsBlack = 74
wdArtSnowflakes = 75
wdArtSnowflakeFancy = 76
wdArtSkyrocket = 77
wdArtSeattle = 78
wdArtMusicNotes = 79
wdArtPalmsBlack = 80
wdArtMapleLeaf = 81
wdArtPaperClips = 82
wdArtShorebirdTracks = 83
wdArtPeople = 84
wdArtPeopleWaving = 85
wdArtEclipsingSquares2 = 86
wdArtHypnotic = 87
wdArtDiamondsGray = 88
wdArtDecoArch = 89
wdArtDecoBlocks = 90
wdArtCirclesLines = 91
wdArtPapyrus = 92
wdArtWoodwork = 93
wdArtWeavingBraid = 94
wdArtWeavingRibbon = 95
wdArtWeavingAngles = 96
wdArtArchedScallops = 97
wdArtSafari = 98
wdArtCelticKnotwork = 99
wdArtCrazyMaze = 100
wdArtEclipsingSquares1 = 101
wdArtBirds = 102
wdArtFlowersTeacup = 103
wdArtNorthwest = 104
wdArtSouthwest = 105
wdArtTribal6 = 106
wdArtTribal4 = 107
wdArtTribal3 = 108
wdArtTribal2 = 109
wdArtTribal5 = 110
wdArtXIllusions = 111
wdArtZanyTriangles = 112
wdArtPyramids = 113
wdArtPyramidsAbove = 114
wdArtConfettiGrays = 115
wdArtConfettiOutline = 116
wdArtConfettiWhite = 117
wdArtMosaic = 118
wdArtLightning2 = 119
wdArtHeebieJeebies = 120
wdArtLightBulb = 121
wdArtGradient = 122
wdArtTriangleParty = 123
wdArtTwistedLines2 = 124
wdArtMoons = 125
wdArtOvals = 126
wdArtDoubleDiamonds = 127
wdArtChainLink = 128
wdArtTriangles = 129
wdArtTribal1 = 130
wdArtMarqueeToothed = 131
wdArtSharksTeeth = 132
wdArtSawtooth = 133
wdArtSawtoothGray = 134
wdArtPostageStamp = 135
wdArtWeavingStrips = 136
wdArtZigZag = 137
wdArtCrossStitch = 138
wdArtGems = 139
wdArtCirclesRectangles = 140
wdArtCornerTriangles = 141
wdArtCreaturesInsects = 142
wdArtZigZagStitch = 143
wdArtCheckered = 144
wdArtCheckedBarBlack = 145
wdArtMarquee = 146
wdArtBasicWhiteDots = 147
wdArtBasicWideMidline = 148
wdArtBasicWideOutline = 149
wdArtBasicWideInline = 150
wdArtBasicThinLines = 151
wdArtBasicWhiteDashes = 152
wdArtBasicWhiteSquares = 153
wdArtBasicBlackSquares = 154
wdArtBasicBlackDashes = 155
wdArtBasicBlackDots = 156
wdArtStarsTop = 157
wdArtCertificateBanner = 158
wdArtHandmade1 = 159
wdArtHandmade2 = 160
wdArtTornPaper = 161
wdArtTornPaperBlack = 162
wdArtCouponCutoutDashes = 163
wdArtCouponCutoutDots = 164
WdPageBorderArt = c_int # enum
Border._methods_ = [
    COMMETHOD([dispid(1000), 'propget'], HRESULT, 'Application',
              ( ['out', 'retval'], POINTER(POINTER(Application)), 'prop' )),
    COMMETHOD([dispid(1001), 'propget'], HRESULT, 'Creator',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(1002), 'propget'], HRESULT, 'Parent',
              ( ['out', 'retval'], POINTER(POINTER(IDispatch)), 'prop' )),
    COMMETHOD([dispid(0), 'propget'], HRESULT, 'Visible',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'prop' )),
    COMMETHOD([dispid(0), 'propput'], HRESULT, 'Visible',
              ( ['in'], VARIANT_BOOL, 'prop' )),
    COMMETHOD([dispid(1), 'propget'], HRESULT, 'ColorIndex',
              ( ['out', 'retval'], POINTER(WdColorIndex), 'prop' )),
    COMMETHOD([dispid(1), 'propput'], HRESULT, 'ColorIndex',
              ( ['in'], WdColorIndex, 'prop' )),
    COMMETHOD([dispid(2), 'propget'], HRESULT, 'Inside',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'prop' )),
    COMMETHOD([dispid(3), 'propget'], HRESULT, 'LineStyle',
              ( ['out', 'retval'], POINTER(WdLineStyle), 'prop' )),
    COMMETHOD([dispid(3), 'propput'], HRESULT, 'LineStyle',
              ( ['in'], WdLineStyle, 'prop' )),
    COMMETHOD([dispid(4), 'propget'], HRESULT, 'LineWidth',
              ( ['out', 'retval'], POINTER(WdLineWidth), 'prop' )),
    COMMETHOD([dispid(4), 'propput'], HRESULT, 'LineWidth',
              ( ['in'], WdLineWidth, 'prop' )),
    COMMETHOD([dispid(5), 'propget'], HRESULT, 'ArtStyle',
              ( ['out', 'retval'], POINTER(WdPageBorderArt), 'prop' )),
    COMMETHOD([dispid(5), 'propput'], HRESULT, 'ArtStyle',
              ( ['in'], WdPageBorderArt, 'prop' )),
    COMMETHOD([dispid(6), 'propget'], HRESULT, 'ArtWidth',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(6), 'propput'], HRESULT, 'ArtWidth',
              ( ['in'], c_int, 'prop' )),
    COMMETHOD([dispid(7), 'propget'], HRESULT, 'Color',
              ( ['out', 'retval'], POINTER(WdColor), 'prop' )),
    COMMETHOD([dispid(7), 'propput'], HRESULT, 'Color',
              ( ['in'], WdColor, 'prop' )),
]
################################################################
## code template for Border implementation
##class Border_Impl(object):
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Creator(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return prop
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    Visible = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    ColorIndex = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Inside(self):
##        '-no docstring-'
##        #return prop
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    LineStyle = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    LineWidth = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    ArtStyle = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    ArtWidth = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    Color = property(_get, _set, doc = _set.__doc__)
##


# values for enumeration 'WdPageFit'
wdPageFitNone = 0
wdPageFitFullPage = 1
wdPageFitBestFit = 2
wdPageFitTextFit = 3
WdPageFit = c_int # enum
Zoom._methods_ = [
    COMMETHOD([dispid(1000), 'propget'], HRESULT, 'Application',
              ( ['out', 'retval'], POINTER(POINTER(Application)), 'prop' )),
    COMMETHOD([dispid(1001), 'propget'], HRESULT, 'Creator',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(1002), 'propget'], HRESULT, 'Parent',
              ( ['out', 'retval'], POINTER(POINTER(IDispatch)), 'prop' )),
    COMMETHOD([dispid(0), 'propget'], HRESULT, 'Percentage',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(0), 'propput'], HRESULT, 'Percentage',
              ( ['in'], c_int, 'prop' )),
    COMMETHOD([dispid(1), 'propget'], HRESULT, 'PageFit',
              ( ['out', 'retval'], POINTER(WdPageFit), 'prop' )),
    COMMETHOD([dispid(1), 'propput'], HRESULT, 'PageFit',
              ( ['in'], WdPageFit, 'prop' )),
    COMMETHOD([dispid(2), 'propget'], HRESULT, 'PageRows',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(2), 'propput'], HRESULT, 'PageRows',
              ( ['in'], c_int, 'prop' )),
    COMMETHOD([dispid(3), 'propget'], HRESULT, 'PageColumns',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(3), 'propput'], HRESULT, 'PageColumns',
              ( ['in'], c_int, 'prop' )),
]
################################################################
## code template for Zoom implementation
##class Zoom_Impl(object):
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Creator(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return prop
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    Percentage = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    PageFit = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    PageRows = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    PageColumns = property(_get, _set, doc = _set.__doc__)
##

class FileConverters(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{0002099A-0000-0000-C000-000000000046}')
    _idlflags_ = ['dual', 'nonextensible', 'oleautomation']

# values for enumeration 'WdChevronConvertRule'
wdNeverConvert = 0
wdAlwaysConvert = 1
wdAskToNotConvert = 2
wdAskToConvert = 3
WdChevronConvertRule = c_int # enum
class FileConverter(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{00020999-0000-0000-C000-000000000046}')
    _idlflags_ = ['dual', 'nonextensible', 'oleautomation']
FileConverters._methods_ = [
    COMMETHOD([dispid(1000), 'propget'], HRESULT, 'Application',
              ( ['out', 'retval'], POINTER(POINTER(Application)), 'prop' )),
    COMMETHOD([dispid(1001), 'propget'], HRESULT, 'Creator',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(1002), 'propget'], HRESULT, 'Parent',
              ( ['out', 'retval'], POINTER(POINTER(IDispatch)), 'prop' )),
    COMMETHOD([dispid(1), 'propget'], HRESULT, 'Count',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(-4), 'nonbrowsable', 'propget'], HRESULT, '_NewEnum',
              ( ['out', 'retval'], POINTER(POINTER(IUnknown)), 'prop' )),
    COMMETHOD([dispid(2), 'propget'], HRESULT, 'ConvertMacWordChevrons',
              ( ['out', 'retval'], POINTER(WdChevronConvertRule), 'prop' )),
    COMMETHOD([dispid(2), 'propput'], HRESULT, 'ConvertMacWordChevrons',
              ( ['in'], WdChevronConvertRule, 'prop' )),
    COMMETHOD([dispid(0)], HRESULT, 'Item',
              ( ['in'], POINTER(VARIANT), 'Index' ),
              ( ['out', 'retval'], POINTER(POINTER(FileConverter)), 'prop' )),
]
################################################################
## code template for FileConverters implementation
##class FileConverters_Impl(object):
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Creator(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Count(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def _NewEnum(self):
##        '-no docstring-'
##        #return prop
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    ConvertMacWordChevrons = property(_get, _set, doc = _set.__doc__)
##
##    def Item(self, Index):
##        '-no docstring-'
##        #return prop
##

class TabStops(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{00020955-0000-0000-C000-000000000046}')
    _idlflags_ = ['dual', 'nonextensible', 'oleautomation']
class TabStop(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{00020954-0000-0000-C000-000000000046}')
    _idlflags_ = ['dual', 'nonextensible', 'oleautomation']
TabStops._methods_ = [
    COMMETHOD([dispid(-4), 'nonbrowsable', 'propget'], HRESULT, '_NewEnum',
              ( ['out', 'retval'], POINTER(POINTER(IUnknown)), 'prop' )),
    COMMETHOD([dispid(2), 'propget'], HRESULT, 'Count',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(1000), 'propget'], HRESULT, 'Application',
              ( ['out', 'retval'], POINTER(POINTER(Application)), 'prop' )),
    COMMETHOD([dispid(1001), 'propget'], HRESULT, 'Creator',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(1002), 'propget'], HRESULT, 'Parent',
              ( ['out', 'retval'], POINTER(POINTER(IDispatch)), 'prop' )),
    COMMETHOD([dispid(0)], HRESULT, 'Item',
              ( ['in'], POINTER(VARIANT), 'Index' ),
              ( ['out', 'retval'], POINTER(POINTER(TabStop)), 'prop' )),
    COMMETHOD([dispid(100)], HRESULT, 'Add',
              ( ['in'], c_float, 'Position' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'Alignment' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'Leader' ),
              ( ['out', 'retval'], POINTER(POINTER(TabStop)), 'prop' )),
    COMMETHOD([dispid(101)], HRESULT, 'ClearAll'),
    COMMETHOD([dispid(102)], HRESULT, 'Before',
              ( ['in'], c_float, 'Position' ),
              ( ['out', 'retval'], POINTER(POINTER(TabStop)), 'prop' )),
    COMMETHOD([dispid(103)], HRESULT, 'After',
              ( ['in'], c_float, 'Position' ),
              ( ['out', 'retval'], POINTER(POINTER(TabStop)), 'prop' )),
]
################################################################
## code template for TabStops implementation
##class TabStops_Impl(object):
##    @property
##    def _NewEnum(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Count(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Creator(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return prop
##
##    def Item(self, Index):
##        '-no docstring-'
##        #return prop
##
##    def Add(self, Position, Alignment, Leader):
##        '-no docstring-'
##        #return prop
##
##    def ClearAll(self):
##        '-no docstring-'
##        #return 
##
##    def Before(self, Position):
##        '-no docstring-'
##        #return prop
##
##    def After(self, Position):
##        '-no docstring-'
##        #return prop
##

class _Global(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{000209B9-0000-0000-C000-000000000046}')
    _idlflags_ = ['hidden', 'dual', 'nonextensible', 'oleautomation']
class Documents(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{0002096C-0000-0000-C000-000000000046}')
    _idlflags_ = ['dual', 'nonextensible', 'oleautomation']
class Windows(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{00020961-0000-0000-C000-000000000046}')
    _idlflags_ = ['dual', 'nonextensible', 'oleautomation']
class RecentFiles(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{00020963-0000-0000-C000-000000000046}')
    _idlflags_ = ['dual', 'nonextensible', 'oleautomation']
class Template(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{0002096A-0000-0000-C000-000000000046}')
    _idlflags_ = ['dual', 'nonextensible', 'oleautomation']
class AutoCorrect(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{00020949-0000-0000-C000-000000000046}')
    _idlflags_ = ['dual', 'nonextensible', 'oleautomation']
class FontNames(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{0002096F-0000-0000-C000-000000000046}')
    _idlflags_ = ['dual', 'nonextensible', 'oleautomation']
class Dialogs(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{00020910-0000-0000-C000-000000000046}')
    _idlflags_ = ['dual', 'nonextensible', 'oleautomation']
class AutoCaptions(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{0002097A-0000-0000-C000-000000000046}')
    _idlflags_ = ['dual', 'nonextensible', 'oleautomation']
class AddIns(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{0002097F-0000-0000-C000-000000000046}')
    _idlflags_ = ['dual', 'nonextensible', 'oleautomation']
class ListGalleries(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{00020995-0000-0000-C000-000000000046}')
    _idlflags_ = ['dual', 'nonextensible', 'oleautomation']
class Templates(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{000209A2-0000-0000-C000-000000000046}')
    _idlflags_ = ['dual', 'nonextensible', 'oleautomation']
class KeyBindings(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{00020996-0000-0000-C000-000000000046}')
    _idlflags_ = ['dual', 'nonextensible', 'oleautomation']
class KeysBoundTo(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{00020997-0000-0000-C000-000000000046}')
    _idlflags_ = ['dual', 'nonextensible', 'oleautomation']
class Options(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{000209B7-0000-0000-C000-000000000046}')
    _idlflags_ = ['dual', 'nonextensible', 'oleautomation']
class Dictionaries(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{000209AC-0000-0000-C000-000000000046}')
    _idlflags_ = ['dual', 'nonextensible', 'oleautomation']
class HangulHanjaConversionDictionaries(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{000209E0-0000-0000-C000-000000000046}')
    _idlflags_ = ['dual', 'nonextensible', 'oleautomation']

# values for enumeration 'WdKey'
wdNoKey = 255
wdKeyShift = 256
wdKeyControl = 512
wdKeyCommand = 512
wdKeyAlt = 1024
wdKeyOption = 1024
wdKeyA = 65
wdKeyB = 66
wdKeyC = 67
wdKeyD = 68
wdKeyE = 69
wdKeyF = 70
wdKeyG = 71
wdKeyH = 72
wdKeyI = 73
wdKeyJ = 74
wdKeyK = 75
wdKeyL = 76
wdKeyM = 77
wdKeyN = 78
wdKeyO = 79
wdKeyP = 80
wdKeyQ = 81
wdKeyR = 82
wdKeyS = 83
wdKeyT = 84
wdKeyU = 85
wdKeyV = 86
wdKeyW = 87
wdKeyX = 88
wdKeyY = 89
wdKeyZ = 90
wdKey0 = 48
wdKey1 = 49
wdKey2 = 50
wdKey3 = 51
wdKey4 = 52
wdKey5 = 53
wdKey6 = 54
wdKey7 = 55
wdKey8 = 56
wdKey9 = 57
wdKeyBackspace = 8
wdKeyTab = 9
wdKeyNumeric5Special = 12
wdKeyReturn = 13
wdKeyPause = 19
wdKeyEsc = 27
wdKeySpacebar = 32
wdKeyPageUp = 33
wdKeyPageDown = 34
wdKeyEnd = 35
wdKeyHome = 36
wdKeyInsert = 45
wdKeyDelete = 46
wdKeyNumeric0 = 96
wdKeyNumeric1 = 97
wdKeyNumeric2 = 98
wdKeyNumeric3 = 99
wdKeyNumeric4 = 100
wdKeyNumeric5 = 101
wdKeyNumeric6 = 102
wdKeyNumeric7 = 103
wdKeyNumeric8 = 104
wdKeyNumeric9 = 105
wdKeyNumericMultiply = 106
wdKeyNumericAdd = 107
wdKeyNumericSubtract = 109
wdKeyNumericDecimal = 110
wdKeyNumericDivide = 111
wdKeyF1 = 112
wdKeyF2 = 113
wdKeyF3 = 114
wdKeyF4 = 115
wdKeyF5 = 116
wdKeyF6 = 117
wdKeyF7 = 118
wdKeyF8 = 119
wdKeyF9 = 120
wdKeyF10 = 121
wdKeyF11 = 122
wdKeyF12 = 123
wdKeyF13 = 124
wdKeyF14 = 125
wdKeyF15 = 126
wdKeyF16 = 127
wdKeyScrollLock = 145
wdKeySemiColon = 186
wdKeyEquals = 187
wdKeyComma = 188
wdKeyHyphen = 189
wdKeyPeriod = 190
wdKeySlash = 191
wdKeyBackSingleQuote = 192
wdKeyOpenSquareBrace = 219
wdKeyBackSlash = 220
wdKeyCloseSquareBrace = 221
wdKeySingleQuote = 222
WdKey = c_int # enum
class SpellingSuggestions(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{000209AA-0000-0000-C000-000000000046}')
    _idlflags_ = ['dual', 'nonextensible', 'oleautomation']
class ProtectedViewWindows(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{FD0A74E8-C719-49F6-BA1B-F6D9839D1AB9}')
    _idlflags_ = ['dual', 'nonextensible', 'oleautomation']
class ProtectedViewWindow(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{F743EDD0-9B97-4B09-89CC-77BE19B51481}')
    _idlflags_ = ['dual', 'nonextensible', 'oleautomation']
_Global._methods_ = [
    COMMETHOD([dispid(1000), 'propget'], HRESULT, 'Application',
              ( ['out', 'retval'], POINTER(POINTER(Application)), 'prop' )),
    COMMETHOD([dispid(1001), 'propget'], HRESULT, 'Creator',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(1002), 'propget'], HRESULT, 'Parent',
              ( ['out', 'retval'], POINTER(POINTER(IDispatch)), 'prop' )),
    COMMETHOD([dispid(0), 'propget'], HRESULT, 'Name',
              ( ['out', 'retval'], POINTER(BSTR), 'prop' )),
    COMMETHOD([dispid(1), 'propget'], HRESULT, 'Documents',
              ( ['out', 'retval'], POINTER(POINTER(Documents)), 'prop' )),
    COMMETHOD([dispid(2), 'propget'], HRESULT, 'Windows',
              ( ['out', 'retval'], POINTER(POINTER(Windows)), 'prop' )),
    COMMETHOD([dispid(3), 'propget'], HRESULT, 'ActiveDocument',
              ( ['out', 'retval'], POINTER(POINTER(Document)), 'prop' )),
    COMMETHOD([dispid(4), 'propget'], HRESULT, 'ActiveWindow',
              ( ['out', 'retval'], POINTER(POINTER(Window)), 'prop' )),
    COMMETHOD([dispid(5), 'propget'], HRESULT, 'Selection',
              ( ['out', 'retval'], POINTER(POINTER(Selection)), 'prop' )),
    COMMETHOD([dispid(6), 'propget'], HRESULT, 'WordBasic',
              ( ['out', 'retval'], POINTER(POINTER(IDispatch)), 'prop' )),
    COMMETHOD([dispid(27), 'propget'], HRESULT, 'PrintPreview',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'prop' )),
    COMMETHOD([dispid(27), 'propput'], HRESULT, 'PrintPreview',
              ( ['in'], VARIANT_BOOL, 'prop' )),
    COMMETHOD([dispid(7), 'propget'], HRESULT, 'RecentFiles',
              ( ['out', 'retval'], POINTER(POINTER(RecentFiles)), 'prop' )),
    COMMETHOD([dispid(8), 'propget'], HRESULT, 'NormalTemplate',
              ( ['out', 'retval'], POINTER(POINTER(Template)), 'prop' )),
    COMMETHOD([dispid(9), 'propget'], HRESULT, 'System',
              ( ['out', 'retval'], POINTER(POINTER(System)), 'prop' )),
    COMMETHOD([dispid(10), 'propget'], HRESULT, 'AutoCorrect',
              ( ['out', 'retval'], POINTER(POINTER(AutoCorrect)), 'prop' )),
    COMMETHOD([dispid(11), 'propget'], HRESULT, 'FontNames',
              ( ['out', 'retval'], POINTER(POINTER(FontNames)), 'prop' )),
    COMMETHOD([dispid(12), 'propget'], HRESULT, 'LandscapeFontNames',
              ( ['out', 'retval'], POINTER(POINTER(FontNames)), 'prop' )),
    COMMETHOD([dispid(13), 'propget'], HRESULT, 'PortraitFontNames',
              ( ['out', 'retval'], POINTER(POINTER(FontNames)), 'prop' )),
    COMMETHOD([dispid(14), 'propget'], HRESULT, 'Languages',
              ( ['out', 'retval'], POINTER(POINTER(Languages)), 'prop' )),
    COMMETHOD([dispid(15), 'hidden', 'propget'], HRESULT, 'Assistant',
              ( ['out', 'retval'], POINTER(POINTER(comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.Assistant)), 'prop' )),
    COMMETHOD([dispid(17), 'propget'], HRESULT, 'FileConverters',
              ( ['out', 'retval'], POINTER(POINTER(FileConverters)), 'prop' )),
    COMMETHOD([dispid(19), 'propget'], HRESULT, 'Dialogs',
              ( ['out', 'retval'], POINTER(POINTER(Dialogs)), 'prop' )),
    COMMETHOD([dispid(20), 'propget'], HRESULT, 'CaptionLabels',
              ( ['out', 'retval'], POINTER(POINTER(CaptionLabels)), 'prop' )),
    COMMETHOD([dispid(21), 'propget'], HRESULT, 'AutoCaptions',
              ( ['out', 'retval'], POINTER(POINTER(AutoCaptions)), 'prop' )),
    COMMETHOD([dispid(22), 'propget'], HRESULT, 'AddIns',
              ( ['out', 'retval'], POINTER(POINTER(AddIns)), 'prop' )),
    COMMETHOD([dispid(28), 'propget'], HRESULT, 'Tasks',
              ( ['out', 'retval'], POINTER(POINTER(Tasks)), 'prop' )),
    COMMETHOD([dispid(55), 'propget'], HRESULT, 'MacroContainer',
              ( ['out', 'retval'], POINTER(POINTER(IDispatch)), 'prop' )),
    COMMETHOD([dispid(57), 'propget'], HRESULT, 'CommandBars',
              ( ['out', 'retval'], POINTER(POINTER(comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.CommandBars)), 'prop' )),
    COMMETHOD([dispid(59), 'propget'], HRESULT, 'SynonymInfo',
              ( ['in'], BSTR, 'Word' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'LanguageID' ),
              ( ['out', 'retval'], POINTER(POINTER(SynonymInfo)), 'prop' )),
    COMMETHOD([dispid(61), 'propget'], HRESULT, 'VBE',
              ( ['out', 'retval'], POINTER(POINTER(comtypes.gen._0002E157_0000_0000_C000_000000000046_0_5_3.VBE)), 'prop' )),
    COMMETHOD([dispid(65), 'propget'], HRESULT, 'ListGalleries',
              ( ['out', 'retval'], POINTER(POINTER(ListGalleries)), 'prop' )),
    COMMETHOD([dispid(66), 'propget'], HRESULT, 'ActivePrinter',
              ( ['out', 'retval'], POINTER(BSTR), 'prop' )),
    COMMETHOD([dispid(66), 'propput'], HRESULT, 'ActivePrinter',
              ( ['in'], BSTR, 'prop' )),
    COMMETHOD([dispid(67), 'propget'], HRESULT, 'Templates',
              ( ['out', 'retval'], POINTER(POINTER(Templates)), 'prop' )),
    COMMETHOD([dispid(68), 'propget'], HRESULT, 'CustomizationContext',
              ( ['out', 'retval'], POINTER(POINTER(IDispatch)), 'prop' )),
    COMMETHOD([dispid(68), 'propput'], HRESULT, 'CustomizationContext',
              ( ['in'], POINTER(IDispatch), 'prop' )),
    COMMETHOD([dispid(69), 'propget'], HRESULT, 'KeyBindings',
              ( ['out', 'retval'], POINTER(POINTER(KeyBindings)), 'prop' )),
    COMMETHOD([dispid(70), 'propget'], HRESULT, 'KeysBoundTo',
              ( ['in'], WdKeyCategory, 'KeyCategory' ),
              ( ['in'], BSTR, 'Command' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'CommandParameter' ),
              ( ['out', 'retval'], POINTER(POINTER(KeysBoundTo)), 'prop' )),
    COMMETHOD([dispid(71), 'propget'], HRESULT, 'FindKey',
              ( ['in'], c_int, 'KeyCode' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'KeyCode2' ),
              ( ['out', 'retval'], POINTER(POINTER(KeyBinding)), 'prop' )),
    COMMETHOD([dispid(93), 'propget'], HRESULT, 'Options',
              ( ['out', 'retval'], POINTER(POINTER(Options)), 'prop' )),
    COMMETHOD([dispid(95), 'propget'], HRESULT, 'CustomDictionaries',
              ( ['out', 'retval'], POINTER(POINTER(Dictionaries)), 'prop' )),
    COMMETHOD([dispid(97), 'propput'], HRESULT, 'StatusBar',
              ( ['in'], BSTR, 'rhs' )),
    COMMETHOD([dispid(104), 'propget'], HRESULT, 'ShowVisualBasicEditor',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'prop' )),
    COMMETHOD([dispid(104), 'propput'], HRESULT, 'ShowVisualBasicEditor',
              ( ['in'], VARIANT_BOOL, 'prop' )),
    COMMETHOD([dispid(109), 'propget'], HRESULT, 'IsObjectValid',
              ( ['in'], POINTER(IDispatch), 'Object' ),
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'prop' )),
    COMMETHOD([dispid(110), 'propget'], HRESULT, 'HangulHanjaDictionaries',
              ( ['out', 'retval'], POINTER(POINTER(HangulHanjaConversionDictionaries)), 'prop' )),
    COMMETHOD([dispid(305)], HRESULT, 'Repeat',
              ( ['in', 'optional'], POINTER(VARIANT), 'Times' ),
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'prop' )),
    COMMETHOD([dispid(310)], HRESULT, 'DDEExecute',
              ( ['in'], c_int, 'Channel' ),
              ( ['in'], BSTR, 'Command' )),
    COMMETHOD([dispid(311)], HRESULT, 'DDEInitiate',
              ( ['in'], BSTR, 'App' ),
              ( ['in'], BSTR, 'Topic' ),
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(312)], HRESULT, 'DDEPoke',
              ( ['in'], c_int, 'Channel' ),
              ( ['in'], BSTR, 'Item' ),
              ( ['in'], BSTR, 'Data' )),
    COMMETHOD([dispid(313)], HRESULT, 'DDERequest',
              ( ['in'], c_int, 'Channel' ),
              ( ['in'], BSTR, 'Item' ),
              ( ['out', 'retval'], POINTER(BSTR), 'prop' )),
    COMMETHOD([dispid(314)], HRESULT, 'DDETerminate',
              ( ['in'], c_int, 'Channel' )),
    COMMETHOD([dispid(315)], HRESULT, 'DDETerminateAll'),
    COMMETHOD([dispid(316)], HRESULT, 'BuildKeyCode',
              ( ['in'], WdKey, 'Arg1' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'Arg2' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'Arg3' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'Arg4' ),
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(317)], HRESULT, 'KeyString',
              ( ['in'], c_int, 'KeyCode' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'KeyCode2' ),
              ( ['out', 'retval'], POINTER(BSTR), 'prop' )),
    COMMETHOD([dispid(324)], HRESULT, 'CheckSpelling',
              ( ['in'], BSTR, 'Word' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'CustomDictionary' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'IgnoreUppercase' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'MainDictionary' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'CustomDictionary2' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'CustomDictionary3' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'CustomDictionary4' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'CustomDictionary5' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'CustomDictionary6' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'CustomDictionary7' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'CustomDictionary8' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'CustomDictionary9' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'CustomDictionary10' ),
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'prop' )),
    COMMETHOD([dispid(327)], HRESULT, 'GetSpellingSuggestions',
              ( ['in'], BSTR, 'Word' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'CustomDictionary' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'IgnoreUppercase' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'MainDictionary' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'SuggestionMode' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'CustomDictionary2' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'CustomDictionary3' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'CustomDictionary4' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'CustomDictionary5' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'CustomDictionary6' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'CustomDictionary7' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'CustomDictionary8' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'CustomDictionary9' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'CustomDictionary10' ),
              ( ['out', 'retval'], POINTER(POINTER(SpellingSuggestions)), 'prop' )),
    COMMETHOD([dispid(329)], HRESULT, 'Help',
              ( ['in'], POINTER(VARIANT), 'HelpType' )),
    COMMETHOD([dispid(345)], HRESULT, 'NewWindow',
              ( ['out', 'retval'], POINTER(POINTER(Window)), 'prop' )),
    COMMETHOD([dispid(354)], HRESULT, 'CleanString',
              ( ['in'], BSTR, 'String' ),
              ( ['out', 'retval'], POINTER(BSTR), 'prop' )),
    COMMETHOD([dispid(355)], HRESULT, 'ChangeFileOpenDirectory',
              ( ['in'], BSTR, 'Path' )),
    COMMETHOD([dispid(370)], HRESULT, 'InchesToPoints',
              ( ['in'], c_float, 'Inches' ),
              ( ['out', 'retval'], POINTER(c_float), 'prop' )),
    COMMETHOD([dispid(371)], HRESULT, 'CentimetersToPoints',
              ( ['in'], c_float, 'Centimeters' ),
              ( ['out', 'retval'], POINTER(c_float), 'prop' )),
    COMMETHOD([dispid(372)], HRESULT, 'MillimetersToPoints',
              ( ['in'], c_float, 'Millimeters' ),
              ( ['out', 'retval'], POINTER(c_float), 'prop' )),
    COMMETHOD([dispid(373)], HRESULT, 'PicasToPoints',
              ( ['in'], c_float, 'Picas' ),
              ( ['out', 'retval'], POINTER(c_float), 'prop' )),
    COMMETHOD([dispid(374)], HRESULT, 'LinesToPoints',
              ( ['in'], c_float, 'Lines' ),
              ( ['out', 'retval'], POINTER(c_float), 'prop' )),
    COMMETHOD([dispid(380)], HRESULT, 'PointsToInches',
              ( ['in'], c_float, 'Points' ),
              ( ['out', 'retval'], POINTER(c_float), 'prop' )),
    COMMETHOD([dispid(381)], HRESULT, 'PointsToCentimeters',
              ( ['in'], c_float, 'Points' ),
              ( ['out', 'retval'], POINTER(c_float), 'prop' )),
    COMMETHOD([dispid(382)], HRESULT, 'PointsToMillimeters',
              ( ['in'], c_float, 'Points' ),
              ( ['out', 'retval'], POINTER(c_float), 'prop' )),
    COMMETHOD([dispid(383)], HRESULT, 'PointsToPicas',
              ( ['in'], c_float, 'Points' ),
              ( ['out', 'retval'], POINTER(c_float), 'prop' )),
    COMMETHOD([dispid(384)], HRESULT, 'PointsToLines',
              ( ['in'], c_float, 'Points' ),
              ( ['out', 'retval'], POINTER(c_float), 'prop' )),
    COMMETHOD([dispid(385)], HRESULT, 'PointsToPixels',
              ( ['in'], c_float, 'Points' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'fVertical' ),
              ( ['out', 'retval'], POINTER(c_float), 'prop' )),
    COMMETHOD([dispid(386)], HRESULT, 'PixelsToPoints',
              ( ['in'], c_float, 'Pixels' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'fVertical' ),
              ( ['out', 'retval'], POINTER(c_float), 'prop' )),
    COMMETHOD([dispid(111), 'propget'], HRESULT, 'LanguageSettings',
              ( ['out', 'retval'], POINTER(POINTER(comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.LanguageSettings)), 'prop' )),
    COMMETHOD([dispid(112), 'hidden', 'propget'], HRESULT, 'AnswerWizard',
              ( ['out', 'retval'], POINTER(POINTER(comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.AnswerWizard)), 'prop' )),
    COMMETHOD([dispid(113), 'propget'], HRESULT, 'AutoCorrectEmail',
              ( ['out', 'retval'], POINTER(POINTER(AutoCorrect)), 'prop' )),
    COMMETHOD([dispid(114), 'propget'], HRESULT, 'ProtectedViewWindows',
              ( ['out', 'retval'], POINTER(POINTER(ProtectedViewWindows)), 'prop' )),
    COMMETHOD([dispid(115), 'propget'], HRESULT, 'ActiveProtectedViewWindow',
              ( ['out', 'retval'], POINTER(POINTER(ProtectedViewWindow)), 'prop' )),
    COMMETHOD([dispid(116), 'propget'], HRESULT, 'IsSandboxed',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'prop' )),
]
################################################################
## code template for _Global implementation
##class _Global_Impl(object):
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Creator(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Name(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Documents(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Windows(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def ActiveDocument(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def ActiveWindow(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Selection(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def WordBasic(self):
##        '-no docstring-'
##        #return prop
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    PrintPreview = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def RecentFiles(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def NormalTemplate(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def System(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def AutoCorrect(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def FontNames(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def LandscapeFontNames(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def PortraitFontNames(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Languages(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Assistant(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def FileConverters(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Dialogs(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def CaptionLabels(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def AutoCaptions(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def AddIns(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Tasks(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def MacroContainer(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def CommandBars(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def SynonymInfo(self, Word, LanguageID):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def VBE(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def ListGalleries(self):
##        '-no docstring-'
##        #return prop
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    ActivePrinter = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Templates(self):
##        '-no docstring-'
##        #return prop
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    CustomizationContext = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def KeyBindings(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def KeysBoundTo(self, KeyCategory, Command, CommandParameter):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def FindKey(self, KeyCode, KeyCode2):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Options(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def CustomDictionaries(self):
##        '-no docstring-'
##        #return prop
##
##    def _set(self, rhs):
##        '-no docstring-'
##    StatusBar = property(fset = _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    ShowVisualBasicEditor = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def IsObjectValid(self, Object):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def HangulHanjaDictionaries(self):
##        '-no docstring-'
##        #return prop
##
##    def Repeat(self, Times):
##        '-no docstring-'
##        #return prop
##
##    def DDEExecute(self, Channel, Command):
##        '-no docstring-'
##        #return 
##
##    def DDEInitiate(self, App, Topic):
##        '-no docstring-'
##        #return prop
##
##    def DDEPoke(self, Channel, Item, Data):
##        '-no docstring-'
##        #return 
##
##    def DDERequest(self, Channel, Item):
##        '-no docstring-'
##        #return prop
##
##    def DDETerminate(self, Channel):
##        '-no docstring-'
##        #return 
##
##    def DDETerminateAll(self):
##        '-no docstring-'
##        #return 
##
##    def BuildKeyCode(self, Arg1, Arg2, Arg3, Arg4):
##        '-no docstring-'
##        #return prop
##
##    def KeyString(self, KeyCode, KeyCode2):
##        '-no docstring-'
##        #return prop
##
##    def CheckSpelling(self, Word, CustomDictionary, IgnoreUppercase, MainDictionary, CustomDictionary2, CustomDictionary3, CustomDictionary4, CustomDictionary5, CustomDictionary6, CustomDictionary7, CustomDictionary8, CustomDictionary9, CustomDictionary10):
##        '-no docstring-'
##        #return prop
##
##    def GetSpellingSuggestions(self, Word, CustomDictionary, IgnoreUppercase, MainDictionary, SuggestionMode, CustomDictionary2, CustomDictionary3, CustomDictionary4, CustomDictionary5, CustomDictionary6, CustomDictionary7, CustomDictionary8, CustomDictionary9, CustomDictionary10):
##        '-no docstring-'
##        #return prop
##
##    def Help(self, HelpType):
##        '-no docstring-'
##        #return 
##
##    def NewWindow(self):
##        '-no docstring-'
##        #return prop
##
##    def CleanString(self, String):
##        '-no docstring-'
##        #return prop
##
##    def ChangeFileOpenDirectory(self, Path):
##        '-no docstring-'
##        #return 
##
##    def InchesToPoints(self, Inches):
##        '-no docstring-'
##        #return prop
##
##    def CentimetersToPoints(self, Centimeters):
##        '-no docstring-'
##        #return prop
##
##    def MillimetersToPoints(self, Millimeters):
##        '-no docstring-'
##        #return prop
##
##    def PicasToPoints(self, Picas):
##        '-no docstring-'
##        #return prop
##
##    def LinesToPoints(self, Lines):
##        '-no docstring-'
##        #return prop
##
##    def PointsToInches(self, Points):
##        '-no docstring-'
##        #return prop
##
##    def PointsToCentimeters(self, Points):
##        '-no docstring-'
##        #return prop
##
##    def PointsToMillimeters(self, Points):
##        '-no docstring-'
##        #return prop
##
##    def PointsToPicas(self, Points):
##        '-no docstring-'
##        #return prop
##
##    def PointsToLines(self, Points):
##        '-no docstring-'
##        #return prop
##
##    def PointsToPixels(self, Points, fVertical):
##        '-no docstring-'
##        #return prop
##
##    def PixelsToPoints(self, Pixels, fVertical):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def LanguageSettings(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def AnswerWizard(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def AutoCorrectEmail(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def ProtectedViewWindows(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def ActiveProtectedViewWindow(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def IsSandboxed(self):
##        '-no docstring-'
##        #return prop
##

class TablesOfAuthoritiesCategories(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{00020976-0000-0000-C000-000000000046}')
    _idlflags_ = ['dual', 'nonextensible', 'oleautomation']
class TableOfAuthoritiesCategory(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{00020977-0000-0000-C000-000000000046}')
    _idlflags_ = ['dual', 'nonextensible', 'oleautomation']
TablesOfAuthoritiesCategories._methods_ = [
    COMMETHOD([dispid(1000), 'propget'], HRESULT, 'Application',
              ( ['out', 'retval'], POINTER(POINTER(Application)), 'prop' )),
    COMMETHOD([dispid(1001), 'propget'], HRESULT, 'Creator',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(1002), 'propget'], HRESULT, 'Parent',
              ( ['out', 'retval'], POINTER(POINTER(IDispatch)), 'prop' )),
    COMMETHOD([dispid(-4), 'nonbrowsable', 'propget'], HRESULT, '_NewEnum',
              ( ['out', 'retval'], POINTER(POINTER(IUnknown)), 'prop' )),
    COMMETHOD([dispid(1), 'propget'], HRESULT, 'Count',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(0)], HRESULT, 'Item',
              ( ['in'], POINTER(VARIANT), 'Index' ),
              ( ['out', 'retval'], POINTER(POINTER(TableOfAuthoritiesCategory)), 'prop' )),
]
################################################################
## code template for TablesOfAuthoritiesCategories implementation
##class TablesOfAuthoritiesCategories_Impl(object):
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Creator(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def _NewEnum(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Count(self):
##        '-no docstring-'
##        #return prop
##
##    def Item(self, Index):
##        '-no docstring-'
##        #return prop
##


# values for enumeration 'WdTCSCConverterDirection'
wdTCSCConverterDirectionSCTC = 0
wdTCSCConverterDirectionTCSC = 1
wdTCSCConverterDirectionAuto = 2
WdTCSCConverterDirection = c_int # enum
class Index(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{0002097D-0000-0000-C000-000000000046}')
    _idlflags_ = ['dual', 'nonextensible', 'oleautomation']

# values for enumeration 'WdHeadingSeparator'
wdHeadingSeparatorNone = 0
wdHeadingSeparatorBlankLine = 1
wdHeadingSeparatorLetter = 2
wdHeadingSeparatorLetterLow = 3
wdHeadingSeparatorLetterFull = 4
WdHeadingSeparator = c_int # enum

# values for enumeration 'WdIndexType'
wdIndexIndent = 0
wdIndexRunin = 1
WdIndexType = c_int # enum

# values for enumeration 'WdIndexSortBy'
wdIndexSortByStroke = 0
wdIndexSortBySyllable = 1
WdIndexSortBy = c_int # enum

# values for enumeration 'WdIndexFilter'
wdIndexFilterNone = 0
wdIndexFilterAiueo = 1
wdIndexFilterAkasatana = 2
wdIndexFilterChosung = 3
wdIndexFilterLow = 4
wdIndexFilterMedium = 5
wdIndexFilterFull = 6
WdIndexFilter = c_int # enum
Index._methods_ = [
    COMMETHOD([dispid(1000), 'propget'], HRESULT, 'Application',
              ( ['out', 'retval'], POINTER(POINTER(Application)), 'prop' )),
    COMMETHOD([dispid(1001), 'propget'], HRESULT, 'Creator',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(1002), 'propget'], HRESULT, 'Parent',
              ( ['out', 'retval'], POINTER(POINTER(IDispatch)), 'prop' )),
    COMMETHOD([dispid(1), 'propget'], HRESULT, 'HeadingSeparator',
              ( ['out', 'retval'], POINTER(WdHeadingSeparator), 'prop' )),
    COMMETHOD([dispid(1), 'propput'], HRESULT, 'HeadingSeparator',
              ( ['in'], WdHeadingSeparator, 'prop' )),
    COMMETHOD([dispid(2), 'propget'], HRESULT, 'RightAlignPageNumbers',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'prop' )),
    COMMETHOD([dispid(2), 'propput'], HRESULT, 'RightAlignPageNumbers',
              ( ['in'], VARIANT_BOOL, 'prop' )),
    COMMETHOD([dispid(3), 'propget'], HRESULT, 'Type',
              ( ['out', 'retval'], POINTER(WdIndexType), 'prop' )),
    COMMETHOD([dispid(3), 'propput'], HRESULT, 'Type',
              ( ['in'], WdIndexType, 'prop' )),
    COMMETHOD([dispid(4), 'propget'], HRESULT, 'NumberOfColumns',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(4), 'propput'], HRESULT, 'NumberOfColumns',
              ( ['in'], c_int, 'prop' )),
    COMMETHOD([dispid(5), 'propget'], HRESULT, 'Range',
              ( ['out', 'retval'], POINTER(POINTER(Range)), 'prop' )),
    COMMETHOD([dispid(6), 'propget'], HRESULT, 'TabLeader',
              ( ['out', 'retval'], POINTER(WdTabLeader), 'prop' )),
    COMMETHOD([dispid(6), 'propput'], HRESULT, 'TabLeader',
              ( ['in'], WdTabLeader, 'prop' )),
    COMMETHOD([dispid(7), 'propget'], HRESULT, 'AccentedLetters',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'prop' )),
    COMMETHOD([dispid(7), 'propput'], HRESULT, 'AccentedLetters',
              ( ['in'], VARIANT_BOOL, 'prop' )),
    COMMETHOD([dispid(8), 'propget'], HRESULT, 'SortBy',
              ( ['out', 'retval'], POINTER(WdIndexSortBy), 'prop' )),
    COMMETHOD([dispid(8), 'propput'], HRESULT, 'SortBy',
              ( ['in'], WdIndexSortBy, 'prop' )),
    COMMETHOD([dispid(9), 'propget'], HRESULT, 'Filter',
              ( ['out', 'retval'], POINTER(WdIndexFilter), 'prop' )),
    COMMETHOD([dispid(9), 'propput'], HRESULT, 'Filter',
              ( ['in'], WdIndexFilter, 'prop' )),
    COMMETHOD([dispid(100)], HRESULT, 'Delete'),
    COMMETHOD([dispid(102)], HRESULT, 'Update'),
    COMMETHOD([dispid(10), 'propget'], HRESULT, 'IndexLanguage',
              ( ['out', 'retval'], POINTER(WdLanguageID), 'prop' )),
    COMMETHOD([dispid(10), 'propput'], HRESULT, 'IndexLanguage',
              ( ['in'], WdLanguageID, 'prop' )),
]
################################################################
## code template for Index implementation
##class Index_Impl(object):
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Creator(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return prop
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    HeadingSeparator = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    RightAlignPageNumbers = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    Type = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    NumberOfColumns = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Range(self):
##        '-no docstring-'
##        #return prop
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    TabLeader = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    AccentedLetters = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    SortBy = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    Filter = property(_get, _set, doc = _set.__doc__)
##
##    def Delete(self):
##        '-no docstring-'
##        #return 
##
##    def Update(self):
##        '-no docstring-'
##        #return 
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    IndexLanguage = property(_get, _set, doc = _set.__doc__)
##

class AutoTextEntries(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{00020937-0000-0000-C000-000000000046}')
    _idlflags_ = ['dual', 'nonextensible', 'oleautomation']
class AutoTextEntry(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{00020936-0000-0000-C000-000000000046}')
    _idlflags_ = ['dual', 'nonextensible', 'oleautomation']
AutoTextEntries._methods_ = [
    COMMETHOD([dispid(1000), 'propget'], HRESULT, 'Application',
              ( ['out', 'retval'], POINTER(POINTER(Application)), 'prop' )),
    COMMETHOD([dispid(1001), 'propget'], HRESULT, 'Creator',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(1002), 'propget'], HRESULT, 'Parent',
              ( ['out', 'retval'], POINTER(POINTER(IDispatch)), 'prop' )),
    COMMETHOD([dispid(-4), 'nonbrowsable', 'propget'], HRESULT, '_NewEnum',
              ( ['out', 'retval'], POINTER(POINTER(IUnknown)), 'prop' )),
    COMMETHOD([dispid(1), 'propget'], HRESULT, 'Count',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(0)], HRESULT, 'Item',
              ( ['in'], POINTER(VARIANT), 'Index' ),
              ( ['out', 'retval'], POINTER(POINTER(AutoTextEntry)), 'prop' )),
    COMMETHOD([dispid(101)], HRESULT, 'Add',
              ( ['in'], BSTR, 'Name' ),
              ( ['in'], POINTER(Range), 'Range' ),
              ( ['out', 'retval'], POINTER(POINTER(AutoTextEntry)), 'prop' )),
    COMMETHOD([dispid(102)], HRESULT, 'AppendToSpike',
              ( ['in'], POINTER(Range), 'Range' ),
              ( ['out', 'retval'], POINTER(POINTER(AutoTextEntry)), 'prop' )),
]
################################################################
## code template for AutoTextEntries implementation
##class AutoTextEntries_Impl(object):
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Creator(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def _NewEnum(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Count(self):
##        '-no docstring-'
##        #return prop
##
##    def Item(self, Index):
##        '-no docstring-'
##        #return prop
##
##    def Add(self, Name, Range):
##        '-no docstring-'
##        #return prop
##
##    def AppendToSpike(self, Range):
##        '-no docstring-'
##        #return prop
##

class Gridlines(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{FC9090AF-0DDB-4EC1-86E8-8751F2199F2C}')
    _idlflags_ = ['dual', 'nonextensible', 'oleautomation']
Gridlines._methods_ = [
    COMMETHOD([dispid(110), 'propget'], HRESULT, 'Name',
              ( ['out', 'retval'], POINTER(BSTR), 'prop' )),
    COMMETHOD([dispid(235)], HRESULT, 'Select',
              ( ['out', 'retval'], POINTER(VARIANT), 'prop' )),
    COMMETHOD([dispid(150), 'propget'], HRESULT, 'Parent',
              ( ['out', 'retval'], POINTER(POINTER(IDispatch)), 'prop' )),
    COMMETHOD([dispid(128), 'propget'], HRESULT, 'Border',
              ( ['out', 'retval'], POINTER(POINTER(ChartBorder)), 'prop' )),
    COMMETHOD([dispid(117)], HRESULT, 'Delete',
              ( ['out', 'retval'], POINTER(VARIANT), 'prop' )),
    COMMETHOD([dispid(1610743813), 'propget'], HRESULT, 'Format',
              ( ['out', 'retval'], POINTER(POINTER(ChartFormat)), 'prop' )),
    COMMETHOD([dispid(148), 'propget'], HRESULT, 'Application',
              ( ['out', 'retval'], POINTER(POINTER(IDispatch)), 'prop' )),
    COMMETHOD([dispid(149), 'propget'], HRESULT, 'Creator',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(253)], HRESULT, 'SetProperty',
              ( ['in'], BSTR, 'ID' ),
              ( ['in'], VARIANT, 'Value' )),
    COMMETHOD([dispid(254)], HRESULT, 'GetProperty',
              ( ['in'], BSTR, 'ID' ),
              ( ['out', 'retval'], POINTER(VARIANT), 'prop' )),
]
################################################################
## code template for Gridlines implementation
##class Gridlines_Impl(object):
##    @property
##    def Name(self):
##        '-no docstring-'
##        #return prop
##
##    def Select(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Border(self):
##        '-no docstring-'
##        #return prop
##
##    def Delete(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Format(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Creator(self):
##        '-no docstring-'
##        #return prop
##
##    def SetProperty(self, ID, Value):
##        '-no docstring-'
##        #return 
##
##    def GetProperty(self, ID):
##        '-no docstring-'
##        #return prop
##

XMLSchemaReference._methods_ = [
    COMMETHOD([dispid(1000), 'propget'], HRESULT, 'Application',
              ( ['out', 'retval'], POINTER(POINTER(Application)), 'prop' )),
    COMMETHOD([dispid(1001), 'propget'], HRESULT, 'Creator',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(1002), 'propget'], HRESULT, 'Parent',
              ( ['out', 'retval'], POINTER(POINTER(IDispatch)), 'prop' )),
    COMMETHOD([dispid(2), 'propget'], HRESULT, 'NamespaceURI',
              ( ['out', 'retval'], POINTER(BSTR), 'prop' )),
    COMMETHOD([dispid(3), 'propget'], HRESULT, 'Location',
              ( ['out', 'retval'], POINTER(BSTR), 'prop' )),
    COMMETHOD([dispid(100)], HRESULT, 'Delete'),
    COMMETHOD([dispid(101)], HRESULT, 'Reload'),
]
################################################################
## code template for XMLSchemaReference implementation
##class XMLSchemaReference_Impl(object):
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Creator(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def NamespaceURI(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Location(self):
##        '-no docstring-'
##        #return prop
##
##    def Delete(self):
##        '-no docstring-'
##        #return 
##
##    def Reload(self):
##        '-no docstring-'
##        #return 
##

class Bibliography(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{3834F60F-EE8C-455D-A441-D766675D6D3B}')
    _idlflags_ = ['dual', 'nonextensible', 'oleautomation']
class Sources(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{FA02A26B-6550-45C5-B6F0-80E757CD3482}')
    _idlflags_ = ['dual', 'nonextensible', 'oleautomation']
Bibliography._methods_ = [
    COMMETHOD([dispid(100), 'propget'], HRESULT, 'Application',
              ( ['out', 'retval'], POINTER(POINTER(Application)), 'prop' )),
    COMMETHOD([dispid(101), 'propget'], HRESULT, 'Creator',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(102), 'propget'], HRESULT, 'Parent',
              ( ['out', 'retval'], POINTER(POINTER(IDispatch)), 'prop' )),
    COMMETHOD([dispid(103), 'propget'], HRESULT, 'Sources',
              ( ['out', 'retval'], POINTER(POINTER(Sources)), 'prop' )),
    COMMETHOD([dispid(105), 'propget'], HRESULT, 'BibliographyStyle',
              ( ['out', 'retval'], POINTER(BSTR), 'prop' )),
    COMMETHOD([dispid(105), 'propput'], HRESULT, 'BibliographyStyle',
              ( ['in'], BSTR, 'prop' )),
    COMMETHOD([dispid(104)], HRESULT, 'GenerateUniqueTag',
              ( ['out', 'retval'], POINTER(BSTR), 'prop' )),
]
################################################################
## code template for Bibliography implementation
##class Bibliography_Impl(object):
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Creator(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Sources(self):
##        '-no docstring-'
##        #return prop
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    BibliographyStyle = property(_get, _set, doc = _set.__doc__)
##
##    def GenerateUniqueTag(self):
##        '-no docstring-'
##        #return prop
##

PictureFormat._methods_ = [
    COMMETHOD([dispid(1000), 'propget'], HRESULT, 'Application',
              ( ['out', 'retval'], POINTER(POINTER(Application)), 'prop' )),
    COMMETHOD([dispid(1001), 'propget'], HRESULT, 'Creator',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(1), 'propget'], HRESULT, 'Parent',
              ( ['out', 'retval'], POINTER(POINTER(IDispatch)), 'prop' )),
    COMMETHOD([dispid(100), 'propget'], HRESULT, 'Brightness',
              ( ['out', 'retval'], POINTER(c_float), 'prop' )),
    COMMETHOD([dispid(100), 'propput'], HRESULT, 'Brightness',
              ( ['in'], c_float, 'prop' )),
    COMMETHOD([dispid(101), 'propget'], HRESULT, 'ColorType',
              ( ['out', 'retval'], POINTER(comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoPictureColorType), 'prop' )),
    COMMETHOD([dispid(101), 'propput'], HRESULT, 'ColorType',
              ( ['in'], comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoPictureColorType, 'prop' )),
    COMMETHOD([dispid(102), 'propget'], HRESULT, 'Contrast',
              ( ['out', 'retval'], POINTER(c_float), 'prop' )),
    COMMETHOD([dispid(102), 'propput'], HRESULT, 'Contrast',
              ( ['in'], c_float, 'prop' )),
    COMMETHOD([dispid(103), 'propget'], HRESULT, 'CropBottom',
              ( ['out', 'retval'], POINTER(c_float), 'prop' )),
    COMMETHOD([dispid(103), 'propput'], HRESULT, 'CropBottom',
              ( ['in'], c_float, 'prop' )),
    COMMETHOD([dispid(104), 'propget'], HRESULT, 'CropLeft',
              ( ['out', 'retval'], POINTER(c_float), 'prop' )),
    COMMETHOD([dispid(104), 'propput'], HRESULT, 'CropLeft',
              ( ['in'], c_float, 'prop' )),
    COMMETHOD([dispid(105), 'propget'], HRESULT, 'CropRight',
              ( ['out', 'retval'], POINTER(c_float), 'prop' )),
    COMMETHOD([dispid(105), 'propput'], HRESULT, 'CropRight',
              ( ['in'], c_float, 'prop' )),
    COMMETHOD([dispid(106), 'propget'], HRESULT, 'CropTop',
              ( ['out', 'retval'], POINTER(c_float), 'prop' )),
    COMMETHOD([dispid(106), 'propput'], HRESULT, 'CropTop',
              ( ['in'], c_float, 'prop' )),
    COMMETHOD([dispid(107), 'propget'], HRESULT, 'TransparencyColor',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(107), 'propput'], HRESULT, 'TransparencyColor',
              ( ['in'], c_int, 'prop' )),
    COMMETHOD([dispid(108), 'propget'], HRESULT, 'TransparentBackground',
              ( ['out', 'retval'], POINTER(comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoTriState), 'prop' )),
    COMMETHOD([dispid(108), 'propput'], HRESULT, 'TransparentBackground',
              ( ['in'], comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoTriState, 'prop' )),
    COMMETHOD([dispid(10)], HRESULT, 'IncrementBrightness',
              ( ['in'], c_float, 'Increment' )),
    COMMETHOD([dispid(11)], HRESULT, 'IncrementContrast',
              ( ['in'], c_float, 'Increment' )),
    COMMETHOD([dispid(109), 'propget'], HRESULT, 'Crop',
              ( ['out', 'retval'], POINTER(POINTER(comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.Crop)), 'prop' )),
    COMMETHOD([dispid(109), 'propput'], HRESULT, 'Crop',
              ( ['in'], POINTER(comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.Crop), 'prop' )),
]
################################################################
## code template for PictureFormat implementation
##class PictureFormat_Impl(object):
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Creator(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return prop
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    Brightness = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    ColorType = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    Contrast = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    CropBottom = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    CropLeft = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    CropRight = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    CropTop = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    TransparencyColor = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    TransparentBackground = property(_get, _set, doc = _set.__doc__)
##
##    def IncrementBrightness(self, Increment):
##        '-no docstring-'
##        #return 
##
##    def IncrementContrast(self, Increment):
##        '-no docstring-'
##        #return 
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    Crop = property(_get, _set, doc = _set.__doc__)
##

Windows._methods_ = [
    COMMETHOD([dispid(-4), 'nonbrowsable', 'propget'], HRESULT, '_NewEnum',
              ( ['out', 'retval'], POINTER(POINTER(IUnknown)), 'prop' )),
    COMMETHOD([dispid(2), 'propget'], HRESULT, 'Count',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(1000), 'propget'], HRESULT, 'Application',
              ( ['out', 'retval'], POINTER(POINTER(Application)), 'prop' )),
    COMMETHOD([dispid(1001), 'propget'], HRESULT, 'Creator',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(1002), 'propget'], HRESULT, 'Parent',
              ( ['out', 'retval'], POINTER(POINTER(IDispatch)), 'prop' )),
    COMMETHOD([dispid(0)], HRESULT, 'Item',
              ( ['in'], POINTER(VARIANT), 'Index' ),
              ( ['out', 'retval'], POINTER(POINTER(Window)), 'prop' )),
    COMMETHOD([dispid(10)], HRESULT, 'Add',
              ( ['in', 'optional'], POINTER(VARIANT), 'Window' ),
              ( ['out', 'retval'], POINTER(POINTER(Window)), 'prop' )),
    COMMETHOD([dispid(11)], HRESULT, 'Arrange',
              ( ['in', 'optional'], POINTER(VARIANT), 'ArrangeStyle' )),
    COMMETHOD([dispid(12)], HRESULT, 'CompareSideBySideWith',
              ( ['in'], POINTER(VARIANT), 'Document' ),
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'prop' )),
    COMMETHOD([dispid(13)], HRESULT, 'BreakSideBySide',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'prop' )),
    COMMETHOD([dispid(14)], HRESULT, 'ResetPositionsSideBySide'),
    COMMETHOD([dispid(1003), 'propget'], HRESULT, 'SyncScrollingSideBySide',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'prop' )),
    COMMETHOD([dispid(1003), 'propput'], HRESULT, 'SyncScrollingSideBySide',
              ( ['in'], VARIANT_BOOL, 'prop' )),
]
################################################################
## code template for Windows implementation
##class Windows_Impl(object):
##    @property
##    def _NewEnum(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Count(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Creator(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return prop
##
##    def Item(self, Index):
##        '-no docstring-'
##        #return prop
##
##    def Add(self, Window):
##        '-no docstring-'
##        #return prop
##
##    def Arrange(self, ArrangeStyle):
##        '-no docstring-'
##        #return 
##
##    def CompareSideBySideWith(self, Document):
##        '-no docstring-'
##        #return prop
##
##    def BreakSideBySide(self):
##        '-no docstring-'
##        #return prop
##
##    def ResetPositionsSideBySide(self):
##        '-no docstring-'
##        #return 
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    SyncScrollingSideBySide = property(_get, _set, doc = _set.__doc__)
##

class Trendline(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{91C46192-3124-4346-A815-10B8873F5A06}')
    _idlflags_ = ['dual', 'nonextensible', 'oleautomation']
class DataLabel(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{1FD94DF1-3569-4465-94FF-E8B22D28EEB0}')
    _idlflags_ = ['dual', 'nonextensible', 'oleautomation']
Trendline._methods_ = [
    COMMETHOD([dispid(150), 'propget'], HRESULT, 'Parent',
              ( ['out', 'retval'], POINTER(POINTER(IDispatch)), 'prop' )),
    COMMETHOD([dispid(185), 'hidden', 'propget'], HRESULT, 'Backward',
              ( ['out', 'retval'], POINTER(c_double), 'prop' )),
    COMMETHOD([dispid(185), 'hidden', 'propput'], HRESULT, 'Backward',
              ( ['in'], c_double, 'prop' )),
    COMMETHOD([dispid(128), 'propget'], HRESULT, 'Border',
              ( ['out', 'retval'], POINTER(POINTER(ChartBorder)), 'prop' )),
    COMMETHOD([dispid(112)], HRESULT, 'ClearFormats',
              ( ['out', 'retval'], POINTER(VARIANT), 'prop' )),
    COMMETHOD([dispid(158), 'propget'], HRESULT, 'DataLabel',
              ( ['out', 'retval'], POINTER(POINTER(DataLabel)), 'prop' )),
    COMMETHOD([dispid(117)], HRESULT, 'Delete',
              ( ['out', 'retval'], POINTER(VARIANT), 'prop' )),
    COMMETHOD([dispid(190), 'propget'], HRESULT, 'DisplayEquation',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'prop' )),
    COMMETHOD([dispid(190), 'propput'], HRESULT, 'DisplayEquation',
              ( ['in'], VARIANT_BOOL, 'prop' )),
    COMMETHOD([dispid(189), 'propget'], HRESULT, 'DisplayRSquared',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'prop' )),
    COMMETHOD([dispid(189), 'propput'], HRESULT, 'DisplayRSquared',
              ( ['in'], VARIANT_BOOL, 'prop' )),
    COMMETHOD([dispid(191), 'hidden', 'propget'], HRESULT, 'Forward',
              ( ['out', 'retval'], POINTER(c_double), 'prop' )),
    COMMETHOD([dispid(191), 'hidden', 'propput'], HRESULT, 'Forward',
              ( ['in'], c_double, 'prop' )),
    COMMETHOD([dispid(486), 'propget'], HRESULT, 'Index',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(186), 'propget'], HRESULT, 'Intercept',
              ( ['out', 'retval'], POINTER(c_double), 'prop' )),
    COMMETHOD([dispid(186), 'propput'], HRESULT, 'Intercept',
              ( ['in'], c_double, 'prop' )),
    COMMETHOD([dispid(187), 'propget'], HRESULT, 'InterceptIsAuto',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'prop' )),
    COMMETHOD([dispid(187), 'propput'], HRESULT, 'InterceptIsAuto',
              ( ['in'], VARIANT_BOOL, 'prop' )),
    COMMETHOD([dispid(110), 'propget'], HRESULT, 'Name',
              ( ['out', 'retval'], POINTER(BSTR), 'prop' )),
    COMMETHOD([dispid(110), 'propput'], HRESULT, 'Name',
              ( ['in'], BSTR, 'prop' )),
    COMMETHOD([dispid(188), 'propget'], HRESULT, 'NameIsAuto',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'prop' )),
    COMMETHOD([dispid(188), 'propput'], HRESULT, 'NameIsAuto',
              ( ['in'], VARIANT_BOOL, 'prop' )),
    COMMETHOD([dispid(192), 'propget'], HRESULT, 'Order',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(192), 'propput'], HRESULT, 'Order',
              ( ['in'], c_int, 'prop' )),
    COMMETHOD([dispid(184), 'propget'], HRESULT, 'Period',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(184), 'propput'], HRESULT, 'Period',
              ( ['in'], c_int, 'prop' )),
    COMMETHOD([dispid(235)], HRESULT, 'Select',
              ( ['out', 'retval'], POINTER(VARIANT), 'prop' )),
    COMMETHOD([dispid(108), 'propget'], HRESULT, 'Type',
              ( ['out', 'retval'], POINTER(XlTrendlineType), 'prop' )),
    COMMETHOD([dispid(108), 'propput'], HRESULT, 'Type',
              ( ['in'], XlTrendlineType, 'prop' )),
    COMMETHOD([dispid(1610743837), 'propget'], HRESULT, 'Format',
              ( ['out', 'retval'], POINTER(POINTER(ChartFormat)), 'prop' )),
    COMMETHOD([dispid(148), 'propget'], HRESULT, 'Application',
              ( ['out', 'retval'], POINTER(POINTER(IDispatch)), 'prop' )),
    COMMETHOD([dispid(149), 'propget'], HRESULT, 'Creator',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(2650), 'propget'], HRESULT, 'Backward2',
              ( ['out', 'retval'], POINTER(c_double), 'prop' )),
    COMMETHOD([dispid(2650), 'propput'], HRESULT, 'Backward2',
              ( ['in'], c_double, 'prop' )),
    COMMETHOD([dispid(2651), 'propget'], HRESULT, 'Forward2',
              ( ['out', 'retval'], POINTER(c_double), 'prop' )),
    COMMETHOD([dispid(2651), 'propput'], HRESULT, 'Forward2',
              ( ['in'], c_double, 'prop' )),
    COMMETHOD([dispid(253)], HRESULT, 'SetProperty',
              ( ['in'], BSTR, 'ID' ),
              ( ['in'], VARIANT, 'Value' )),
    COMMETHOD([dispid(254)], HRESULT, 'GetProperty',
              ( ['in'], BSTR, 'ID' ),
              ( ['out', 'retval'], POINTER(VARIANT), 'prop' )),
]
################################################################
## code template for Trendline implementation
##class Trendline_Impl(object):
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return prop
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    Backward = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Border(self):
##        '-no docstring-'
##        #return prop
##
##    def ClearFormats(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def DataLabel(self):
##        '-no docstring-'
##        #return prop
##
##    def Delete(self):
##        '-no docstring-'
##        #return prop
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    DisplayEquation = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    DisplayRSquared = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    Forward = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Index(self):
##        '-no docstring-'
##        #return prop
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    Intercept = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    InterceptIsAuto = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    Name = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    NameIsAuto = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    Order = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    Period = property(_get, _set, doc = _set.__doc__)
##
##    def Select(self):
##        '-no docstring-'
##        #return prop
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    Type = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Format(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Creator(self):
##        '-no docstring-'
##        #return prop
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    Backward2 = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    Forward2 = property(_get, _set, doc = _set.__doc__)
##
##    def SetProperty(self, ID, Value):
##        '-no docstring-'
##        #return 
##
##    def GetProperty(self, ID):
##        '-no docstring-'
##        #return prop
##

class StyleSheet(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{000209EF-0000-0000-C000-000000000046}')
    _idlflags_ = ['dual', 'nonextensible', 'oleautomation']

# values for enumeration 'WdStyleSheetLinkType'
wdStyleSheetLinkTypeLinked = 0
wdStyleSheetLinkTypeImported = 1
WdStyleSheetLinkType = c_int # enum

# values for enumeration 'WdStyleSheetPrecedence'
wdStyleSheetPrecedenceHigher = -1
wdStyleSheetPrecedenceLower = -2
wdStyleSheetPrecedenceHighest = 1
wdStyleSheetPrecedenceLowest = 0
WdStyleSheetPrecedence = c_int # enum
StyleSheet._methods_ = [
    COMMETHOD([dispid(1000), 'propget'], HRESULT, 'Application',
              ( ['out', 'retval'], POINTER(POINTER(Application)), 'prop' )),
    COMMETHOD([dispid(1001), 'propget'], HRESULT, 'Creator',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(100), 'propget'], HRESULT, 'Parent',
              ( ['out', 'retval'], POINTER(POINTER(IDispatch)), 'prop' )),
    COMMETHOD([dispid(1), 'propget'], HRESULT, 'FullName',
              ( ['out', 'retval'], POINTER(BSTR), 'prop' )),
    COMMETHOD([dispid(2), 'propget'], HRESULT, 'Index',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(3), 'propget'], HRESULT, 'Name',
              ( ['out', 'retval'], POINTER(BSTR), 'prop' )),
    COMMETHOD([dispid(4), 'propget'], HRESULT, 'Path',
              ( ['out', 'retval'], POINTER(BSTR), 'prop' )),
    COMMETHOD([dispid(5), 'propget'], HRESULT, 'Type',
              ( ['out', 'retval'], POINTER(WdStyleSheetLinkType), 'prop' )),
    COMMETHOD([dispid(5), 'propput'], HRESULT, 'Type',
              ( ['in'], WdStyleSheetLinkType, 'prop' )),
    COMMETHOD([dispid(6), 'propget'], HRESULT, 'Title',
              ( ['out', 'retval'], POINTER(BSTR), 'prop' )),
    COMMETHOD([dispid(6), 'propput'], HRESULT, 'Title',
              ( ['in'], BSTR, 'prop' )),
    COMMETHOD([dispid(7)], HRESULT, 'Move',
              ( ['in'], WdStyleSheetPrecedence, 'Precedence' )),
    COMMETHOD([dispid(8)], HRESULT, 'Delete'),
]
################################################################
## code template for StyleSheet implementation
##class StyleSheet_Impl(object):
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Creator(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def FullName(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Index(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Name(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Path(self):
##        '-no docstring-'
##        #return prop
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    Type = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    Title = property(_get, _set, doc = _set.__doc__)
##
##    def Move(self, Precedence):
##        '-no docstring-'
##        #return 
##
##    def Delete(self):
##        '-no docstring-'
##        #return 
##


# values for enumeration 'WdThemeColorIndex'
wdNotThemeColor = -1
wdThemeColorMainDark1 = 0
wdThemeColorMainLight1 = 1
wdThemeColorMainDark2 = 2
wdThemeColorMainLight2 = 3
wdThemeColorAccent1 = 4
wdThemeColorAccent2 = 5
wdThemeColorAccent3 = 6
wdThemeColorAccent4 = 7
wdThemeColorAccent5 = 8
wdThemeColorAccent6 = 9
wdThemeColorHyperlink = 10
wdThemeColorHyperlinkFollowed = 11
wdThemeColorBackground1 = 12
wdThemeColorText1 = 13
wdThemeColorBackground2 = 14
wdThemeColorText2 = 15
WdThemeColorIndex = c_int # enum
class CoAuthLock(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{99755F80-FE96-4F7D-B636-B8E800E54F44}')
    _idlflags_ = ['dual', 'nonextensible', 'oleautomation']

# values for enumeration 'WdLockType'
wdLockNone = 0
wdLockReservation = 1
wdLockEphemeral = 2
wdLockChanged = 3
WdLockType = c_int # enum
CoAuthLock._methods_ = [
    COMMETHOD([dispid(1000), 'propget'], HRESULT, 'Application',
              ( ['out', 'retval'], POINTER(POINTER(Application)), 'prop' )),
    COMMETHOD([dispid(1001), 'propget'], HRESULT, 'Creator',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(1002), 'propget'], HRESULT, 'Parent',
              ( ['out', 'retval'], POINTER(POINTER(IDispatch)), 'prop' )),
    COMMETHOD([dispid(1), 'propget'], HRESULT, 'Type',
              ( ['out', 'retval'], POINTER(WdLockType), 'prop' )),
    COMMETHOD([dispid(2), 'propget'], HRESULT, 'Owner',
              ( ['out', 'retval'], POINTER(POINTER(CoAuthor)), 'prop' )),
    COMMETHOD([dispid(3), 'propget'], HRESULT, 'Range',
              ( ['out', 'retval'], POINTER(POINTER(Range)), 'prop' )),
    COMMETHOD([dispid(4), 'propget'], HRESULT, 'HeaderFooter',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'prop' )),
    COMMETHOD([dispid(6)], HRESULT, 'Unlock'),
]
################################################################
## code template for CoAuthLock implementation
##class CoAuthLock_Impl(object):
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Creator(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Type(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Owner(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Range(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def HeaderFooter(self):
##        '-no docstring-'
##        #return prop
##
##    def Unlock(self):
##        '-no docstring-'
##        #return 
##

class OMathBorderBox(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{2503B6EE-0889-44DF-B920-6D6F9659DEA3}')
    _idlflags_ = ['dual', 'nonextensible', 'oleautomation']
OMathBorderBox._methods_ = [
    COMMETHOD([dispid(100), 'propget'], HRESULT, 'Application',
              ( ['out', 'retval'], POINTER(POINTER(Application)), 'prop' )),
    COMMETHOD([dispid(101), 'propget'], HRESULT, 'Creator',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(102), 'propget'], HRESULT, 'Parent',
              ( ['out', 'retval'], POINTER(POINTER(IDispatch)), 'prop' )),
    COMMETHOD([dispid(103), 'propget'], HRESULT, 'E',
              ( ['out', 'retval'], POINTER(POINTER(OMath)), 'prop' )),
    COMMETHOD([dispid(104), 'propget'], HRESULT, 'HideTop',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'prop' )),
    COMMETHOD([dispid(104), 'propput'], HRESULT, 'HideTop',
              ( ['in'], VARIANT_BOOL, 'prop' )),
    COMMETHOD([dispid(105), 'propget'], HRESULT, 'HideBot',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'prop' )),
    COMMETHOD([dispid(105), 'propput'], HRESULT, 'HideBot',
              ( ['in'], VARIANT_BOOL, 'prop' )),
    COMMETHOD([dispid(106), 'propget'], HRESULT, 'HideLeft',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'prop' )),
    COMMETHOD([dispid(106), 'propput'], HRESULT, 'HideLeft',
              ( ['in'], VARIANT_BOOL, 'prop' )),
    COMMETHOD([dispid(107), 'propget'], HRESULT, 'HideRight',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'prop' )),
    COMMETHOD([dispid(107), 'propput'], HRESULT, 'HideRight',
              ( ['in'], VARIANT_BOOL, 'prop' )),
    COMMETHOD([dispid(108), 'propget'], HRESULT, 'StrikeH',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'prop' )),
    COMMETHOD([dispid(108), 'propput'], HRESULT, 'StrikeH',
              ( ['in'], VARIANT_BOOL, 'prop' )),
    COMMETHOD([dispid(109), 'propget'], HRESULT, 'StrikeV',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'prop' )),
    COMMETHOD([dispid(109), 'propput'], HRESULT, 'StrikeV',
              ( ['in'], VARIANT_BOOL, 'prop' )),
    COMMETHOD([dispid(110), 'propget'], HRESULT, 'StrikeBLTR',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'prop' )),
    COMMETHOD([dispid(110), 'propput'], HRESULT, 'StrikeBLTR',
              ( ['in'], VARIANT_BOOL, 'prop' )),
    COMMETHOD([dispid(111), 'propget'], HRESULT, 'StrikeTLBR',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'prop' )),
    COMMETHOD([dispid(111), 'propput'], HRESULT, 'StrikeTLBR',
              ( ['in'], VARIANT_BOOL, 'prop' )),
]
################################################################
## code template for OMathBorderBox implementation
##class OMathBorderBox_Impl(object):
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Creator(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def E(self):
##        '-no docstring-'
##        #return prop
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    HideTop = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    HideBot = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    HideLeft = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    HideRight = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    StrikeH = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    StrikeV = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    StrikeBLTR = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    StrikeTLBR = property(_get, _set, doc = _set.__doc__)
##

class RepeatingSectionItem(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{4265ED97-A922-4CA4-8CD8-99684CCA9CDB}')
    _idlflags_ = ['dual', 'nonextensible', 'oleautomation']
RepeatingSectionItem._methods_ = [
    COMMETHOD([dispid(1000), 'propget'], HRESULT, 'Application',
              ( ['out', 'retval'], POINTER(POINTER(Application)), 'prop' )),
    COMMETHOD([dispid(1001), 'propget'], HRESULT, 'Creator',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(1002), 'propget'], HRESULT, 'Parent',
              ( ['out', 'retval'], POINTER(POINTER(IDispatch)), 'prop' )),
    COMMETHOD([dispid(1), 'propget'], HRESULT, 'Range',
              ( ['out', 'retval'], POINTER(POINTER(Range)), 'prop' )),
    COMMETHOD([dispid(2)], HRESULT, 'InsertItemBefore',
              ( ['out', 'retval'], POINTER(POINTER(RepeatingSectionItem)), 'prop' )),
    COMMETHOD([dispid(3)], HRESULT, 'InsertItemAfter',
              ( ['out', 'retval'], POINTER(POINTER(RepeatingSectionItem)), 'prop' )),
    COMMETHOD([dispid(4)], HRESULT, 'Delete'),
]
################################################################
## code template for RepeatingSectionItem implementation
##class RepeatingSectionItem_Impl(object):
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Creator(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Range(self):
##        '-no docstring-'
##        #return prop
##
##    def InsertItemBefore(self):
##        '-no docstring-'
##        #return prop
##
##    def InsertItemAfter(self):
##        '-no docstring-'
##        #return prop
##
##    def Delete(self):
##        '-no docstring-'
##        #return 
##

class View(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{000209A5-0000-0000-C000-000000000046}')
    _idlflags_ = ['dual', 'nonextensible', 'oleautomation']

# values for enumeration 'WdWindowType'
wdWindowDocument = 0
wdWindowTemplate = 1
WdWindowType = c_int # enum

# values for enumeration 'WdIMEMode'
wdIMEModeNoControl = 0
wdIMEModeOn = 1
wdIMEModeOff = 2
wdIMEModeHiragana = 4
wdIMEModeKatakana = 5
wdIMEModeKatakanaHalf = 6
wdIMEModeAlphaFull = 7
wdIMEModeAlpha = 8
wdIMEModeHangulFull = 9
wdIMEModeHangul = 10
WdIMEMode = c_int # enum

# values for enumeration 'WdShowSourceDocuments'
wdShowSourceDocumentsNone = 0
wdShowSourceDocumentsOriginal = 1
wdShowSourceDocumentsRevised = 2
wdShowSourceDocumentsBoth = 3
WdShowSourceDocuments = c_int # enum
Window._methods_ = [
    COMMETHOD([dispid(1000), 'propget'], HRESULT, 'Application',
              ( ['out', 'retval'], POINTER(POINTER(Application)), 'prop' )),
    COMMETHOD([dispid(1001), 'propget'], HRESULT, 'Creator',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(1002), 'propget'], HRESULT, 'Parent',
              ( ['out', 'retval'], POINTER(POINTER(IDispatch)), 'prop' )),
    COMMETHOD([dispid(1), 'propget'], HRESULT, 'ActivePane',
              ( ['out', 'retval'], POINTER(POINTER(Pane)), 'prop' )),
    COMMETHOD([dispid(2), 'propget'], HRESULT, 'Document',
              ( ['out', 'retval'], POINTER(POINTER(Document)), 'prop' )),
    COMMETHOD([dispid(3), 'propget'], HRESULT, 'Panes',
              ( ['out', 'retval'], POINTER(POINTER(Panes)), 'prop' )),
    COMMETHOD([dispid(4), 'propget'], HRESULT, 'Selection',
              ( ['out', 'retval'], POINTER(POINTER(Selection)), 'prop' )),
    COMMETHOD([dispid(5), 'propget'], HRESULT, 'Left',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(5), 'propput'], HRESULT, 'Left',
              ( ['in'], c_int, 'prop' )),
    COMMETHOD([dispid(6), 'propget'], HRESULT, 'Top',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(6), 'propput'], HRESULT, 'Top',
              ( ['in'], c_int, 'prop' )),
    COMMETHOD([dispid(7), 'propget'], HRESULT, 'Width',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(7), 'propput'], HRESULT, 'Width',
              ( ['in'], c_int, 'prop' )),
    COMMETHOD([dispid(8), 'propget'], HRESULT, 'Height',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(8), 'propput'], HRESULT, 'Height',
              ( ['in'], c_int, 'prop' )),
    COMMETHOD([dispid(9), 'propget'], HRESULT, 'Split',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'prop' )),
    COMMETHOD([dispid(9), 'propput'], HRESULT, 'Split',
              ( ['in'], VARIANT_BOOL, 'prop' )),
    COMMETHOD([dispid(10), 'propget'], HRESULT, 'SplitVertical',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(10), 'propput'], HRESULT, 'SplitVertical',
              ( ['in'], c_int, 'prop' )),
    COMMETHOD([dispid(0), 'propget'], HRESULT, 'Caption',
              ( ['out', 'retval'], POINTER(BSTR), 'prop' )),
    COMMETHOD([dispid(0), 'propput'], HRESULT, 'Caption',
              ( ['in'], BSTR, 'prop' )),
    COMMETHOD([dispid(11), 'propget'], HRESULT, 'WindowState',
              ( ['out', 'retval'], POINTER(WdWindowState), 'prop' )),
    COMMETHOD([dispid(11), 'propput'], HRESULT, 'WindowState',
              ( ['in'], WdWindowState, 'prop' )),
    COMMETHOD([dispid(12), 'propget'], HRESULT, 'DisplayRulers',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'prop' )),
    COMMETHOD([dispid(12), 'propput'], HRESULT, 'DisplayRulers',
              ( ['in'], VARIANT_BOOL, 'prop' )),
    COMMETHOD([dispid(13), 'propget'], HRESULT, 'DisplayVerticalRuler',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'prop' )),
    COMMETHOD([dispid(13), 'propput'], HRESULT, 'DisplayVerticalRuler',
              ( ['in'], VARIANT_BOOL, 'prop' )),
    COMMETHOD([dispid(14), 'propget'], HRESULT, 'View',
              ( ['out', 'retval'], POINTER(POINTER(View)), 'prop' )),
    COMMETHOD([dispid(15), 'propget'], HRESULT, 'Type',
              ( ['out', 'retval'], POINTER(WdWindowType), 'prop' )),
    COMMETHOD([dispid(16), 'propget'], HRESULT, 'Next',
              ( ['out', 'retval'], POINTER(POINTER(Window)), 'prop' )),
    COMMETHOD([dispid(17), 'propget'], HRESULT, 'Previous',
              ( ['out', 'retval'], POINTER(POINTER(Window)), 'prop' )),
    COMMETHOD([dispid(18), 'propget'], HRESULT, 'WindowNumber',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(19), 'propget'], HRESULT, 'DisplayVerticalScrollBar',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'prop' )),
    COMMETHOD([dispid(19), 'propput'], HRESULT, 'DisplayVerticalScrollBar',
              ( ['in'], VARIANT_BOOL, 'prop' )),
    COMMETHOD([dispid(20), 'propget'], HRESULT, 'DisplayHorizontalScrollBar',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'prop' )),
    COMMETHOD([dispid(20), 'propput'], HRESULT, 'DisplayHorizontalScrollBar',
              ( ['in'], VARIANT_BOOL, 'prop' )),
    COMMETHOD([dispid(21), 'propget'], HRESULT, 'StyleAreaWidth',
              ( ['out', 'retval'], POINTER(c_float), 'prop' )),
    COMMETHOD([dispid(21), 'propput'], HRESULT, 'StyleAreaWidth',
              ( ['in'], c_float, 'prop' )),
    COMMETHOD([dispid(22), 'propget'], HRESULT, 'DisplayScreenTips',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'prop' )),
    COMMETHOD([dispid(22), 'propput'], HRESULT, 'DisplayScreenTips',
              ( ['in'], VARIANT_BOOL, 'prop' )),
    COMMETHOD([dispid(23), 'propget'], HRESULT, 'HorizontalPercentScrolled',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(23), 'propput'], HRESULT, 'HorizontalPercentScrolled',
              ( ['in'], c_int, 'prop' )),
    COMMETHOD([dispid(24), 'propget'], HRESULT, 'VerticalPercentScrolled',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(24), 'propput'], HRESULT, 'VerticalPercentScrolled',
              ( ['in'], c_int, 'prop' )),
    COMMETHOD([dispid(25), 'propget'], HRESULT, 'DocumentMap',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'prop' )),
    COMMETHOD([dispid(25), 'propput'], HRESULT, 'DocumentMap',
              ( ['in'], VARIANT_BOOL, 'prop' )),
    COMMETHOD([dispid(26), 'propget'], HRESULT, 'Active',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'prop' )),
    COMMETHOD([dispid(27), 'hidden', 'propget'], HRESULT, 'DocumentMapPercentWidth',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(27), 'hidden', 'propput'], HRESULT, 'DocumentMapPercentWidth',
              ( ['in'], c_int, 'prop' )),
    COMMETHOD([dispid(28), 'propget'], HRESULT, 'Index',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(30), 'propget'], HRESULT, 'IMEMode',
              ( ['out', 'retval'], POINTER(WdIMEMode), 'prop' )),
    COMMETHOD([dispid(30), 'propput'], HRESULT, 'IMEMode',
              ( ['in'], WdIMEMode, 'prop' )),
    COMMETHOD([dispid(100)], HRESULT, 'Activate'),
    COMMETHOD([dispid(102)], HRESULT, 'Close',
              ( ['in', 'optional'], POINTER(VARIANT), 'SaveChanges' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'RouteDocument' )),
    COMMETHOD([dispid(103)], HRESULT, 'LargeScroll',
              ( ['in', 'optional'], POINTER(VARIANT), 'Down' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'Up' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'ToRight' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'ToLeft' )),
    COMMETHOD([dispid(104)], HRESULT, 'SmallScroll',
              ( ['in', 'optional'], POINTER(VARIANT), 'Down' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'Up' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'ToRight' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'ToLeft' )),
    COMMETHOD([dispid(105)], HRESULT, 'NewWindow',
              ( ['out', 'retval'], POINTER(POINTER(Window)), 'prop' )),
    COMMETHOD([dispid(107), 'hidden'], HRESULT, 'PrintOutOld',
              ( ['in', 'optional'], POINTER(VARIANT), 'Background' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'Append' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'Range' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'OutputFileName' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'From' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'To' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'Item' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'Copies' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'Pages' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'PageType' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'PrintToFile' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'Collate' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'ActivePrinterMacGX' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'ManualDuplexPrint' )),
    COMMETHOD([dispid(108)], HRESULT, 'PageScroll',
              ( ['in', 'optional'], POINTER(VARIANT), 'Down' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'Up' )),
    COMMETHOD([dispid(109)], HRESULT, 'SetFocus'),
    COMMETHOD([dispid(110)], HRESULT, 'RangeFromPoint',
              ( ['in'], c_int, 'x' ),
              ( ['in'], c_int, 'y' ),
              ( ['out', 'retval'], POINTER(POINTER(IDispatch)), 'prop' )),
    COMMETHOD([dispid(111)], HRESULT, 'ScrollIntoView',
              ( ['in'], POINTER(IDispatch), 'obj' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'Start' )),
    COMMETHOD([dispid(112)], HRESULT, 'GetPoint',
              ( ['out'], POINTER(c_int), 'ScreenPixelsLeft' ),
              ( ['out'], POINTER(c_int), 'ScreenPixelsTop' ),
              ( ['out'], POINTER(c_int), 'ScreenPixelsWidth' ),
              ( ['out'], POINTER(c_int), 'ScreenPixelsHeight' ),
              ( ['in'], POINTER(IDispatch), 'obj' )),
    COMMETHOD([dispid(444), 'hidden'], HRESULT, 'PrintOut2000',
              ( ['in', 'optional'], POINTER(VARIANT), 'Background' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'Append' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'Range' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'OutputFileName' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'From' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'To' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'Item' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'Copies' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'Pages' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'PageType' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'PrintToFile' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'Collate' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'ActivePrinterMacGX' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'ManualDuplexPrint' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'PrintZoomColumn' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'PrintZoomRow' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'PrintZoomPaperWidth' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'PrintZoomPaperHeight' )),
    COMMETHOD([dispid(31), 'propget'], HRESULT, 'UsableWidth',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(32), 'propget'], HRESULT, 'UsableHeight',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(33), 'propget'], HRESULT, 'EnvelopeVisible',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'prop' )),
    COMMETHOD([dispid(33), 'propput'], HRESULT, 'EnvelopeVisible',
              ( ['in'], VARIANT_BOOL, 'prop' )),
    COMMETHOD([dispid(35), 'propget'], HRESULT, 'DisplayRightRuler',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'prop' )),
    COMMETHOD([dispid(35), 'propput'], HRESULT, 'DisplayRightRuler',
              ( ['in'], VARIANT_BOOL, 'prop' )),
    COMMETHOD([dispid(34), 'propget'], HRESULT, 'DisplayLeftScrollBar',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'prop' )),
    COMMETHOD([dispid(34), 'propput'], HRESULT, 'DisplayLeftScrollBar',
              ( ['in'], VARIANT_BOOL, 'prop' )),
    COMMETHOD([dispid(36), 'propget'], HRESULT, 'Visible',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'prop' )),
    COMMETHOD([dispid(36), 'propput'], HRESULT, 'Visible',
              ( ['in'], VARIANT_BOOL, 'prop' )),
    COMMETHOD([dispid(445)], HRESULT, 'PrintOut',
              ( ['in', 'optional'], POINTER(VARIANT), 'Background' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'Append' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'Range' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'OutputFileName' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'From' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'To' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'Item' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'Copies' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'Pages' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'PageType' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'PrintToFile' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'Collate' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'ActivePrinterMacGX' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'ManualDuplexPrint' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'PrintZoomColumn' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'PrintZoomRow' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'PrintZoomPaperWidth' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'PrintZoomPaperHeight' )),
    COMMETHOD([dispid(446), 'hidden'], HRESULT, 'ToggleShowAllReviewers'),
    COMMETHOD([dispid(37), 'propget'], HRESULT, 'Thumbnails',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'prop' )),
    COMMETHOD([dispid(37), 'propput'], HRESULT, 'Thumbnails',
              ( ['in'], VARIANT_BOOL, 'prop' )),
    COMMETHOD([dispid(38), 'propget'], HRESULT, 'ShowSourceDocuments',
              ( ['out', 'retval'], POINTER(WdShowSourceDocuments), 'prop' )),
    COMMETHOD([dispid(38), 'propput'], HRESULT, 'ShowSourceDocuments',
              ( ['in'], WdShowSourceDocuments, 'prop' )),
    COMMETHOD([dispid(447)], HRESULT, 'ToggleRibbon'),
    COMMETHOD([dispid(39), 'propget'], HRESULT, 'Hwnd',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(40), 'hidden', 'propput'], HRESULT, 'DispLog',
              ( ['in'], BSTR, 'rhs' )),
    COMMETHOD([dispid(41), 'hidden', 'propput'], HRESULT, 'DispLogPage',
              ( ['in'], c_int, 'rhs' )),
    COMMETHOD([dispid(113), 'hidden'], HRESULT, 'EndDispLog'),
    COMMETHOD([dispid(114), 'hidden'], HRESULT, 'DispLogDirtyPage',
              ( ['in'], c_int, 'iPage' )),
    COMMETHOD([dispid(115), 'hidden'], HRESULT, 'DispLogUpdateWwd'),
]
################################################################
## code template for Window implementation
##class Window_Impl(object):
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Creator(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def ActivePane(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Document(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Panes(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Selection(self):
##        '-no docstring-'
##        #return prop
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    Left = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    Top = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    Width = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    Height = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    Split = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    SplitVertical = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    Caption = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    WindowState = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    DisplayRulers = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    DisplayVerticalRuler = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def View(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Type(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Next(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Previous(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def WindowNumber(self):
##        '-no docstring-'
##        #return prop
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    DisplayVerticalScrollBar = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    DisplayHorizontalScrollBar = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    StyleAreaWidth = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    DisplayScreenTips = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    HorizontalPercentScrolled = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    VerticalPercentScrolled = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    DocumentMap = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Active(self):
##        '-no docstring-'
##        #return prop
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    DocumentMapPercentWidth = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Index(self):
##        '-no docstring-'
##        #return prop
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    IMEMode = property(_get, _set, doc = _set.__doc__)
##
##    def Activate(self):
##        '-no docstring-'
##        #return 
##
##    def Close(self, SaveChanges, RouteDocument):
##        '-no docstring-'
##        #return 
##
##    def LargeScroll(self, Down, Up, ToRight, ToLeft):
##        '-no docstring-'
##        #return 
##
##    def SmallScroll(self, Down, Up, ToRight, ToLeft):
##        '-no docstring-'
##        #return 
##
##    def NewWindow(self):
##        '-no docstring-'
##        #return prop
##
##    def PrintOutOld(self, Background, Append, Range, OutputFileName, From, To, Item, Copies, Pages, PageType, PrintToFile, Collate, ActivePrinterMacGX, ManualDuplexPrint):
##        '-no docstring-'
##        #return 
##
##    def PageScroll(self, Down, Up):
##        '-no docstring-'
##        #return 
##
##    def SetFocus(self):
##        '-no docstring-'
##        #return 
##
##    def RangeFromPoint(self, x, y):
##        '-no docstring-'
##        #return prop
##
##    def ScrollIntoView(self, obj, Start):
##        '-no docstring-'
##        #return 
##
##    def GetPoint(self, obj):
##        '-no docstring-'
##        #return ScreenPixelsLeft, ScreenPixelsTop, ScreenPixelsWidth, ScreenPixelsHeight
##
##    def PrintOut2000(self, Background, Append, Range, OutputFileName, From, To, Item, Copies, Pages, PageType, PrintToFile, Collate, ActivePrinterMacGX, ManualDuplexPrint, PrintZoomColumn, PrintZoomRow, PrintZoomPaperWidth, PrintZoomPaperHeight):
##        '-no docstring-'
##        #return 
##
##    @property
##    def UsableWidth(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def UsableHeight(self):
##        '-no docstring-'
##        #return prop
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    EnvelopeVisible = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    DisplayRightRuler = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    DisplayLeftScrollBar = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    Visible = property(_get, _set, doc = _set.__doc__)
##
##    def PrintOut(self, Background, Append, Range, OutputFileName, From, To, Item, Copies, Pages, PageType, PrintToFile, Collate, ActivePrinterMacGX, ManualDuplexPrint, PrintZoomColumn, PrintZoomRow, PrintZoomPaperWidth, PrintZoomPaperHeight):
##        '-no docstring-'
##        #return 
##
##    def ToggleShowAllReviewers(self):
##        '-no docstring-'
##        #return 
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    Thumbnails = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    ShowSourceDocuments = property(_get, _set, doc = _set.__doc__)
##
##    def ToggleRibbon(self):
##        '-no docstring-'
##        #return 
##
##    @property
##    def Hwnd(self):
##        '-no docstring-'
##        #return prop
##
##    def _set(self, rhs):
##        '-no docstring-'
##    DispLog = property(fset = _set, doc = _set.__doc__)
##
##    def _set(self, rhs):
##        '-no docstring-'
##    DispLogPage = property(fset = _set, doc = _set.__doc__)
##
##    def EndDispLog(self):
##        '-no docstring-'
##        #return 
##
##    def DispLogDirtyPage(self, iPage):
##        '-no docstring-'
##        #return 
##
##    def DispLogUpdateWwd(self):
##        '-no docstring-'
##        #return 
##


# values for enumeration 'WdEnvelopeOrientation'
wdLeftPortrait = 0
wdCenterPortrait = 1
wdRightPortrait = 2
wdLeftLandscape = 3
wdCenterLandscape = 4
wdRightLandscape = 5
wdLeftClockwise = 6
wdCenterClockwise = 7
wdRightClockwise = 8
WdEnvelopeOrientation = c_int # enum
GlowFormat._methods_ = [
    COMMETHOD([dispid(1), 'propget'], HRESULT, 'Radius',
              ( ['out', 'retval'], POINTER(c_float), 'prop' )),
    COMMETHOD([dispid(1), 'propput'], HRESULT, 'Radius',
              ( ['in'], c_float, 'prop' )),
    COMMETHOD([dispid(2), 'propget'], HRESULT, 'Color',
              ( ['out', 'retval'], POINTER(POINTER(ColorFormat)), 'prop' )),
    COMMETHOD([dispid(1000), 'propget'], HRESULT, 'Application',
              ( ['out', 'retval'], POINTER(POINTER(Application)), 'prop' )),
    COMMETHOD([dispid(1001), 'propget'], HRESULT, 'Creator',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(1002), 'propget'], HRESULT, 'Parent',
              ( ['out', 'retval'], POINTER(POINTER(IDispatch)), 'prop' )),
    COMMETHOD([dispid(3), 'propget'], HRESULT, 'Transparency',
              ( ['out', 'retval'], POINTER(c_float), 'prop' )),
    COMMETHOD([dispid(3), 'propput'], HRESULT, 'Transparency',
              ( ['in'], c_float, 'prop' )),
]
################################################################
## code template for GlowFormat implementation
##class GlowFormat_Impl(object):
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    Radius = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Color(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Creator(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return prop
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    Transparency = property(_get, _set, doc = _set.__doc__)
##

class Bookmarks(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{00020967-0000-0000-C000-000000000046}')
    _idlflags_ = ['dual', 'nonextensible', 'oleautomation']
class Footnotes(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{00020942-0000-0000-C000-000000000046}')
    _idlflags_ = ['dual', 'nonextensible', 'oleautomation']
class Endnotes(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{00020941-0000-0000-C000-000000000046}')
    _idlflags_ = ['dual', 'nonextensible', 'oleautomation']

# values for enumeration 'WdDocumentType'
wdTypeDocument = 0
wdTypeTemplate = 1
wdTypeFrameset = 2
WdDocumentType = c_int # enum
class Sections(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{0002095A-0000-0000-C000-000000000046}')
    _idlflags_ = ['dual', 'nonextensible', 'oleautomation']
class Paragraphs(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{00020958-0000-0000-C000-000000000046}')
    _idlflags_ = ['dual', 'nonextensible', 'oleautomation']
class Words(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{0002095C-0000-0000-C000-000000000046}')
    _idlflags_ = ['dual', 'nonextensible', 'oleautomation']
class Characters(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{0002095D-0000-0000-C000-000000000046}')
    _idlflags_ = ['dual', 'nonextensible', 'oleautomation']
class Fields(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{00020930-0000-0000-C000-000000000046}')
    _idlflags_ = ['dual', 'nonextensible', 'oleautomation']
class FormFields(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{00020929-0000-0000-C000-000000000046}')
    _idlflags_ = ['dual', 'nonextensible', 'oleautomation']
class Styles(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{0002092D-0000-0000-C000-000000000046}')
    _idlflags_ = ['dual', 'nonextensible', 'oleautomation']
class Frames(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{0002092B-0000-0000-C000-000000000046}')
    _idlflags_ = ['dual', 'nonextensible', 'oleautomation']
class TablesOfFigures(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{00020922-0000-0000-C000-000000000046}')
    _idlflags_ = ['dual', 'nonextensible', 'oleautomation']
class MailMerge(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{00020920-0000-0000-C000-000000000046}')
    _idlflags_ = ['dual', 'nonextensible', 'oleautomation']
class Envelope(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{00020918-0000-0000-C000-000000000046}')
    _idlflags_ = ['dual', 'nonextensible', 'oleautomation']
class Revisions(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{00020980-0000-0000-C000-000000000046}')
    _idlflags_ = ['dual', 'nonextensible', 'oleautomation']
class TablesOfContents(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{00020914-0000-0000-C000-000000000046}')
    _idlflags_ = ['dual', 'nonextensible', 'oleautomation']
class TablesOfAuthorities(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{00020912-0000-0000-C000-000000000046}')
    _idlflags_ = ['dual', 'nonextensible', 'oleautomation']
class RoutingSlip(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{00020969-0000-0000-C000-000000000046}')
    _idlflags_ = ['hidden', 'dual', 'nonextensible', 'oleautomation']
class Indexes(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{0002097C-0000-0000-C000-000000000046}')
    _idlflags_ = ['dual', 'nonextensible', 'oleautomation']

# values for enumeration 'WdDocumentKind'
wdDocumentNotSpecified = 0
wdDocumentLetter = 1
wdDocumentEmail = 2
WdDocumentKind = c_int # enum

# values for enumeration 'WdCompatibility'
wdNoTabHangIndent = 1
wdNoSpaceRaiseLower = 2
wdPrintColBlack = 3
wdWrapTrailSpaces = 4
wdNoColumnBalance = 5
wdConvMailMergeEsc = 6
wdSuppressSpBfAfterPgBrk = 7
wdSuppressTopSpacing = 8
wdOrigWordTableRules = 9
wdTransparentMetafiles = 10
wdShowBreaksInFrames = 11
wdSwapBordersFacingPages = 12
wdLeaveBackslashAlone = 13
wdExpandShiftReturn = 14
wdDontULTrailSpace = 15
wdDontBalanceSingleByteDoubleByteWidth = 16
wdSuppressTopSpacingMac5 = 17
wdSpacingInWholePoints = 18
wdPrintBodyTextBeforeHeader = 19
wdNoLeading = 20
wdNoSpaceForUL = 21
wdMWSmallCaps = 22
wdNoExtraLineSpacing = 23
wdTruncateFontHeight = 24
wdSubFontBySize = 25
wdUsePrinterMetrics = 26
wdWW6BorderRules = 27
wdExactOnTop = 28
wdSuppressBottomSpacing = 29
wdWPSpaceWidth = 30
wdWPJustification = 31
wdLineWrapLikeWord6 = 32
wdShapeLayoutLikeWW8 = 33
wdFootnoteLayoutLikeWW8 = 34
wdDontUseHTMLParagraphAutoSpacing = 35
wdDontAdjustLineHeightInTable = 36
wdForgetLastTabAlignment = 37
wdAutospaceLikeWW7 = 38
wdAlignTablesRowByRow = 39
wdLayoutRawTableWidth = 40
wdLayoutTableRowsApart = 41
wdUseWord97LineBreakingRules = 42
wdDontBreakWrappedTables = 43
wdDontSnapTextToGridInTableWithObjects = 44
wdSelectFieldWithFirstOrLastCharacter = 45
wdApplyBreakingRules = 46
wdDontWrapTextWithPunctuation = 47
wdDontUseAsianBreakRulesInGrid = 48
wdUseWord2002TableStyleRules = 49
wdGrowAutofit = 50
wdUseNormalStyleForList = 51
wdDontUseIndentAsNumberingTabStop = 52
wdFELineBreak11 = 53
wdAllowSpaceOfSameStyleInTable = 54
wdWW11IndentRules = 55
wdDontAutofitConstrainedTables = 56
wdAutofitLikeWW11 = 57
wdUnderlineTabInNumList = 58
wdHangulWidthLikeWW11 = 59
wdSplitPgBreakAndParaMark = 60
wdDontVertAlignCellWithShape = 61
wdDontBreakConstrainedForcedTables = 62
wdDontVertAlignInTextbox = 63
wdWord11KerningPairs = 64
wdCachedColBalance = 65
wdDisableOTKerning = 66
wdFlipMirrorIndents = 67
wdDontOverrideTableStyleFontSzAndJustification = 68
wdUseWord2010TableStyleRules = 69
wdDelayableFloatingTable = 70
wdAllowHyphenationAtTrackBottom = 71
wdUseWord2013TrackBottomHyphenation = 72
wdUsePre2018iOSMacLayout = 73
WdCompatibility = c_int # enum

# values for enumeration 'WdProtectionType'
wdNoProtection = -1
wdAllowOnlyRevisions = 0
wdAllowOnlyComments = 1
wdAllowOnlyFormFields = 2
wdAllowOnlyReading = 3
WdProtectionType = c_int # enum
class Hyperlinks(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{0002099C-0000-0000-C000-000000000046}')
    _idlflags_ = ['dual', 'nonextensible', 'oleautomation']
class Shapes(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{0002099F-0000-0000-C000-000000000046}')
    _idlflags_ = ['dual', 'nonextensible', 'oleautomation']
class ListTemplates(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{00020990-0000-0000-C000-000000000046}')
    _idlflags_ = ['dual', 'nonextensible', 'oleautomation']
class Lists(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{00020993-0000-0000-C000-000000000046}')
    _idlflags_ = ['dual', 'nonextensible', 'oleautomation']
class Versions(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{000209B3-0000-0000-C000-000000000046}')
    _idlflags_ = ['hidden', 'dual', 'nonextensible', 'oleautomation']

# values for enumeration 'WdSummaryMode'
wdSummaryModeHighlight = 0
wdSummaryModeHideAllButSummary = 1
wdSummaryModeInsert = 2
wdSummaryModeCreateNew = 3
WdSummaryMode = c_int # enum
class ListParagraphs(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{00020991-0000-0000-C000-000000000046}')
    _idlflags_ = ['dual', 'nonextensible', 'oleautomation']
class ReadabilityStatistics(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{000209AE-0000-0000-C000-000000000046}')
    _idlflags_ = ['dual', 'nonextensible', 'oleautomation']
class ProofreadingErrors(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{000209BB-0000-0000-C000-000000000046}')
    _idlflags_ = ['dual', 'nonextensible', 'oleautomation']

# values for enumeration 'WdJustificationMode'
wdJustificationModeExpand = 0
wdJustificationModeCompress = 1
wdJustificationModeCompressKana = 2
WdJustificationMode = c_int # enum

# values for enumeration 'WdFarEastLineBreakLevel'
wdFarEastLineBreakLevelNormal = 0
wdFarEastLineBreakLevelStrict = 1
wdFarEastLineBreakLevelCustom = 2
WdFarEastLineBreakLevel = c_int # enum

# values for enumeration 'WdAutoMacros'
wdAutoExec = 0
wdAutoNew = 1
wdAutoOpen = 2
wdAutoClose = 3
wdAutoExit = 4
wdAutoSync = 5
WdAutoMacros = c_int # enum
class LetterContent(CoClass):
    _reg_clsid_ = GUID('{000209F1-0000-0000-C000-000000000046}')
    _idlflags_ = []
    _typelib_path_ = typelib_path
    _reg_typelib_ = ('{00020905-0000-0000-C000-000000000046}', 8, 7)
class _LetterContent(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{000209A1-0000-0000-C000-000000000046}')
    _idlflags_ = ['hidden', 'dual', 'nonextensible', 'oleautomation']
LetterContent._com_interfaces_ = [_LetterContent]


# values for enumeration 'WdLetterStyle'
wdFullBlock = 0
wdModifiedBlock = 1
wdSemiBlock = 2
WdLetterStyle = c_int # enum

# values for enumeration 'WdLetterheadLocation'
wdLetterTop = 0
wdLetterBottom = 1
wdLetterLeft = 2
wdLetterRight = 3
WdLetterheadLocation = c_int # enum

# values for enumeration 'WdSalutationType'
wdSalutationInformal = 0
wdSalutationFormal = 1
wdSalutationBusiness = 2
wdSalutationOther = 3
WdSalutationType = c_int # enum
class Email(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{000209DD-0000-0000-C000-000000000046}')
    _idlflags_ = ['dual', 'nonextensible', 'oleautomation']

# values for enumeration 'WdFarEastLineBreakLanguageID'
wdLineBreakJapanese = 1041
wdLineBreakKorean = 1042
wdLineBreakSimplifiedChinese = 2052
wdLineBreakTraditionalChinese = 1028
WdFarEastLineBreakLanguageID = c_int # enum
class Frameset(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{000209E2-0000-0000-C000-000000000046}')
    _idlflags_ = ['dual', 'nonextensible', 'oleautomation']
class WebOptions(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{000209E4-0000-0000-C000-000000000046}')
    _idlflags_ = ['dual', 'nonextensible', 'oleautomation']
class HTMLDivisions(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{000209E8-0000-0000-C000-000000000046}')
    _idlflags_ = ['dual', 'nonextensible', 'oleautomation']

# values for enumeration 'WdDisableFeaturesIntroducedAfter'
wd70 = 0
wd70FE = 1
wd80 = 2
WdDisableFeaturesIntroducedAfter = c_int # enum
class SmartTags(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{000209EE-0000-0000-C000-000000000046}')
    _idlflags_ = ['hidden', 'dual', 'nonextensible', 'oleautomation']

# values for enumeration 'WdLineEndingType'
wdCRLF = 0
wdCROnly = 1
wdLFOnly = 2
wdLFCR = 3
wdLSPS = 4
WdLineEndingType = c_int # enum
class StyleSheets(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{07B7CC7E-E66C-11D3-9454-00105AA31A08}')
    _idlflags_ = ['dual', 'nonextensible', 'oleautomation']

# values for enumeration 'WdShowFilter'
wdShowFilterStylesAvailable = 0
wdShowFilterStylesInUse = 1
wdShowFilterStylesAll = 2
wdShowFilterFormattingInUse = 3
wdShowFilterFormattingAvailable = 4
wdShowFilterFormattingRecommended = 5
WdShowFilter = c_int # enum
class XMLNodes(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{D36C1F42-7044-4B9E-9CA3-85919454DB04}')
    _idlflags_ = ['dual', 'nonextensible', 'oleautomation']
class XMLChildNodeSuggestions(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{DE63B5AC-CA4F-46FE-9184-A5719AB9ED5B}')
    _idlflags_ = ['dual', 'nonextensible', 'oleautomation']

# values for enumeration 'WdStyleSort'
wdStyleSortByName = 0
wdStyleSortRecommended = 1
wdStyleSortByFont = 2
wdStyleSortByBasedOn = 3
wdStyleSortByType = 4
WdStyleSort = c_int # enum

# values for enumeration 'WdRemoveDocInfoType'
wdRDIComments = 1
wdRDIRevisions = 2
wdRDIVersions = 3
wdRDIRemovePersonalInformation = 4
wdRDIEmailHeader = 5
wdRDIRoutingSlip = 6
wdRDISendForReview = 7
wdRDIDocumentProperties = 8
wdRDITemplate = 9
wdRDIDocumentWorkspace = 10
wdRDIInkAnnotations = 11
wdRDIDocumentServerProperties = 14
wdRDIDocumentManagementPolicy = 15
wdRDIContentType = 16
wdRDITaskpaneWebExtensions = 17
wdRDIAtMentions = 18
wdRDIDocumentTasks = 19
wdRDIAll = 99
WdRemoveDocInfoType = c_int # enum
class ContentControls(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{804CD967-F83B-432D-9446-C61A45CFEFF0}')
    _idlflags_ = ['dual', 'nonextensible', 'oleautomation']
class Research(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{E6AAEC05-E543-4085-BA92-9BF7D2474F51}')
    _idlflags_ = ['dual', 'nonextensible', 'oleautomation']

# values for enumeration 'WdOMathJc'
wdOMathJcCenterGroup = 1
wdOMathJcCenter = 2
wdOMathJcLeft = 3
wdOMathJcRight = 4
wdOMathJcInline = 7
WdOMathJc = c_int # enum

# values for enumeration 'WdExportFormat'
wdExportFormatPDF = 17
wdExportFormatXPS = 18
WdExportFormat = c_int # enum

# values for enumeration 'WdExportOptimizeFor'
wdExportOptimizeForPrint = 0
wdExportOptimizeForOnScreen = 1
WdExportOptimizeFor = c_int # enum

# values for enumeration 'WdExportRange'
wdExportAllDocument = 0
wdExportSelection = 1
wdExportCurrentPage = 2
wdExportFromTo = 3
WdExportRange = c_int # enum

# values for enumeration 'WdExportItem'
wdExportDocumentContent = 0
wdExportDocumentWithMarkup = 7
WdExportItem = c_int # enum

# values for enumeration 'WdExportCreateBookmarks'
wdExportCreateNoBookmarks = 0
wdExportCreateHeadingBookmarks = 1
wdExportCreateWordBookmarks = 2
WdExportCreateBookmarks = c_int # enum
class Broadcast(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{B67DE22C-BC01-4A73-A99B-070D1B5A795D}')
    _idlflags_ = ['dual', 'nonextensible', 'oleautomation']
_Document._methods_ = [
    COMMETHOD([dispid(0), 'propget'], HRESULT, 'Name',
              ( ['out', 'retval'], POINTER(BSTR), 'prop' )),
    COMMETHOD([dispid(1), 'propget'], HRESULT, 'Application',
              ( ['out', 'retval'], POINTER(POINTER(Application)), 'prop' )),
    COMMETHOD([dispid(1001), 'propget'], HRESULT, 'Creator',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(1002), 'propget'], HRESULT, 'Parent',
              ( ['out', 'retval'], POINTER(POINTER(IDispatch)), 'prop' )),
    COMMETHOD([dispid(1000), 'propget'], HRESULT, 'BuiltInDocumentProperties',
              ( ['out', 'retval'], POINTER(POINTER(IDispatch)), 'prop' )),
    COMMETHOD([dispid(2), 'propget'], HRESULT, 'CustomDocumentProperties',
              ( ['out', 'retval'], POINTER(POINTER(IDispatch)), 'prop' )),
    COMMETHOD([dispid(3), 'propget'], HRESULT, 'Path',
              ( ['out', 'retval'], POINTER(BSTR), 'prop' )),
    COMMETHOD([dispid(4), 'propget'], HRESULT, 'Bookmarks',
              ( ['out', 'retval'], POINTER(POINTER(Bookmarks)), 'prop' )),
    COMMETHOD([dispid(6), 'propget'], HRESULT, 'Tables',
              ( ['out', 'retval'], POINTER(POINTER(Tables)), 'prop' )),
    COMMETHOD([dispid(7), 'propget'], HRESULT, 'Footnotes',
              ( ['out', 'retval'], POINTER(POINTER(Footnotes)), 'prop' )),
    COMMETHOD([dispid(8), 'propget'], HRESULT, 'Endnotes',
              ( ['out', 'retval'], POINTER(POINTER(Endnotes)), 'prop' )),
    COMMETHOD([dispid(9), 'propget'], HRESULT, 'Comments',
              ( ['out', 'retval'], POINTER(POINTER(Comments)), 'prop' )),
    COMMETHOD([dispid(10), 'propget'], HRESULT, 'Type',
              ( ['out', 'retval'], POINTER(WdDocumentType), 'prop' )),
    COMMETHOD([dispid(11), 'propget'], HRESULT, 'AutoHyphenation',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'prop' )),
    COMMETHOD([dispid(11), 'propput'], HRESULT, 'AutoHyphenation',
              ( ['in'], VARIANT_BOOL, 'prop' )),
    COMMETHOD([dispid(12), 'propget'], HRESULT, 'HyphenateCaps',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'prop' )),
    COMMETHOD([dispid(12), 'propput'], HRESULT, 'HyphenateCaps',
              ( ['in'], VARIANT_BOOL, 'prop' )),
    COMMETHOD([dispid(13), 'propget'], HRESULT, 'HyphenationZone',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(13), 'propput'], HRESULT, 'HyphenationZone',
              ( ['in'], c_int, 'prop' )),
    COMMETHOD([dispid(14), 'propget'], HRESULT, 'ConsecutiveHyphensLimit',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(14), 'propput'], HRESULT, 'ConsecutiveHyphensLimit',
              ( ['in'], c_int, 'prop' )),
    COMMETHOD([dispid(15), 'propget'], HRESULT, 'Sections',
              ( ['out', 'retval'], POINTER(POINTER(Sections)), 'prop' )),
    COMMETHOD([dispid(16), 'propget'], HRESULT, 'Paragraphs',
              ( ['out', 'retval'], POINTER(POINTER(Paragraphs)), 'prop' )),
    COMMETHOD([dispid(17), 'propget'], HRESULT, 'Words',
              ( ['out', 'retval'], POINTER(POINTER(Words)), 'prop' )),
    COMMETHOD([dispid(18), 'propget'], HRESULT, 'Sentences',
              ( ['out', 'retval'], POINTER(POINTER(Sentences)), 'prop' )),
    COMMETHOD([dispid(19), 'propget'], HRESULT, 'Characters',
              ( ['out', 'retval'], POINTER(POINTER(Characters)), 'prop' )),
    COMMETHOD([dispid(20), 'propget'], HRESULT, 'Fields',
              ( ['out', 'retval'], POINTER(POINTER(Fields)), 'prop' )),
    COMMETHOD([dispid(21), 'propget'], HRESULT, 'FormFields',
              ( ['out', 'retval'], POINTER(POINTER(FormFields)), 'prop' )),
    COMMETHOD([dispid(22), 'propget'], HRESULT, 'Styles',
              ( ['out', 'retval'], POINTER(POINTER(Styles)), 'prop' )),
    COMMETHOD([dispid(23), 'propget'], HRESULT, 'Frames',
              ( ['out', 'retval'], POINTER(POINTER(Frames)), 'prop' )),
    COMMETHOD([dispid(25), 'propget'], HRESULT, 'TablesOfFigures',
              ( ['out', 'retval'], POINTER(POINTER(TablesOfFigures)), 'prop' )),
    COMMETHOD([dispid(26), 'propget'], HRESULT, 'Variables',
              ( ['out', 'retval'], POINTER(POINTER(Variables)), 'prop' )),
    COMMETHOD([dispid(27), 'propget'], HRESULT, 'MailMerge',
              ( ['out', 'retval'], POINTER(POINTER(MailMerge)), 'prop' )),
    COMMETHOD([dispid(28), 'propget'], HRESULT, 'Envelope',
              ( ['out', 'retval'], POINTER(POINTER(Envelope)), 'prop' )),
    COMMETHOD([dispid(29), 'propget'], HRESULT, 'FullName',
              ( ['out', 'retval'], POINTER(BSTR), 'prop' )),
    COMMETHOD([dispid(30), 'propget'], HRESULT, 'Revisions',
              ( ['out', 'retval'], POINTER(POINTER(Revisions)), 'prop' )),
    COMMETHOD([dispid(31), 'propget'], HRESULT, 'TablesOfContents',
              ( ['out', 'retval'], POINTER(POINTER(TablesOfContents)), 'prop' )),
    COMMETHOD([dispid(32), 'propget'], HRESULT, 'TablesOfAuthorities',
              ( ['out', 'retval'], POINTER(POINTER(TablesOfAuthorities)), 'prop' )),
    COMMETHOD([dispid(1101), 'propget'], HRESULT, 'PageSetup',
              ( ['out', 'retval'], POINTER(POINTER(PageSetup)), 'prop' )),
    COMMETHOD([dispid(1101), 'propput'], HRESULT, 'PageSetup',
              ( ['in'], POINTER(PageSetup), 'prop' )),
    COMMETHOD([dispid(34), 'propget'], HRESULT, 'Windows',
              ( ['out', 'retval'], POINTER(POINTER(Windows)), 'prop' )),
    COMMETHOD([dispid(35), 'hidden', 'propget'], HRESULT, 'HasRoutingSlip',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'prop' )),
    COMMETHOD([dispid(35), 'hidden', 'propput'], HRESULT, 'HasRoutingSlip',
              ( ['in'], VARIANT_BOOL, 'prop' )),
    COMMETHOD([dispid(36), 'hidden', 'propget'], HRESULT, 'RoutingSlip',
              ( ['out', 'retval'], POINTER(POINTER(RoutingSlip)), 'prop' )),
    COMMETHOD([dispid(37), 'hidden', 'propget'], HRESULT, 'Routed',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'prop' )),
    COMMETHOD([dispid(38), 'propget'], HRESULT, 'TablesOfAuthoritiesCategories',
              ( ['out', 'retval'], POINTER(POINTER(TablesOfAuthoritiesCategories)), 'prop' )),
    COMMETHOD([dispid(39), 'propget'], HRESULT, 'Indexes',
              ( ['out', 'retval'], POINTER(POINTER(Indexes)), 'prop' )),
    COMMETHOD([dispid(40), 'propget'], HRESULT, 'Saved',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'prop' )),
    COMMETHOD([dispid(40), 'propput'], HRESULT, 'Saved',
              ( ['in'], VARIANT_BOOL, 'prop' )),
    COMMETHOD([dispid(41), 'propget'], HRESULT, 'Content',
              ( ['out', 'retval'], POINTER(POINTER(Range)), 'prop' )),
    COMMETHOD([dispid(42), 'propget'], HRESULT, 'ActiveWindow',
              ( ['out', 'retval'], POINTER(POINTER(Window)), 'prop' )),
    COMMETHOD([dispid(43), 'propget'], HRESULT, 'Kind',
              ( ['out', 'retval'], POINTER(WdDocumentKind), 'prop' )),
    COMMETHOD([dispid(43), 'propput'], HRESULT, 'Kind',
              ( ['in'], WdDocumentKind, 'prop' )),
    COMMETHOD([dispid(44), 'propget'], HRESULT, 'ReadOnly',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'prop' )),
    COMMETHOD([dispid(45), 'propget'], HRESULT, 'Subdocuments',
              ( ['out', 'retval'], POINTER(POINTER(Subdocuments)), 'prop' )),
    COMMETHOD([dispid(46), 'propget'], HRESULT, 'IsMasterDocument',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'prop' )),
    COMMETHOD([dispid(48), 'propget'], HRESULT, 'DefaultTabStop',
              ( ['out', 'retval'], POINTER(c_float), 'prop' )),
    COMMETHOD([dispid(48), 'propput'], HRESULT, 'DefaultTabStop',
              ( ['in'], c_float, 'prop' )),
    COMMETHOD([dispid(50), 'propget'], HRESULT, 'EmbedTrueTypeFonts',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'prop' )),
    COMMETHOD([dispid(50), 'propput'], HRESULT, 'EmbedTrueTypeFonts',
              ( ['in'], VARIANT_BOOL, 'prop' )),
    COMMETHOD([dispid(51), 'propget'], HRESULT, 'SaveFormsData',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'prop' )),
    COMMETHOD([dispid(51), 'propput'], HRESULT, 'SaveFormsData',
              ( ['in'], VARIANT_BOOL, 'prop' )),
    COMMETHOD([dispid(52), 'propget'], HRESULT, 'ReadOnlyRecommended',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'prop' )),
    COMMETHOD([dispid(52), 'propput'], HRESULT, 'ReadOnlyRecommended',
              ( ['in'], VARIANT_BOOL, 'prop' )),
    COMMETHOD([dispid(53), 'propget'], HRESULT, 'SaveSubsetFonts',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'prop' )),
    COMMETHOD([dispid(53), 'propput'], HRESULT, 'SaveSubsetFonts',
              ( ['in'], VARIANT_BOOL, 'prop' )),
    COMMETHOD([dispid(55), 'propget'], HRESULT, 'Compatibility',
              ( ['in'], WdCompatibility, 'Type' ),
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'prop' )),
    COMMETHOD([dispid(55), 'propput'], HRESULT, 'Compatibility',
              ( ['in'], WdCompatibility, 'Type' ),
              ( ['in'], VARIANT_BOOL, 'prop' )),
    COMMETHOD([dispid(56), 'propget'], HRESULT, 'StoryRanges',
              ( ['out', 'retval'], POINTER(POINTER(StoryRanges)), 'prop' )),
    COMMETHOD([dispid(57), 'propget'], HRESULT, 'CommandBars',
              ( ['out', 'retval'], POINTER(POINTER(comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.CommandBars)), 'prop' )),
    COMMETHOD([dispid(58), 'propget'], HRESULT, 'IsSubdocument',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'prop' )),
    COMMETHOD([dispid(59), 'propget'], HRESULT, 'SaveFormat',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(60), 'propget'], HRESULT, 'ProtectionType',
              ( ['out', 'retval'], POINTER(WdProtectionType), 'prop' )),
    COMMETHOD([dispid(61), 'propget'], HRESULT, 'Hyperlinks',
              ( ['out', 'retval'], POINTER(POINTER(Hyperlinks)), 'prop' )),
    COMMETHOD([dispid(62), 'propget'], HRESULT, 'Shapes',
              ( ['out', 'retval'], POINTER(POINTER(Shapes)), 'prop' )),
    COMMETHOD([dispid(63), 'propget'], HRESULT, 'ListTemplates',
              ( ['out', 'retval'], POINTER(POINTER(ListTemplates)), 'prop' )),
    COMMETHOD([dispid(64), 'propget'], HRESULT, 'Lists',
              ( ['out', 'retval'], POINTER(POINTER(Lists)), 'prop' )),
    COMMETHOD([dispid(66), 'propget'], HRESULT, 'UpdateStylesOnOpen',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'prop' )),
    COMMETHOD([dispid(66), 'propput'], HRESULT, 'UpdateStylesOnOpen',
              ( ['in'], VARIANT_BOOL, 'prop' )),
    COMMETHOD([dispid(67), 'nonbrowsable', 'propget'], HRESULT, 'AttachedTemplate',
              ( ['out', 'retval'], POINTER(VARIANT), 'prop' )),
    COMMETHOD([dispid(67), 'nonbrowsable', 'propput'], HRESULT, 'AttachedTemplate',
              ( ['in'], POINTER(VARIANT), 'prop' )),
    COMMETHOD([dispid(68), 'propget'], HRESULT, 'InlineShapes',
              ( ['out', 'retval'], POINTER(POINTER(InlineShapes)), 'prop' )),
    COMMETHOD([dispid(69), 'propget'], HRESULT, 'Background',
              ( ['out', 'retval'], POINTER(POINTER(Shape)), 'prop' )),
    COMMETHOD([dispid(69), 'propput'], HRESULT, 'Background',
              ( ['in'], POINTER(Shape), 'prop' )),
    COMMETHOD([dispid(70), 'propget'], HRESULT, 'GrammarChecked',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'prop' )),
    COMMETHOD([dispid(70), 'propput'], HRESULT, 'GrammarChecked',
              ( ['in'], VARIANT_BOOL, 'prop' )),
    COMMETHOD([dispid(71), 'propget'], HRESULT, 'SpellingChecked',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'prop' )),
    COMMETHOD([dispid(71), 'propput'], HRESULT, 'SpellingChecked',
              ( ['in'], VARIANT_BOOL, 'prop' )),
    COMMETHOD([dispid(72), 'propget'], HRESULT, 'ShowGrammaticalErrors',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'prop' )),
    COMMETHOD([dispid(72), 'propput'], HRESULT, 'ShowGrammaticalErrors',
              ( ['in'], VARIANT_BOOL, 'prop' )),
    COMMETHOD([dispid(73), 'propget'], HRESULT, 'ShowSpellingErrors',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'prop' )),
    COMMETHOD([dispid(73), 'propput'], HRESULT, 'ShowSpellingErrors',
              ( ['in'], VARIANT_BOOL, 'prop' )),
    COMMETHOD([dispid(75), 'hidden', 'propget'], HRESULT, 'Versions',
              ( ['out', 'retval'], POINTER(POINTER(Versions)), 'prop' )),
    COMMETHOD([dispid(76), 'hidden', 'propget'], HRESULT, 'ShowSummary',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'prop' )),
    COMMETHOD([dispid(76), 'hidden', 'propput'], HRESULT, 'ShowSummary',
              ( ['in'], VARIANT_BOOL, 'prop' )),
    COMMETHOD([dispid(77), 'hidden', 'propget'], HRESULT, 'SummaryViewMode',
              ( ['out', 'retval'], POINTER(WdSummaryMode), 'prop' )),
    COMMETHOD([dispid(77), 'hidden', 'propput'], HRESULT, 'SummaryViewMode',
              ( ['in'], WdSummaryMode, 'prop' )),
    COMMETHOD([dispid(78), 'hidden', 'propget'], HRESULT, 'SummaryLength',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(78), 'hidden', 'propput'], HRESULT, 'SummaryLength',
              ( ['in'], c_int, 'prop' )),
    COMMETHOD([dispid(79), 'hidden', 'propget'], HRESULT, 'PrintFractionalWidths',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'prop' )),
    COMMETHOD([dispid(79), 'hidden', 'propput'], HRESULT, 'PrintFractionalWidths',
              ( ['in'], VARIANT_BOOL, 'prop' )),
    COMMETHOD([dispid(80), 'propget'], HRESULT, 'PrintPostScriptOverText',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'prop' )),
    COMMETHOD([dispid(80), 'propput'], HRESULT, 'PrintPostScriptOverText',
              ( ['in'], VARIANT_BOOL, 'prop' )),
    COMMETHOD([dispid(82), 'propget'], HRESULT, 'Container',
              ( ['out', 'retval'], POINTER(POINTER(IDispatch)), 'prop' )),
    COMMETHOD([dispid(83), 'propget'], HRESULT, 'PrintFormsData',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'prop' )),
    COMMETHOD([dispid(83), 'propput'], HRESULT, 'PrintFormsData',
              ( ['in'], VARIANT_BOOL, 'prop' )),
    COMMETHOD([dispid(84), 'propget'], HRESULT, 'ListParagraphs',
              ( ['out', 'retval'], POINTER(POINTER(ListParagraphs)), 'prop' )),
    COMMETHOD([dispid(85), 'propput'], HRESULT, 'Password',
              ( ['in'], BSTR, 'rhs' )),
    COMMETHOD([dispid(86), 'propput'], HRESULT, 'WritePassword',
              ( ['in'], BSTR, 'rhs' )),
    COMMETHOD([dispid(87), 'propget'], HRESULT, 'HasPassword',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'prop' )),
    COMMETHOD([dispid(88), 'propget'], HRESULT, 'WriteReserved',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'prop' )),
    COMMETHOD([dispid(90), 'propget'], HRESULT, 'ActiveWritingStyle',
              ( ['in'], POINTER(VARIANT), 'LanguageID' ),
              ( ['out', 'retval'], POINTER(BSTR), 'prop' )),
    COMMETHOD([dispid(90), 'propput'], HRESULT, 'ActiveWritingStyle',
              ( ['in'], POINTER(VARIANT), 'LanguageID' ),
              ( ['in'], BSTR, 'prop' )),
    COMMETHOD([dispid(92), 'propget'], HRESULT, 'UserControl',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'prop' )),
    COMMETHOD([dispid(92), 'propput'], HRESULT, 'UserControl',
              ( ['in'], VARIANT_BOOL, 'prop' )),
    COMMETHOD([dispid(93), 'hidden', 'propget'], HRESULT, 'HasMailer',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'prop' )),
    COMMETHOD([dispid(93), 'hidden', 'propput'], HRESULT, 'HasMailer',
              ( ['in'], VARIANT_BOOL, 'prop' )),
    COMMETHOD([dispid(94), 'hidden', 'propget'], HRESULT, 'Mailer',
              ( ['out', 'retval'], POINTER(POINTER(Mailer)), 'prop' )),
    COMMETHOD([dispid(96), 'propget'], HRESULT, 'ReadabilityStatistics',
              ( ['out', 'retval'], POINTER(POINTER(ReadabilityStatistics)), 'prop' )),
    COMMETHOD([dispid(97), 'propget'], HRESULT, 'GrammaticalErrors',
              ( ['out', 'retval'], POINTER(POINTER(ProofreadingErrors)), 'prop' )),
    COMMETHOD([dispid(98), 'propget'], HRESULT, 'SpellingErrors',
              ( ['out', 'retval'], POINTER(POINTER(ProofreadingErrors)), 'prop' )),
    COMMETHOD([dispid(99), 'propget'], HRESULT, 'VBProject',
              ( ['out', 'retval'], POINTER(POINTER(comtypes.gen._0002E157_0000_0000_C000_000000000046_0_5_3.VBProject)), 'prop' )),
    COMMETHOD([dispid(100), 'propget'], HRESULT, 'FormsDesign',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'prop' )),
    COMMETHOD([dispid(-2147418112), 'nonbrowsable', 'propget'], HRESULT, '_CodeName',
              ( ['out', 'retval'], POINTER(BSTR), 'prop' )),
    COMMETHOD([dispid(-2147418112), 'nonbrowsable', 'propput'], HRESULT, '_CodeName',
              ( ['in'], BSTR, 'prop' )),
    COMMETHOD([dispid(262), 'propget'], HRESULT, 'CodeName',
              ( ['out', 'retval'], POINTER(BSTR), 'prop' )),
    COMMETHOD([dispid(300), 'propget'], HRESULT, 'SnapToGrid',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'prop' )),
    COMMETHOD([dispid(300), 'propput'], HRESULT, 'SnapToGrid',
              ( ['in'], VARIANT_BOOL, 'prop' )),
    COMMETHOD([dispid(301), 'propget'], HRESULT, 'SnapToShapes',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'prop' )),
    COMMETHOD([dispid(301), 'propput'], HRESULT, 'SnapToShapes',
              ( ['in'], VARIANT_BOOL, 'prop' )),
    COMMETHOD([dispid(302), 'propget'], HRESULT, 'GridDistanceHorizontal',
              ( ['out', 'retval'], POINTER(c_float), 'prop' )),
    COMMETHOD([dispid(302), 'propput'], HRESULT, 'GridDistanceHorizontal',
              ( ['in'], c_float, 'prop' )),
    COMMETHOD([dispid(303), 'propget'], HRESULT, 'GridDistanceVertical',
              ( ['out', 'retval'], POINTER(c_float), 'prop' )),
    COMMETHOD([dispid(303), 'propput'], HRESULT, 'GridDistanceVertical',
              ( ['in'], c_float, 'prop' )),
    COMMETHOD([dispid(304), 'propget'], HRESULT, 'GridOriginHorizontal',
              ( ['out', 'retval'], POINTER(c_float), 'prop' )),
    COMMETHOD([dispid(304), 'propput'], HRESULT, 'GridOriginHorizontal',
              ( ['in'], c_float, 'prop' )),
    COMMETHOD([dispid(305), 'propget'], HRESULT, 'GridOriginVertical',
              ( ['out', 'retval'], POINTER(c_float), 'prop' )),
    COMMETHOD([dispid(305), 'propput'], HRESULT, 'GridOriginVertical',
              ( ['in'], c_float, 'prop' )),
    COMMETHOD([dispid(306), 'propget'], HRESULT, 'GridSpaceBetweenHorizontalLines',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(306), 'propput'], HRESULT, 'GridSpaceBetweenHorizontalLines',
              ( ['in'], c_int, 'prop' )),
    COMMETHOD([dispid(307), 'propget'], HRESULT, 'GridSpaceBetweenVerticalLines',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(307), 'propput'], HRESULT, 'GridSpaceBetweenVerticalLines',
              ( ['in'], c_int, 'prop' )),
    COMMETHOD([dispid(308), 'propget'], HRESULT, 'GridOriginFromMargin',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'prop' )),
    COMMETHOD([dispid(308), 'propput'], HRESULT, 'GridOriginFromMargin',
              ( ['in'], VARIANT_BOOL, 'prop' )),
    COMMETHOD([dispid(309), 'propget'], HRESULT, 'KerningByAlgorithm',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'prop' )),
    COMMETHOD([dispid(309), 'propput'], HRESULT, 'KerningByAlgorithm',
              ( ['in'], VARIANT_BOOL, 'prop' )),
    COMMETHOD([dispid(310), 'propget'], HRESULT, 'JustificationMode',
              ( ['out', 'retval'], POINTER(WdJustificationMode), 'prop' )),
    COMMETHOD([dispid(310), 'propput'], HRESULT, 'JustificationMode',
              ( ['in'], WdJustificationMode, 'prop' )),
    COMMETHOD([dispid(311), 'propget'], HRESULT, 'FarEastLineBreakLevel',
              ( ['out', 'retval'], POINTER(WdFarEastLineBreakLevel), 'prop' )),
    COMMETHOD([dispid(311), 'propput'], HRESULT, 'FarEastLineBreakLevel',
              ( ['in'], WdFarEastLineBreakLevel, 'prop' )),
    COMMETHOD([dispid(312), 'propget'], HRESULT, 'NoLineBreakBefore',
              ( ['out', 'retval'], POINTER(BSTR), 'prop' )),
    COMMETHOD([dispid(312), 'propput'], HRESULT, 'NoLineBreakBefore',
              ( ['in'], BSTR, 'prop' )),
    COMMETHOD([dispid(313), 'propget'], HRESULT, 'NoLineBreakAfter',
              ( ['out', 'retval'], POINTER(BSTR), 'prop' )),
    COMMETHOD([dispid(313), 'propput'], HRESULT, 'NoLineBreakAfter',
              ( ['in'], BSTR, 'prop' )),
    COMMETHOD([dispid(314), 'propget'], HRESULT, 'TrackRevisions',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'prop' )),
    COMMETHOD([dispid(314), 'propput'], HRESULT, 'TrackRevisions',
              ( ['in'], VARIANT_BOOL, 'prop' )),
    COMMETHOD([dispid(315), 'propget'], HRESULT, 'PrintRevisions',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'prop' )),
    COMMETHOD([dispid(315), 'propput'], HRESULT, 'PrintRevisions',
              ( ['in'], VARIANT_BOOL, 'prop' )),
    COMMETHOD([dispid(316), 'hidden', 'propget'], HRESULT, 'ShowRevisions',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'prop' )),
    COMMETHOD([dispid(316), 'hidden', 'propput'], HRESULT, 'ShowRevisions',
              ( ['in'], VARIANT_BOOL, 'prop' )),
    COMMETHOD([dispid(1105)], HRESULT, 'Close',
              ( ['in', 'optional'], POINTER(VARIANT), 'SaveChanges' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'OriginalFormat' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'RouteDocument' )),
    COMMETHOD([dispid(102), 'hidden'], HRESULT, 'SaveAs2000',
              ( ['in', 'optional'], POINTER(VARIANT), 'FileName' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'FileFormat' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'LockComments' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'Password' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'AddToRecentFiles' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'WritePassword' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'ReadOnlyRecommended' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'EmbedTrueTypeFonts' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'SaveNativePictureFormat' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'SaveFormsData' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'SaveAsAOCELetter' )),
    COMMETHOD([dispid(103)], HRESULT, 'Repaginate'),
    COMMETHOD([dispid(104)], HRESULT, 'FitToPages'),
    COMMETHOD([dispid(105)], HRESULT, 'ManualHyphenation'),
    COMMETHOD([dispid(65535)], HRESULT, 'Select'),
    COMMETHOD([dispid(106)], HRESULT, 'DataForm'),
    COMMETHOD([dispid(107), 'hidden'], HRESULT, 'Route'),
    COMMETHOD([dispid(108)], HRESULT, 'Save'),
    COMMETHOD([dispid(109), 'hidden'], HRESULT, 'PrintOutOld',
              ( ['in', 'optional'], POINTER(VARIANT), 'Background' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'Append' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'Range' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'OutputFileName' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'From' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'To' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'Item' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'Copies' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'Pages' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'PageType' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'PrintToFile' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'Collate' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'ActivePrinterMacGX' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'ManualDuplexPrint' )),
    COMMETHOD([dispid(110)], HRESULT, 'SendMail'),
    COMMETHOD([dispid(2000)], HRESULT, 'Range',
              ( ['in', 'optional'], POINTER(VARIANT), 'Start' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'End' ),
              ( ['out', 'retval'], POINTER(POINTER(Range)), 'prop' )),
    COMMETHOD([dispid(112)], HRESULT, 'RunAutoMacro',
              ( ['in'], WdAutoMacros, 'Which' )),
    COMMETHOD([dispid(113)], HRESULT, 'Activate'),
    COMMETHOD([dispid(114)], HRESULT, 'PrintPreview'),
    COMMETHOD([dispid(115)], HRESULT, 'GoTo',
              ( ['in', 'optional'], POINTER(VARIANT), 'What' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'Which' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'Count' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'Name' ),
              ( ['out', 'retval'], POINTER(POINTER(Range)), 'prop' )),
    COMMETHOD([dispid(116)], HRESULT, 'Undo',
              ( ['in', 'optional'], POINTER(VARIANT), 'Times' ),
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'prop' )),
    COMMETHOD([dispid(117)], HRESULT, 'Redo',
              ( ['in', 'optional'], POINTER(VARIANT), 'Times' ),
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'prop' )),
    COMMETHOD([dispid(118)], HRESULT, 'ComputeStatistics',
              ( ['in'], WdStatistic, 'Statistic' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'IncludeFootnotesAndEndnotes' ),
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(119)], HRESULT, 'MakeCompatibilityDefault'),
    COMMETHOD([dispid(120), 'hidden'], HRESULT, 'Protect2002',
              ( ['in'], WdProtectionType, 'Type' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'NoReset' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'Password' )),
    COMMETHOD([dispid(121)], HRESULT, 'Unprotect',
              ( ['in', 'optional'], POINTER(VARIANT), 'Password' )),
    COMMETHOD([dispid(122), 'hidden'], HRESULT, 'EditionOptions',
              ( ['in'], WdEditionType, 'Type' ),
              ( ['in'], WdEditionOption, 'Option' ),
              ( ['in'], BSTR, 'Name' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'Format' )),
    COMMETHOD([dispid(123)], HRESULT, 'RunLetterWizard',
              ( ['in', 'optional'], POINTER(VARIANT), 'LetterContent' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'WizardMode' )),
    COMMETHOD([dispid(124)], HRESULT, 'GetLetterContent',
              ( ['out', 'retval'], POINTER(POINTER(LetterContent)), 'prop' )),
    COMMETHOD([dispid(125)], HRESULT, 'SetLetterContent',
              ( ['in'], POINTER(VARIANT), 'LetterContent' )),
    COMMETHOD([dispid(126)], HRESULT, 'CopyStylesFromTemplate',
              ( ['in'], BSTR, 'Template' )),
    COMMETHOD([dispid(127)], HRESULT, 'UpdateStyles'),
    COMMETHOD([dispid(131)], HRESULT, 'CheckGrammar'),
    COMMETHOD([dispid(132)], HRESULT, 'CheckSpelling',
              ( ['in', 'optional'], POINTER(VARIANT), 'CustomDictionary' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'IgnoreUppercase' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'AlwaysSuggest' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'CustomDictionary2' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'CustomDictionary3' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'CustomDictionary4' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'CustomDictionary5' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'CustomDictionary6' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'CustomDictionary7' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'CustomDictionary8' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'CustomDictionary9' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'CustomDictionary10' )),
    COMMETHOD([dispid(135)], HRESULT, 'FollowHyperlink',
              ( ['in', 'optional'], POINTER(VARIANT), 'Address' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'SubAddress' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'NewWindow' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'AddHistory' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'ExtraInfo' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'Method' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'HeaderInfo' )),
    COMMETHOD([dispid(136)], HRESULT, 'AddToFavorites'),
    COMMETHOD([dispid(137)], HRESULT, 'Reload'),
    COMMETHOD([dispid(138), 'hidden'], HRESULT, 'AutoSummarize',
              ( ['in', 'optional'], POINTER(VARIANT), 'Length' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'Mode' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'UpdateProperties' ),
              ( ['out', 'retval'], POINTER(POINTER(Range)), 'prop' )),
    COMMETHOD([dispid(140)], HRESULT, 'RemoveNumbers',
              ( ['in', 'optional'], POINTER(VARIANT), 'NumberType' )),
    COMMETHOD([dispid(141)], HRESULT, 'ConvertNumbersToText',
              ( ['in', 'optional'], POINTER(VARIANT), 'NumberType' )),
    COMMETHOD([dispid(142)], HRESULT, 'CountNumberedItems',
              ( ['in', 'optional'], POINTER(VARIANT), 'NumberType' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'Level' ),
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(143)], HRESULT, 'Post'),
    COMMETHOD([dispid(144)], HRESULT, 'ToggleFormsDesign'),
    COMMETHOD([dispid(145), 'hidden'], HRESULT, 'Compare2000',
              ( ['in'], BSTR, 'Name' )),
    COMMETHOD([dispid(146), 'hidden'], HRESULT, 'UpdateSummaryProperties'),
    COMMETHOD([dispid(147)], HRESULT, 'GetCrossReferenceItems',
              ( ['in'], POINTER(VARIANT), 'ReferenceType' ),
              ( ['out', 'retval'], POINTER(VARIANT), 'prop' )),
    COMMETHOD([dispid(148)], HRESULT, 'AutoFormat'),
    COMMETHOD([dispid(149)], HRESULT, 'ViewCode'),
    COMMETHOD([dispid(150)], HRESULT, 'ViewPropertyBrowser'),
    COMMETHOD([dispid(250), 'hidden'], HRESULT, 'ForwardMailer'),
    COMMETHOD([dispid(251), 'hidden'], HRESULT, 'Reply'),
    COMMETHOD([dispid(252), 'hidden'], HRESULT, 'ReplyAll'),
    COMMETHOD([dispid(253), 'hidden'], HRESULT, 'SendMailer',
              ( ['in', 'optional'], POINTER(VARIANT), 'FileFormat' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'Priority' )),
    COMMETHOD([dispid(254)], HRESULT, 'UndoClear'),
    COMMETHOD([dispid(255)], HRESULT, 'PresentIt'),
    COMMETHOD([dispid(256)], HRESULT, 'SendFax',
              ( ['in'], BSTR, 'Address' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'Subject' )),
    COMMETHOD([dispid(257), 'hidden'], HRESULT, 'Merge2000',
              ( ['in'], BSTR, 'FileName' )),
    COMMETHOD([dispid(258)], HRESULT, 'ClosePrintPreview'),
    COMMETHOD([dispid(259)], HRESULT, 'CheckConsistency'),
    COMMETHOD([dispid(260)], HRESULT, 'CreateLetterContent',
              ( ['in'], BSTR, 'DateFormat' ),
              ( ['in'], VARIANT_BOOL, 'IncludeHeaderFooter' ),
              ( ['in'], BSTR, 'PageDesign' ),
              ( ['in'], WdLetterStyle, 'LetterStyle' ),
              ( ['in'], VARIANT_BOOL, 'Letterhead' ),
              ( ['in'], WdLetterheadLocation, 'LetterheadLocation' ),
              ( ['in'], c_float, 'LetterheadSize' ),
              ( ['in'], BSTR, 'RecipientName' ),
              ( ['in'], BSTR, 'RecipientAddress' ),
              ( ['in'], BSTR, 'Salutation' ),
              ( ['in'], WdSalutationType, 'SalutationType' ),
              ( ['in'], BSTR, 'RecipientReference' ),
              ( ['in'], BSTR, 'MailingInstructions' ),
              ( ['in'], BSTR, 'AttentionLine' ),
              ( ['in'], BSTR, 'Subject' ),
              ( ['in'], BSTR, 'CCList' ),
              ( ['in'], BSTR, 'ReturnAddress' ),
              ( ['in'], BSTR, 'SenderName' ),
              ( ['in'], BSTR, 'Closing' ),
              ( ['in'], BSTR, 'SenderCompany' ),
              ( ['in'], BSTR, 'SenderJobTitle' ),
              ( ['in'], BSTR, 'SenderInitials' ),
              ( ['in'], c_int, 'EnclosureNumber' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'InfoBlock' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'RecipientCode' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'RecipientGender' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'ReturnAddressShortForm' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'SenderCity' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'SenderCode' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'SenderGender' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'SenderReference' ),
              ( ['out', 'retval'], POINTER(POINTER(LetterContent)), 'prop' )),
    COMMETHOD([dispid(317)], HRESULT, 'AcceptAllRevisions'),
    COMMETHOD([dispid(318)], HRESULT, 'RejectAllRevisions'),
    COMMETHOD([dispid(151)], HRESULT, 'DetectLanguage'),
    COMMETHOD([dispid(322)], HRESULT, 'ApplyTheme',
              ( ['in'], BSTR, 'Name' )),
    COMMETHOD([dispid(323)], HRESULT, 'RemoveTheme'),
    COMMETHOD([dispid(325)], HRESULT, 'WebPagePreview'),
    COMMETHOD([dispid(331)], HRESULT, 'ReloadAs',
              ( ['in'], comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoEncoding, 'Encoding' )),
    COMMETHOD([dispid(540), 'propget'], HRESULT, 'ActiveTheme',
              ( ['out', 'retval'], POINTER(BSTR), 'prop' )),
    COMMETHOD([dispid(541), 'propget'], HRESULT, 'ActiveThemeDisplayName',
              ( ['out', 'retval'], POINTER(BSTR), 'prop' )),
    COMMETHOD([dispid(319), 'propget'], HRESULT, 'Email',
              ( ['out', 'retval'], POINTER(POINTER(Email)), 'prop' )),
    COMMETHOD([dispid(320), 'propget'], HRESULT, 'Scripts',
              ( ['out', 'retval'], POINTER(POINTER(comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.Scripts)), 'prop' )),
    COMMETHOD([dispid(321), 'propget'], HRESULT, 'LanguageDetected',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'prop' )),
    COMMETHOD([dispid(321), 'propput'], HRESULT, 'LanguageDetected',
              ( ['in'], VARIANT_BOOL, 'prop' )),
    COMMETHOD([dispid(326), 'propget'], HRESULT, 'FarEastLineBreakLanguage',
              ( ['out', 'retval'], POINTER(WdFarEastLineBreakLanguageID), 'prop' )),
    COMMETHOD([dispid(326), 'propput'], HRESULT, 'FarEastLineBreakLanguage',
              ( ['in'], WdFarEastLineBreakLanguageID, 'prop' )),
    COMMETHOD([dispid(327), 'propget'], HRESULT, 'Frameset',
              ( ['out', 'retval'], POINTER(POINTER(Frameset)), 'prop' )),
    COMMETHOD([dispid(328), 'nonbrowsable', 'propget'], HRESULT, 'ClickAndTypeParagraphStyle',
              ( ['out', 'retval'], POINTER(VARIANT), 'prop' )),
    COMMETHOD([dispid(328), 'nonbrowsable', 'propput'], HRESULT, 'ClickAndTypeParagraphStyle',
              ( ['in'], POINTER(VARIANT), 'prop' )),
    COMMETHOD([dispid(329), 'hidden', 'propget'], HRESULT, 'HTMLProject',
              ( ['out', 'retval'], POINTER(POINTER(comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.HTMLProject)), 'prop' )),
    COMMETHOD([dispid(330), 'propget'], HRESULT, 'WebOptions',
              ( ['out', 'retval'], POINTER(POINTER(WebOptions)), 'prop' )),
    COMMETHOD([dispid(332), 'propget'], HRESULT, 'OpenEncoding',
              ( ['out', 'retval'], POINTER(comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoEncoding), 'prop' )),
    COMMETHOD([dispid(333), 'propget'], HRESULT, 'SaveEncoding',
              ( ['out', 'retval'], POINTER(comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoEncoding), 'prop' )),
    COMMETHOD([dispid(333), 'propput'], HRESULT, 'SaveEncoding',
              ( ['in'], comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoEncoding, 'prop' )),
    COMMETHOD([dispid(334), 'propget'], HRESULT, 'OptimizeForWord97',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'prop' )),
    COMMETHOD([dispid(334), 'propput'], HRESULT, 'OptimizeForWord97',
              ( ['in'], VARIANT_BOOL, 'prop' )),
    COMMETHOD([dispid(335), 'propget'], HRESULT, 'VBASigned',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'prop' )),
    COMMETHOD([dispid(444), 'hidden'], HRESULT, 'PrintOut2000',
              ( ['in', 'optional'], POINTER(VARIANT), 'Background' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'Append' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'Range' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'OutputFileName' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'From' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'To' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'Item' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'Copies' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'Pages' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'PageType' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'PrintToFile' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'Collate' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'ActivePrinterMacGX' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'ManualDuplexPrint' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'PrintZoomColumn' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'PrintZoomRow' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'PrintZoomPaperWidth' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'PrintZoomPaperHeight' )),
    COMMETHOD([dispid(445), 'hidden'], HRESULT, 'sblt',
              ( ['in'], BSTR, 's' )),
    COMMETHOD([dispid(447)], HRESULT, 'ConvertVietDoc',
              ( ['in'], c_int, 'CodePageOrigin' )),
    COMMETHOD([dispid(446)], HRESULT, 'PrintOut',
              ( ['in', 'optional'], POINTER(VARIANT), 'Background' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'Append' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'Range' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'OutputFileName' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'From' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'To' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'Item' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'Copies' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'Pages' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'PageType' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'PrintToFile' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'Collate' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'ActivePrinterMacGX' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'ManualDuplexPrint' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'PrintZoomColumn' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'PrintZoomRow' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'PrintZoomPaperWidth' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'PrintZoomPaperHeight' )),
    COMMETHOD([dispid(336), 'propget'], HRESULT, 'MailEnvelope',
              ( ['out', 'retval'], POINTER(POINTER(comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoEnvelope)), 'prop' )),
    COMMETHOD([dispid(337), 'propget'], HRESULT, 'DisableFeatures',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'prop' )),
    COMMETHOD([dispid(337), 'propput'], HRESULT, 'DisableFeatures',
              ( ['in'], VARIANT_BOOL, 'prop' )),
    COMMETHOD([dispid(338), 'propget'], HRESULT, 'DoNotEmbedSystemFonts',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'prop' )),
    COMMETHOD([dispid(338), 'propput'], HRESULT, 'DoNotEmbedSystemFonts',
              ( ['in'], VARIANT_BOOL, 'prop' )),
    COMMETHOD([dispid(339), 'propget'], HRESULT, 'Signatures',
              ( ['out', 'retval'], POINTER(POINTER(comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.SignatureSet)), 'prop' )),
    COMMETHOD([dispid(340), 'propget'], HRESULT, 'DefaultTargetFrame',
              ( ['out', 'retval'], POINTER(BSTR), 'prop' )),
    COMMETHOD([dispid(340), 'propput'], HRESULT, 'DefaultTargetFrame',
              ( ['in'], BSTR, 'prop' )),
    COMMETHOD([dispid(342), 'propget'], HRESULT, 'HTMLDivisions',
              ( ['out', 'retval'], POINTER(POINTER(HTMLDivisions)), 'prop' )),
    COMMETHOD([dispid(343), 'propget'], HRESULT, 'DisableFeaturesIntroducedAfter',
              ( ['out', 'retval'], POINTER(WdDisableFeaturesIntroducedAfter), 'prop' )),
    COMMETHOD([dispid(343), 'propput'], HRESULT, 'DisableFeaturesIntroducedAfter',
              ( ['in'], WdDisableFeaturesIntroducedAfter, 'prop' )),
    COMMETHOD([dispid(344), 'propget'], HRESULT, 'RemovePersonalInformation',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'prop' )),
    COMMETHOD([dispid(344), 'propput'], HRESULT, 'RemovePersonalInformation',
              ( ['in'], VARIANT_BOOL, 'prop' )),
    COMMETHOD([dispid(346), 'hidden', 'propget'], HRESULT, 'SmartTags',
              ( ['out', 'retval'], POINTER(POINTER(SmartTags)), 'prop' )),
    COMMETHOD([dispid(345), 'hidden'], HRESULT, 'Compare2002',
              ( ['in'], BSTR, 'Name' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'AuthorName' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'CompareTarget' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'DetectFormatChanges' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'IgnoreAllComparisonWarnings' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'AddToRecentFiles' )),
    COMMETHOD([dispid(349)], HRESULT, 'CheckIn',
              ( ['in', 'optional'], VARIANT_BOOL, 'SaveChanges', True ),
              ( ['in', 'optional'], POINTER(VARIANT), 'Comments' ),
              ( ['in', 'optional'], VARIANT_BOOL, 'MakePublic', False )),
    COMMETHOD([dispid(351)], HRESULT, 'CanCheckin',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'prop' )),
    COMMETHOD([dispid(362)], HRESULT, 'Merge',
              ( ['in'], BSTR, 'FileName' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'MergeTarget' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'DetectFormatChanges' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'UseFormattingFrom' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'AddToRecentFiles' )),
    COMMETHOD([dispid(347), 'hidden', 'propget'], HRESULT, 'EmbedSmartTags',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'prop' )),
    COMMETHOD([dispid(347), 'hidden', 'propput'], HRESULT, 'EmbedSmartTags',
              ( ['in'], VARIANT_BOOL, 'prop' )),
    COMMETHOD([dispid(348), 'hidden', 'propget'], HRESULT, 'SmartTagsAsXMLProps',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'prop' )),
    COMMETHOD([dispid(348), 'hidden', 'propput'], HRESULT, 'SmartTagsAsXMLProps',
              ( ['in'], VARIANT_BOOL, 'prop' )),
    COMMETHOD([dispid(357), 'propget'], HRESULT, 'TextEncoding',
              ( ['out', 'retval'], POINTER(comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoEncoding), 'prop' )),
    COMMETHOD([dispid(357), 'propput'], HRESULT, 'TextEncoding',
              ( ['in'], comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoEncoding, 'prop' )),
    COMMETHOD([dispid(358), 'propget'], HRESULT, 'TextLineEnding',
              ( ['out', 'retval'], POINTER(WdLineEndingType), 'prop' )),
    COMMETHOD([dispid(358), 'propput'], HRESULT, 'TextLineEnding',
              ( ['in'], WdLineEndingType, 'prop' )),
    COMMETHOD([dispid(353)], HRESULT, 'SendForReview',
              ( ['in', 'optional'], POINTER(VARIANT), 'Recipients' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'Subject' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'ShowMessage' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'IncludeAttachment' )),
    COMMETHOD([dispid(354)], HRESULT, 'ReplyWithChanges',
              ( ['in', 'optional'], POINTER(VARIANT), 'ShowMessage' )),
    COMMETHOD([dispid(356)], HRESULT, 'EndReview'),
    COMMETHOD([dispid(360), 'propget'], HRESULT, 'StyleSheets',
              ( ['out', 'retval'], POINTER(POINTER(StyleSheets)), 'prop' )),
    COMMETHOD([dispid(365), 'propget'], HRESULT, 'DefaultTableStyle',
              ( ['out', 'retval'], POINTER(VARIANT), 'prop' )),
    COMMETHOD([dispid(367), 'propget'], HRESULT, 'PasswordEncryptionProvider',
              ( ['out', 'retval'], POINTER(BSTR), 'prop' )),
    COMMETHOD([dispid(368), 'propget'], HRESULT, 'PasswordEncryptionAlgorithm',
              ( ['out', 'retval'], POINTER(BSTR), 'prop' )),
    COMMETHOD([dispid(369), 'propget'], HRESULT, 'PasswordEncryptionKeyLength',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(370), 'propget'], HRESULT, 'PasswordEncryptionFileProperties',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'prop' )),
    COMMETHOD([dispid(361)], HRESULT, 'SetPasswordEncryptionOptions',
              ( ['in'], BSTR, 'PasswordEncryptionProvider' ),
              ( ['in'], BSTR, 'PasswordEncryptionAlgorithm' ),
              ( ['in'], c_int, 'PasswordEncryptionKeyLength' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'PasswordEncryptionFileProperties' )),
    COMMETHOD([dispid(363), 'hidden'], HRESULT, 'RecheckSmartTags'),
    COMMETHOD([dispid(364), 'hidden'], HRESULT, 'RemoveSmartTags'),
    COMMETHOD([dispid(366)], HRESULT, 'SetDefaultTableStyle',
              ( ['in'], POINTER(VARIANT), 'Style' ),
              ( ['in'], VARIANT_BOOL, 'SetInTemplate' )),
    COMMETHOD([dispid(371)], HRESULT, 'DeleteAllComments'),
    COMMETHOD([dispid(372)], HRESULT, 'AcceptAllRevisionsShown'),
    COMMETHOD([dispid(373)], HRESULT, 'RejectAllRevisionsShown'),
    COMMETHOD([dispid(374)], HRESULT, 'DeleteAllCommentsShown'),
    COMMETHOD([dispid(375)], HRESULT, 'ResetFormFields'),
    COMMETHOD([dispid(376), 'hidden'], HRESULT, 'SaveAs',
              ( ['in', 'optional'], POINTER(VARIANT), 'FileName' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'FileFormat' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'LockComments' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'Password' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'AddToRecentFiles' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'WritePassword' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'ReadOnlyRecommended' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'EmbedTrueTypeFonts' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'SaveNativePictureFormat' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'SaveFormsData' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'SaveAsAOCELetter' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'Encoding' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'InsertLineBreaks' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'AllowSubstitutions' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'LineEnding' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'AddBiDiMarks' )),
    COMMETHOD([dispid(377), 'propget'], HRESULT, 'EmbedLinguisticData',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'prop' )),
    COMMETHOD([dispid(377), 'propput'], HRESULT, 'EmbedLinguisticData',
              ( ['in'], VARIANT_BOOL, 'prop' )),
    COMMETHOD([dispid(448), 'propget'], HRESULT, 'FormattingShowFont',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'prop' )),
    COMMETHOD([dispid(448), 'propput'], HRESULT, 'FormattingShowFont',
              ( ['in'], VARIANT_BOOL, 'prop' )),
    COMMETHOD([dispid(449), 'propget'], HRESULT, 'FormattingShowClear',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'prop' )),
    COMMETHOD([dispid(449), 'propput'], HRESULT, 'FormattingShowClear',
              ( ['in'], VARIANT_BOOL, 'prop' )),
    COMMETHOD([dispid(450), 'propget'], HRESULT, 'FormattingShowParagraph',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'prop' )),
    COMMETHOD([dispid(450), 'propput'], HRESULT, 'FormattingShowParagraph',
              ( ['in'], VARIANT_BOOL, 'prop' )),
    COMMETHOD([dispid(451), 'propget'], HRESULT, 'FormattingShowNumbering',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'prop' )),
    COMMETHOD([dispid(451), 'propput'], HRESULT, 'FormattingShowNumbering',
              ( ['in'], VARIANT_BOOL, 'prop' )),
    COMMETHOD([dispid(452), 'propget'], HRESULT, 'FormattingShowFilter',
              ( ['out', 'retval'], POINTER(WdShowFilter), 'prop' )),
    COMMETHOD([dispid(452), 'propput'], HRESULT, 'FormattingShowFilter',
              ( ['in'], WdShowFilter, 'prop' )),
    COMMETHOD([dispid(378), 'hidden'], HRESULT, 'CheckNewSmartTags'),
    COMMETHOD([dispid(453), 'propget'], HRESULT, 'Permission',
              ( ['out', 'retval'], POINTER(POINTER(comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.Permission)), 'prop' )),
    COMMETHOD([dispid(460), 'hidden', 'propget'], HRESULT, 'XMLNodes',
              ( ['out', 'retval'], POINTER(POINTER(XMLNodes)), 'prop' )),
    COMMETHOD([dispid(461), 'propget'], HRESULT, 'XMLSchemaReferences',
              ( ['out', 'retval'], POINTER(POINTER(XMLSchemaReferences)), 'prop' )),
    COMMETHOD([dispid(462), 'propget'], HRESULT, 'SmartDocument',
              ( ['out', 'retval'], POINTER(POINTER(comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.SmartDocument)), 'prop' )),
    COMMETHOD([dispid(463), 'hidden', 'propget'], HRESULT, 'SharedWorkspace',
              ( ['out', 'retval'], POINTER(POINTER(comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.SharedWorkspace)), 'prop' )),
    COMMETHOD([dispid(466), 'propget'], HRESULT, 'Sync',
              ( ['out', 'retval'], POINTER(POINTER(comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.Sync)), 'prop' )),
    COMMETHOD([dispid(471), 'propget'], HRESULT, 'EnforceStyle',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'prop' )),
    COMMETHOD([dispid(471), 'propput'], HRESULT, 'EnforceStyle',
              ( ['in'], VARIANT_BOOL, 'prop' )),
    COMMETHOD([dispid(472), 'propget'], HRESULT, 'AutoFormatOverride',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'prop' )),
    COMMETHOD([dispid(472), 'propput'], HRESULT, 'AutoFormatOverride',
              ( ['in'], VARIANT_BOOL, 'prop' )),
    COMMETHOD([dispid(473), 'hidden', 'propget'], HRESULT, 'XMLSaveDataOnly',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'prop' )),
    COMMETHOD([dispid(473), 'hidden', 'propput'], HRESULT, 'XMLSaveDataOnly',
              ( ['in'], VARIANT_BOOL, 'prop' )),
    COMMETHOD([dispid(477), 'hidden', 'propget'], HRESULT, 'XMLHideNamespaces',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'prop' )),
    COMMETHOD([dispid(477), 'hidden', 'propput'], HRESULT, 'XMLHideNamespaces',
              ( ['in'], VARIANT_BOOL, 'prop' )),
    COMMETHOD([dispid(478), 'propget'], HRESULT, 'XMLShowAdvancedErrors',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'prop' )),
    COMMETHOD([dispid(478), 'propput'], HRESULT, 'XMLShowAdvancedErrors',
              ( ['in'], VARIANT_BOOL, 'prop' )),
    COMMETHOD([dispid(474), 'propget'], HRESULT, 'XMLUseXSLTWhenSaving',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'prop' )),
    COMMETHOD([dispid(474), 'propput'], HRESULT, 'XMLUseXSLTWhenSaving',
              ( ['in'], VARIANT_BOOL, 'prop' )),
    COMMETHOD([dispid(475), 'propget'], HRESULT, 'XMLSaveThroughXSLT',
              ( ['out', 'retval'], POINTER(BSTR), 'prop' )),
    COMMETHOD([dispid(475), 'propput'], HRESULT, 'XMLSaveThroughXSLT',
              ( ['in'], BSTR, 'prop' )),
    COMMETHOD([dispid(476), 'propget'], HRESULT, 'DocumentLibraryVersions',
              ( ['out', 'retval'], POINTER(POINTER(comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.DocumentLibraryVersions)), 'prop' )),
    COMMETHOD([dispid(481), 'propget'], HRESULT, 'ReadingModeLayoutFrozen',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'prop' )),
    COMMETHOD([dispid(481), 'propput'], HRESULT, 'ReadingModeLayoutFrozen',
              ( ['in'], VARIANT_BOOL, 'prop' )),
    COMMETHOD([dispid(484), 'propget'], HRESULT, 'RemoveDateAndTime',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'prop' )),
    COMMETHOD([dispid(484), 'propput'], HRESULT, 'RemoveDateAndTime',
              ( ['in'], VARIANT_BOOL, 'prop' )),
    COMMETHOD([dispid(464)], HRESULT, 'SendFaxOverInternet',
              ( ['in', 'optional'], POINTER(VARIANT), 'Recipients' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'Subject' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'ShowMessage' )),
    COMMETHOD([dispid(500)], HRESULT, 'TransformDocument',
              ( ['in'], BSTR, 'Path' ),
              ( ['in', 'optional'], VARIANT_BOOL, 'DataOnly', True )),
    COMMETHOD([dispid(467)], HRESULT, 'Protect',
              ( ['in'], WdProtectionType, 'Type' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'NoReset' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'Password' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'UseIRM' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'EnforceStyleLock' )),
    COMMETHOD([dispid(468)], HRESULT, 'SelectAllEditableRanges',
              ( ['in', 'optional'], POINTER(VARIANT), 'EditorID' )),
    COMMETHOD([dispid(469)], HRESULT, 'DeleteAllEditableRanges',
              ( ['in', 'optional'], POINTER(VARIANT), 'EditorID' )),
    COMMETHOD([dispid(479)], HRESULT, 'DeleteAllInkAnnotations'),
    COMMETHOD([dispid(482), 'hidden'], HRESULT, 'AddDocumentWorkspaceHeader',
              ( ['in'], VARIANT_BOOL, 'RichFormat' ),
              ( ['in'], BSTR, 'Url' ),
              ( ['in'], BSTR, 'Title' ),
              ( ['in'], BSTR, 'Description' ),
              ( ['in'], BSTR, 'ID' )),
    COMMETHOD([dispid(483), 'hidden'], HRESULT, 'RemoveDocumentWorkspaceHeader',
              ( ['in'], BSTR, 'ID' )),
    COMMETHOD([dispid(485)], HRESULT, 'Compare',
              ( ['in'], BSTR, 'Name' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'AuthorName' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'CompareTarget' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'DetectFormatChanges' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'IgnoreAllComparisonWarnings' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'AddToRecentFiles' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'RemovePersonalInformation' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'RemoveDateAndTime' )),
    COMMETHOD([dispid(487)], HRESULT, 'RemoveLockedStyles'),
    COMMETHOD([dispid(486), 'hidden', 'propget'], HRESULT, 'ChildNodeSuggestions',
              ( ['out', 'retval'], POINTER(POINTER(XMLChildNodeSuggestions)), 'prop' )),
    COMMETHOD([dispid(488)], HRESULT, 'SelectSingleNode',
              ( ['in'], BSTR, 'XPath' ),
              ( ['in', 'optional'], BSTR, 'PrefixMapping' ),
              ( ['in', 'optional'], VARIANT_BOOL, 'FastSearchSkippingTextNodes', True ),
              ( ['out', 'retval'], POINTER(POINTER(XMLNode)), 'prop' )),
    COMMETHOD([dispid(489)], HRESULT, 'SelectNodes',
              ( ['in'], BSTR, 'XPath' ),
              ( ['in', 'optional'], BSTR, 'PrefixMapping' ),
              ( ['in', 'optional'], VARIANT_BOOL, 'FastSearchSkippingTextNodes', True ),
              ( ['out', 'retval'], POINTER(POINTER(XMLNodes)), 'prop' )),
    COMMETHOD([dispid(490), 'hidden', 'propget'], HRESULT, 'XMLSchemaViolations',
              ( ['out', 'retval'], POINTER(POINTER(XMLNodes)), 'prop' )),
    COMMETHOD([dispid(491), 'propget'], HRESULT, 'ReadingLayoutSizeX',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(491), 'propput'], HRESULT, 'ReadingLayoutSizeX',
              ( ['in'], c_int, 'prop' )),
    COMMETHOD([dispid(492), 'propget'], HRESULT, 'ReadingLayoutSizeY',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(492), 'propput'], HRESULT, 'ReadingLayoutSizeY',
              ( ['in'], c_int, 'prop' )),
    COMMETHOD([dispid(493), 'propget'], HRESULT, 'StyleSortMethod',
              ( ['out', 'retval'], POINTER(WdStyleSort), 'prop' )),
    COMMETHOD([dispid(493), 'propput'], HRESULT, 'StyleSortMethod',
              ( ['in'], WdStyleSort, 'prop' )),
    COMMETHOD([dispid(496), 'propget'], HRESULT, 'ContentTypeProperties',
              ( ['out', 'retval'], POINTER(POINTER(comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MetaProperties)), 'prop' )),
    COMMETHOD([dispid(499), 'propget'], HRESULT, 'TrackMoves',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'prop' )),
    COMMETHOD([dispid(499), 'propput'], HRESULT, 'TrackMoves',
              ( ['in'], VARIANT_BOOL, 'prop' )),
    COMMETHOD([dispid(502), 'propget'], HRESULT, 'TrackFormatting',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'prop' )),
    COMMETHOD([dispid(502), 'propput'], HRESULT, 'TrackFormatting',
              ( ['in'], VARIANT_BOOL, 'prop' )),
    COMMETHOD([dispid(503), 'hidden', 'propget'], HRESULT, 'Dummy1'),
    COMMETHOD([dispid(504), 'propget'], HRESULT, 'OMaths',
              ( ['out', 'retval'], POINTER(POINTER(OMaths)), 'prop' )),
    COMMETHOD([dispid(495)], HRESULT, 'RemoveDocumentInformation',
              ( ['in'], WdRemoveDocInfoType, 'RemoveDocInfoType' )),
    COMMETHOD([dispid(501)], HRESULT, 'CheckInWithVersion',
              ( ['in', 'optional'], VARIANT_BOOL, 'SaveChanges', True ),
              ( ['in', 'optional'], POINTER(VARIANT), 'Comments' ),
              ( ['in', 'optional'], VARIANT_BOOL, 'MakePublic', False ),
              ( ['in', 'optional'], POINTER(VARIANT), 'VersionType' )),
    COMMETHOD([dispid(505), 'hidden'], HRESULT, 'Dummy2'),
    COMMETHOD([dispid(506), 'hidden', 'propget'], HRESULT, 'Dummy3'),
    COMMETHOD([dispid(507), 'propget'], HRESULT, 'ServerPolicy',
              ( ['out', 'retval'], POINTER(POINTER(comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.ServerPolicy)), 'prop' )),
    COMMETHOD([dispid(508), 'propget'], HRESULT, 'ContentControls',
              ( ['out', 'retval'], POINTER(POINTER(ContentControls)), 'prop' )),
    COMMETHOD([dispid(510), 'propget'], HRESULT, 'DocumentInspectors',
              ( ['out', 'retval'], POINTER(POINTER(comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.DocumentInspectors)), 'prop' )),
    COMMETHOD([dispid(509)], HRESULT, 'LockServerFile'),
    COMMETHOD([dispid(511)], HRESULT, 'GetWorkflowTasks',
              ( ['out', 'retval'], POINTER(POINTER(comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.WorkflowTasks)), 'prop' )),
    COMMETHOD([dispid(512)], HRESULT, 'GetWorkflowTemplates',
              ( ['out', 'retval'], POINTER(POINTER(comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.WorkflowTemplates)), 'prop' )),
    COMMETHOD([dispid(514), 'hidden'], HRESULT, 'Dummy4'),
    COMMETHOD([dispid(515), 'hidden'], HRESULT, 'AddMeetingWorkspaceHeader',
              ( ['in'], VARIANT_BOOL, 'SkipIfAbsent' ),
              ( ['in'], BSTR, 'Url' ),
              ( ['in'], BSTR, 'Title' ),
              ( ['in'], BSTR, 'Description' ),
              ( ['in'], BSTR, 'ID' )),
    COMMETHOD([dispid(516), 'propget'], HRESULT, 'Bibliography',
              ( ['out', 'retval'], POINTER(POINTER(Bibliography)), 'prop' )),
    COMMETHOD([dispid(517), 'propget'], HRESULT, 'LockTheme',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'prop' )),
    COMMETHOD([dispid(517), 'propput'], HRESULT, 'LockTheme',
              ( ['in'], VARIANT_BOOL, 'prop' )),
    COMMETHOD([dispid(518), 'propget'], HRESULT, 'LockQuickStyleSet',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'prop' )),
    COMMETHOD([dispid(518), 'propput'], HRESULT, 'LockQuickStyleSet',
              ( ['in'], VARIANT_BOOL, 'prop' )),
    COMMETHOD([dispid(519), 'propget'], HRESULT, 'OriginalDocumentTitle',
              ( ['out', 'retval'], POINTER(BSTR), 'prop' )),
    COMMETHOD([dispid(520), 'propget'], HRESULT, 'RevisedDocumentTitle',
              ( ['out', 'retval'], POINTER(BSTR), 'prop' )),
    COMMETHOD([dispid(521), 'propget'], HRESULT, 'CustomXMLParts',
              ( ['out', 'retval'], POINTER(POINTER(comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.CustomXMLParts)), 'prop' )),
    COMMETHOD([dispid(522), 'propget'], HRESULT, 'FormattingShowNextLevel',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'prop' )),
    COMMETHOD([dispid(522), 'propput'], HRESULT, 'FormattingShowNextLevel',
              ( ['in'], VARIANT_BOOL, 'prop' )),
    COMMETHOD([dispid(523), 'propget'], HRESULT, 'FormattingShowUserStyleName',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'prop' )),
    COMMETHOD([dispid(523), 'propput'], HRESULT, 'FormattingShowUserStyleName',
              ( ['in'], VARIANT_BOOL, 'prop' )),
    COMMETHOD([dispid(524)], HRESULT, 'SaveAsQuickStyleSet',
              ( ['in'], BSTR, 'FileName' )),
    COMMETHOD([dispid(525), 'hidden'], HRESULT, 'ApplyQuickStyleSet',
              ( ['in'], BSTR, 'Name' )),
    COMMETHOD([dispid(526), 'propget'], HRESULT, 'Research',
              ( ['out', 'retval'], POINTER(POINTER(Research)), 'prop' )),
    COMMETHOD([dispid(527), 'propget'], HRESULT, 'Final',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'prop' )),
    COMMETHOD([dispid(527), 'propput'], HRESULT, 'Final',
              ( ['in'], VARIANT_BOOL, 'prop' )),
    COMMETHOD([dispid(528), 'propget'], HRESULT, 'OMathBreakBin',
              ( ['out', 'retval'], POINTER(WdOMathBreakBin), 'prop' )),
    COMMETHOD([dispid(528), 'propput'], HRESULT, 'OMathBreakBin',
              ( ['in'], WdOMathBreakBin, 'prop' )),
    COMMETHOD([dispid(529), 'propget'], HRESULT, 'OMathBreakSub',
              ( ['out', 'retval'], POINTER(WdOMathBreakSub), 'prop' )),
    COMMETHOD([dispid(529), 'propput'], HRESULT, 'OMathBreakSub',
              ( ['in'], WdOMathBreakSub, 'prop' )),
    COMMETHOD([dispid(530), 'propget'], HRESULT, 'OMathJc',
              ( ['out', 'retval'], POINTER(WdOMathJc), 'prop' )),
    COMMETHOD([dispid(530), 'propput'], HRESULT, 'OMathJc',
              ( ['in'], WdOMathJc, 'prop' )),
    COMMETHOD([dispid(531), 'propget'], HRESULT, 'OMathLeftMargin',
              ( ['out', 'retval'], POINTER(c_float), 'prop' )),
    COMMETHOD([dispid(531), 'propput'], HRESULT, 'OMathLeftMargin',
              ( ['in'], c_float, 'prop' )),
    COMMETHOD([dispid(532), 'propget'], HRESULT, 'OMathRightMargin',
              ( ['out', 'retval'], POINTER(c_float), 'prop' )),
    COMMETHOD([dispid(532), 'propput'], HRESULT, 'OMathRightMargin',
              ( ['in'], c_float, 'prop' )),
    COMMETHOD([dispid(535), 'propget'], HRESULT, 'OMathWrap',
              ( ['out', 'retval'], POINTER(c_float), 'prop' )),
    COMMETHOD([dispid(535), 'propput'], HRESULT, 'OMathWrap',
              ( ['in'], c_float, 'prop' )),
    COMMETHOD([dispid(536), 'propget'], HRESULT, 'OMathIntSubSupLim',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'prop' )),
    COMMETHOD([dispid(536), 'propput'], HRESULT, 'OMathIntSubSupLim',
              ( ['in'], VARIANT_BOOL, 'prop' )),
    COMMETHOD([dispid(537), 'propget'], HRESULT, 'OMathNarySupSubLim',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'prop' )),
    COMMETHOD([dispid(537), 'propput'], HRESULT, 'OMathNarySupSubLim',
              ( ['in'], VARIANT_BOOL, 'prop' )),
    COMMETHOD([dispid(539), 'propget'], HRESULT, 'OMathSmallFrac',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'prop' )),
    COMMETHOD([dispid(539), 'propput'], HRESULT, 'OMathSmallFrac',
              ( ['in'], VARIANT_BOOL, 'prop' )),
    COMMETHOD([dispid(542), 'propget'], HRESULT, 'WordOpenXML',
              ( ['out', 'retval'], POINTER(BSTR), 'prop' )),
    COMMETHOD([dispid(545), 'propget'], HRESULT, 'DocumentTheme',
              ( ['out', 'retval'], POINTER(POINTER(comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.OfficeTheme)), 'prop' )),
    COMMETHOD([dispid(546)], HRESULT, 'ApplyDocumentTheme',
              ( ['in'], BSTR, 'FileName' )),
    COMMETHOD([dispid(548), 'propget'], HRESULT, 'HasVBProject',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'prop' )),
    COMMETHOD([dispid(549)], HRESULT, 'SelectLinkedControls',
              ( ['in'], POINTER(comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.CustomXMLNode), 'Node' ),
              ( ['out', 'retval'], POINTER(POINTER(ContentControls)), 'prop' )),
    COMMETHOD([dispid(550)], HRESULT, 'SelectUnlinkedControls',
              ( ['in', 'optional'], POINTER(comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.CustomXMLPart), 'Stream', 0 ),
              ( ['out', 'retval'], POINTER(POINTER(ContentControls)), 'prop' )),
    COMMETHOD([dispid(551)], HRESULT, 'SelectContentControlsByTitle',
              ( ['in'], BSTR, 'Title' ),
              ( ['out', 'retval'], POINTER(POINTER(ContentControls)), 'prop' )),
    COMMETHOD([dispid(552)], HRESULT, 'ExportAsFixedFormat',
              ( ['in'], BSTR, 'OutputFileName' ),
              ( ['in'], WdExportFormat, 'ExportFormat' ),
              ( ['in', 'optional'], VARIANT_BOOL, 'OpenAfterExport', False ),
              ( ['in', 'optional'], WdExportOptimizeFor, 'OptimizeFor', 0 ),
              ( ['in', 'optional'], WdExportRange, 'Range', 0 ),
              ( ['in', 'optional'], c_int, 'From', 1 ),
              ( ['in', 'optional'], c_int, 'To', 1 ),
              ( ['in', 'optional'], WdExportItem, 'Item', 0 ),
              ( ['in', 'optional'], VARIANT_BOOL, 'IncludeDocProps', False ),
              ( ['in', 'optional'], VARIANT_BOOL, 'KeepIRM', True ),
              ( ['in', 'optional'], WdExportCreateBookmarks, 'CreateBookmarks', 0 ),
              ( ['in', 'optional'], VARIANT_BOOL, 'DocStructureTags', True ),
              ( ['in', 'optional'], VARIANT_BOOL, 'BitmapMissingFonts', True ),
              ( ['in', 'optional'], VARIANT_BOOL, 'UseISO19005_1', False ),
              ( ['in', 'optional'], POINTER(VARIANT), 'FixedFormatExtClassPtr' )),
    COMMETHOD([dispid(553)], HRESULT, 'FreezeLayout'),
    COMMETHOD([dispid(554), 'hidden'], HRESULT, 'UnfreezeLayout'),
    COMMETHOD([dispid(555), 'propget'], HRESULT, 'OMathFontName',
              ( ['out', 'retval'], POINTER(BSTR), 'prop' )),
    COMMETHOD([dispid(555), 'propput'], HRESULT, 'OMathFontName',
              ( ['in'], BSTR, 'prop' )),
    COMMETHOD([dispid(558)], HRESULT, 'DowngradeDocument'),
    COMMETHOD([dispid(559), 'propget'], HRESULT, 'EncryptionProvider',
              ( ['out', 'retval'], POINTER(BSTR), 'prop' )),
    COMMETHOD([dispid(559), 'propput'], HRESULT, 'EncryptionProvider',
              ( ['in'], BSTR, 'prop' )),
    COMMETHOD([dispid(560), 'propget'], HRESULT, 'UseMathDefaults',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'prop' )),
    COMMETHOD([dispid(560), 'propput'], HRESULT, 'UseMathDefaults',
              ( ['in'], VARIANT_BOOL, 'prop' )),
    COMMETHOD([dispid(563), 'propget'], HRESULT, 'CurrentRsid',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(561)], HRESULT, 'Convert'),
    COMMETHOD([dispid(562)], HRESULT, 'SelectContentControlsByTag',
              ( ['in'], BSTR, 'Tag' ),
              ( ['out', 'retval'], POINTER(POINTER(ContentControls)), 'prop' )),
    COMMETHOD([dispid(650)], HRESULT, 'ConvertAutoHyphens'),
    COMMETHOD([dispid(564), 'hidden', 'propget'], HRESULT, 'DocID',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(566)], HRESULT, 'ApplyQuickStyleSet2',
              ( ['in'], POINTER(VARIANT), 'Style' )),
    COMMETHOD([dispid(567), 'propget'], HRESULT, 'CompatibilityMode',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(568)], HRESULT, 'SaveAs2',
              ( ['in', 'optional'], POINTER(VARIANT), 'FileName' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'FileFormat' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'LockComments' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'Password' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'AddToRecentFiles' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'WritePassword' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'ReadOnlyRecommended' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'EmbedTrueTypeFonts' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'SaveNativePictureFormat' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'SaveFormsData' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'SaveAsAOCELetter' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'Encoding' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'InsertLineBreaks' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'AllowSubstitutions' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'LineEnding' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'AddBiDiMarks' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'CompatibilityMode' )),
    COMMETHOD([dispid(600), 'propget'], HRESULT, 'CoAuthoring',
              ( ['out', 'retval'], POINTER(POINTER(CoAuthoring)), 'prop' )),
    COMMETHOD([dispid(571)], HRESULT, 'SetCompatibilityMode',
              ( ['in'], c_int, 'Mode' )),
    COMMETHOD([dispid(610), 'propget'], HRESULT, 'Broadcast',
              ( ['out', 'retval'], POINTER(POINTER(Broadcast)), 'prop' )),
    COMMETHOD([dispid(572)], HRESULT, 'ReturnToLastReadPosition',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(618), 'propget'], HRESULT, 'ChartDataPointTrack',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'prop' )),
    COMMETHOD([dispid(618), 'propput'], HRESULT, 'ChartDataPointTrack',
              ( ['in'], VARIANT_BOOL, 'prop' )),
    COMMETHOD([dispid(619), 'propget'], HRESULT, 'IsInAutosave',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'prop' )),
    COMMETHOD([dispid(621), 'hidden'], HRESULT, 'SaveCopyAs',
              ( ['in', 'optional'], POINTER(VARIANT), 'FileName' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'FileFormat' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'LockComments' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'Password' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'AddToRecentFiles' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'WritePassword' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'ReadOnlyRecommended' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'EmbedTrueTypeFonts' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'SaveNativePictureFormat' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'SaveFormsData' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'SaveAsAOCELetter' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'Encoding' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'InsertLineBreaks' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'AllowSubstitutions' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'LineEnding' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'AddBiDiMarks' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'CompatibilityMode' )),
    COMMETHOD([dispid(622), 'hidden'], HRESULT, 'InsertAppForOfficeTest',
              ( ['in'], BSTR, 'ID' ),
              ( ['in'], c_int, 'Type' ),
              ( ['in'], BSTR, 'Version' ),
              ( ['in'], c_int, 'StoreType' ),
              ( ['in'], BSTR, 'StoreId' ),
              ( ['in'], BSTR, 'AssetId' ),
              ( ['in'], BSTR, 'AssetStoreId' ),
              ( ['in'], c_int, 'Width' ),
              ( ['in'], c_int, 'Height' )),
    COMMETHOD([dispid(623), 'propget'], HRESULT, 'WorkIdentity',
              ( ['out', 'retval'], POINTER(BSTR), 'prop' )),
    COMMETHOD([dispid(623), 'propput'], HRESULT, 'WorkIdentity',
              ( ['in'], BSTR, 'prop' )),
    COMMETHOD([dispid(624), 'propget'], HRESULT, 'AutoSaveOn',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'prop' )),
    COMMETHOD([dispid(624), 'propput'], HRESULT, 'AutoSaveOn',
              ( ['in'], VARIANT_BOOL, 'prop' )),
    COMMETHOD([dispid(625)], HRESULT, 'ExportAsFixedFormat2',
              ( ['in'], BSTR, 'OutputFileName' ),
              ( ['in'], WdExportFormat, 'ExportFormat' ),
              ( ['in', 'optional'], VARIANT_BOOL, 'OpenAfterExport', False ),
              ( ['in', 'optional'], WdExportOptimizeFor, 'OptimizeFor', 0 ),
              ( ['in', 'optional'], WdExportRange, 'Range', 0 ),
              ( ['in', 'optional'], c_int, 'From', 1 ),
              ( ['in', 'optional'], c_int, 'To', 1 ),
              ( ['in', 'optional'], WdExportItem, 'Item', 0 ),
              ( ['in', 'optional'], VARIANT_BOOL, 'IncludeDocProps', False ),
              ( ['in', 'optional'], VARIANT_BOOL, 'KeepIRM', True ),
              ( ['in', 'optional'], WdExportCreateBookmarks, 'CreateBookmarks', 0 ),
              ( ['in', 'optional'], VARIANT_BOOL, 'DocStructureTags', True ),
              ( ['in', 'optional'], VARIANT_BOOL, 'BitmapMissingFonts', True ),
              ( ['in', 'optional'], VARIANT_BOOL, 'UseISO19005_1', False ),
              ( ['in', 'optional'], VARIANT_BOOL, 'OptimizeForImageQuality', False ),
              ( ['in', 'optional'], POINTER(VARIANT), 'FixedFormatExtClassPtr' )),
    COMMETHOD([dispid(626), 'propget'], HRESULT, 'SensitivityLabel',
              ( ['out', 'retval'], POINTER(POINTER(comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.ISensitivityLabel)), 'prop' )),
]
################################################################
## code template for _Document implementation
##class _Document_Impl(object):
##    @property
##    def Name(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Creator(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def BuiltInDocumentProperties(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def CustomDocumentProperties(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Path(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Bookmarks(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Tables(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Footnotes(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Endnotes(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Comments(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Type(self):
##        '-no docstring-'
##        #return prop
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    AutoHyphenation = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    HyphenateCaps = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    HyphenationZone = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    ConsecutiveHyphensLimit = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Sections(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Paragraphs(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Words(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Sentences(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Characters(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Fields(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def FormFields(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Styles(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Frames(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def TablesOfFigures(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Variables(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def MailMerge(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Envelope(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def FullName(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Revisions(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def TablesOfContents(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def TablesOfAuthorities(self):
##        '-no docstring-'
##        #return prop
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    PageSetup = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Windows(self):
##        '-no docstring-'
##        #return prop
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    HasRoutingSlip = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def RoutingSlip(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Routed(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def TablesOfAuthoritiesCategories(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Indexes(self):
##        '-no docstring-'
##        #return prop
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    Saved = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Content(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def ActiveWindow(self):
##        '-no docstring-'
##        #return prop
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    Kind = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def ReadOnly(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Subdocuments(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def IsMasterDocument(self):
##        '-no docstring-'
##        #return prop
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    DefaultTabStop = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    EmbedTrueTypeFonts = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    SaveFormsData = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    ReadOnlyRecommended = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    SaveSubsetFonts = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self, Type):
##        '-no docstring-'
##        #return prop
##    def _set(self, Type, prop):
##        '-no docstring-'
##    Compatibility = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def StoryRanges(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def CommandBars(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def IsSubdocument(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def SaveFormat(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def ProtectionType(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Hyperlinks(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Shapes(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def ListTemplates(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Lists(self):
##        '-no docstring-'
##        #return prop
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    UpdateStylesOnOpen = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    AttachedTemplate = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def InlineShapes(self):
##        '-no docstring-'
##        #return prop
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    Background = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    GrammarChecked = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    SpellingChecked = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    ShowGrammaticalErrors = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    ShowSpellingErrors = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Versions(self):
##        '-no docstring-'
##        #return prop
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    ShowSummary = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    SummaryViewMode = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    SummaryLength = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    PrintFractionalWidths = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    PrintPostScriptOverText = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Container(self):
##        '-no docstring-'
##        #return prop
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    PrintFormsData = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def ListParagraphs(self):
##        '-no docstring-'
##        #return prop
##
##    def _set(self, rhs):
##        '-no docstring-'
##    Password = property(fset = _set, doc = _set.__doc__)
##
##    def _set(self, rhs):
##        '-no docstring-'
##    WritePassword = property(fset = _set, doc = _set.__doc__)
##
##    @property
##    def HasPassword(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def WriteReserved(self):
##        '-no docstring-'
##        #return prop
##
##    def _get(self, LanguageID):
##        '-no docstring-'
##        #return prop
##    def _set(self, LanguageID, prop):
##        '-no docstring-'
##    ActiveWritingStyle = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    UserControl = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    HasMailer = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Mailer(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def ReadabilityStatistics(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def GrammaticalErrors(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def SpellingErrors(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def VBProject(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def FormsDesign(self):
##        '-no docstring-'
##        #return prop
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    _CodeName = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def CodeName(self):
##        '-no docstring-'
##        #return prop
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    SnapToGrid = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    SnapToShapes = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    GridDistanceHorizontal = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    GridDistanceVertical = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    GridOriginHorizontal = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    GridOriginVertical = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    GridSpaceBetweenHorizontalLines = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    GridSpaceBetweenVerticalLines = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    GridOriginFromMargin = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    KerningByAlgorithm = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    JustificationMode = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    FarEastLineBreakLevel = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    NoLineBreakBefore = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    NoLineBreakAfter = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    TrackRevisions = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    PrintRevisions = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    ShowRevisions = property(_get, _set, doc = _set.__doc__)
##
##    def Close(self, SaveChanges, OriginalFormat, RouteDocument):
##        '-no docstring-'
##        #return 
##
##    def SaveAs2000(self, FileName, FileFormat, LockComments, Password, AddToRecentFiles, WritePassword, ReadOnlyRecommended, EmbedTrueTypeFonts, SaveNativePictureFormat, SaveFormsData, SaveAsAOCELetter):
##        '-no docstring-'
##        #return 
##
##    def Repaginate(self):
##        '-no docstring-'
##        #return 
##
##    def FitToPages(self):
##        '-no docstring-'
##        #return 
##
##    def ManualHyphenation(self):
##        '-no docstring-'
##        #return 
##
##    def Select(self):
##        '-no docstring-'
##        #return 
##
##    def DataForm(self):
##        '-no docstring-'
##        #return 
##
##    def Route(self):
##        '-no docstring-'
##        #return 
##
##    def Save(self):
##        '-no docstring-'
##        #return 
##
##    def PrintOutOld(self, Background, Append, Range, OutputFileName, From, To, Item, Copies, Pages, PageType, PrintToFile, Collate, ActivePrinterMacGX, ManualDuplexPrint):
##        '-no docstring-'
##        #return 
##
##    def SendMail(self):
##        '-no docstring-'
##        #return 
##
##    def Range(self, Start, End):
##        '-no docstring-'
##        #return prop
##
##    def RunAutoMacro(self, Which):
##        '-no docstring-'
##        #return 
##
##    def Activate(self):
##        '-no docstring-'
##        #return 
##
##    def PrintPreview(self):
##        '-no docstring-'
##        #return 
##
##    def GoTo(self, What, Which, Count, Name):
##        '-no docstring-'
##        #return prop
##
##    def Undo(self, Times):
##        '-no docstring-'
##        #return prop
##
##    def Redo(self, Times):
##        '-no docstring-'
##        #return prop
##
##    def ComputeStatistics(self, Statistic, IncludeFootnotesAndEndnotes):
##        '-no docstring-'
##        #return prop
##
##    def MakeCompatibilityDefault(self):
##        '-no docstring-'
##        #return 
##
##    def Protect2002(self, Type, NoReset, Password):
##        '-no docstring-'
##        #return 
##
##    def Unprotect(self, Password):
##        '-no docstring-'
##        #return 
##
##    def EditionOptions(self, Type, Option, Name, Format):
##        '-no docstring-'
##        #return 
##
##    def RunLetterWizard(self, LetterContent, WizardMode):
##        '-no docstring-'
##        #return 
##
##    def GetLetterContent(self):
##        '-no docstring-'
##        #return prop
##
##    def SetLetterContent(self, LetterContent):
##        '-no docstring-'
##        #return 
##
##    def CopyStylesFromTemplate(self, Template):
##        '-no docstring-'
##        #return 
##
##    def UpdateStyles(self):
##        '-no docstring-'
##        #return 
##
##    def CheckGrammar(self):
##        '-no docstring-'
##        #return 
##
##    def CheckSpelling(self, CustomDictionary, IgnoreUppercase, AlwaysSuggest, CustomDictionary2, CustomDictionary3, CustomDictionary4, CustomDictionary5, CustomDictionary6, CustomDictionary7, CustomDictionary8, CustomDictionary9, CustomDictionary10):
##        '-no docstring-'
##        #return 
##
##    def FollowHyperlink(self, Address, SubAddress, NewWindow, AddHistory, ExtraInfo, Method, HeaderInfo):
##        '-no docstring-'
##        #return 
##
##    def AddToFavorites(self):
##        '-no docstring-'
##        #return 
##
##    def Reload(self):
##        '-no docstring-'
##        #return 
##
##    def AutoSummarize(self, Length, Mode, UpdateProperties):
##        '-no docstring-'
##        #return prop
##
##    def RemoveNumbers(self, NumberType):
##        '-no docstring-'
##        #return 
##
##    def ConvertNumbersToText(self, NumberType):
##        '-no docstring-'
##        #return 
##
##    def CountNumberedItems(self, NumberType, Level):
##        '-no docstring-'
##        #return prop
##
##    def Post(self):
##        '-no docstring-'
##        #return 
##
##    def ToggleFormsDesign(self):
##        '-no docstring-'
##        #return 
##
##    def Compare2000(self, Name):
##        '-no docstring-'
##        #return 
##
##    def UpdateSummaryProperties(self):
##        '-no docstring-'
##        #return 
##
##    def GetCrossReferenceItems(self, ReferenceType):
##        '-no docstring-'
##        #return prop
##
##    def AutoFormat(self):
##        '-no docstring-'
##        #return 
##
##    def ViewCode(self):
##        '-no docstring-'
##        #return 
##
##    def ViewPropertyBrowser(self):
##        '-no docstring-'
##        #return 
##
##    def ForwardMailer(self):
##        '-no docstring-'
##        #return 
##
##    def Reply(self):
##        '-no docstring-'
##        #return 
##
##    def ReplyAll(self):
##        '-no docstring-'
##        #return 
##
##    def SendMailer(self, FileFormat, Priority):
##        '-no docstring-'
##        #return 
##
##    def UndoClear(self):
##        '-no docstring-'
##        #return 
##
##    def PresentIt(self):
##        '-no docstring-'
##        #return 
##
##    def SendFax(self, Address, Subject):
##        '-no docstring-'
##        #return 
##
##    def Merge2000(self, FileName):
##        '-no docstring-'
##        #return 
##
##    def ClosePrintPreview(self):
##        '-no docstring-'
##        #return 
##
##    def CheckConsistency(self):
##        '-no docstring-'
##        #return 
##
##    def CreateLetterContent(self, DateFormat, IncludeHeaderFooter, PageDesign, LetterStyle, Letterhead, LetterheadLocation, LetterheadSize, RecipientName, RecipientAddress, Salutation, SalutationType, RecipientReference, MailingInstructions, AttentionLine, Subject, CCList, ReturnAddress, SenderName, Closing, SenderCompany, SenderJobTitle, SenderInitials, EnclosureNumber, InfoBlock, RecipientCode, RecipientGender, ReturnAddressShortForm, SenderCity, SenderCode, SenderGender, SenderReference):
##        '-no docstring-'
##        #return prop
##
##    def AcceptAllRevisions(self):
##        '-no docstring-'
##        #return 
##
##    def RejectAllRevisions(self):
##        '-no docstring-'
##        #return 
##
##    def DetectLanguage(self):
##        '-no docstring-'
##        #return 
##
##    def ApplyTheme(self, Name):
##        '-no docstring-'
##        #return 
##
##    def RemoveTheme(self):
##        '-no docstring-'
##        #return 
##
##    def WebPagePreview(self):
##        '-no docstring-'
##        #return 
##
##    def ReloadAs(self, Encoding):
##        '-no docstring-'
##        #return 
##
##    @property
##    def ActiveTheme(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def ActiveThemeDisplayName(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Email(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Scripts(self):
##        '-no docstring-'
##        #return prop
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    LanguageDetected = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    FarEastLineBreakLanguage = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Frameset(self):
##        '-no docstring-'
##        #return prop
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    ClickAndTypeParagraphStyle = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def HTMLProject(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def WebOptions(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def OpenEncoding(self):
##        '-no docstring-'
##        #return prop
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    SaveEncoding = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    OptimizeForWord97 = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def VBASigned(self):
##        '-no docstring-'
##        #return prop
##
##    def PrintOut2000(self, Background, Append, Range, OutputFileName, From, To, Item, Copies, Pages, PageType, PrintToFile, Collate, ActivePrinterMacGX, ManualDuplexPrint, PrintZoomColumn, PrintZoomRow, PrintZoomPaperWidth, PrintZoomPaperHeight):
##        '-no docstring-'
##        #return 
##
##    def sblt(self, s):
##        '-no docstring-'
##        #return 
##
##    def ConvertVietDoc(self, CodePageOrigin):
##        '-no docstring-'
##        #return 
##
##    def PrintOut(self, Background, Append, Range, OutputFileName, From, To, Item, Copies, Pages, PageType, PrintToFile, Collate, ActivePrinterMacGX, ManualDuplexPrint, PrintZoomColumn, PrintZoomRow, PrintZoomPaperWidth, PrintZoomPaperHeight):
##        '-no docstring-'
##        #return 
##
##    @property
##    def MailEnvelope(self):
##        '-no docstring-'
##        #return prop
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    DisableFeatures = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    DoNotEmbedSystemFonts = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Signatures(self):
##        '-no docstring-'
##        #return prop
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    DefaultTargetFrame = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def HTMLDivisions(self):
##        '-no docstring-'
##        #return prop
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    DisableFeaturesIntroducedAfter = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    RemovePersonalInformation = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def SmartTags(self):
##        '-no docstring-'
##        #return prop
##
##    def Compare2002(self, Name, AuthorName, CompareTarget, DetectFormatChanges, IgnoreAllComparisonWarnings, AddToRecentFiles):
##        '-no docstring-'
##        #return 
##
##    def CheckIn(self, SaveChanges, Comments, MakePublic):
##        '-no docstring-'
##        #return 
##
##    def CanCheckin(self):
##        '-no docstring-'
##        #return prop
##
##    def Merge(self, FileName, MergeTarget, DetectFormatChanges, UseFormattingFrom, AddToRecentFiles):
##        '-no docstring-'
##        #return 
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    EmbedSmartTags = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    SmartTagsAsXMLProps = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    TextEncoding = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    TextLineEnding = property(_get, _set, doc = _set.__doc__)
##
##    def SendForReview(self, Recipients, Subject, ShowMessage, IncludeAttachment):
##        '-no docstring-'
##        #return 
##
##    def ReplyWithChanges(self, ShowMessage):
##        '-no docstring-'
##        #return 
##
##    def EndReview(self):
##        '-no docstring-'
##        #return 
##
##    @property
##    def StyleSheets(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def DefaultTableStyle(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def PasswordEncryptionProvider(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def PasswordEncryptionAlgorithm(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def PasswordEncryptionKeyLength(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def PasswordEncryptionFileProperties(self):
##        '-no docstring-'
##        #return prop
##
##    def SetPasswordEncryptionOptions(self, PasswordEncryptionProvider, PasswordEncryptionAlgorithm, PasswordEncryptionKeyLength, PasswordEncryptionFileProperties):
##        '-no docstring-'
##        #return 
##
##    def RecheckSmartTags(self):
##        '-no docstring-'
##        #return 
##
##    def RemoveSmartTags(self):
##        '-no docstring-'
##        #return 
##
##    def SetDefaultTableStyle(self, Style, SetInTemplate):
##        '-no docstring-'
##        #return 
##
##    def DeleteAllComments(self):
##        '-no docstring-'
##        #return 
##
##    def AcceptAllRevisionsShown(self):
##        '-no docstring-'
##        #return 
##
##    def RejectAllRevisionsShown(self):
##        '-no docstring-'
##        #return 
##
##    def DeleteAllCommentsShown(self):
##        '-no docstring-'
##        #return 
##
##    def ResetFormFields(self):
##        '-no docstring-'
##        #return 
##
##    def SaveAs(self, FileName, FileFormat, LockComments, Password, AddToRecentFiles, WritePassword, ReadOnlyRecommended, EmbedTrueTypeFonts, SaveNativePictureFormat, SaveFormsData, SaveAsAOCELetter, Encoding, InsertLineBreaks, AllowSubstitutions, LineEnding, AddBiDiMarks):
##        '-no docstring-'
##        #return 
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    EmbedLinguisticData = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    FormattingShowFont = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    FormattingShowClear = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    FormattingShowParagraph = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    FormattingShowNumbering = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    FormattingShowFilter = property(_get, _set, doc = _set.__doc__)
##
##    def CheckNewSmartTags(self):
##        '-no docstring-'
##        #return 
##
##    @property
##    def Permission(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def XMLNodes(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def XMLSchemaReferences(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def SmartDocument(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def SharedWorkspace(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Sync(self):
##        '-no docstring-'
##        #return prop
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    EnforceStyle = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    AutoFormatOverride = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    XMLSaveDataOnly = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    XMLHideNamespaces = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    XMLShowAdvancedErrors = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    XMLUseXSLTWhenSaving = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    XMLSaveThroughXSLT = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def DocumentLibraryVersions(self):
##        '-no docstring-'
##        #return prop
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    ReadingModeLayoutFrozen = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    RemoveDateAndTime = property(_get, _set, doc = _set.__doc__)
##
##    def SendFaxOverInternet(self, Recipients, Subject, ShowMessage):
##        '-no docstring-'
##        #return 
##
##    def TransformDocument(self, Path, DataOnly):
##        '-no docstring-'
##        #return 
##
##    def Protect(self, Type, NoReset, Password, UseIRM, EnforceStyleLock):
##        '-no docstring-'
##        #return 
##
##    def SelectAllEditableRanges(self, EditorID):
##        '-no docstring-'
##        #return 
##
##    def DeleteAllEditableRanges(self, EditorID):
##        '-no docstring-'
##        #return 
##
##    def DeleteAllInkAnnotations(self):
##        '-no docstring-'
##        #return 
##
##    def AddDocumentWorkspaceHeader(self, RichFormat, Url, Title, Description, ID):
##        '-no docstring-'
##        #return 
##
##    def RemoveDocumentWorkspaceHeader(self, ID):
##        '-no docstring-'
##        #return 
##
##    def Compare(self, Name, AuthorName, CompareTarget, DetectFormatChanges, IgnoreAllComparisonWarnings, AddToRecentFiles, RemovePersonalInformation, RemoveDateAndTime):
##        '-no docstring-'
##        #return 
##
##    def RemoveLockedStyles(self):
##        '-no docstring-'
##        #return 
##
##    @property
##    def ChildNodeSuggestions(self):
##        '-no docstring-'
##        #return prop
##
##    def SelectSingleNode(self, XPath, PrefixMapping, FastSearchSkippingTextNodes):
##        '-no docstring-'
##        #return prop
##
##    def SelectNodes(self, XPath, PrefixMapping, FastSearchSkippingTextNodes):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def XMLSchemaViolations(self):
##        '-no docstring-'
##        #return prop
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    ReadingLayoutSizeX = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    ReadingLayoutSizeY = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    StyleSortMethod = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def ContentTypeProperties(self):
##        '-no docstring-'
##        #return prop
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    TrackMoves = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    TrackFormatting = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Dummy1(self):
##        '-no docstring-'
##        #return 
##
##    @property
##    def OMaths(self):
##        '-no docstring-'
##        #return prop
##
##    def RemoveDocumentInformation(self, RemoveDocInfoType):
##        '-no docstring-'
##        #return 
##
##    def CheckInWithVersion(self, SaveChanges, Comments, MakePublic, VersionType):
##        '-no docstring-'
##        #return 
##
##    def Dummy2(self):
##        '-no docstring-'
##        #return 
##
##    @property
##    def Dummy3(self):
##        '-no docstring-'
##        #return 
##
##    @property
##    def ServerPolicy(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def ContentControls(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def DocumentInspectors(self):
##        '-no docstring-'
##        #return prop
##
##    def LockServerFile(self):
##        '-no docstring-'
##        #return 
##
##    def GetWorkflowTasks(self):
##        '-no docstring-'
##        #return prop
##
##    def GetWorkflowTemplates(self):
##        '-no docstring-'
##        #return prop
##
##    def Dummy4(self):
##        '-no docstring-'
##        #return 
##
##    def AddMeetingWorkspaceHeader(self, SkipIfAbsent, Url, Title, Description, ID):
##        '-no docstring-'
##        #return 
##
##    @property
##    def Bibliography(self):
##        '-no docstring-'
##        #return prop
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    LockTheme = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    LockQuickStyleSet = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def OriginalDocumentTitle(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def RevisedDocumentTitle(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def CustomXMLParts(self):
##        '-no docstring-'
##        #return prop
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    FormattingShowNextLevel = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    FormattingShowUserStyleName = property(_get, _set, doc = _set.__doc__)
##
##    def SaveAsQuickStyleSet(self, FileName):
##        '-no docstring-'
##        #return 
##
##    def ApplyQuickStyleSet(self, Name):
##        '-no docstring-'
##        #return 
##
##    @property
##    def Research(self):
##        '-no docstring-'
##        #return prop
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    Final = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    OMathBreakBin = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    OMathBreakSub = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    OMathJc = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    OMathLeftMargin = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    OMathRightMargin = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    OMathWrap = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    OMathIntSubSupLim = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    OMathNarySupSubLim = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    OMathSmallFrac = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def WordOpenXML(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def DocumentTheme(self):
##        '-no docstring-'
##        #return prop
##
##    def ApplyDocumentTheme(self, FileName):
##        '-no docstring-'
##        #return 
##
##    @property
##    def HasVBProject(self):
##        '-no docstring-'
##        #return prop
##
##    def SelectLinkedControls(self, Node):
##        '-no docstring-'
##        #return prop
##
##    def SelectUnlinkedControls(self, Stream):
##        '-no docstring-'
##        #return prop
##
##    def SelectContentControlsByTitle(self, Title):
##        '-no docstring-'
##        #return prop
##
##    def ExportAsFixedFormat(self, OutputFileName, ExportFormat, OpenAfterExport, OptimizeFor, Range, From, To, Item, IncludeDocProps, KeepIRM, CreateBookmarks, DocStructureTags, BitmapMissingFonts, UseISO19005_1, FixedFormatExtClassPtr):
##        '-no docstring-'
##        #return 
##
##    def FreezeLayout(self):
##        '-no docstring-'
##        #return 
##
##    def UnfreezeLayout(self):
##        '-no docstring-'
##        #return 
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    OMathFontName = property(_get, _set, doc = _set.__doc__)
##
##    def DowngradeDocument(self):
##        '-no docstring-'
##        #return 
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    EncryptionProvider = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    UseMathDefaults = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def CurrentRsid(self):
##        '-no docstring-'
##        #return prop
##
##    def Convert(self):
##        '-no docstring-'
##        #return 
##
##    def SelectContentControlsByTag(self, Tag):
##        '-no docstring-'
##        #return prop
##
##    def ConvertAutoHyphens(self):
##        '-no docstring-'
##        #return 
##
##    @property
##    def DocID(self):
##        '-no docstring-'
##        #return prop
##
##    def ApplyQuickStyleSet2(self, Style):
##        '-no docstring-'
##        #return 
##
##    @property
##    def CompatibilityMode(self):
##        '-no docstring-'
##        #return prop
##
##    def SaveAs2(self, FileName, FileFormat, LockComments, Password, AddToRecentFiles, WritePassword, ReadOnlyRecommended, EmbedTrueTypeFonts, SaveNativePictureFormat, SaveFormsData, SaveAsAOCELetter, Encoding, InsertLineBreaks, AllowSubstitutions, LineEnding, AddBiDiMarks, CompatibilityMode):
##        '-no docstring-'
##        #return 
##
##    @property
##    def CoAuthoring(self):
##        '-no docstring-'
##        #return prop
##
##    def SetCompatibilityMode(self, Mode):
##        '-no docstring-'
##        #return 
##
##    @property
##    def Broadcast(self):
##        '-no docstring-'
##        #return prop
##
##    def ReturnToLastReadPosition(self):
##        '-no docstring-'
##        #return prop
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    ChartDataPointTrack = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def IsInAutosave(self):
##        '-no docstring-'
##        #return prop
##
##    def SaveCopyAs(self, FileName, FileFormat, LockComments, Password, AddToRecentFiles, WritePassword, ReadOnlyRecommended, EmbedTrueTypeFonts, SaveNativePictureFormat, SaveFormsData, SaveAsAOCELetter, Encoding, InsertLineBreaks, AllowSubstitutions, LineEnding, AddBiDiMarks, CompatibilityMode):
##        '-no docstring-'
##        #return 
##
##    def InsertAppForOfficeTest(self, ID, Type, Version, StoreType, StoreId, AssetId, AssetStoreId, Width, Height):
##        '-no docstring-'
##        #return 
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    WorkIdentity = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    AutoSaveOn = property(_get, _set, doc = _set.__doc__)
##
##    def ExportAsFixedFormat2(self, OutputFileName, ExportFormat, OpenAfterExport, OptimizeFor, Range, From, To, Item, IncludeDocProps, KeepIRM, CreateBookmarks, DocStructureTags, BitmapMissingFonts, UseISO19005_1, OptimizeForImageQuality, FixedFormatExtClassPtr):
##        '-no docstring-'
##        #return 
##
##    @property
##    def SensitivityLabel(self):
##        '-no docstring-'
##        #return prop
##


# values for enumeration 'WdXMLNodeLevel'
wdXMLNodeLevelInline = 0
wdXMLNodeLevelParagraph = 1
wdXMLNodeLevelRow = 2
wdXMLNodeLevelCell = 3
WdXMLNodeLevel = c_int # enum
class OMathFunc(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{0D951ADF-10A6-4C9B-BCD9-0FB8CBAD9A87}')
    _idlflags_ = ['dual', 'nonextensible', 'oleautomation']
OMathFunc._methods_ = [
    COMMETHOD([dispid(100), 'propget'], HRESULT, 'Application',
              ( ['out', 'retval'], POINTER(POINTER(Application)), 'prop' )),
    COMMETHOD([dispid(101), 'propget'], HRESULT, 'Creator',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(102), 'propget'], HRESULT, 'Parent',
              ( ['out', 'retval'], POINTER(POINTER(IDispatch)), 'prop' )),
    COMMETHOD([dispid(103), 'propget'], HRESULT, 'FName',
              ( ['out', 'retval'], POINTER(POINTER(OMath)), 'prop' )),
    COMMETHOD([dispid(104), 'propget'], HRESULT, 'E',
              ( ['out', 'retval'], POINTER(POINTER(OMath)), 'prop' )),
]
################################################################
## code template for OMathFunc implementation
##class OMathFunc_Impl(object):
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Creator(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def FName(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def E(self):
##        '-no docstring-'
##        #return prop
##


# values for enumeration 'WdOutlineLevel'
wdOutlineLevel1 = 1
wdOutlineLevel2 = 2
wdOutlineLevel3 = 3
wdOutlineLevel4 = 4
wdOutlineLevel5 = 5
wdOutlineLevel6 = 6
wdOutlineLevel7 = 7
wdOutlineLevel8 = 8
wdOutlineLevel9 = 9
wdOutlineLevelBodyText = 10
WdOutlineLevel = c_int # enum
ThreeDFormat._methods_ = [
    COMMETHOD([dispid(1000), 'propget'], HRESULT, 'Application',
              ( ['out', 'retval'], POINTER(POINTER(Application)), 'prop' )),
    COMMETHOD([dispid(1001), 'propget'], HRESULT, 'Creator',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(1), 'propget'], HRESULT, 'Parent',
              ( ['out', 'retval'], POINTER(POINTER(IDispatch)), 'prop' )),
    COMMETHOD([dispid(100), 'propget'], HRESULT, 'Depth',
              ( ['out', 'retval'], POINTER(c_float), 'prop' )),
    COMMETHOD([dispid(100), 'propput'], HRESULT, 'Depth',
              ( ['in'], c_float, 'prop' )),
    COMMETHOD([dispid(101), 'propget'], HRESULT, 'ExtrusionColor',
              ( ['out', 'retval'], POINTER(POINTER(ColorFormat)), 'prop' )),
    COMMETHOD([dispid(102), 'propget'], HRESULT, 'ExtrusionColorType',
              ( ['out', 'retval'], POINTER(comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoExtrusionColorType), 'prop' )),
    COMMETHOD([dispid(102), 'propput'], HRESULT, 'ExtrusionColorType',
              ( ['in'], comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoExtrusionColorType, 'prop' )),
    COMMETHOD([dispid(103), 'propget'], HRESULT, 'Perspective',
              ( ['out', 'retval'], POINTER(comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoTriState), 'prop' )),
    COMMETHOD([dispid(103), 'propput'], HRESULT, 'Perspective',
              ( ['in'], comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoTriState, 'prop' )),
    COMMETHOD([dispid(104), 'propget'], HRESULT, 'PresetExtrusionDirection',
              ( ['out', 'retval'], POINTER(comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoPresetExtrusionDirection), 'prop' )),
    COMMETHOD([dispid(105), 'propget'], HRESULT, 'PresetLightingDirection',
              ( ['out', 'retval'], POINTER(comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoPresetLightingDirection), 'prop' )),
    COMMETHOD([dispid(105), 'propput'], HRESULT, 'PresetLightingDirection',
              ( ['in'], comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoPresetLightingDirection, 'prop' )),
    COMMETHOD([dispid(106), 'propget'], HRESULT, 'PresetLightingSoftness',
              ( ['out', 'retval'], POINTER(comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoPresetLightingSoftness), 'prop' )),
    COMMETHOD([dispid(106), 'propput'], HRESULT, 'PresetLightingSoftness',
              ( ['in'], comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoPresetLightingSoftness, 'prop' )),
    COMMETHOD([dispid(107), 'propget'], HRESULT, 'PresetMaterial',
              ( ['out', 'retval'], POINTER(comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoPresetMaterial), 'prop' )),
    COMMETHOD([dispid(107), 'propput'], HRESULT, 'PresetMaterial',
              ( ['in'], comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoPresetMaterial, 'prop' )),
    COMMETHOD([dispid(108), 'propget'], HRESULT, 'PresetThreeDFormat',
              ( ['out', 'retval'], POINTER(comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoPresetThreeDFormat), 'prop' )),
    COMMETHOD([dispid(109), 'propget'], HRESULT, 'RotationX',
              ( ['out', 'retval'], POINTER(c_float), 'prop' )),
    COMMETHOD([dispid(109), 'propput'], HRESULT, 'RotationX',
              ( ['in'], c_float, 'prop' )),
    COMMETHOD([dispid(110), 'propget'], HRESULT, 'RotationY',
              ( ['out', 'retval'], POINTER(c_float), 'prop' )),
    COMMETHOD([dispid(110), 'propput'], HRESULT, 'RotationY',
              ( ['in'], c_float, 'prop' )),
    COMMETHOD([dispid(111), 'propget'], HRESULT, 'Visible',
              ( ['out', 'retval'], POINTER(comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoTriState), 'prop' )),
    COMMETHOD([dispid(111), 'propput'], HRESULT, 'Visible',
              ( ['in'], comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoTriState, 'prop' )),
    COMMETHOD([dispid(10)], HRESULT, 'IncrementRotationX',
              ( ['in'], c_float, 'Increment' )),
    COMMETHOD([dispid(11)], HRESULT, 'IncrementRotationY',
              ( ['in'], c_float, 'Increment' )),
    COMMETHOD([dispid(12)], HRESULT, 'ResetRotation'),
    COMMETHOD([dispid(14)], HRESULT, 'SetExtrusionDirection',
              ( ['in'], comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoPresetExtrusionDirection, 'PresetExtrusionDirection' )),
    COMMETHOD([dispid(13)], HRESULT, 'SetThreeDFormat',
              ( ['in'], comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoPresetThreeDFormat, 'PresetThreeDFormat' )),
    COMMETHOD([dispid(15)], HRESULT, 'SetPresetCamera',
              ( ['in'], comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoPresetCamera, 'PresetCamera' )),
    COMMETHOD([dispid(16)], HRESULT, 'IncrementRotationZ',
              ( ['in'], c_float, 'Increment' )),
    COMMETHOD([dispid(17)], HRESULT, 'IncrementRotationHorizontal',
              ( ['in'], c_float, 'Increment' )),
    COMMETHOD([dispid(18)], HRESULT, 'IncrementRotationVertical',
              ( ['in'], c_float, 'Increment' )),
    COMMETHOD([dispid(112), 'propget'], HRESULT, 'PresetLighting',
              ( ['out', 'retval'], POINTER(comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoLightRigType), 'prop' )),
    COMMETHOD([dispid(112), 'propput'], HRESULT, 'PresetLighting',
              ( ['in'], comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoLightRigType, 'prop' )),
    COMMETHOD([dispid(113), 'propget'], HRESULT, 'Z',
              ( ['out', 'retval'], POINTER(c_float), 'prop' )),
    COMMETHOD([dispid(113), 'propput'], HRESULT, 'Z',
              ( ['in'], c_float, 'prop' )),
    COMMETHOD([dispid(114), 'propget'], HRESULT, 'BevelTopType',
              ( ['out', 'retval'], POINTER(comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoBevelType), 'prop' )),
    COMMETHOD([dispid(114), 'propput'], HRESULT, 'BevelTopType',
              ( ['in'], comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoBevelType, 'prop' )),
    COMMETHOD([dispid(115), 'propget'], HRESULT, 'BevelTopInset',
              ( ['out', 'retval'], POINTER(c_float), 'prop' )),
    COMMETHOD([dispid(115), 'propput'], HRESULT, 'BevelTopInset',
              ( ['in'], c_float, 'prop' )),
    COMMETHOD([dispid(116), 'propget'], HRESULT, 'BevelTopDepth',
              ( ['out', 'retval'], POINTER(c_float), 'prop' )),
    COMMETHOD([dispid(116), 'propput'], HRESULT, 'BevelTopDepth',
              ( ['in'], c_float, 'prop' )),
    COMMETHOD([dispid(117), 'propget'], HRESULT, 'BevelBottomType',
              ( ['out', 'retval'], POINTER(comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoBevelType), 'prop' )),
    COMMETHOD([dispid(117), 'propput'], HRESULT, 'BevelBottomType',
              ( ['in'], comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoBevelType, 'prop' )),
    COMMETHOD([dispid(118), 'propget'], HRESULT, 'BevelBottomInset',
              ( ['out', 'retval'], POINTER(c_float), 'prop' )),
    COMMETHOD([dispid(118), 'propput'], HRESULT, 'BevelBottomInset',
              ( ['in'], c_float, 'prop' )),
    COMMETHOD([dispid(119), 'propget'], HRESULT, 'BevelBottomDepth',
              ( ['out', 'retval'], POINTER(c_float), 'prop' )),
    COMMETHOD([dispid(119), 'propput'], HRESULT, 'BevelBottomDepth',
              ( ['in'], c_float, 'prop' )),
    COMMETHOD([dispid(120), 'propget'], HRESULT, 'PresetCamera',
              ( ['out', 'retval'], POINTER(comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoPresetCamera), 'prop' )),
    COMMETHOD([dispid(121), 'propget'], HRESULT, 'RotationZ',
              ( ['out', 'retval'], POINTER(c_float), 'prop' )),
    COMMETHOD([dispid(121), 'propput'], HRESULT, 'RotationZ',
              ( ['in'], c_float, 'prop' )),
    COMMETHOD([dispid(122), 'propget'], HRESULT, 'ContourWidth',
              ( ['out', 'retval'], POINTER(c_float), 'prop' )),
    COMMETHOD([dispid(122), 'propput'], HRESULT, 'ContourWidth',
              ( ['in'], c_float, 'prop' )),
    COMMETHOD([dispid(123), 'propget'], HRESULT, 'ContourColor',
              ( ['out', 'retval'], POINTER(POINTER(ColorFormat)), 'prop' )),
    COMMETHOD([dispid(124), 'propget'], HRESULT, 'FieldOfView',
              ( ['out', 'retval'], POINTER(c_float), 'prop' )),
    COMMETHOD([dispid(124), 'propput'], HRESULT, 'FieldOfView',
              ( ['in'], c_float, 'prop' )),
    COMMETHOD([dispid(125), 'propget'], HRESULT, 'ProjectText',
              ( ['out', 'retval'], POINTER(comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoTriState), 'prop' )),
    COMMETHOD([dispid(125), 'propput'], HRESULT, 'ProjectText',
              ( ['in'], comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoTriState, 'prop' )),
    COMMETHOD([dispid(126), 'propget'], HRESULT, 'LightAngle',
              ( ['out', 'retval'], POINTER(c_float), 'prop' )),
    COMMETHOD([dispid(126), 'propput'], HRESULT, 'LightAngle',
              ( ['in'], c_float, 'prop' )),
]
################################################################
## code template for ThreeDFormat implementation
##class ThreeDFormat_Impl(object):
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Creator(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return prop
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    Depth = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def ExtrusionColor(self):
##        '-no docstring-'
##        #return prop
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    ExtrusionColorType = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    Perspective = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def PresetExtrusionDirection(self):
##        '-no docstring-'
##        #return prop
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    PresetLightingDirection = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    PresetLightingSoftness = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    PresetMaterial = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def PresetThreeDFormat(self):
##        '-no docstring-'
##        #return prop
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    RotationX = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    RotationY = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    Visible = property(_get, _set, doc = _set.__doc__)
##
##    def IncrementRotationX(self, Increment):
##        '-no docstring-'
##        #return 
##
##    def IncrementRotationY(self, Increment):
##        '-no docstring-'
##        #return 
##
##    def ResetRotation(self):
##        '-no docstring-'
##        #return 
##
##    def SetExtrusionDirection(self, PresetExtrusionDirection):
##        '-no docstring-'
##        #return 
##
##    def SetThreeDFormat(self, PresetThreeDFormat):
##        '-no docstring-'
##        #return 
##
##    def SetPresetCamera(self, PresetCamera):
##        '-no docstring-'
##        #return 
##
##    def IncrementRotationZ(self, Increment):
##        '-no docstring-'
##        #return 
##
##    def IncrementRotationHorizontal(self, Increment):
##        '-no docstring-'
##        #return 
##
##    def IncrementRotationVertical(self, Increment):
##        '-no docstring-'
##        #return 
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    PresetLighting = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    Z = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    BevelTopType = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    BevelTopInset = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    BevelTopDepth = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    BevelBottomType = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    BevelBottomInset = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    BevelBottomDepth = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def PresetCamera(self):
##        '-no docstring-'
##        #return prop
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    RotationZ = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    ContourWidth = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def ContourColor(self):
##        '-no docstring-'
##        #return prop
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    FieldOfView = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    ProjectText = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    LightAngle = property(_get, _set, doc = _set.__doc__)
##


# values for enumeration 'WdSpecialPane'
wdPaneNone = 0
wdPanePrimaryHeader = 1
wdPaneFirstPageHeader = 2
wdPaneEvenPagesHeader = 3
wdPanePrimaryFooter = 4
wdPaneFirstPageFooter = 5
wdPaneEvenPagesFooter = 6
wdPaneFootnotes = 7
wdPaneEndnotes = 8
wdPaneFootnoteContinuationNotice = 9
wdPaneFootnoteContinuationSeparator = 10
wdPaneFootnoteSeparator = 11
wdPaneEndnoteContinuationNotice = 12
wdPaneEndnoteContinuationSeparator = 13
wdPaneEndnoteSeparator = 14
wdPaneComments = 15
wdPaneCurrentPageHeader = 16
wdPaneCurrentPageFooter = 17
wdPaneRevisions = 18
wdPaneRevisionsHoriz = 19
wdPaneRevisionsVert = 20
WdSpecialPane = c_int # enum
class ShapeNode(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{000209CD-0000-0000-C000-000000000046}')
    _idlflags_ = ['dual', 'nonextensible', 'oleautomation']
ShapeNodes._methods_ = [
    COMMETHOD([dispid(1000), 'propget'], HRESULT, 'Application',
              ( ['out', 'retval'], POINTER(POINTER(Application)), 'prop' )),
    COMMETHOD([dispid(1001), 'propget'], HRESULT, 'Creator',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(1), 'propget'], HRESULT, 'Parent',
              ( ['out', 'retval'], POINTER(POINTER(IDispatch)), 'prop' )),
    COMMETHOD([dispid(2), 'propget'], HRESULT, 'Count',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(-4), 'nonbrowsable', 'propget'], HRESULT, '_NewEnum',
              ( ['out', 'retval'], POINTER(POINTER(IUnknown)), 'prop' )),
    COMMETHOD([dispid(11)], HRESULT, 'Delete',
              ( ['in'], c_int, 'Index' )),
    COMMETHOD([dispid(0)], HRESULT, 'Item',
              ( ['in'], POINTER(VARIANT), 'Index' ),
              ( ['out', 'retval'], POINTER(POINTER(ShapeNode)), 'prop' )),
    COMMETHOD([dispid(13)], HRESULT, 'SetEditingType',
              ( ['in'], c_int, 'Index' ),
              ( ['in'], comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoEditingType, 'EditingType' )),
    COMMETHOD([dispid(14)], HRESULT, 'SetPosition',
              ( ['in'], c_int, 'Index' ),
              ( ['in'], c_float, 'X1' ),
              ( ['in'], c_float, 'Y1' )),
    COMMETHOD([dispid(15)], HRESULT, 'SetSegmentType',
              ( ['in'], c_int, 'Index' ),
              ( ['in'], comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoSegmentType, 'SegmentType' )),
    COMMETHOD([dispid(12)], HRESULT, 'Insert',
              ( ['in'], c_int, 'Index' ),
              ( ['in'], comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoSegmentType, 'SegmentType' ),
              ( ['in'], comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoEditingType, 'EditingType' ),
              ( ['in'], c_float, 'X1' ),
              ( ['in'], c_float, 'Y1' ),
              ( ['in', 'optional'], c_float, 'X2', 0.0 ),
              ( ['in', 'optional'], c_float, 'Y2', 0.0 ),
              ( ['in', 'optional'], c_float, 'X3', 0.0 ),
              ( ['in', 'optional'], c_float, 'Y3', 0.0 )),
]
################################################################
## code template for ShapeNodes implementation
##class ShapeNodes_Impl(object):
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Creator(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Count(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def _NewEnum(self):
##        '-no docstring-'
##        #return prop
##
##    def Delete(self, Index):
##        '-no docstring-'
##        #return 
##
##    def Item(self, Index):
##        '-no docstring-'
##        #return prop
##
##    def SetEditingType(self, Index, EditingType):
##        '-no docstring-'
##        #return 
##
##    def SetPosition(self, Index, X1, Y1):
##        '-no docstring-'
##        #return 
##
##    def SetSegmentType(self, Index, SegmentType):
##        '-no docstring-'
##        #return 
##
##    def Insert(self, Index, SegmentType, EditingType, X1, Y1, X2, Y2, X3, Y3):
##        '-no docstring-'
##        #return 
##


# values for enumeration 'WdSeekView'
wdSeekMainDocument = 0
wdSeekPrimaryHeader = 1
wdSeekFirstPageHeader = 2
wdSeekEvenPagesHeader = 3
wdSeekPrimaryFooter = 4
wdSeekFirstPageFooter = 5
wdSeekEvenPagesFooter = 6
wdSeekFootnotes = 7
wdSeekEndnotes = 8
wdSeekCurrentPageHeader = 9
wdSeekCurrentPageFooter = 10
WdSeekView = c_int # enum

# values for enumeration 'WdWrapSideType'
wdWrapBoth = 0
wdWrapLeft = 1
wdWrapRight = 2
wdWrapLargest = 3
WdWrapSideType = c_int # enum
class Font(CoClass):
    _reg_clsid_ = GUID('{000209F5-0000-0000-C000-000000000046}')
    _idlflags_ = []
    _typelib_path_ = typelib_path
    _reg_typelib_ = ('{00020905-0000-0000-C000-000000000046}', 8, 7)
class _Font(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{00020952-0000-0000-C000-000000000046}')
    _idlflags_ = ['hidden', 'dual', 'nonextensible', 'oleautomation']
Font._com_interfaces_ = [_Font]

class Cells(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{0002094A-0000-0000-C000-000000000046}')
    _idlflags_ = ['dual', 'nonextensible', 'oleautomation']
class TextRetrievalMode(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{00020939-0000-0000-C000-000000000046}')
    _idlflags_ = ['dual', 'nonextensible', 'oleautomation']
class ParagraphFormat(CoClass):
    _reg_clsid_ = GUID('{000209F4-0000-0000-C000-000000000046}')
    _idlflags_ = []
    _typelib_path_ = typelib_path
    _reg_typelib_ = ('{00020905-0000-0000-C000-000000000046}', 8, 7)
class _ParagraphFormat(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{00020953-0000-0000-C000-000000000046}')
    _idlflags_ = ['hidden', 'dual', 'nonextensible', 'oleautomation']
ParagraphFormat._com_interfaces_ = [_ParagraphFormat]

class ListFormat(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{000209C0-0000-0000-C000-000000000046}')
    _idlflags_ = ['dual', 'nonextensible', 'oleautomation']

# values for enumeration 'WdUnderline'
wdUnderlineNone = 0
wdUnderlineSingle = 1
wdUnderlineWords = 2
wdUnderlineDouble = 3
wdUnderlineDotted = 4
wdUnderlineThick = 6
wdUnderlineDash = 7
wdUnderlineDotDash = 9
wdUnderlineDotDotDash = 10
wdUnderlineWavy = 11
wdUnderlineWavyHeavy = 27
wdUnderlineDottedHeavy = 20
wdUnderlineDashHeavy = 23
wdUnderlineDotDashHeavy = 25
wdUnderlineDotDotDashHeavy = 26
wdUnderlineDashLong = 39
wdUnderlineDashLongHeavy = 55
wdUnderlineWavyDouble = 43
WdUnderline = c_int # enum

# values for enumeration 'WdEmphasisMark'
wdEmphasisMarkNone = 0
wdEmphasisMarkOverSolidCircle = 1
wdEmphasisMarkOverComma = 2
wdEmphasisMarkOverWhiteCircle = 3
wdEmphasisMarkUnderSolidCircle = 4
WdEmphasisMark = c_int # enum
class Rows(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{0002094C-0000-0000-C000-000000000046}')
    _idlflags_ = ['dual', 'nonextensible', 'oleautomation']
class Find(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{000209B0-0000-0000-C000-000000000046}')
    _idlflags_ = ['dual', 'nonextensible', 'oleautomation']

# values for enumeration 'WdCharacterCase'
wdNextCase = -1
wdLowerCase = 0
wdUpperCase = 1
wdTitleWord = 2
wdTitleSentence = 4
wdToggleCase = 5
wdHalfWidth = 6
wdFullWidth = 7
wdKatakana = 8
wdHiragana = 9
WdCharacterCase = c_int # enum

# values for enumeration 'WdInformation'
wdActiveEndAdjustedPageNumber = 1
wdActiveEndSectionNumber = 2
wdActiveEndPageNumber = 3
wdNumberOfPagesInDocument = 4
wdHorizontalPositionRelativeToPage = 5
wdVerticalPositionRelativeToPage = 6
wdHorizontalPositionRelativeToTextBoundary = 7
wdVerticalPositionRelativeToTextBoundary = 8
wdFirstCharacterColumnNumber = 9
wdFirstCharacterLineNumber = 10
wdFrameIsSelected = 11
wdWithInTable = 12
wdStartOfRangeRowNumber = 13
wdEndOfRangeRowNumber = 14
wdMaximumNumberOfRows = 15
wdStartOfRangeColumnNumber = 16
wdEndOfRangeColumnNumber = 17
wdMaximumNumberOfColumns = 18
wdZoomPercentage = 19
wdSelectionMode = 20
wdCapsLock = 21
wdNumLock = 22
wdOverType = 23
wdRevisionMarking = 24
wdInFootnoteEndnotePane = 25
wdInCommentPane = 26
wdInHeaderFooter = 28
wdAtEndOfRowMarker = 31
wdReferenceOfType = 32
wdHeaderFooterType = 33
wdInMasterDocument = 34
wdInFootnote = 35
wdInEndnote = 36
wdInWordMail = 37
wdInClipboard = 38
wdInCoverPage = 41
wdInBibliography = 42
wdInCitation = 43
wdInFieldCode = 44
wdInFieldResult = 45
wdInContentControl = 46
WdInformation = c_int # enum

# values for enumeration 'WdTextOrientation'
wdTextOrientationHorizontal = 0
wdTextOrientationUpward = 2
wdTextOrientationDownward = 3
wdTextOrientationVerticalFarEast = 1
wdTextOrientationHorizontalRotatedFarEast = 4
wdTextOrientationVertical = 5
WdTextOrientation = c_int # enum
class Table(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{00020951-0000-0000-C000-000000000046}')
    _idlflags_ = ['dual', 'nonextensible', 'oleautomation']

# values for enumeration 'WdReferenceKind'
wdContentText = -1
wdNumberRelativeContext = -2
wdNumberNoContext = -3
wdNumberFullContext = -4
wdEntireCaption = 2
wdOnlyLabelAndNumber = 3
wdOnlyCaptionText = 4
wdFootnoteNumber = 5
wdEndnoteNumber = 6
wdPageNumber = 7
wdPosition = 15
wdFootnoteNumberFormatted = 16
wdEndnoteNumberFormatted = 17
WdReferenceKind = c_int # enum

# values for enumeration 'WdGoToItem'
wdGoToBookmark = -1
wdGoToSection = 0
wdGoToPage = 1
wdGoToTable = 2
wdGoToLine = 3
wdGoToFootnote = 4
wdGoToEndnote = 5
wdGoToComment = 6
wdGoToField = 7
wdGoToGraphic = 8
wdGoToObject = 9
wdGoToEquation = 10
wdGoToHeading = 11
wdGoToPercent = 12
wdGoToSpellingError = 13
wdGoToGrammaticalError = 14
wdGoToProofreadingError = 15
WdGoToItem = c_int # enum

# values for enumeration 'WdPhoneticGuideAlignmentType'
wdPhoneticGuideAlignmentCenter = 0
wdPhoneticGuideAlignmentZeroOneZero = 1
wdPhoneticGuideAlignmentOneTwoOne = 2
wdPhoneticGuideAlignmentLeft = 3
wdPhoneticGuideAlignmentRight = 4
wdPhoneticGuideAlignmentRightVertical = 5
WdPhoneticGuideAlignmentType = c_int # enum

# values for enumeration 'WdHorizontalInVerticalType'
wdHorizontalInVerticalNone = 0
wdHorizontalInVerticalFitInLine = 1
wdHorizontalInVerticalResizeLine = 2
WdHorizontalInVerticalType = c_int # enum

# values for enumeration 'WdTwoLinesInOneType'
wdTwoLinesInOneNone = 0
wdTwoLinesInOneNoBrackets = 1
wdTwoLinesInOneParentheses = 2
wdTwoLinesInOneSquareBrackets = 3
wdTwoLinesInOneAngleBrackets = 4
wdTwoLinesInOneCurlyBrackets = 5
WdTwoLinesInOneType = c_int # enum

# values for enumeration 'WdCharacterWidth'
wdWidthHalfWidth = 6
wdWidthFullWidth = 7
WdCharacterWidth = c_int # enum

# values for enumeration 'WdKana'
wdKanaKatakana = 8
wdKanaHiragana = 9
WdKana = c_int # enum
class FootnoteOptions(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{BEA85A24-D7DA-4F3D-B58C-ED90FB01D615}')
    _idlflags_ = ['dual', 'nonextensible', 'oleautomation']
class EndnoteOptions(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{BF043168-F4DE-4E7C-B206-741A8B3EF71A}')
    _idlflags_ = ['dual', 'nonextensible', 'oleautomation']

# values for enumeration 'WdRecoveryType'
wdPasteDefault = 0
wdSingleCellText = 5
wdSingleCellTable = 6
wdListContinueNumbering = 7
wdListRestartNumbering = 8
wdTableInsertAsRows = 11
wdTableAppendTable = 10
wdTableOriginalFormatting = 12
wdChartPicture = 13
wdChart = 14
wdChartLinked = 15
wdFormatOriginalFormatting = 16
wdFormatSurroundingFormattingWithEmphasis = 20
wdFormatPlainText = 22
wdTableOverwriteCells = 23
wdListCombineWithExistingList = 24
wdListDontMerge = 25
wdUseDestinationStylesRecovery = 19
WdRecoveryType = c_int # enum
class Editors(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{AED7E08C-14F0-4F33-921D-4C5353137BF6}')
    _idlflags_ = ['dual', 'nonextensible', 'oleautomation']

# values for enumeration 'WdSaveFormat'
wdFormatDocument = 0
wdFormatDocument97 = 0
wdFormatTemplate = 1
wdFormatTemplate97 = 1
wdFormatText = 2
wdFormatTextLineBreaks = 3
wdFormatDOSText = 4
wdFormatDOSTextLineBreaks = 5
wdFormatRTF = 6
wdFormatUnicodeText = 7
wdFormatEncodedText = 7
wdFormatHTML = 8
wdFormatWebArchive = 9
wdFormatFilteredHTML = 10
wdFormatXML = 11
wdFormatXMLDocument = 12
wdFormatXMLDocumentMacroEnabled = 13
wdFormatXMLTemplate = 14
wdFormatXMLTemplateMacroEnabled = 15
wdFormatDocumentDefault = 16
wdFormatPDF = 17
wdFormatXPS = 18
wdFormatFlatXML = 19
wdFormatFlatXMLMacroEnabled = 20
wdFormatFlatXMLTemplate = 21
wdFormatFlatXMLTemplateMacroEnabled = 22
wdFormatOpenDocumentText = 23
wdFormatStrictOpenXMLDocument = 24
WdSaveFormat = c_int # enum
Range._methods_ = [
    COMMETHOD([dispid(0), 'propget'], HRESULT, 'Text',
              ( ['out', 'retval'], POINTER(BSTR), 'prop' )),
    COMMETHOD([dispid(0), 'propput'], HRESULT, 'Text',
              ( ['in'], BSTR, 'prop' )),
    COMMETHOD([dispid(2), 'propget'], HRESULT, 'FormattedText',
              ( ['out', 'retval'], POINTER(POINTER(Range)), 'prop' )),
    COMMETHOD([dispid(2), 'propput'], HRESULT, 'FormattedText',
              ( ['in'], POINTER(Range), 'prop' )),
    COMMETHOD([dispid(3), 'propget'], HRESULT, 'Start',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(3), 'propput'], HRESULT, 'Start',
              ( ['in'], c_int, 'prop' )),
    COMMETHOD([dispid(4), 'propget'], HRESULT, 'End',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(4), 'propput'], HRESULT, 'End',
              ( ['in'], c_int, 'prop' )),
    COMMETHOD([dispid(5), 'propget'], HRESULT, 'Font',
              ( ['out', 'retval'], POINTER(POINTER(Font)), 'prop' )),
    COMMETHOD([dispid(5), 'propput'], HRESULT, 'Font',
              ( ['in'], POINTER(Font), 'prop' )),
    COMMETHOD([dispid(6), 'propget'], HRESULT, 'Duplicate',
              ( ['out', 'retval'], POINTER(POINTER(Range)), 'prop' )),
    COMMETHOD([dispid(7), 'propget'], HRESULT, 'StoryType',
              ( ['out', 'retval'], POINTER(WdStoryType), 'prop' )),
    COMMETHOD([dispid(50), 'propget'], HRESULT, 'Tables',
              ( ['out', 'retval'], POINTER(POINTER(Tables)), 'prop' )),
    COMMETHOD([dispid(51), 'propget'], HRESULT, 'Words',
              ( ['out', 'retval'], POINTER(POINTER(Words)), 'prop' )),
    COMMETHOD([dispid(52), 'propget'], HRESULT, 'Sentences',
              ( ['out', 'retval'], POINTER(POINTER(Sentences)), 'prop' )),
    COMMETHOD([dispid(53), 'propget'], HRESULT, 'Characters',
              ( ['out', 'retval'], POINTER(POINTER(Characters)), 'prop' )),
    COMMETHOD([dispid(54), 'propget'], HRESULT, 'Footnotes',
              ( ['out', 'retval'], POINTER(POINTER(Footnotes)), 'prop' )),
    COMMETHOD([dispid(55), 'propget'], HRESULT, 'Endnotes',
              ( ['out', 'retval'], POINTER(POINTER(Endnotes)), 'prop' )),
    COMMETHOD([dispid(56), 'propget'], HRESULT, 'Comments',
              ( ['out', 'retval'], POINTER(POINTER(Comments)), 'prop' )),
    COMMETHOD([dispid(57), 'propget'], HRESULT, 'Cells',
              ( ['out', 'retval'], POINTER(POINTER(Cells)), 'prop' )),
    COMMETHOD([dispid(58), 'propget'], HRESULT, 'Sections',
              ( ['out', 'retval'], POINTER(POINTER(Sections)), 'prop' )),
    COMMETHOD([dispid(59), 'propget'], HRESULT, 'Paragraphs',
              ( ['out', 'retval'], POINTER(POINTER(Paragraphs)), 'prop' )),
    COMMETHOD([dispid(1100), 'propget'], HRESULT, 'Borders',
              ( ['out', 'retval'], POINTER(POINTER(Borders)), 'prop' )),
    COMMETHOD([dispid(1100), 'propput'], HRESULT, 'Borders',
              ( ['in'], POINTER(Borders), 'prop' )),
    COMMETHOD([dispid(61), 'propget'], HRESULT, 'Shading',
              ( ['out', 'retval'], POINTER(POINTER(Shading)), 'prop' )),
    COMMETHOD([dispid(62), 'propget'], HRESULT, 'TextRetrievalMode',
              ( ['out', 'retval'], POINTER(POINTER(TextRetrievalMode)), 'prop' )),
    COMMETHOD([dispid(62), 'propput'], HRESULT, 'TextRetrievalMode',
              ( ['in'], POINTER(TextRetrievalMode), 'prop' )),
    COMMETHOD([dispid(64), 'propget'], HRESULT, 'Fields',
              ( ['out', 'retval'], POINTER(POINTER(Fields)), 'prop' )),
    COMMETHOD([dispid(65), 'propget'], HRESULT, 'FormFields',
              ( ['out', 'retval'], POINTER(POINTER(FormFields)), 'prop' )),
    COMMETHOD([dispid(66), 'propget'], HRESULT, 'Frames',
              ( ['out', 'retval'], POINTER(POINTER(Frames)), 'prop' )),
    COMMETHOD([dispid(1102), 'propget'], HRESULT, 'ParagraphFormat',
              ( ['out', 'retval'], POINTER(POINTER(ParagraphFormat)), 'prop' )),
    COMMETHOD([dispid(1102), 'propput'], HRESULT, 'ParagraphFormat',
              ( ['in'], POINTER(ParagraphFormat), 'prop' )),
    COMMETHOD([dispid(68), 'propget'], HRESULT, 'ListFormat',
              ( ['out', 'retval'], POINTER(POINTER(ListFormat)), 'prop' )),
    COMMETHOD([dispid(75), 'propget'], HRESULT, 'Bookmarks',
              ( ['out', 'retval'], POINTER(POINTER(Bookmarks)), 'prop' )),
    COMMETHOD([dispid(1000), 'propget'], HRESULT, 'Application',
              ( ['out', 'retval'], POINTER(POINTER(Application)), 'prop' )),
    COMMETHOD([dispid(1001), 'propget'], HRESULT, 'Creator',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(1002), 'propget'], HRESULT, 'Parent',
              ( ['out', 'retval'], POINTER(POINTER(IDispatch)), 'prop' )),
    COMMETHOD([dispid(130), 'propget'], HRESULT, 'Bold',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(130), 'propput'], HRESULT, 'Bold',
              ( ['in'], c_int, 'prop' )),
    COMMETHOD([dispid(131), 'propget'], HRESULT, 'Italic',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(131), 'propput'], HRESULT, 'Italic',
              ( ['in'], c_int, 'prop' )),
    COMMETHOD([dispid(139), 'propget'], HRESULT, 'Underline',
              ( ['out', 'retval'], POINTER(WdUnderline), 'prop' )),
    COMMETHOD([dispid(139), 'propput'], HRESULT, 'Underline',
              ( ['in'], WdUnderline, 'prop' )),
    COMMETHOD([dispid(140), 'propget'], HRESULT, 'EmphasisMark',
              ( ['out', 'retval'], POINTER(WdEmphasisMark), 'prop' )),
    COMMETHOD([dispid(140), 'propput'], HRESULT, 'EmphasisMark',
              ( ['in'], WdEmphasisMark, 'prop' )),
    COMMETHOD([dispid(141), 'propget'], HRESULT, 'DisableCharacterSpaceGrid',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'prop' )),
    COMMETHOD([dispid(141), 'propput'], HRESULT, 'DisableCharacterSpaceGrid',
              ( ['in'], VARIANT_BOOL, 'prop' )),
    COMMETHOD([dispid(150), 'propget'], HRESULT, 'Revisions',
              ( ['out', 'retval'], POINTER(POINTER(Revisions)), 'prop' )),
    COMMETHOD([dispid(151), 'propget'], HRESULT, 'Style',
              ( ['out', 'retval'], POINTER(VARIANT), 'prop' )),
    COMMETHOD([dispid(151), 'propput'], HRESULT, 'Style',
              ( ['in'], POINTER(VARIANT), 'prop' )),
    COMMETHOD([dispid(152), 'propget'], HRESULT, 'StoryLength',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(153), 'propget'], HRESULT, 'LanguageID',
              ( ['out', 'retval'], POINTER(WdLanguageID), 'prop' )),
    COMMETHOD([dispid(153), 'propput'], HRESULT, 'LanguageID',
              ( ['in'], WdLanguageID, 'prop' )),
    COMMETHOD([dispid(155), 'propget'], HRESULT, 'SynonymInfo',
              ( ['out', 'retval'], POINTER(POINTER(SynonymInfo)), 'prop' )),
    COMMETHOD([dispid(156), 'propget'], HRESULT, 'Hyperlinks',
              ( ['out', 'retval'], POINTER(POINTER(Hyperlinks)), 'prop' )),
    COMMETHOD([dispid(157), 'propget'], HRESULT, 'ListParagraphs',
              ( ['out', 'retval'], POINTER(POINTER(ListParagraphs)), 'prop' )),
    COMMETHOD([dispid(159), 'propget'], HRESULT, 'Subdocuments',
              ( ['out', 'retval'], POINTER(POINTER(Subdocuments)), 'prop' )),
    COMMETHOD([dispid(260), 'propget'], HRESULT, 'GrammarChecked',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'prop' )),
    COMMETHOD([dispid(260), 'propput'], HRESULT, 'GrammarChecked',
              ( ['in'], VARIANT_BOOL, 'prop' )),
    COMMETHOD([dispid(261), 'propget'], HRESULT, 'SpellingChecked',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'prop' )),
    COMMETHOD([dispid(261), 'propput'], HRESULT, 'SpellingChecked',
              ( ['in'], VARIANT_BOOL, 'prop' )),
    COMMETHOD([dispid(301), 'propget'], HRESULT, 'HighlightColorIndex',
              ( ['out', 'retval'], POINTER(WdColorIndex), 'prop' )),
    COMMETHOD([dispid(301), 'propput'], HRESULT, 'HighlightColorIndex',
              ( ['in'], WdColorIndex, 'prop' )),
    COMMETHOD([dispid(302), 'propget'], HRESULT, 'Columns',
              ( ['out', 'retval'], POINTER(POINTER(Columns)), 'prop' )),
    COMMETHOD([dispid(303), 'propget'], HRESULT, 'Rows',
              ( ['out', 'retval'], POINTER(POINTER(Rows)), 'prop' )),
    COMMETHOD([dispid(304), 'hidden', 'propget'], HRESULT, 'CanEdit',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(305), 'hidden', 'propget'], HRESULT, 'CanPaste',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(307), 'propget'], HRESULT, 'IsEndOfRowMark',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'prop' )),
    COMMETHOD([dispid(308), 'propget'], HRESULT, 'BookmarkID',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(309), 'propget'], HRESULT, 'PreviousBookmarkID',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(262), 'propget'], HRESULT, 'Find',
              ( ['out', 'retval'], POINTER(POINTER(Find)), 'prop' )),
    COMMETHOD([dispid(1101), 'propget'], HRESULT, 'PageSetup',
              ( ['out', 'retval'], POINTER(POINTER(PageSetup)), 'prop' )),
    COMMETHOD([dispid(1101), 'propput'], HRESULT, 'PageSetup',
              ( ['in'], POINTER(PageSetup), 'prop' )),
    COMMETHOD([dispid(311), 'propget'], HRESULT, 'ShapeRange',
              ( ['out', 'retval'], POINTER(POINTER(ShapeRange)), 'prop' )),
    COMMETHOD([dispid(312), 'propget'], HRESULT, 'Case',
              ( ['out', 'retval'], POINTER(WdCharacterCase), 'prop' )),
    COMMETHOD([dispid(312), 'propput'], HRESULT, 'Case',
              ( ['in'], WdCharacterCase, 'prop' )),
    COMMETHOD([dispid(313), 'propget'], HRESULT, 'Information',
              ( ['in'], WdInformation, 'Type' ),
              ( ['out', 'retval'], POINTER(VARIANT), 'prop' )),
    COMMETHOD([dispid(314), 'propget'], HRESULT, 'ReadabilityStatistics',
              ( ['out', 'retval'], POINTER(POINTER(ReadabilityStatistics)), 'prop' )),
    COMMETHOD([dispid(315), 'propget'], HRESULT, 'GrammaticalErrors',
              ( ['out', 'retval'], POINTER(POINTER(ProofreadingErrors)), 'prop' )),
    COMMETHOD([dispid(316), 'propget'], HRESULT, 'SpellingErrors',
              ( ['out', 'retval'], POINTER(POINTER(ProofreadingErrors)), 'prop' )),
    COMMETHOD([dispid(317), 'propget'], HRESULT, 'Orientation',
              ( ['out', 'retval'], POINTER(WdTextOrientation), 'prop' )),
    COMMETHOD([dispid(317), 'propput'], HRESULT, 'Orientation',
              ( ['in'], WdTextOrientation, 'prop' )),
    COMMETHOD([dispid(319), 'propget'], HRESULT, 'InlineShapes',
              ( ['out', 'retval'], POINTER(POINTER(InlineShapes)), 'prop' )),
    COMMETHOD([dispid(320), 'propget'], HRESULT, 'NextStoryRange',
              ( ['out', 'retval'], POINTER(POINTER(Range)), 'prop' )),
    COMMETHOD([dispid(321), 'propget'], HRESULT, 'LanguageIDFarEast',
              ( ['out', 'retval'], POINTER(WdLanguageID), 'prop' )),
    COMMETHOD([dispid(321), 'propput'], HRESULT, 'LanguageIDFarEast',
              ( ['in'], WdLanguageID, 'prop' )),
    COMMETHOD([dispid(322), 'propget'], HRESULT, 'LanguageIDOther',
              ( ['out', 'retval'], POINTER(WdLanguageID), 'prop' )),
    COMMETHOD([dispid(322), 'propput'], HRESULT, 'LanguageIDOther',
              ( ['in'], WdLanguageID, 'prop' )),
    COMMETHOD([dispid(65535)], HRESULT, 'Select'),
    COMMETHOD([dispid(100)], HRESULT, 'SetRange',
              ( ['in'], c_int, 'Start' ),
              ( ['in'], c_int, 'End' )),
    COMMETHOD([dispid(101)], HRESULT, 'Collapse',
              ( ['in', 'optional'], POINTER(VARIANT), 'Direction' )),
    COMMETHOD([dispid(102)], HRESULT, 'InsertBefore',
              ( ['in'], BSTR, 'Text' )),
    COMMETHOD([dispid(104)], HRESULT, 'InsertAfter',
              ( ['in'], BSTR, 'Text' )),
    COMMETHOD([dispid(105)], HRESULT, 'Next',
              ( ['in', 'optional'], POINTER(VARIANT), 'Unit' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'Count' ),
              ( ['out', 'retval'], POINTER(POINTER(Range)), 'prop' )),
    COMMETHOD([dispid(106)], HRESULT, 'Previous',
              ( ['in', 'optional'], POINTER(VARIANT), 'Unit' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'Count' ),
              ( ['out', 'retval'], POINTER(POINTER(Range)), 'prop' )),
    COMMETHOD([dispid(107)], HRESULT, 'StartOf',
              ( ['in', 'optional'], POINTER(VARIANT), 'Unit' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'Extend' ),
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(108)], HRESULT, 'EndOf',
              ( ['in', 'optional'], POINTER(VARIANT), 'Unit' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'Extend' ),
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(109)], HRESULT, 'Move',
              ( ['in', 'optional'], POINTER(VARIANT), 'Unit' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'Count' ),
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(110)], HRESULT, 'MoveStart',
              ( ['in', 'optional'], POINTER(VARIANT), 'Unit' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'Count' ),
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(111)], HRESULT, 'MoveEnd',
              ( ['in', 'optional'], POINTER(VARIANT), 'Unit' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'Count' ),
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(112)], HRESULT, 'MoveWhile',
              ( ['in'], POINTER(VARIANT), 'Cset' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'Count' ),
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(113)], HRESULT, 'MoveStartWhile',
              ( ['in'], POINTER(VARIANT), 'Cset' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'Count' ),
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(114)], HRESULT, 'MoveEndWhile',
              ( ['in'], POINTER(VARIANT), 'Cset' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'Count' ),
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(115)], HRESULT, 'MoveUntil',
              ( ['in'], POINTER(VARIANT), 'Cset' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'Count' ),
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(116)], HRESULT, 'MoveStartUntil',
              ( ['in'], POINTER(VARIANT), 'Cset' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'Count' ),
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(117)], HRESULT, 'MoveEndUntil',
              ( ['in'], POINTER(VARIANT), 'Cset' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'Count' ),
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(119)], HRESULT, 'Cut'),
    COMMETHOD([dispid(120)], HRESULT, 'Copy'),
    COMMETHOD([dispid(121)], HRESULT, 'Paste'),
    COMMETHOD([dispid(122)], HRESULT, 'InsertBreak',
              ( ['in', 'optional'], POINTER(VARIANT), 'Type' )),
    COMMETHOD([dispid(123)], HRESULT, 'InsertFile',
              ( ['in'], BSTR, 'FileName' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'Range' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'ConfirmConversions' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'Link' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'Attachment' )),
    COMMETHOD([dispid(125)], HRESULT, 'InStory',
              ( ['in'], POINTER(Range), 'Range' ),
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'prop' )),
    COMMETHOD([dispid(126)], HRESULT, 'InRange',
              ( ['in'], POINTER(Range), 'Range' ),
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'prop' )),
    COMMETHOD([dispid(127)], HRESULT, 'Delete',
              ( ['in', 'optional'], POINTER(VARIANT), 'Unit' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'Count' ),
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(128)], HRESULT, 'WholeStory'),
    COMMETHOD([dispid(129)], HRESULT, 'Expand',
              ( ['in', 'optional'], POINTER(VARIANT), 'Unit' ),
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(160)], HRESULT, 'InsertParagraph'),
    COMMETHOD([dispid(161)], HRESULT, 'InsertParagraphAfter'),
    COMMETHOD([dispid(162), 'hidden'], HRESULT, 'ConvertToTableOld',
              ( ['in', 'optional'], POINTER(VARIANT), 'Separator' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'NumRows' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'NumColumns' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'InitialColumnWidth' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'Format' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'ApplyBorders' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'ApplyShading' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'ApplyFont' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'ApplyColor' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'ApplyHeadingRows' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'ApplyLastRow' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'ApplyFirstColumn' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'ApplyLastColumn' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'AutoFit' ),
              ( ['out', 'retval'], POINTER(POINTER(Table)), 'prop' )),
    COMMETHOD([dispid(163), 'hidden'], HRESULT, 'InsertDateTimeOld',
              ( ['in', 'optional'], POINTER(VARIANT), 'DateTimeFormat' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'InsertAsField' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'InsertAsFullWidth' )),
    COMMETHOD([dispid(164)], HRESULT, 'InsertSymbol',
              ( ['in'], c_int, 'CharacterNumber' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'Font' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'Unicode' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'Bias' )),
    COMMETHOD([dispid(165), 'hidden'], HRESULT, 'InsertCrossReference_2002',
              ( ['in'], POINTER(VARIANT), 'ReferenceType' ),
              ( ['in'], WdReferenceKind, 'ReferenceKind' ),
              ( ['in'], POINTER(VARIANT), 'ReferenceItem' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'InsertAsHyperlink' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'IncludePosition' )),
    COMMETHOD([dispid(166), 'hidden'], HRESULT, 'InsertCaptionXP',
              ( ['in'], POINTER(VARIANT), 'Label' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'Title' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'TitleAutoText' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'Position' )),
    COMMETHOD([dispid(167)], HRESULT, 'CopyAsPicture'),
    COMMETHOD([dispid(168), 'hidden'], HRESULT, 'SortOld',
              ( ['in', 'optional'], POINTER(VARIANT), 'ExcludeHeader' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'FieldNumber' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'SortFieldType' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'SortOrder' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'FieldNumber2' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'SortFieldType2' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'SortOrder2' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'FieldNumber3' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'SortFieldType3' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'SortOrder3' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'SortColumn' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'Separator' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'CaseSensitive' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'LanguageID' )),
    COMMETHOD([dispid(169)], HRESULT, 'SortAscending'),
    COMMETHOD([dispid(170)], HRESULT, 'SortDescending'),
    COMMETHOD([dispid(171)], HRESULT, 'IsEqual',
              ( ['in'], POINTER(Range), 'Range' ),
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'prop' )),
    COMMETHOD([dispid(172)], HRESULT, 'Calculate',
              ( ['out', 'retval'], POINTER(c_float), 'prop' )),
    COMMETHOD([dispid(173)], HRESULT, 'GoTo',
              ( ['in', 'optional'], POINTER(VARIANT), 'What' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'Which' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'Count' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'Name' ),
              ( ['out', 'retval'], POINTER(POINTER(Range)), 'prop' )),
    COMMETHOD([dispid(174)], HRESULT, 'GoToNext',
              ( ['in'], WdGoToItem, 'What' ),
              ( ['out', 'retval'], POINTER(POINTER(Range)), 'prop' )),
    COMMETHOD([dispid(175)], HRESULT, 'GoToPrevious',
              ( ['in'], WdGoToItem, 'What' ),
              ( ['out', 'retval'], POINTER(POINTER(Range)), 'prop' )),
    COMMETHOD([dispid(176)], HRESULT, 'PasteSpecial',
              ( ['in', 'optional'], POINTER(VARIANT), 'IconIndex' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'Link' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'Placement' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'DisplayAsIcon' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'DataType' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'IconFileName' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'IconLabel' )),
    COMMETHOD([dispid(177)], HRESULT, 'LookupNameProperties'),
    COMMETHOD([dispid(178)], HRESULT, 'ComputeStatistics',
              ( ['in'], WdStatistic, 'Statistic' ),
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(179)], HRESULT, 'Relocate',
              ( ['in'], c_int, 'Direction' )),
    COMMETHOD([dispid(180)], HRESULT, 'CheckSynonyms'),
    COMMETHOD([dispid(181), 'hidden'], HRESULT, 'SubscribeTo',
              ( ['in'], BSTR, 'Edition' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'Format' )),
    COMMETHOD([dispid(182), 'hidden'], HRESULT, 'CreatePublisher',
              ( ['in', 'optional'], POINTER(VARIANT), 'Edition' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'ContainsPICT' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'ContainsRTF' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'ContainsText' )),
    COMMETHOD([dispid(183)], HRESULT, 'InsertAutoText'),
    COMMETHOD([dispid(194)], HRESULT, 'InsertDatabase',
              ( ['in', 'optional'], POINTER(VARIANT), 'Format' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'Style' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'LinkToSource' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'Connection' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'SQLStatement' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'SQLStatement1' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'PasswordDocument' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'PasswordTemplate' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'WritePasswordDocument' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'WritePasswordTemplate' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'DataSource' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'From' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'To' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'IncludeFields' )),
    COMMETHOD([dispid(195)], HRESULT, 'AutoFormat'),
    COMMETHOD([dispid(204)], HRESULT, 'CheckGrammar'),
    COMMETHOD([dispid(205)], HRESULT, 'CheckSpelling',
              ( ['in', 'optional'], POINTER(VARIANT), 'CustomDictionary' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'IgnoreUppercase' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'AlwaysSuggest' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'CustomDictionary2' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'CustomDictionary3' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'CustomDictionary4' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'CustomDictionary5' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'CustomDictionary6' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'CustomDictionary7' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'CustomDictionary8' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'CustomDictionary9' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'CustomDictionary10' )),
    COMMETHOD([dispid(209)], HRESULT, 'GetSpellingSuggestions',
              ( ['in', 'optional'], POINTER(VARIANT), 'CustomDictionary' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'IgnoreUppercase' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'MainDictionary' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'SuggestionMode' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'CustomDictionary2' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'CustomDictionary3' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'CustomDictionary4' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'CustomDictionary5' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'CustomDictionary6' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'CustomDictionary7' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'CustomDictionary8' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'CustomDictionary9' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'CustomDictionary10' ),
              ( ['out', 'retval'], POINTER(POINTER(SpellingSuggestions)), 'prop' )),
    COMMETHOD([dispid(212)], HRESULT, 'InsertParagraphBefore'),
    COMMETHOD([dispid(219)], HRESULT, 'NextSubdocument'),
    COMMETHOD([dispid(220)], HRESULT, 'PreviousSubdocument'),
    COMMETHOD([dispid(221)], HRESULT, 'ConvertHangulAndHanja',
              ( ['in', 'optional'], POINTER(VARIANT), 'ConversionsMode' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'FastConversion' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'CheckHangulEnding' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'EnableRecentOrdering' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'CustomDictionary' )),
    COMMETHOD([dispid(222)], HRESULT, 'PasteAsNestedTable'),
    COMMETHOD([dispid(223)], HRESULT, 'ModifyEnclosure',
              ( ['in'], POINTER(VARIANT), 'Style' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'Symbol' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'EnclosedText' )),
    COMMETHOD([dispid(224)], HRESULT, 'PhoneticGuide',
              ( ['in'], BSTR, 'Text' ),
              ( ['in', 'optional'], WdPhoneticGuideAlignmentType, 'Alignment', -1 ),
              ( ['in', 'optional'], c_int, 'Raise', 0 ),
              ( ['in', 'optional'], c_int, 'FontSize', 0 ),
              ( ['in', 'optional'], BSTR, 'FontName' )),
    COMMETHOD([dispid(444)], HRESULT, 'InsertDateTime',
              ( ['in', 'optional'], POINTER(VARIANT), 'DateTimeFormat' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'InsertAsField' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'InsertAsFullWidth' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'DateLanguage' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'CalendarType' )),
    COMMETHOD([dispid(484)], HRESULT, 'Sort',
              ( ['in', 'optional'], POINTER(VARIANT), 'ExcludeHeader' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'FieldNumber' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'SortFieldType' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'SortOrder' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'FieldNumber2' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'SortFieldType2' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'SortOrder2' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'FieldNumber3' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'SortFieldType3' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'SortOrder3' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'SortColumn' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'Separator' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'CaseSensitive' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'BidiSort' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'IgnoreThe' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'IgnoreKashida' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'IgnoreDiacritics' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'IgnoreHe' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'LanguageID' )),
    COMMETHOD([dispid(203)], HRESULT, 'DetectLanguage'),
    COMMETHOD([dispid(498)], HRESULT, 'ConvertToTable',
              ( ['in', 'optional'], POINTER(VARIANT), 'Separator' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'NumRows' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'NumColumns' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'InitialColumnWidth' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'Format' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'ApplyBorders' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'ApplyShading' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'ApplyFont' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'ApplyColor' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'ApplyHeadingRows' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'ApplyLastRow' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'ApplyFirstColumn' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'ApplyLastColumn' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'AutoFit' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'AutoFitBehavior' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'DefaultTableBehavior' ),
              ( ['out', 'retval'], POINTER(POINTER(Table)), 'prop' )),
    COMMETHOD([dispid(499)], HRESULT, 'TCSCConverter',
              ( ['in', 'optional'], WdTCSCConverterDirection, 'WdTCSCConverterDirection', 2 ),
              ( ['in', 'optional'], VARIANT_BOOL, 'CommonTerms', False ),
              ( ['in', 'optional'], VARIANT_BOOL, 'UseVariants', False )),
    COMMETHOD([dispid(263), 'propget'], HRESULT, 'LanguageDetected',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'prop' )),
    COMMETHOD([dispid(263), 'propput'], HRESULT, 'LanguageDetected',
              ( ['in'], VARIANT_BOOL, 'prop' )),
    COMMETHOD([dispid(264), 'propget'], HRESULT, 'FitTextWidth',
              ( ['out', 'retval'], POINTER(c_float), 'prop' )),
    COMMETHOD([dispid(264), 'propput'], HRESULT, 'FitTextWidth',
              ( ['in'], c_float, 'prop' )),
    COMMETHOD([dispid(265), 'propget'], HRESULT, 'HorizontalInVertical',
              ( ['out', 'retval'], POINTER(WdHorizontalInVerticalType), 'prop' )),
    COMMETHOD([dispid(265), 'propput'], HRESULT, 'HorizontalInVertical',
              ( ['in'], WdHorizontalInVerticalType, 'prop' )),
    COMMETHOD([dispid(266), 'propget'], HRESULT, 'TwoLinesInOne',
              ( ['out', 'retval'], POINTER(WdTwoLinesInOneType), 'prop' )),
    COMMETHOD([dispid(266), 'propput'], HRESULT, 'TwoLinesInOne',
              ( ['in'], WdTwoLinesInOneType, 'prop' )),
    COMMETHOD([dispid(267), 'propget'], HRESULT, 'CombineCharacters',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'prop' )),
    COMMETHOD([dispid(267), 'propput'], HRESULT, 'CombineCharacters',
              ( ['in'], VARIANT_BOOL, 'prop' )),
    COMMETHOD([dispid(323), 'propget'], HRESULT, 'NoProofing',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(323), 'propput'], HRESULT, 'NoProofing',
              ( ['in'], c_int, 'prop' )),
    COMMETHOD([dispid(324), 'propget'], HRESULT, 'TopLevelTables',
              ( ['out', 'retval'], POINTER(POINTER(Tables)), 'prop' )),
    COMMETHOD([dispid(325), 'propget'], HRESULT, 'Scripts',
              ( ['out', 'retval'], POINTER(POINTER(comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.Scripts)), 'prop' )),
    COMMETHOD([dispid(326), 'propget'], HRESULT, 'CharacterWidth',
              ( ['out', 'retval'], POINTER(WdCharacterWidth), 'prop' )),
    COMMETHOD([dispid(326), 'propput'], HRESULT, 'CharacterWidth',
              ( ['in'], WdCharacterWidth, 'prop' )),
    COMMETHOD([dispid(327), 'propget'], HRESULT, 'Kana',
              ( ['out', 'retval'], POINTER(WdKana), 'prop' )),
    COMMETHOD([dispid(327), 'propput'], HRESULT, 'Kana',
              ( ['in'], WdKana, 'prop' )),
    COMMETHOD([dispid(400), 'propget'], HRESULT, 'BoldBi',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(400), 'propput'], HRESULT, 'BoldBi',
              ( ['in'], c_int, 'prop' )),
    COMMETHOD([dispid(401), 'propget'], HRESULT, 'ItalicBi',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(401), 'propput'], HRESULT, 'ItalicBi',
              ( ['in'], c_int, 'prop' )),
    COMMETHOD([dispid(405), 'propget'], HRESULT, 'ID',
              ( ['out', 'retval'], POINTER(BSTR), 'prop' )),
    COMMETHOD([dispid(405), 'propput'], HRESULT, 'ID',
              ( ['in'], BSTR, 'prop' )),
    COMMETHOD([dispid(406), 'propget'], HRESULT, 'HTMLDivisions',
              ( ['out', 'retval'], POINTER(POINTER(HTMLDivisions)), 'prop' )),
    COMMETHOD([dispid(407), 'hidden', 'propget'], HRESULT, 'SmartTags',
              ( ['out', 'retval'], POINTER(POINTER(SmartTags)), 'prop' )),
    COMMETHOD([dispid(408), 'propget'], HRESULT, 'ShowAll',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'prop' )),
    COMMETHOD([dispid(408), 'propput'], HRESULT, 'ShowAll',
              ( ['in'], VARIANT_BOOL, 'prop' )),
    COMMETHOD([dispid(409), 'propget'], HRESULT, 'Document',
              ( ['out', 'retval'], POINTER(POINTER(Document)), 'prop' )),
    COMMETHOD([dispid(410), 'propget'], HRESULT, 'FootnoteOptions',
              ( ['out', 'retval'], POINTER(POINTER(FootnoteOptions)), 'prop' )),
    COMMETHOD([dispid(411), 'propget'], HRESULT, 'EndnoteOptions',
              ( ['out', 'retval'], POINTER(POINTER(EndnoteOptions)), 'prop' )),
    COMMETHOD([dispid(412)], HRESULT, 'PasteAndFormat',
              ( ['in'], WdRecoveryType, 'Type' )),
    COMMETHOD([dispid(413)], HRESULT, 'PasteExcelTable',
              ( ['in'], VARIANT_BOOL, 'LinkedToExcel' ),
              ( ['in'], VARIANT_BOOL, 'WordFormatting' ),
              ( ['in'], VARIANT_BOOL, 'RTF' )),
    COMMETHOD([dispid(414)], HRESULT, 'PasteAppendTable'),
    COMMETHOD([dispid(340), 'hidden', 'propget'], HRESULT, 'XMLNodes',
              ( ['out', 'retval'], POINTER(POINTER(XMLNodes)), 'prop' )),
    COMMETHOD([dispid(341), 'hidden', 'propget'], HRESULT, 'XMLParentNode',
              ( ['out', 'retval'], POINTER(POINTER(XMLNode)), 'prop' )),
    COMMETHOD([dispid(343), 'propget'], HRESULT, 'Editors',
              ( ['out', 'retval'], POINTER(POINTER(Editors)), 'prop' )),
    COMMETHOD([dispid(344), 'propget'], HRESULT, 'XML',
              ( ['in', 'optional'], VARIANT_BOOL, 'DataOnly', False ),
              ( ['out', 'retval'], POINTER(BSTR), 'prop' )),
    COMMETHOD([dispid(345), 'propget'], HRESULT, 'EnhMetaFileBits',
              ( ['out', 'retval'], POINTER(VARIANT), 'prop' )),
    COMMETHOD([dispid(415)], HRESULT, 'GoToEditableRange',
              ( ['in', 'optional'], POINTER(VARIANT), 'EditorID' ),
              ( ['out', 'retval'], POINTER(POINTER(Range)), 'prop' )),
    COMMETHOD([dispid(416)], HRESULT, 'InsertXML',
              ( ['in'], BSTR, 'XML' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'Transform' )),
    COMMETHOD([dispid(417)], HRESULT, 'InsertCaption',
              ( ['in'], POINTER(VARIANT), 'Label' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'Title' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'TitleAutoText' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'Position' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'ExcludeLabel' )),
    COMMETHOD([dispid(418)], HRESULT, 'InsertCrossReference',
              ( ['in'], POINTER(VARIANT), 'ReferenceType' ),
              ( ['in'], WdReferenceKind, 'ReferenceKind' ),
              ( ['in'], POINTER(VARIANT), 'ReferenceItem' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'InsertAsHyperlink' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'IncludePosition' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'SeparateNumbers' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'SeparatorString' )),
    COMMETHOD([dispid(346), 'propget'], HRESULT, 'OMaths',
              ( ['out', 'retval'], POINTER(POINTER(OMaths)), 'prop' )),
    COMMETHOD([dispid(420), 'propget'], HRESULT, 'CharacterStyle',
              ( ['out', 'retval'], POINTER(VARIANT), 'prop' )),
    COMMETHOD([dispid(421), 'propget'], HRESULT, 'ParagraphStyle',
              ( ['out', 'retval'], POINTER(VARIANT), 'prop' )),
    COMMETHOD([dispid(422), 'propget'], HRESULT, 'ListStyle',
              ( ['out', 'retval'], POINTER(VARIANT), 'prop' )),
    COMMETHOD([dispid(423), 'propget'], HRESULT, 'TableStyle',
              ( ['out', 'retval'], POINTER(VARIANT), 'prop' )),
    COMMETHOD([dispid(424), 'propget'], HRESULT, 'ContentControls',
              ( ['out', 'retval'], POINTER(POINTER(ContentControls)), 'prop' )),
    COMMETHOD([dispid(425)], HRESULT, 'ExportFragment',
              ( ['in'], BSTR, 'FileName' ),
              ( ['in'], WdSaveFormat, 'Format' )),
    COMMETHOD([dispid(426), 'propget'], HRESULT, 'WordOpenXML',
              ( ['out', 'retval'], POINTER(BSTR), 'prop' )),
    COMMETHOD([dispid(427)], HRESULT, 'SetListLevel',
              ( ['in'], c_short, 'Level' )),
    COMMETHOD([dispid(500)], HRESULT, 'InsertAlignmentTab',
              ( ['in'], c_int, 'Alignment' ),
              ( ['in', 'optional'], c_int, 'RelativeTo', 0 )),
    COMMETHOD([dispid(501), 'propget'], HRESULT, 'ParentContentControl',
              ( ['out', 'retval'], POINTER(POINTER(ContentControl)), 'prop' )),
    COMMETHOD([dispid(502)], HRESULT, 'ImportFragment',
              ( ['in'], BSTR, 'FileName' ),
              ( ['in', 'optional'], VARIANT_BOOL, 'MatchDestination', False )),
    COMMETHOD([dispid(503)], HRESULT, 'ExportAsFixedFormat',
              ( ['in'], BSTR, 'OutputFileName' ),
              ( ['in'], WdExportFormat, 'ExportFormat' ),
              ( ['in', 'optional'], VARIANT_BOOL, 'OpenAfterExport', False ),
              ( ['in', 'optional'], WdExportOptimizeFor, 'OptimizeFor', 0 ),
              ( ['in', 'optional'], VARIANT_BOOL, 'ExportCurrentPage', False ),
              ( ['in', 'optional'], WdExportItem, 'Item', 0 ),
              ( ['in', 'optional'], VARIANT_BOOL, 'IncludeDocProps', False ),
              ( ['in', 'optional'], VARIANT_BOOL, 'KeepIRM', True ),
              ( ['in', 'optional'], WdExportCreateBookmarks, 'CreateBookmarks', 0 ),
              ( ['in', 'optional'], VARIANT_BOOL, 'DocStructureTags', True ),
              ( ['in', 'optional'], VARIANT_BOOL, 'BitmapMissingFonts', True ),
              ( ['in', 'optional'], VARIANT_BOOL, 'UseISO19005_1', False ),
              ( ['in', 'optional'], POINTER(VARIANT), 'FixedFormatExtClassPtr' )),
    COMMETHOD([dispid(504), 'propget'], HRESULT, 'Locks',
              ( ['out', 'retval'], POINTER(POINTER(CoAuthLocks)), 'prop' )),
    COMMETHOD([dispid(505), 'propget'], HRESULT, 'Updates',
              ( ['out', 'retval'], POINTER(POINTER(CoAuthUpdates)), 'prop' )),
    COMMETHOD([dispid(506), 'propget'], HRESULT, 'Conflicts',
              ( ['out', 'retval'], POINTER(POINTER(Conflicts)), 'prop' )),
    COMMETHOD([dispid(507), 'propget'], HRESULT, 'TextVisibleOnScreen',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(508)], HRESULT, 'SortByHeadings',
              ( ['in', 'optional'], POINTER(VARIANT), 'SortFieldType' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'SortOrder' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'CaseSensitive' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'BidiSort' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'IgnoreThe' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'IgnoreKashida' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'IgnoreDiacritics' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'IgnoreHe' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'LanguageID' )),
    COMMETHOD([dispid(509)], HRESULT, 'ExportAsFixedFormat2',
              ( ['in'], BSTR, 'OutputFileName' ),
              ( ['in'], WdExportFormat, 'ExportFormat' ),
              ( ['in', 'optional'], VARIANT_BOOL, 'OpenAfterExport', False ),
              ( ['in', 'optional'], WdExportOptimizeFor, 'OptimizeFor', 0 ),
              ( ['in', 'optional'], VARIANT_BOOL, 'ExportCurrentPage', False ),
              ( ['in', 'optional'], WdExportItem, 'Item', 0 ),
              ( ['in', 'optional'], VARIANT_BOOL, 'IncludeDocProps', False ),
              ( ['in', 'optional'], VARIANT_BOOL, 'KeepIRM', True ),
              ( ['in', 'optional'], WdExportCreateBookmarks, 'CreateBookmarks', 0 ),
              ( ['in', 'optional'], VARIANT_BOOL, 'DocStructureTags', True ),
              ( ['in', 'optional'], VARIANT_BOOL, 'BitmapMissingFonts', True ),
              ( ['in', 'optional'], VARIANT_BOOL, 'UseISO19005_1', False ),
              ( ['in', 'optional'], VARIANT_BOOL, 'OptimizeForImageQuality', False ),
              ( ['in', 'optional'], POINTER(VARIANT), 'FixedFormatExtClassPtr' )),
]
################################################################
## code template for Range implementation
##class Range_Impl(object):
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    Text = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    FormattedText = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    Start = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    End = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    Font = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Duplicate(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def StoryType(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Tables(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Words(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Sentences(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Characters(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Footnotes(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Endnotes(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Comments(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Cells(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Sections(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Paragraphs(self):
##        '-no docstring-'
##        #return prop
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    Borders = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Shading(self):
##        '-no docstring-'
##        #return prop
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    TextRetrievalMode = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Fields(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def FormFields(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Frames(self):
##        '-no docstring-'
##        #return prop
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    ParagraphFormat = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def ListFormat(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Bookmarks(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Creator(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return prop
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    Bold = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    Italic = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    Underline = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    EmphasisMark = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    DisableCharacterSpaceGrid = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Revisions(self):
##        '-no docstring-'
##        #return prop
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    Style = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def StoryLength(self):
##        '-no docstring-'
##        #return prop
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    LanguageID = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def SynonymInfo(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Hyperlinks(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def ListParagraphs(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Subdocuments(self):
##        '-no docstring-'
##        #return prop
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    GrammarChecked = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    SpellingChecked = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    HighlightColorIndex = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Columns(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Rows(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def CanEdit(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def CanPaste(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def IsEndOfRowMark(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def BookmarkID(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def PreviousBookmarkID(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Find(self):
##        '-no docstring-'
##        #return prop
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    PageSetup = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def ShapeRange(self):
##        '-no docstring-'
##        #return prop
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    Case = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Information(self, Type):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def ReadabilityStatistics(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def GrammaticalErrors(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def SpellingErrors(self):
##        '-no docstring-'
##        #return prop
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    Orientation = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def InlineShapes(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def NextStoryRange(self):
##        '-no docstring-'
##        #return prop
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    LanguageIDFarEast = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    LanguageIDOther = property(_get, _set, doc = _set.__doc__)
##
##    def Select(self):
##        '-no docstring-'
##        #return 
##
##    def SetRange(self, Start, End):
##        '-no docstring-'
##        #return 
##
##    def Collapse(self, Direction):
##        '-no docstring-'
##        #return 
##
##    def InsertBefore(self, Text):
##        '-no docstring-'
##        #return 
##
##    def InsertAfter(self, Text):
##        '-no docstring-'
##        #return 
##
##    def Next(self, Unit, Count):
##        '-no docstring-'
##        #return prop
##
##    def Previous(self, Unit, Count):
##        '-no docstring-'
##        #return prop
##
##    def StartOf(self, Unit, Extend):
##        '-no docstring-'
##        #return prop
##
##    def EndOf(self, Unit, Extend):
##        '-no docstring-'
##        #return prop
##
##    def Move(self, Unit, Count):
##        '-no docstring-'
##        #return prop
##
##    def MoveStart(self, Unit, Count):
##        '-no docstring-'
##        #return prop
##
##    def MoveEnd(self, Unit, Count):
##        '-no docstring-'
##        #return prop
##
##    def MoveWhile(self, Cset, Count):
##        '-no docstring-'
##        #return prop
##
##    def MoveStartWhile(self, Cset, Count):
##        '-no docstring-'
##        #return prop
##
##    def MoveEndWhile(self, Cset, Count):
##        '-no docstring-'
##        #return prop
##
##    def MoveUntil(self, Cset, Count):
##        '-no docstring-'
##        #return prop
##
##    def MoveStartUntil(self, Cset, Count):
##        '-no docstring-'
##        #return prop
##
##    def MoveEndUntil(self, Cset, Count):
##        '-no docstring-'
##        #return prop
##
##    def Cut(self):
##        '-no docstring-'
##        #return 
##
##    def Copy(self):
##        '-no docstring-'
##        #return 
##
##    def Paste(self):
##        '-no docstring-'
##        #return 
##
##    def InsertBreak(self, Type):
##        '-no docstring-'
##        #return 
##
##    def InsertFile(self, FileName, Range, ConfirmConversions, Link, Attachment):
##        '-no docstring-'
##        #return 
##
##    def InStory(self, Range):
##        '-no docstring-'
##        #return prop
##
##    def InRange(self, Range):
##        '-no docstring-'
##        #return prop
##
##    def Delete(self, Unit, Count):
##        '-no docstring-'
##        #return prop
##
##    def WholeStory(self):
##        '-no docstring-'
##        #return 
##
##    def Expand(self, Unit):
##        '-no docstring-'
##        #return prop
##
##    def InsertParagraph(self):
##        '-no docstring-'
##        #return 
##
##    def InsertParagraphAfter(self):
##        '-no docstring-'
##        #return 
##
##    def ConvertToTableOld(self, Separator, NumRows, NumColumns, InitialColumnWidth, Format, ApplyBorders, ApplyShading, ApplyFont, ApplyColor, ApplyHeadingRows, ApplyLastRow, ApplyFirstColumn, ApplyLastColumn, AutoFit):
##        '-no docstring-'
##        #return prop
##
##    def InsertDateTimeOld(self, DateTimeFormat, InsertAsField, InsertAsFullWidth):
##        '-no docstring-'
##        #return 
##
##    def InsertSymbol(self, CharacterNumber, Font, Unicode, Bias):
##        '-no docstring-'
##        #return 
##
##    def InsertCrossReference_2002(self, ReferenceType, ReferenceKind, ReferenceItem, InsertAsHyperlink, IncludePosition):
##        '-no docstring-'
##        #return 
##
##    def InsertCaptionXP(self, Label, Title, TitleAutoText, Position):
##        '-no docstring-'
##        #return 
##
##    def CopyAsPicture(self):
##        '-no docstring-'
##        #return 
##
##    def SortOld(self, ExcludeHeader, FieldNumber, SortFieldType, SortOrder, FieldNumber2, SortFieldType2, SortOrder2, FieldNumber3, SortFieldType3, SortOrder3, SortColumn, Separator, CaseSensitive, LanguageID):
##        '-no docstring-'
##        #return 
##
##    def SortAscending(self):
##        '-no docstring-'
##        #return 
##
##    def SortDescending(self):
##        '-no docstring-'
##        #return 
##
##    def IsEqual(self, Range):
##        '-no docstring-'
##        #return prop
##
##    def Calculate(self):
##        '-no docstring-'
##        #return prop
##
##    def GoTo(self, What, Which, Count, Name):
##        '-no docstring-'
##        #return prop
##
##    def GoToNext(self, What):
##        '-no docstring-'
##        #return prop
##
##    def GoToPrevious(self, What):
##        '-no docstring-'
##        #return prop
##
##    def PasteSpecial(self, IconIndex, Link, Placement, DisplayAsIcon, DataType, IconFileName, IconLabel):
##        '-no docstring-'
##        #return 
##
##    def LookupNameProperties(self):
##        '-no docstring-'
##        #return 
##
##    def ComputeStatistics(self, Statistic):
##        '-no docstring-'
##        #return prop
##
##    def Relocate(self, Direction):
##        '-no docstring-'
##        #return 
##
##    def CheckSynonyms(self):
##        '-no docstring-'
##        #return 
##
##    def SubscribeTo(self, Edition, Format):
##        '-no docstring-'
##        #return 
##
##    def CreatePublisher(self, Edition, ContainsPICT, ContainsRTF, ContainsText):
##        '-no docstring-'
##        #return 
##
##    def InsertAutoText(self):
##        '-no docstring-'
##        #return 
##
##    def InsertDatabase(self, Format, Style, LinkToSource, Connection, SQLStatement, SQLStatement1, PasswordDocument, PasswordTemplate, WritePasswordDocument, WritePasswordTemplate, DataSource, From, To, IncludeFields):
##        '-no docstring-'
##        #return 
##
##    def AutoFormat(self):
##        '-no docstring-'
##        #return 
##
##    def CheckGrammar(self):
##        '-no docstring-'
##        #return 
##
##    def CheckSpelling(self, CustomDictionary, IgnoreUppercase, AlwaysSuggest, CustomDictionary2, CustomDictionary3, CustomDictionary4, CustomDictionary5, CustomDictionary6, CustomDictionary7, CustomDictionary8, CustomDictionary9, CustomDictionary10):
##        '-no docstring-'
##        #return 
##
##    def GetSpellingSuggestions(self, CustomDictionary, IgnoreUppercase, MainDictionary, SuggestionMode, CustomDictionary2, CustomDictionary3, CustomDictionary4, CustomDictionary5, CustomDictionary6, CustomDictionary7, CustomDictionary8, CustomDictionary9, CustomDictionary10):
##        '-no docstring-'
##        #return prop
##
##    def InsertParagraphBefore(self):
##        '-no docstring-'
##        #return 
##
##    def NextSubdocument(self):
##        '-no docstring-'
##        #return 
##
##    def PreviousSubdocument(self):
##        '-no docstring-'
##        #return 
##
##    def ConvertHangulAndHanja(self, ConversionsMode, FastConversion, CheckHangulEnding, EnableRecentOrdering, CustomDictionary):
##        '-no docstring-'
##        #return 
##
##    def PasteAsNestedTable(self):
##        '-no docstring-'
##        #return 
##
##    def ModifyEnclosure(self, Style, Symbol, EnclosedText):
##        '-no docstring-'
##        #return 
##
##    def PhoneticGuide(self, Text, Alignment, Raise, FontSize, FontName):
##        '-no docstring-'
##        #return 
##
##    def InsertDateTime(self, DateTimeFormat, InsertAsField, InsertAsFullWidth, DateLanguage, CalendarType):
##        '-no docstring-'
##        #return 
##
##    def Sort(self, ExcludeHeader, FieldNumber, SortFieldType, SortOrder, FieldNumber2, SortFieldType2, SortOrder2, FieldNumber3, SortFieldType3, SortOrder3, SortColumn, Separator, CaseSensitive, BidiSort, IgnoreThe, IgnoreKashida, IgnoreDiacritics, IgnoreHe, LanguageID):
##        '-no docstring-'
##        #return 
##
##    def DetectLanguage(self):
##        '-no docstring-'
##        #return 
##
##    def ConvertToTable(self, Separator, NumRows, NumColumns, InitialColumnWidth, Format, ApplyBorders, ApplyShading, ApplyFont, ApplyColor, ApplyHeadingRows, ApplyLastRow, ApplyFirstColumn, ApplyLastColumn, AutoFit, AutoFitBehavior, DefaultTableBehavior):
##        '-no docstring-'
##        #return prop
##
##    def TCSCConverter(self, WdTCSCConverterDirection, CommonTerms, UseVariants):
##        '-no docstring-'
##        #return 
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    LanguageDetected = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    FitTextWidth = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    HorizontalInVertical = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    TwoLinesInOne = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    CombineCharacters = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    NoProofing = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def TopLevelTables(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Scripts(self):
##        '-no docstring-'
##        #return prop
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    CharacterWidth = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    Kana = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    BoldBi = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    ItalicBi = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    ID = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def HTMLDivisions(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def SmartTags(self):
##        '-no docstring-'
##        #return prop
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    ShowAll = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Document(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def FootnoteOptions(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def EndnoteOptions(self):
##        '-no docstring-'
##        #return prop
##
##    def PasteAndFormat(self, Type):
##        '-no docstring-'
##        #return 
##
##    def PasteExcelTable(self, LinkedToExcel, WordFormatting, RTF):
##        '-no docstring-'
##        #return 
##
##    def PasteAppendTable(self):
##        '-no docstring-'
##        #return 
##
##    @property
##    def XMLNodes(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def XMLParentNode(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Editors(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def XML(self, DataOnly):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def EnhMetaFileBits(self):
##        '-no docstring-'
##        #return prop
##
##    def GoToEditableRange(self, EditorID):
##        '-no docstring-'
##        #return prop
##
##    def InsertXML(self, XML, Transform):
##        '-no docstring-'
##        #return 
##
##    def InsertCaption(self, Label, Title, TitleAutoText, Position, ExcludeLabel):
##        '-no docstring-'
##        #return 
##
##    def InsertCrossReference(self, ReferenceType, ReferenceKind, ReferenceItem, InsertAsHyperlink, IncludePosition, SeparateNumbers, SeparatorString):
##        '-no docstring-'
##        #return 
##
##    @property
##    def OMaths(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def CharacterStyle(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def ParagraphStyle(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def ListStyle(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def TableStyle(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def ContentControls(self):
##        '-no docstring-'
##        #return prop
##
##    def ExportFragment(self, FileName, Format):
##        '-no docstring-'
##        #return 
##
##    @property
##    def WordOpenXML(self):
##        '-no docstring-'
##        #return prop
##
##    def SetListLevel(self, Level):
##        '-no docstring-'
##        #return 
##
##    def InsertAlignmentTab(self, Alignment, RelativeTo):
##        '-no docstring-'
##        #return 
##
##    @property
##    def ParentContentControl(self):
##        '-no docstring-'
##        #return prop
##
##    def ImportFragment(self, FileName, MatchDestination):
##        '-no docstring-'
##        #return 
##
##    def ExportAsFixedFormat(self, OutputFileName, ExportFormat, OpenAfterExport, OptimizeFor, ExportCurrentPage, Item, IncludeDocProps, KeepIRM, CreateBookmarks, DocStructureTags, BitmapMissingFonts, UseISO19005_1, FixedFormatExtClassPtr):
##        '-no docstring-'
##        #return 
##
##    @property
##    def Locks(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Updates(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Conflicts(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def TextVisibleOnScreen(self):
##        '-no docstring-'
##        #return prop
##
##    def SortByHeadings(self, SortFieldType, SortOrder, CaseSensitive, BidiSort, IgnoreThe, IgnoreKashida, IgnoreDiacritics, IgnoreHe, LanguageID):
##        '-no docstring-'
##        #return 
##
##    def ExportAsFixedFormat2(self, OutputFileName, ExportFormat, OpenAfterExport, OptimizeFor, ExportCurrentPage, Item, IncludeDocProps, KeepIRM, CreateBookmarks, DocStructureTags, BitmapMissingFonts, UseISO19005_1, OptimizeForImageQuality, FixedFormatExtClassPtr):
##        '-no docstring-'
##        #return 
##

class OMathMatRow(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{5DAA8BB6-054E-48F6-BEAC-EAAD02BE0CC7}')
    _idlflags_ = ['dual', 'nonextensible', 'oleautomation']
OMathMatRow._methods_ = [
    COMMETHOD([dispid(100), 'propget'], HRESULT, 'Application',
              ( ['out', 'retval'], POINTER(POINTER(Application)), 'prop' )),
    COMMETHOD([dispid(101), 'propget'], HRESULT, 'Creator',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(102), 'propget'], HRESULT, 'Parent',
              ( ['out', 'retval'], POINTER(POINTER(IDispatch)), 'prop' )),
    COMMETHOD([dispid(103), 'propget'], HRESULT, 'Args',
              ( ['out', 'retval'], POINTER(POINTER(OMathArgs)), 'prop' )),
    COMMETHOD([dispid(104), 'propget'], HRESULT, 'RowIndex',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(200)], HRESULT, 'Delete'),
]
################################################################
## code template for OMathMatRow implementation
##class OMathMatRow_Impl(object):
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Creator(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Args(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def RowIndex(self):
##        '-no docstring-'
##        #return prop
##
##    def Delete(self):
##        '-no docstring-'
##        #return 
##

RepeatingSectionItemColl._methods_ = [
    COMMETHOD([dispid(1000), 'propget'], HRESULT, 'Application',
              ( ['out', 'retval'], POINTER(POINTER(Application)), 'prop' )),
    COMMETHOD([dispid(1001), 'propget'], HRESULT, 'Creator',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(1002), 'propget'], HRESULT, 'Parent',
              ( ['out', 'retval'], POINTER(POINTER(IDispatch)), 'prop' )),
    COMMETHOD([dispid(-4), 'nonbrowsable', 'propget'], HRESULT, '_NewEnum',
              ( ['out', 'retval'], POINTER(POINTER(IUnknown)), 'prop' )),
    COMMETHOD([dispid(1), 'propget'], HRESULT, 'Count',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(0)], HRESULT, 'Item',
              ( ['in'], c_int, 'Index' ),
              ( ['out', 'retval'], POINTER(POINTER(RepeatingSectionItem)), 'prop' )),
]
################################################################
## code template for RepeatingSectionItemColl implementation
##class RepeatingSectionItemColl_Impl(object):
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Creator(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def _NewEnum(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Count(self):
##        '-no docstring-'
##        #return prop
##
##    def Item(self, Index):
##        '-no docstring-'
##        #return prop
##

class HangulAndAlphabetExceptions(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{000209D1-0000-0000-C000-000000000046}')
    _idlflags_ = ['dual', 'nonextensible', 'oleautomation']
class HangulAndAlphabetException(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{000209D2-0000-0000-C000-000000000046}')
    _idlflags_ = ['dual', 'nonextensible', 'oleautomation']
HangulAndAlphabetExceptions._methods_ = [
    COMMETHOD([dispid(1000), 'propget'], HRESULT, 'Application',
              ( ['out', 'retval'], POINTER(POINTER(Application)), 'prop' )),
    COMMETHOD([dispid(1001), 'propget'], HRESULT, 'Creator',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(1002), 'propget'], HRESULT, 'Parent',
              ( ['out', 'retval'], POINTER(POINTER(IDispatch)), 'prop' )),
    COMMETHOD([dispid(-4), 'nonbrowsable', 'propget'], HRESULT, '_NewEnum',
              ( ['out', 'retval'], POINTER(POINTER(IUnknown)), 'prop' )),
    COMMETHOD([dispid(1), 'propget'], HRESULT, 'Count',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(0)], HRESULT, 'Item',
              ( ['in'], POINTER(VARIANT), 'Index' ),
              ( ['out', 'retval'], POINTER(POINTER(HangulAndAlphabetException)), 'prop' )),
    COMMETHOD([dispid(101)], HRESULT, 'Add',
              ( ['in'], BSTR, 'Name' ),
              ( ['out', 'retval'], POINTER(POINTER(HangulAndAlphabetException)), 'prop' )),
]
################################################################
## code template for HangulAndAlphabetExceptions implementation
##class HangulAndAlphabetExceptions_Impl(object):
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Creator(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def _NewEnum(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Count(self):
##        '-no docstring-'
##        #return prop
##
##    def Item(self, Index):
##        '-no docstring-'
##        #return prop
##
##    def Add(self, Name):
##        '-no docstring-'
##        #return prop
##

class ListEntries(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{00020924-0000-0000-C000-000000000046}')
    _idlflags_ = ['dual', 'nonextensible', 'oleautomation']
class ListEntry(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{00020923-0000-0000-C000-000000000046}')
    _idlflags_ = ['dual', 'nonextensible', 'oleautomation']
ListEntries._methods_ = [
    COMMETHOD([dispid(1000), 'propget'], HRESULT, 'Application',
              ( ['out', 'retval'], POINTER(POINTER(Application)), 'prop' )),
    COMMETHOD([dispid(1001), 'propget'], HRESULT, 'Creator',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(1002), 'propget'], HRESULT, 'Parent',
              ( ['out', 'retval'], POINTER(POINTER(IDispatch)), 'prop' )),
    COMMETHOD([dispid(-4), 'nonbrowsable', 'propget'], HRESULT, '_NewEnum',
              ( ['out', 'retval'], POINTER(POINTER(IUnknown)), 'prop' )),
    COMMETHOD([dispid(1), 'propget'], HRESULT, 'Count',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(0)], HRESULT, 'Item',
              ( ['in'], POINTER(VARIANT), 'Index' ),
              ( ['out', 'retval'], POINTER(POINTER(ListEntry)), 'prop' )),
    COMMETHOD([dispid(101)], HRESULT, 'Add',
              ( ['in'], BSTR, 'Name' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'Index' ),
              ( ['out', 'retval'], POINTER(POINTER(ListEntry)), 'prop' )),
    COMMETHOD([dispid(102)], HRESULT, 'Clear'),
]
################################################################
## code template for ListEntries implementation
##class ListEntries_Impl(object):
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Creator(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def _NewEnum(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Count(self):
##        '-no docstring-'
##        #return prop
##
##    def Item(self, Index):
##        '-no docstring-'
##        #return prop
##
##    def Add(self, Name, Index):
##        '-no docstring-'
##        #return prop
##
##    def Clear(self):
##        '-no docstring-'
##        #return 
##


# values for enumeration 'XlBinsType'
xlBinsTypeAutomatic = 0
xlBinsTypeCategorical = 1
xlBinsTypeManual = 2
xlBinsTypeBinSize = 3
xlBinsTypeBinCount = 4
XlBinsType = c_int # enum

# values for enumeration 'WdXMLValidationStatus'
wdXMLValidationStatusOK = 0
wdXMLValidationStatusCustom = -1072898048
WdXMLValidationStatus = c_int # enum
class CoAuthUpdate(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{9E6B5EC5-E8E4-40AF-9540-6203F71E2823}')
    _idlflags_ = ['dual', 'nonextensible', 'oleautomation']
CoAuthUpdates._methods_ = [
    COMMETHOD([dispid(1000), 'propget'], HRESULT, 'Application',
              ( ['out', 'retval'], POINTER(POINTER(Application)), 'prop' )),
    COMMETHOD([dispid(1001), 'propget'], HRESULT, 'Creator',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(1002), 'propget'], HRESULT, 'Parent',
              ( ['out', 'retval'], POINTER(POINTER(IDispatch)), 'prop' )),
    COMMETHOD([dispid(1), 'propget'], HRESULT, 'Count',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(-4), 'nonbrowsable', 'propget'], HRESULT, '_NewEnum',
              ( ['out', 'retval'], POINTER(POINTER(IUnknown)), 'prop' )),
    COMMETHOD([dispid(0)], HRESULT, 'Item',
              ( ['in'], c_int, 'Index' ),
              ( ['out', 'retval'], POINTER(POINTER(CoAuthUpdate)), 'prop' )),
]
################################################################
## code template for CoAuthUpdates implementation
##class CoAuthUpdates_Impl(object):
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Creator(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Count(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def _NewEnum(self):
##        '-no docstring-'
##        #return prop
##
##    def Item(self, Index):
##        '-no docstring-'
##        #return prop
##

class AxisTitle(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{8B0E45DB-3A7B-42EE-9D17-A92AF69B79C1}')
    _idlflags_ = ['dual', 'nonextensible', 'oleautomation']

# values for enumeration 'XlAxisCrosses'
xlAxisCrossesAutomatic = -4105
xlAxisCrossesCustom = -4114
xlAxisCrossesMaximum = 2
xlAxisCrossesMinimum = 4
XlAxisCrosses = c_int # enum

# values for enumeration 'XlScaleType'
xlScaleLinear = -4132
xlScaleLogarithmic = -4133
XlScaleType = c_int # enum

# values for enumeration 'XlTickLabelPosition'
xlTickLabelPositionHigh = -4127
xlTickLabelPositionLow = -4134
xlTickLabelPositionNextToAxis = 4
xlTickLabelPositionNone = -4142
XlTickLabelPosition = c_int # enum
class TickLabels(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{935D59F5-E365-4F92-B7F5-1C499A63ECA8}')
    _idlflags_ = ['dual', 'nonextensible', 'oleautomation']

# values for enumeration 'XlCategoryType'
xlCategoryScale = 2
xlTimeScale = 3
xlAutomaticScale = -4105
XlCategoryType = c_int # enum

# values for enumeration 'XlDisplayUnit'
xlHundreds = -2
xlThousands = -3
xlTenThousands = -4
xlHundredThousands = -5
xlMillions = -6
xlTenMillions = -7
xlHundredMillions = -8
xlThousandMillions = -9
xlMillionMillions = -10
XlDisplayUnit = c_int # enum

# values for enumeration 'XlCategorySortOrder'
xlIndexAscending = 0
xlIndexDescending = 1
xlCategoryAscending = 2
xlCategoryDescending = 3
XlCategorySortOrder = c_int # enum
Axis._methods_ = [
    COMMETHOD([dispid(1610743808), 'propget'], HRESULT, 'AxisBetweenCategories',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'prop' )),
    COMMETHOD([dispid(1610743808), 'propput'], HRESULT, 'AxisBetweenCategories',
              ( ['in'], VARIANT_BOOL, 'prop' )),
    COMMETHOD([dispid(1610743810), 'propget'], HRESULT, 'AxisGroup',
              ( ['out', 'retval'], POINTER(XlAxisGroup), 'prop' )),
    COMMETHOD([dispid(1610743811), 'propget'], HRESULT, 'AxisTitle',
              ( ['out', 'retval'], POINTER(POINTER(AxisTitle)), 'prop' )),
    COMMETHOD([dispid(1610743812), 'propget'], HRESULT, 'CategoryNames',
              ( ['out', 'retval'], POINTER(VARIANT), 'prop' )),
    COMMETHOD([dispid(1610743812), 'propput'], HRESULT, 'CategoryNames',
              ( ['in'], VARIANT, 'prop' )),
    COMMETHOD([dispid(1610743814), 'propget'], HRESULT, 'Crosses',
              ( ['out', 'retval'], POINTER(XlAxisCrosses), 'prop' )),
    COMMETHOD([dispid(1610743814), 'propput'], HRESULT, 'Crosses',
              ( ['in'], XlAxisCrosses, 'prop' )),
    COMMETHOD([dispid(1610743816), 'propget'], HRESULT, 'CrossesAt',
              ( ['out', 'retval'], POINTER(c_double), 'prop' )),
    COMMETHOD([dispid(1610743816), 'propput'], HRESULT, 'CrossesAt',
              ( ['in'], c_double, 'prop' )),
    COMMETHOD([dispid(1610743818)], HRESULT, 'Delete',
              ( ['out', 'retval'], POINTER(VARIANT), 'prop' )),
    COMMETHOD([dispid(1610743819), 'propget'], HRESULT, 'HasMajorGridlines',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'prop' )),
    COMMETHOD([dispid(1610743819), 'propput'], HRESULT, 'HasMajorGridlines',
              ( ['in'], VARIANT_BOOL, 'prop' )),
    COMMETHOD([dispid(1610743821), 'propget'], HRESULT, 'HasMinorGridlines',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'prop' )),
    COMMETHOD([dispid(1610743821), 'propput'], HRESULT, 'HasMinorGridlines',
              ( ['in'], VARIANT_BOOL, 'prop' )),
    COMMETHOD([dispid(1610743823), 'propget'], HRESULT, 'HasTitle',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'prop' )),
    COMMETHOD([dispid(1610743823), 'propput'], HRESULT, 'HasTitle',
              ( ['in'], VARIANT_BOOL, 'prop' )),
    COMMETHOD([dispid(1610743825), 'propget'], HRESULT, 'MajorGridlines',
              ( ['out', 'retval'], POINTER(POINTER(Gridlines)), 'prop' )),
    COMMETHOD([dispid(1610743826), 'propget'], HRESULT, 'MajorTickMark',
              ( ['out', 'retval'], POINTER(XlTickMark), 'prop' )),
    COMMETHOD([dispid(1610743826), 'propput'], HRESULT, 'MajorTickMark',
              ( ['in'], XlTickMark, 'prop' )),
    COMMETHOD([dispid(1610743828), 'propget'], HRESULT, 'MajorUnit',
              ( ['out', 'retval'], POINTER(c_double), 'prop' )),
    COMMETHOD([dispid(1610743828), 'propput'], HRESULT, 'MajorUnit',
              ( ['in'], c_double, 'prop' )),
    COMMETHOD([dispid(1610743830), 'propget'], HRESULT, 'LogBase',
              ( ['out', 'retval'], POINTER(c_double), 'prop' )),
    COMMETHOD([dispid(1610743830), 'propput'], HRESULT, 'LogBase',
              ( ['in'], c_double, 'prop' )),
    COMMETHOD([dispid(1610743832), 'propget'], HRESULT, 'TickLabelSpacingIsAuto',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'prop' )),
    COMMETHOD([dispid(1610743832), 'propput'], HRESULT, 'TickLabelSpacingIsAuto',
              ( ['in'], VARIANT_BOOL, 'prop' )),
    COMMETHOD([dispid(1610743834), 'propget'], HRESULT, 'MajorUnitIsAuto',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'prop' )),
    COMMETHOD([dispid(1610743834), 'propput'], HRESULT, 'MajorUnitIsAuto',
              ( ['in'], VARIANT_BOOL, 'prop' )),
    COMMETHOD([dispid(1610743836), 'propget'], HRESULT, 'MaximumScale',
              ( ['out', 'retval'], POINTER(c_double), 'prop' )),
    COMMETHOD([dispid(1610743836), 'propput'], HRESULT, 'MaximumScale',
              ( ['in'], c_double, 'prop' )),
    COMMETHOD([dispid(1610743838), 'propget'], HRESULT, 'MaximumScaleIsAuto',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'prop' )),
    COMMETHOD([dispid(1610743838), 'propput'], HRESULT, 'MaximumScaleIsAuto',
              ( ['in'], VARIANT_BOOL, 'prop' )),
    COMMETHOD([dispid(1610743840), 'propget'], HRESULT, 'MinimumScale',
              ( ['out', 'retval'], POINTER(c_double), 'prop' )),
    COMMETHOD([dispid(1610743840), 'propput'], HRESULT, 'MinimumScale',
              ( ['in'], c_double, 'prop' )),
    COMMETHOD([dispid(1610743842), 'propget'], HRESULT, 'MinimumScaleIsAuto',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'prop' )),
    COMMETHOD([dispid(1610743842), 'propput'], HRESULT, 'MinimumScaleIsAuto',
              ( ['in'], VARIANT_BOOL, 'prop' )),
    COMMETHOD([dispid(1610743844), 'propget'], HRESULT, 'MinorGridlines',
              ( ['out', 'retval'], POINTER(POINTER(Gridlines)), 'prop' )),
    COMMETHOD([dispid(1610743845), 'propget'], HRESULT, 'MinorTickMark',
              ( ['out', 'retval'], POINTER(XlTickMark), 'prop' )),
    COMMETHOD([dispid(1610743845), 'propput'], HRESULT, 'MinorTickMark',
              ( ['in'], XlTickMark, 'prop' )),
    COMMETHOD([dispid(1610743847), 'propget'], HRESULT, 'MinorUnit',
              ( ['out', 'retval'], POINTER(c_double), 'prop' )),
    COMMETHOD([dispid(1610743847), 'propput'], HRESULT, 'MinorUnit',
              ( ['in'], c_double, 'prop' )),
    COMMETHOD([dispid(1610743849), 'propget'], HRESULT, 'MinorUnitIsAuto',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'prop' )),
    COMMETHOD([dispid(1610743849), 'propput'], HRESULT, 'MinorUnitIsAuto',
              ( ['in'], VARIANT_BOOL, 'prop' )),
    COMMETHOD([dispid(1610743851), 'propget'], HRESULT, 'ReversePlotOrder',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'prop' )),
    COMMETHOD([dispid(1610743851), 'propput'], HRESULT, 'ReversePlotOrder',
              ( ['in'], VARIANT_BOOL, 'prop' )),
    COMMETHOD([dispid(1610743853), 'propget'], HRESULT, 'ScaleType',
              ( ['out', 'retval'], POINTER(XlScaleType), 'prop' )),
    COMMETHOD([dispid(1610743853), 'propput'], HRESULT, 'ScaleType',
              ( ['in'], XlScaleType, 'prop' )),
    COMMETHOD([dispid(1610743855)], HRESULT, 'Select',
              ( ['out', 'retval'], POINTER(VARIANT), 'prop' )),
    COMMETHOD([dispid(1610743856), 'propget'], HRESULT, 'TickLabelPosition',
              ( ['out', 'retval'], POINTER(XlTickLabelPosition), 'prop' )),
    COMMETHOD([dispid(1610743856), 'propput'], HRESULT, 'TickLabelPosition',
              ( ['in'], XlTickLabelPosition, 'prop' )),
    COMMETHOD([dispid(1610743858), 'propget'], HRESULT, 'TickLabels',
              ( ['out', 'retval'], POINTER(POINTER(TickLabels)), 'prop' )),
    COMMETHOD([dispid(1610743859), 'propget'], HRESULT, 'TickLabelSpacing',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(1610743859), 'propput'], HRESULT, 'TickLabelSpacing',
              ( ['in'], c_int, 'prop' )),
    COMMETHOD([dispid(1610743861), 'propget'], HRESULT, 'TickMarkSpacing',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(1610743861), 'propput'], HRESULT, 'TickMarkSpacing',
              ( ['in'], c_int, 'prop' )),
    COMMETHOD([dispid(1610743863), 'propget'], HRESULT, 'Type',
              ( ['out', 'retval'], POINTER(XlAxisType), 'prop' )),
    COMMETHOD([dispid(1610743863), 'propput'], HRESULT, 'Type',
              ( ['in'], XlAxisType, 'prop' )),
    COMMETHOD([dispid(1610743865), 'propget'], HRESULT, 'BaseUnit',
              ( ['out', 'retval'], POINTER(XlTimeUnit), 'prop' )),
    COMMETHOD([dispid(1610743865), 'propput'], HRESULT, 'BaseUnit',
              ( ['in'], XlTimeUnit, 'prop' )),
    COMMETHOD([dispid(1610743867), 'propget'], HRESULT, 'BaseUnitIsAuto',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'prop' )),
    COMMETHOD([dispid(1610743867), 'propput'], HRESULT, 'BaseUnitIsAuto',
              ( ['in'], VARIANT_BOOL, 'prop' )),
    COMMETHOD([dispid(1610743869), 'propget'], HRESULT, 'MajorUnitScale',
              ( ['out', 'retval'], POINTER(XlTimeUnit), 'prop' )),
    COMMETHOD([dispid(1610743869), 'propput'], HRESULT, 'MajorUnitScale',
              ( ['in'], XlTimeUnit, 'prop' )),
    COMMETHOD([dispid(1610743871), 'propget'], HRESULT, 'MinorUnitScale',
              ( ['out', 'retval'], POINTER(XlTimeUnit), 'prop' )),
    COMMETHOD([dispid(1610743871), 'propput'], HRESULT, 'MinorUnitScale',
              ( ['in'], XlTimeUnit, 'prop' )),
    COMMETHOD([dispid(1610743873), 'propget'], HRESULT, 'CategoryType',
              ( ['out', 'retval'], POINTER(XlCategoryType), 'prop' )),
    COMMETHOD([dispid(1610743873), 'propput'], HRESULT, 'CategoryType',
              ( ['in'], XlCategoryType, 'prop' )),
    COMMETHOD([dispid(1610743875), 'propget'], HRESULT, 'Left',
              ( ['out', 'retval'], POINTER(c_double), 'prop' )),
    COMMETHOD([dispid(1610743876), 'propget'], HRESULT, 'Top',
              ( ['out', 'retval'], POINTER(c_double), 'prop' )),
    COMMETHOD([dispid(1610743877), 'propget'], HRESULT, 'Width',
              ( ['out', 'retval'], POINTER(c_double), 'prop' )),
    COMMETHOD([dispid(1610743878), 'propget'], HRESULT, 'Height',
              ( ['out', 'retval'], POINTER(c_double), 'prop' )),
    COMMETHOD([dispid(1610743879), 'propget'], HRESULT, 'DisplayUnit',
              ( ['out', 'retval'], POINTER(XlDisplayUnit), 'prop' )),
    COMMETHOD([dispid(1610743879), 'propput'], HRESULT, 'DisplayUnit',
              ( ['in'], XlDisplayUnit, 'prop' )),
    COMMETHOD([dispid(1610743881), 'propget'], HRESULT, 'DisplayUnitCustom',
              ( ['out', 'retval'], POINTER(c_double), 'prop' )),
    COMMETHOD([dispid(1610743881), 'propput'], HRESULT, 'DisplayUnitCustom',
              ( ['in'], c_double, 'prop' )),
    COMMETHOD([dispid(1610743883), 'propget'], HRESULT, 'HasDisplayUnitLabel',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'prop' )),
    COMMETHOD([dispid(1610743883), 'propput'], HRESULT, 'HasDisplayUnitLabel',
              ( ['in'], VARIANT_BOOL, 'prop' )),
    COMMETHOD([dispid(1610743885), 'propget'], HRESULT, 'DisplayUnitLabel',
              ( ['out', 'retval'], POINTER(POINTER(DisplayUnitLabel)), 'prop' )),
    COMMETHOD([dispid(1610743886), 'propget'], HRESULT, 'Border',
              ( ['out', 'retval'], POINTER(POINTER(ChartBorder)), 'prop' )),
    COMMETHOD([dispid(1610743888), 'propget'], HRESULT, 'Format',
              ( ['out', 'retval'], POINTER(POINTER(ChartFormat)), 'prop' )),
    COMMETHOD([dispid(148), 'propget'], HRESULT, 'Application',
              ( ['out', 'retval'], POINTER(POINTER(IDispatch)), 'prop' )),
    COMMETHOD([dispid(149), 'propget'], HRESULT, 'Creator',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(150), 'propget'], HRESULT, 'Parent',
              ( ['out', 'retval'], POINTER(POINTER(IDispatch)), 'prop' )),
    COMMETHOD([dispid(151), 'propget'], HRESULT, 'CategorySortOrder',
              ( ['out', 'retval'], POINTER(XlCategorySortOrder), 'prop' )),
    COMMETHOD([dispid(151), 'propput'], HRESULT, 'CategorySortOrder',
              ( ['in'], XlCategorySortOrder, 'prop' )),
    COMMETHOD([dispid(253)], HRESULT, 'SetProperty',
              ( ['in'], BSTR, 'ID' ),
              ( ['in'], VARIANT, 'Value' )),
    COMMETHOD([dispid(254)], HRESULT, 'GetProperty',
              ( ['in'], BSTR, 'ID' ),
              ( ['out', 'retval'], POINTER(VARIANT), 'prop' )),
]
################################################################
## code template for Axis implementation
##class Axis_Impl(object):
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    AxisBetweenCategories = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def AxisGroup(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def AxisTitle(self):
##        '-no docstring-'
##        #return prop
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    CategoryNames = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    Crosses = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    CrossesAt = property(_get, _set, doc = _set.__doc__)
##
##    def Delete(self):
##        '-no docstring-'
##        #return prop
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    HasMajorGridlines = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    HasMinorGridlines = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    HasTitle = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def MajorGridlines(self):
##        '-no docstring-'
##        #return prop
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    MajorTickMark = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    MajorUnit = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    LogBase = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    TickLabelSpacingIsAuto = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    MajorUnitIsAuto = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    MaximumScale = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    MaximumScaleIsAuto = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    MinimumScale = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    MinimumScaleIsAuto = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def MinorGridlines(self):
##        '-no docstring-'
##        #return prop
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    MinorTickMark = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    MinorUnit = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    MinorUnitIsAuto = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    ReversePlotOrder = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    ScaleType = property(_get, _set, doc = _set.__doc__)
##
##    def Select(self):
##        '-no docstring-'
##        #return prop
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    TickLabelPosition = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def TickLabels(self):
##        '-no docstring-'
##        #return prop
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    TickLabelSpacing = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    TickMarkSpacing = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    Type = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    BaseUnit = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    BaseUnitIsAuto = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    MajorUnitScale = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    MinorUnitScale = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    CategoryType = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Left(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Top(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Width(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Height(self):
##        '-no docstring-'
##        #return prop
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    DisplayUnit = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    DisplayUnitCustom = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    HasDisplayUnitLabel = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def DisplayUnitLabel(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Border(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Format(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Creator(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return prop
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    CategorySortOrder = property(_get, _set, doc = _set.__doc__)
##
##    def SetProperty(self, ID, Value):
##        '-no docstring-'
##        #return 
##
##    def GetProperty(self, ID):
##        '-no docstring-'
##        #return prop
##


# values for enumeration 'WdFootnoteLocation'
wdBottomOfPage = 0
wdBeneathText = 1
WdFootnoteLocation = c_int # enum

# values for enumeration 'WdNoteNumberStyle'
wdNoteNumberStyleArabic = 0
wdNoteNumberStyleUppercaseRoman = 1
wdNoteNumberStyleLowercaseRoman = 2
wdNoteNumberStyleUppercaseLetter = 3
wdNoteNumberStyleLowercaseLetter = 4
wdNoteNumberStyleSymbol = 9
wdNoteNumberStyleArabicFullWidth = 14
wdNoteNumberStyleKanji = 10
wdNoteNumberStyleKanjiDigit = 11
wdNoteNumberStyleKanjiTraditional = 16
wdNoteNumberStyleNumberInCircle = 18
wdNoteNumberStyleHanjaRead = 41
wdNoteNumberStyleHanjaReadDigit = 42
wdNoteNumberStyleTradChinNum1 = 33
wdNoteNumberStyleTradChinNum2 = 34
wdNoteNumberStyleSimpChinNum1 = 37
wdNoteNumberStyleSimpChinNum2 = 38
wdNoteNumberStyleHebrewLetter1 = 45
wdNoteNumberStyleArabicLetter1 = 46
wdNoteNumberStyleHebrewLetter2 = 47
wdNoteNumberStyleArabicLetter2 = 48
wdNoteNumberStyleHindiLetter1 = 49
wdNoteNumberStyleHindiLetter2 = 50
wdNoteNumberStyleHindiArabic = 51
wdNoteNumberStyleHindiCardinalText = 52
wdNoteNumberStyleThaiLetter = 53
wdNoteNumberStyleThaiArabic = 54
wdNoteNumberStyleThaiCardinalText = 55
wdNoteNumberStyleVietCardinalText = 56
WdNoteNumberStyle = c_int # enum
FootnoteOptions._methods_ = [
    COMMETHOD([dispid(1000), 'propget'], HRESULT, 'Application',
              ( ['out', 'retval'], POINTER(POINTER(Application)), 'prop' )),
    COMMETHOD([dispid(1001), 'propget'], HRESULT, 'Creator',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(1002), 'propget'], HRESULT, 'Parent',
              ( ['out', 'retval'], POINTER(POINTER(IDispatch)), 'prop' )),
    COMMETHOD([dispid(100), 'propget'], HRESULT, 'Location',
              ( ['out', 'retval'], POINTER(WdFootnoteLocation), 'prop' )),
    COMMETHOD([dispid(100), 'propput'], HRESULT, 'Location',
              ( ['in'], WdFootnoteLocation, 'prop' )),
    COMMETHOD([dispid(101), 'propget'], HRESULT, 'NumberStyle',
              ( ['out', 'retval'], POINTER(WdNoteNumberStyle), 'prop' )),
    COMMETHOD([dispid(101), 'propput'], HRESULT, 'NumberStyle',
              ( ['in'], WdNoteNumberStyle, 'prop' )),
    COMMETHOD([dispid(102), 'propget'], HRESULT, 'StartingNumber',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(102), 'propput'], HRESULT, 'StartingNumber',
              ( ['in'], c_int, 'prop' )),
    COMMETHOD([dispid(103), 'propget'], HRESULT, 'NumberingRule',
              ( ['out', 'retval'], POINTER(WdNumberingRule), 'prop' )),
    COMMETHOD([dispid(103), 'propput'], HRESULT, 'NumberingRule',
              ( ['in'], WdNumberingRule, 'prop' )),
    COMMETHOD([dispid(104), 'propget'], HRESULT, 'LayoutColumns',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(104), 'propput'], HRESULT, 'LayoutColumns',
              ( ['in'], c_int, 'prop' )),
]
################################################################
## code template for FootnoteOptions implementation
##class FootnoteOptions_Impl(object):
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Creator(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return prop
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    Location = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    NumberStyle = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    StartingNumber = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    NumberingRule = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    LayoutColumns = property(_get, _set, doc = _set.__doc__)
##

class Version(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{000209B4-0000-0000-C000-000000000046}')
    _idlflags_ = ['dual', 'nonextensible', 'oleautomation']
Version._methods_ = [
    COMMETHOD([dispid(1000), 'propget'], HRESULT, 'Application',
              ( ['out', 'retval'], POINTER(POINTER(Application)), 'prop' )),
    COMMETHOD([dispid(1001), 'propget'], HRESULT, 'Creator',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(1002), 'propget'], HRESULT, 'Parent',
              ( ['out', 'retval'], POINTER(POINTER(IDispatch)), 'prop' )),
    COMMETHOD([dispid(1003), 'propget'], HRESULT, 'SavedBy',
              ( ['out', 'retval'], POINTER(BSTR), 'prop' )),
    COMMETHOD([dispid(1004), 'propget'], HRESULT, 'Comment',
              ( ['out', 'retval'], POINTER(BSTR), 'prop' )),
    COMMETHOD([dispid(1005), 'propget'], HRESULT, 'Date',
              ( ['out', 'retval'], POINTER(c_double), 'prop' )),
    COMMETHOD([dispid(2), 'propget'], HRESULT, 'Index',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(101), 'hidden'], HRESULT, 'OpenOld'),
    COMMETHOD([dispid(102)], HRESULT, 'Delete'),
    COMMETHOD([dispid(103)], HRESULT, 'Open',
              ( ['out', 'retval'], POINTER(POINTER(Document)), 'prop' )),
]
################################################################
## code template for Version implementation
##class Version_Impl(object):
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Creator(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def SavedBy(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Comment(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Date(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Index(self):
##        '-no docstring-'
##        #return prop
##
##    def OpenOld(self):
##        '-no docstring-'
##        #return 
##
##    def Delete(self):
##        '-no docstring-'
##        #return 
##
##    def Open(self):
##        '-no docstring-'
##        #return prop
##

Hyperlink._methods_ = [
    COMMETHOD([dispid(1000), 'propget'], HRESULT, 'Application',
              ( ['out', 'retval'], POINTER(POINTER(Application)), 'prop' )),
    COMMETHOD([dispid(1001), 'propget'], HRESULT, 'Creator',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(1002), 'propget'], HRESULT, 'Parent',
              ( ['out', 'retval'], POINTER(POINTER(IDispatch)), 'prop' )),
    COMMETHOD([dispid(1003), 'propget'], HRESULT, 'Name',
              ( ['out', 'retval'], POINTER(BSTR), 'prop' )),
    COMMETHOD([dispid(1004), 'hidden', 'propget'], HRESULT, 'AddressOld',
              ( ['out', 'retval'], POINTER(BSTR), 'prop' )),
    COMMETHOD([dispid(1005), 'propget'], HRESULT, 'Type',
              ( ['out', 'retval'], POINTER(comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoHyperlinkType), 'prop' )),
    COMMETHOD([dispid(1006), 'propget'], HRESULT, 'Range',
              ( ['out', 'retval'], POINTER(POINTER(Range)), 'prop' )),
    COMMETHOD([dispid(1007), 'propget'], HRESULT, 'Shape',
              ( ['out', 'retval'], POINTER(POINTER(Shape)), 'prop' )),
    COMMETHOD([dispid(1008), 'hidden', 'propget'], HRESULT, 'SubAddressOld',
              ( ['out', 'retval'], POINTER(BSTR), 'prop' )),
    COMMETHOD([dispid(1009), 'propget'], HRESULT, 'ExtraInfoRequired',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'prop' )),
    COMMETHOD([dispid(103)], HRESULT, 'Delete'),
    COMMETHOD([dispid(104)], HRESULT, 'Follow',
              ( ['in', 'optional'], POINTER(VARIANT), 'NewWindow' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'AddHistory' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'ExtraInfo' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'Method' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'HeaderInfo' )),
    COMMETHOD([dispid(105)], HRESULT, 'AddToFavorites'),
    COMMETHOD([dispid(106)], HRESULT, 'CreateNewDocument',
              ( ['in'], BSTR, 'FileName' ),
              ( ['in'], VARIANT_BOOL, 'EditNow' ),
              ( ['in'], VARIANT_BOOL, 'Overwrite' )),
    COMMETHOD([dispid(1100), 'propget'], HRESULT, 'Address',
              ( ['out', 'retval'], POINTER(BSTR), 'prop' )),
    COMMETHOD([dispid(1100), 'propput'], HRESULT, 'Address',
              ( ['in'], BSTR, 'prop' )),
    COMMETHOD([dispid(1101), 'propget'], HRESULT, 'SubAddress',
              ( ['out', 'retval'], POINTER(BSTR), 'prop' )),
    COMMETHOD([dispid(1101), 'propput'], HRESULT, 'SubAddress',
              ( ['in'], BSTR, 'prop' )),
    COMMETHOD([dispid(1010), 'propget'], HRESULT, 'EmailSubject',
              ( ['out', 'retval'], POINTER(BSTR), 'prop' )),
    COMMETHOD([dispid(1010), 'propput'], HRESULT, 'EmailSubject',
              ( ['in'], BSTR, 'prop' )),
    COMMETHOD([dispid(1011), 'propget'], HRESULT, 'ScreenTip',
              ( ['out', 'retval'], POINTER(BSTR), 'prop' )),
    COMMETHOD([dispid(1011), 'propput'], HRESULT, 'ScreenTip',
              ( ['in'], BSTR, 'prop' )),
    COMMETHOD([dispid(1012), 'propget'], HRESULT, 'TextToDisplay',
              ( ['out', 'retval'], POINTER(BSTR), 'prop' )),
    COMMETHOD([dispid(1012), 'propput'], HRESULT, 'TextToDisplay',
              ( ['in'], BSTR, 'prop' )),
    COMMETHOD([dispid(1013), 'propget'], HRESULT, 'Target',
              ( ['out', 'retval'], POINTER(BSTR), 'prop' )),
    COMMETHOD([dispid(1013), 'propput'], HRESULT, 'Target',
              ( ['in'], BSTR, 'prop' )),
]
################################################################
## code template for Hyperlink implementation
##class Hyperlink_Impl(object):
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Creator(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Name(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def AddressOld(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Type(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Range(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Shape(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def SubAddressOld(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def ExtraInfoRequired(self):
##        '-no docstring-'
##        #return prop
##
##    def Delete(self):
##        '-no docstring-'
##        #return 
##
##    def Follow(self, NewWindow, AddHistory, ExtraInfo, Method, HeaderInfo):
##        '-no docstring-'
##        #return 
##
##    def AddToFavorites(self):
##        '-no docstring-'
##        #return 
##
##    def CreateNewDocument(self, FileName, EditNow, Overwrite):
##        '-no docstring-'
##        #return 
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    Address = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    SubAddress = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    EmailSubject = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    ScreenTip = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    TextToDisplay = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    Target = property(_get, _set, doc = _set.__doc__)
##


# values for enumeration 'WdXMLNodeType'
wdXMLNodeElement = 1
wdXMLNodeAttribute = 2
WdXMLNodeType = c_int # enum
XMLNode._methods_ = [
    COMMETHOD([dispid(0), 'propget'], HRESULT, 'BaseName',
              ( ['out', 'retval'], POINTER(BSTR), 'prop' )),
    COMMETHOD([dispid(1000), 'propget'], HRESULT, 'Application',
              ( ['out', 'retval'], POINTER(POINTER(Application)), 'prop' )),
    COMMETHOD([dispid(1001), 'propget'], HRESULT, 'Creator',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(1002), 'propget'], HRESULT, 'Parent',
              ( ['out', 'retval'], POINTER(POINTER(IDispatch)), 'prop' )),
    COMMETHOD([dispid(1), 'propget'], HRESULT, 'Range',
              ( ['out', 'retval'], POINTER(POINTER(Range)), 'prop' )),
    COMMETHOD([dispid(2), 'propget'], HRESULT, 'Text',
              ( ['out', 'retval'], POINTER(BSTR), 'prop' )),
    COMMETHOD([dispid(2), 'propput'], HRESULT, 'Text',
              ( ['in'], BSTR, 'prop' )),
    COMMETHOD([dispid(4), 'propget'], HRESULT, 'NamespaceURI',
              ( ['out', 'retval'], POINTER(BSTR), 'prop' )),
    COMMETHOD([dispid(5), 'propget'], HRESULT, 'XML',
              ( ['in', 'optional'], VARIANT_BOOL, 'DataOnly', False ),
              ( ['out', 'retval'], POINTER(BSTR), 'prop' )),
    COMMETHOD([dispid(6), 'propget'], HRESULT, 'NextSibling',
              ( ['out', 'retval'], POINTER(POINTER(XMLNode)), 'prop' )),
    COMMETHOD([dispid(7), 'propget'], HRESULT, 'PreviousSibling',
              ( ['out', 'retval'], POINTER(POINTER(XMLNode)), 'prop' )),
    COMMETHOD([dispid(8), 'propget'], HRESULT, 'ParentNode',
              ( ['out', 'retval'], POINTER(POINTER(XMLNode)), 'prop' )),
    COMMETHOD([dispid(9), 'propget'], HRESULT, 'FirstChild',
              ( ['out', 'retval'], POINTER(POINTER(XMLNode)), 'prop' )),
    COMMETHOD([dispid(10), 'propget'], HRESULT, 'LastChild',
              ( ['out', 'retval'], POINTER(POINTER(XMLNode)), 'prop' )),
    COMMETHOD([dispid(11), 'propget'], HRESULT, 'OwnerDocument',
              ( ['out', 'retval'], POINTER(POINTER(Document)), 'prop' )),
    COMMETHOD([dispid(12), 'propget'], HRESULT, 'NodeType',
              ( ['out', 'retval'], POINTER(WdXMLNodeType), 'prop' )),
    COMMETHOD([dispid(13), 'propget'], HRESULT, 'ChildNodes',
              ( ['out', 'retval'], POINTER(POINTER(XMLNodes)), 'prop' )),
    COMMETHOD([dispid(15), 'propget'], HRESULT, 'Attributes',
              ( ['out', 'retval'], POINTER(POINTER(XMLNodes)), 'prop' )),
    COMMETHOD([dispid(16), 'propget'], HRESULT, 'NodeValue',
              ( ['out', 'retval'], POINTER(BSTR), 'prop' )),
    COMMETHOD([dispid(16), 'propput'], HRESULT, 'NodeValue',
              ( ['in'], BSTR, 'prop' )),
    COMMETHOD([dispid(17), 'propget'], HRESULT, 'HasChildNodes',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'prop' )),
    COMMETHOD([dispid(18)], HRESULT, 'SelectSingleNode',
              ( ['in'], BSTR, 'XPath' ),
              ( ['in', 'optional'], BSTR, 'PrefixMapping' ),
              ( ['in', 'optional'], VARIANT_BOOL, 'FastSearchSkippingTextNodes', True ),
              ( ['out', 'retval'], POINTER(POINTER(XMLNode)), 'prop' )),
    COMMETHOD([dispid(19)], HRESULT, 'SelectNodes',
              ( ['in'], BSTR, 'XPath' ),
              ( ['in', 'optional'], BSTR, 'PrefixMapping' ),
              ( ['in', 'optional'], VARIANT_BOOL, 'FastSearchSkippingTextNodes', True ),
              ( ['out', 'retval'], POINTER(POINTER(XMLNodes)), 'prop' )),
    COMMETHOD([dispid(20), 'hidden', 'propget'], HRESULT, 'ChildNodeSuggestions',
              ( ['out', 'retval'], POINTER(POINTER(XMLChildNodeSuggestions)), 'prop' )),
    COMMETHOD([dispid(21), 'propget'], HRESULT, 'Level',
              ( ['out', 'retval'], POINTER(WdXMLNodeLevel), 'prop' )),
    COMMETHOD([dispid(22), 'propget'], HRESULT, 'ValidationStatus',
              ( ['out', 'retval'], POINTER(WdXMLValidationStatus), 'prop' )),
    COMMETHOD([dispid(23), 'hidden', 'propget'], HRESULT, 'SmartTag',
              ( ['out', 'retval'], POINTER(POINTER(SmartTag)), 'prop' )),
    COMMETHOD([dispid(24), 'propget'], HRESULT, 'ValidationErrorText',
              ( ['in', 'optional'], VARIANT_BOOL, 'Advanced', False ),
              ( ['out', 'retval'], POINTER(BSTR), 'prop' )),
    COMMETHOD([dispid(25), 'propget'], HRESULT, 'PlaceholderText',
              ( ['out', 'retval'], POINTER(BSTR), 'prop' )),
    COMMETHOD([dispid(25), 'propput'], HRESULT, 'PlaceholderText',
              ( ['in'], BSTR, 'prop' )),
    COMMETHOD([dispid(100)], HRESULT, 'Delete'),
    COMMETHOD([dispid(101)], HRESULT, 'Copy'),
    COMMETHOD([dispid(102)], HRESULT, 'RemoveChild',
              ( ['in'], POINTER(XMLNode), 'ChildElement' )),
    COMMETHOD([dispid(103)], HRESULT, 'Cut'),
    COMMETHOD([dispid(104)], HRESULT, 'Validate'),
    COMMETHOD([dispid(105)], HRESULT, 'SetValidationError',
              ( ['in'], WdXMLValidationStatus, 'Status' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'ErrorText' ),
              ( ['in', 'optional'], VARIANT_BOOL, 'ClearedAutomatically', True )),
    COMMETHOD([dispid(106), 'propget'], HRESULT, 'WordOpenXML',
              ( ['out', 'retval'], POINTER(BSTR), 'prop' )),
]
################################################################
## code template for XMLNode implementation
##class XMLNode_Impl(object):
##    @property
##    def BaseName(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Creator(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Range(self):
##        '-no docstring-'
##        #return prop
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    Text = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def NamespaceURI(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def XML(self, DataOnly):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def NextSibling(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def PreviousSibling(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def ParentNode(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def FirstChild(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def LastChild(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def OwnerDocument(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def NodeType(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def ChildNodes(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Attributes(self):
##        '-no docstring-'
##        #return prop
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    NodeValue = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def HasChildNodes(self):
##        '-no docstring-'
##        #return prop
##
##    def SelectSingleNode(self, XPath, PrefixMapping, FastSearchSkippingTextNodes):
##        '-no docstring-'
##        #return prop
##
##    def SelectNodes(self, XPath, PrefixMapping, FastSearchSkippingTextNodes):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def ChildNodeSuggestions(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Level(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def ValidationStatus(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def SmartTag(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def ValidationErrorText(self, Advanced):
##        '-no docstring-'
##        #return prop
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    PlaceholderText = property(_get, _set, doc = _set.__doc__)
##
##    def Delete(self):
##        '-no docstring-'
##        #return 
##
##    def Copy(self):
##        '-no docstring-'
##        #return 
##
##    def RemoveChild(self, ChildElement):
##        '-no docstring-'
##        #return 
##
##    def Cut(self):
##        '-no docstring-'
##        #return 
##
##    def Validate(self):
##        '-no docstring-'
##        #return 
##
##    def SetValidationError(self, Status, ErrorText, ClearedAutomatically):
##        '-no docstring-'
##        #return 
##
##    @property
##    def WordOpenXML(self):
##        '-no docstring-'
##        #return prop
##

class SmartTagTypes(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{DB8E3072-E106-4453-8E7C-53056F1D30DC}')
    _idlflags_ = ['hidden', 'dual', 'nonextensible', 'oleautomation']
class SmartTagType(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{5E9A888C-E5DC-4DCB-8308-3C91FB61E6F4}')
    _idlflags_ = ['hidden', 'dual', 'nonextensible', 'oleautomation']
SmartTagTypes._methods_ = [
    COMMETHOD([dispid(-4), 'hidden', 'nonbrowsable', 'propget'], HRESULT, '_NewEnum',
              ( ['out', 'retval'], POINTER(POINTER(IUnknown)), 'prop' )),
    COMMETHOD([dispid(2), 'hidden', 'propget'], HRESULT, 'Count',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(1000), 'hidden', 'propget'], HRESULT, 'Application',
              ( ['out', 'retval'], POINTER(POINTER(Application)), 'prop' )),
    COMMETHOD([dispid(1001), 'hidden', 'propget'], HRESULT, 'Creator',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(1002), 'hidden', 'propget'], HRESULT, 'Parent',
              ( ['out', 'retval'], POINTER(POINTER(IDispatch)), 'prop' )),
    COMMETHOD([dispid(0), 'hidden'], HRESULT, 'Item',
              ( ['in'], POINTER(VARIANT), 'Index' ),
              ( ['out', 'retval'], POINTER(POINTER(SmartTagType)), 'prop' )),
    COMMETHOD([dispid(1003), 'hidden'], HRESULT, 'ReloadAll'),
]
################################################################
## code template for SmartTagTypes implementation
##class SmartTagTypes_Impl(object):
##    @property
##    def _NewEnum(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Count(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Creator(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return prop
##
##    def Item(self, Index):
##        '-no docstring-'
##        #return prop
##
##    def ReloadAll(self):
##        '-no docstring-'
##        #return 
##

class SmartTagRecognizers(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{F2B60A10-DED5-46FB-A914-3C6F4EBB6451}')
    _idlflags_ = ['hidden', 'dual', 'nonextensible', 'oleautomation']
SmartTagType._methods_ = [
    COMMETHOD([dispid(0), 'hidden', 'propget'], HRESULT, 'Name',
              ( ['out', 'retval'], POINTER(BSTR), 'prop' )),
    COMMETHOD([dispid(1000), 'hidden', 'propget'], HRESULT, 'Application',
              ( ['out', 'retval'], POINTER(POINTER(Application)), 'prop' )),
    COMMETHOD([dispid(1001), 'hidden', 'propget'], HRESULT, 'Creator',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(1002), 'hidden', 'propget'], HRESULT, 'Parent',
              ( ['out', 'retval'], POINTER(POINTER(IDispatch)), 'prop' )),
    COMMETHOD([dispid(1003), 'hidden', 'propget'], HRESULT, 'SmartTagActions',
              ( ['out', 'retval'], POINTER(POINTER(SmartTagActions)), 'prop' )),
    COMMETHOD([dispid(1004), 'hidden', 'propget'], HRESULT, 'SmartTagRecognizers',
              ( ['out', 'retval'], POINTER(POINTER(SmartTagRecognizers)), 'prop' )),
    COMMETHOD([dispid(1005), 'hidden', 'propget'], HRESULT, 'FriendlyName',
              ( ['out', 'retval'], POINTER(BSTR), 'prop' )),
]
################################################################
## code template for SmartTagType implementation
##class SmartTagType_Impl(object):
##    @property
##    def Name(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Creator(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def SmartTagActions(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def SmartTagRecognizers(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def FriendlyName(self):
##        '-no docstring-'
##        #return prop
##


# values for enumeration 'WdWrapType'
wdWrapSquare = 0
wdWrapTight = 1
wdWrapThrough = 2
wdWrapNone = 3
wdWrapTopBottom = 4
wdWrapBehind = 5
wdWrapFront = 3
wdWrapInline = 7
WdWrapType = c_int # enum

# values for enumeration 'XlChartGallery'
xlBuiltIn = 21
xlUserDefined = 22
xlAnyGallery = 23
XlChartGallery = c_int # enum
WrapFormat._methods_ = [
    COMMETHOD([dispid(1000), 'propget'], HRESULT, 'Application',
              ( ['out', 'retval'], POINTER(POINTER(Application)), 'prop' )),
    COMMETHOD([dispid(1001), 'propget'], HRESULT, 'Creator',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(1002), 'propget'], HRESULT, 'Parent',
              ( ['out', 'retval'], POINTER(POINTER(IDispatch)), 'prop' )),
    COMMETHOD([dispid(100), 'propget'], HRESULT, 'Type',
              ( ['out', 'retval'], POINTER(WdWrapType), 'prop' )),
    COMMETHOD([dispid(100), 'propput'], HRESULT, 'Type',
              ( ['in'], WdWrapType, 'prop' )),
    COMMETHOD([dispid(101), 'propget'], HRESULT, 'Side',
              ( ['out', 'retval'], POINTER(WdWrapSideType), 'prop' )),
    COMMETHOD([dispid(101), 'propput'], HRESULT, 'Side',
              ( ['in'], WdWrapSideType, 'prop' )),
    COMMETHOD([dispid(102), 'propget'], HRESULT, 'DistanceTop',
              ( ['out', 'retval'], POINTER(c_float), 'prop' )),
    COMMETHOD([dispid(102), 'propput'], HRESULT, 'DistanceTop',
              ( ['in'], c_float, 'prop' )),
    COMMETHOD([dispid(103), 'propget'], HRESULT, 'DistanceBottom',
              ( ['out', 'retval'], POINTER(c_float), 'prop' )),
    COMMETHOD([dispid(103), 'propput'], HRESULT, 'DistanceBottom',
              ( ['in'], c_float, 'prop' )),
    COMMETHOD([dispid(104), 'propget'], HRESULT, 'DistanceLeft',
              ( ['out', 'retval'], POINTER(c_float), 'prop' )),
    COMMETHOD([dispid(104), 'propput'], HRESULT, 'DistanceLeft',
              ( ['in'], c_float, 'prop' )),
    COMMETHOD([dispid(105), 'propget'], HRESULT, 'DistanceRight',
              ( ['out', 'retval'], POINTER(c_float), 'prop' )),
    COMMETHOD([dispid(105), 'propput'], HRESULT, 'DistanceRight',
              ( ['in'], c_float, 'prop' )),
    COMMETHOD([dispid(106), 'propget'], HRESULT, 'AllowOverlap',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(106), 'propput'], HRESULT, 'AllowOverlap',
              ( ['in'], c_int, 'prop' )),
]
################################################################
## code template for WrapFormat implementation
##class WrapFormat_Impl(object):
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Creator(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return prop
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    Type = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    Side = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    DistanceTop = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    DistanceBottom = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    DistanceLeft = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    DistanceRight = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    AllowOverlap = property(_get, _set, doc = _set.__doc__)
##

TextFrame._methods_ = [
    COMMETHOD([dispid(8000), 'propget'], HRESULT, 'Application',
              ( ['out', 'retval'], POINTER(POINTER(Application)), 'prop' )),
    COMMETHOD([dispid(8001), 'propget'], HRESULT, 'Creator',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(1), 'propget'], HRESULT, 'Parent',
              ( ['out', 'retval'], POINTER(POINTER(Shape)), 'prop' )),
    COMMETHOD([dispid(100), 'propget'], HRESULT, 'MarginBottom',
              ( ['out', 'retval'], POINTER(c_float), 'prop' )),
    COMMETHOD([dispid(100), 'propput'], HRESULT, 'MarginBottom',
              ( ['in'], c_float, 'prop' )),
    COMMETHOD([dispid(101), 'propget'], HRESULT, 'MarginLeft',
              ( ['out', 'retval'], POINTER(c_float), 'prop' )),
    COMMETHOD([dispid(101), 'propput'], HRESULT, 'MarginLeft',
              ( ['in'], c_float, 'prop' )),
    COMMETHOD([dispid(102), 'propget'], HRESULT, 'MarginRight',
              ( ['out', 'retval'], POINTER(c_float), 'prop' )),
    COMMETHOD([dispid(102), 'propput'], HRESULT, 'MarginRight',
              ( ['in'], c_float, 'prop' )),
    COMMETHOD([dispid(103), 'propget'], HRESULT, 'MarginTop',
              ( ['out', 'retval'], POINTER(c_float), 'prop' )),
    COMMETHOD([dispid(103), 'propput'], HRESULT, 'MarginTop',
              ( ['in'], c_float, 'prop' )),
    COMMETHOD([dispid(104), 'propget'], HRESULT, 'Orientation',
              ( ['out', 'retval'], POINTER(comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoTextOrientation), 'prop' )),
    COMMETHOD([dispid(104), 'propput'], HRESULT, 'Orientation',
              ( ['in'], comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoTextOrientation, 'prop' )),
    COMMETHOD([dispid(1001), 'propget'], HRESULT, 'TextRange',
              ( ['out', 'retval'], POINTER(POINTER(Range)), 'prop' )),
    COMMETHOD([dispid(1002), 'propget'], HRESULT, 'ContainingRange',
              ( ['out', 'retval'], POINTER(POINTER(Range)), 'prop' )),
    COMMETHOD([dispid(5001), 'propget'], HRESULT, 'Next',
              ( ['out', 'retval'], POINTER(POINTER(TextFrame)), 'prop' )),
    COMMETHOD([dispid(5001), 'propput'], HRESULT, 'Next',
              ( ['in'], POINTER(TextFrame), 'prop' )),
    COMMETHOD([dispid(5002), 'propget'], HRESULT, 'Previous',
              ( ['out', 'retval'], POINTER(POINTER(TextFrame)), 'prop' )),
    COMMETHOD([dispid(5002), 'propput'], HRESULT, 'Previous',
              ( ['in'], POINTER(TextFrame), 'prop' )),
    COMMETHOD([dispid(5003), 'propget'], HRESULT, 'Overflowing',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'prop' )),
    COMMETHOD([dispid(5008), 'propget'], HRESULT, 'HasText',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(5004)], HRESULT, 'BreakForwardLink'),
    COMMETHOD([dispid(5006)], HRESULT, 'ValidLinkTarget',
              ( ['in'], POINTER(TextFrame), 'TargetTextFrame' ),
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'prop' )),
    COMMETHOD([dispid(5009), 'propget'], HRESULT, 'AutoSize',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(5009), 'propput'], HRESULT, 'AutoSize',
              ( ['in'], c_int, 'prop' )),
    COMMETHOD([dispid(5010), 'propget'], HRESULT, 'WordWrap',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(5010), 'propput'], HRESULT, 'WordWrap',
              ( ['in'], c_int, 'prop' )),
    COMMETHOD([dispid(5011), 'propget'], HRESULT, 'VerticalAnchor',
              ( ['out', 'retval'], POINTER(comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoVerticalAnchor), 'prop' )),
    COMMETHOD([dispid(5011), 'propput'], HRESULT, 'VerticalAnchor',
              ( ['in'], comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoVerticalAnchor, 'prop' )),
    COMMETHOD([dispid(5012), 'propget'], HRESULT, 'HorizontalAnchor',
              ( ['out', 'retval'], POINTER(comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoHorizontalAnchor), 'prop' )),
    COMMETHOD([dispid(5012), 'propput'], HRESULT, 'HorizontalAnchor',
              ( ['in'], comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoHorizontalAnchor, 'prop' )),
    COMMETHOD([dispid(5013), 'propget'], HRESULT, 'PathFormat',
              ( ['out', 'retval'], POINTER(comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoPathFormat), 'prop' )),
    COMMETHOD([dispid(5013), 'propput'], HRESULT, 'PathFormat',
              ( ['in'], comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoPathFormat, 'prop' )),
    COMMETHOD([dispid(5014), 'propget'], HRESULT, 'WarpFormat',
              ( ['out', 'retval'], POINTER(comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoWarpFormat), 'prop' )),
    COMMETHOD([dispid(5014), 'propput'], HRESULT, 'WarpFormat',
              ( ['in'], comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoWarpFormat, 'prop' )),
    COMMETHOD([dispid(5015), 'propget'], HRESULT, 'Column',
              ( ['out', 'retval'], POINTER(POINTER(comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.TextColumn2)), 'prop' )),
    COMMETHOD([dispid(5016), 'propget'], HRESULT, 'ThreeD',
              ( ['out', 'retval'], POINTER(POINTER(ThreeDFormat)), 'prop' )),
    COMMETHOD([dispid(5017), 'propget'], HRESULT, 'NoTextRotation',
              ( ['out', 'retval'], POINTER(comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoTriState), 'prop' )),
    COMMETHOD([dispid(5017), 'propput'], HRESULT, 'NoTextRotation',
              ( ['in'], comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoTriState, 'prop' )),
    COMMETHOD([dispid(5018)], HRESULT, 'DeleteText'),
]
################################################################
## code template for TextFrame implementation
##class TextFrame_Impl(object):
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Creator(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return prop
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    MarginBottom = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    MarginLeft = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    MarginRight = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    MarginTop = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    Orientation = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def TextRange(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def ContainingRange(self):
##        '-no docstring-'
##        #return prop
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    Next = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    Previous = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Overflowing(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def HasText(self):
##        '-no docstring-'
##        #return prop
##
##    def BreakForwardLink(self):
##        '-no docstring-'
##        #return 
##
##    def ValidLinkTarget(self, TargetTextFrame):
##        '-no docstring-'
##        #return prop
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    AutoSize = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    WordWrap = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    VerticalAnchor = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    HorizontalAnchor = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    PathFormat = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    WarpFormat = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Column(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def ThreeD(self):
##        '-no docstring-'
##        #return prop
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    NoTextRotation = property(_get, _set, doc = _set.__doc__)
##
##    def DeleteText(self):
##        '-no docstring-'
##        #return 
##

class Editor(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{DD947D72-F33C-4198-9BDF-F86181D05E41}')
    _idlflags_ = ['dual', 'nonextensible', 'oleautomation']
Editors._methods_ = [
    COMMETHOD([dispid(1000), 'propget'], HRESULT, 'Application',
              ( ['out', 'retval'], POINTER(POINTER(Application)), 'prop' )),
    COMMETHOD([dispid(1001), 'propget'], HRESULT, 'Creator',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(1002), 'propget'], HRESULT, 'Parent',
              ( ['out', 'retval'], POINTER(POINTER(IDispatch)), 'prop' )),
    COMMETHOD([dispid(2), 'propget'], HRESULT, 'Count',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(0)], HRESULT, 'Item',
              ( ['in'], POINTER(VARIANT), 'Index' ),
              ( ['out', 'retval'], POINTER(POINTER(Editor)), 'prop' )),
    COMMETHOD([dispid(501)], HRESULT, 'Add',
              ( ['in'], POINTER(VARIANT), 'EditorID' ),
              ( ['out', 'retval'], POINTER(POINTER(Editor)), 'prop' )),
]
################################################################
## code template for Editors implementation
##class Editors_Impl(object):
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Creator(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Count(self):
##        '-no docstring-'
##        #return prop
##
##    def Item(self, Index):
##        '-no docstring-'
##        #return prop
##
##    def Add(self, EditorID):
##        '-no docstring-'
##        #return prop
##

class EmailAuthor(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{000209D7-0000-0000-C000-000000000046}')
    _idlflags_ = ['dual', 'nonextensible', 'oleautomation']
Email._methods_ = [
    COMMETHOD([dispid(100), 'propget'], HRESULT, 'Application',
              ( ['out', 'retval'], POINTER(POINTER(Application)), 'prop' )),
    COMMETHOD([dispid(101), 'propget'], HRESULT, 'Creator',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(102), 'propget'], HRESULT, 'Parent',
              ( ['out', 'retval'], POINTER(POINTER(IDispatch)), 'prop' )),
    COMMETHOD([dispid(105), 'propget'], HRESULT, 'CurrentEmailAuthor',
              ( ['out', 'retval'], POINTER(POINTER(EmailAuthor)), 'prop' )),
]
################################################################
## code template for Email implementation
##class Email_Impl(object):
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Creator(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def CurrentEmailAuthor(self):
##        '-no docstring-'
##        #return prop
##


# values for enumeration 'WdOMathType'
wdOMathDisplay = 0
wdOMathInline = 1
WdOMathType = c_int # enum
MailMergeDataField._methods_ = [
    COMMETHOD([dispid(1000), 'propget'], HRESULT, 'Application',
              ( ['out', 'retval'], POINTER(POINTER(Application)), 'prop' )),
    COMMETHOD([dispid(1001), 'propget'], HRESULT, 'Creator',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(1002), 'propget'], HRESULT, 'Parent',
              ( ['out', 'retval'], POINTER(POINTER(IDispatch)), 'prop' )),
    COMMETHOD([dispid(0), 'propget'], HRESULT, 'Value',
              ( ['out', 'retval'], POINTER(BSTR), 'prop' )),
    COMMETHOD([dispid(1), 'propget'], HRESULT, 'Name',
              ( ['out', 'retval'], POINTER(BSTR), 'prop' )),
    COMMETHOD([dispid(2), 'propget'], HRESULT, 'Index',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
]
################################################################
## code template for MailMergeDataField implementation
##class MailMergeDataField_Impl(object):
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Creator(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Value(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Name(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Index(self):
##        '-no docstring-'
##        #return prop
##

CheckBox._methods_ = [
    COMMETHOD([dispid(1000), 'propget'], HRESULT, 'Application',
              ( ['out', 'retval'], POINTER(POINTER(Application)), 'prop' )),
    COMMETHOD([dispid(1001), 'propget'], HRESULT, 'Creator',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(1002), 'propget'], HRESULT, 'Parent',
              ( ['out', 'retval'], POINTER(POINTER(IDispatch)), 'prop' )),
    COMMETHOD([dispid(0), 'propget'], HRESULT, 'Valid',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'prop' )),
    COMMETHOD([dispid(1), 'propget'], HRESULT, 'AutoSize',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'prop' )),
    COMMETHOD([dispid(1), 'propput'], HRESULT, 'AutoSize',
              ( ['in'], VARIANT_BOOL, 'prop' )),
    COMMETHOD([dispid(2), 'propget'], HRESULT, 'Size',
              ( ['out', 'retval'], POINTER(c_float), 'prop' )),
    COMMETHOD([dispid(2), 'propput'], HRESULT, 'Size',
              ( ['in'], c_float, 'prop' )),
    COMMETHOD([dispid(3), 'propget'], HRESULT, 'Default',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'prop' )),
    COMMETHOD([dispid(3), 'propput'], HRESULT, 'Default',
              ( ['in'], VARIANT_BOOL, 'prop' )),
    COMMETHOD([dispid(4), 'propget'], HRESULT, 'Value',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'prop' )),
    COMMETHOD([dispid(4), 'propput'], HRESULT, 'Value',
              ( ['in'], VARIANT_BOOL, 'prop' )),
]
################################################################
## code template for CheckBox implementation
##class CheckBox_Impl(object):
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Creator(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Valid(self):
##        '-no docstring-'
##        #return prop
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    AutoSize = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    Size = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    Default = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    Value = property(_get, _set, doc = _set.__doc__)
##

Frames._methods_ = [
    COMMETHOD([dispid(1000), 'propget'], HRESULT, 'Application',
              ( ['out', 'retval'], POINTER(POINTER(Application)), 'prop' )),
    COMMETHOD([dispid(1001), 'propget'], HRESULT, 'Creator',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(1002), 'propget'], HRESULT, 'Parent',
              ( ['out', 'retval'], POINTER(POINTER(IDispatch)), 'prop' )),
    COMMETHOD([dispid(-4), 'nonbrowsable', 'propget'], HRESULT, '_NewEnum',
              ( ['out', 'retval'], POINTER(POINTER(IUnknown)), 'prop' )),
    COMMETHOD([dispid(1), 'propget'], HRESULT, 'Count',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(0)], HRESULT, 'Item',
              ( ['in'], c_int, 'Index' ),
              ( ['out', 'retval'], POINTER(POINTER(Frame)), 'prop' )),
    COMMETHOD([dispid(100)], HRESULT, 'Add',
              ( ['in'], POINTER(Range), 'Range' ),
              ( ['out', 'retval'], POINTER(POINTER(Frame)), 'prop' )),
    COMMETHOD([dispid(101)], HRESULT, 'Delete'),
]
################################################################
## code template for Frames implementation
##class Frames_Impl(object):
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Creator(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def _NewEnum(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Count(self):
##        '-no docstring-'
##        #return prop
##
##    def Item(self, Index):
##        '-no docstring-'
##        #return prop
##
##    def Add(self, Range):
##        '-no docstring-'
##        #return prop
##
##    def Delete(self):
##        '-no docstring-'
##        #return 
##

class SmartTagAction(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{DFB6AA6C-1068-420F-969D-01280FCC1630}')
    _idlflags_ = ['hidden', 'dual', 'nonextensible', 'oleautomation']
SmartTagActions._methods_ = [
    COMMETHOD([dispid(-4), 'nonbrowsable', 'propget'], HRESULT, '_NewEnum',
              ( ['out', 'retval'], POINTER(POINTER(IUnknown)), 'prop' )),
    COMMETHOD([dispid(2), 'hidden', 'propget'], HRESULT, 'Count',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(1000), 'hidden', 'propget'], HRESULT, 'Application',
              ( ['out', 'retval'], POINTER(POINTER(Application)), 'prop' )),
    COMMETHOD([dispid(1001), 'hidden', 'propget'], HRESULT, 'Creator',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(1002), 'hidden', 'propget'], HRESULT, 'Parent',
              ( ['out', 'retval'], POINTER(POINTER(IDispatch)), 'prop' )),
    COMMETHOD([dispid(0), 'hidden'], HRESULT, 'Item',
              ( ['in'], POINTER(VARIANT), 'Index' ),
              ( ['out', 'retval'], POINTER(POINTER(SmartTagAction)), 'prop' )),
    COMMETHOD([dispid(1003), 'hidden'], HRESULT, 'ReloadActions'),
]
################################################################
## code template for SmartTagActions implementation
##class SmartTagActions_Impl(object):
##    @property
##    def _NewEnum(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Count(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Creator(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return prop
##
##    def Item(self, Index):
##        '-no docstring-'
##        #return prop
##
##    def ReloadActions(self):
##        '-no docstring-'
##        #return 
##

class LegendEntry(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{C4A02049-024C-4273-8934-E48CC21479A9}')
    _idlflags_ = ['dual', 'nonextensible', 'oleautomation']
LegendEntry._methods_ = [
    COMMETHOD([dispid(150), 'propget'], HRESULT, 'Parent',
              ( ['out', 'retval'], POINTER(POINTER(IDispatch)), 'prop' )),
    COMMETHOD([dispid(117)], HRESULT, 'Delete',
              ( ['out', 'retval'], POINTER(VARIANT), 'prop' )),
    COMMETHOD([dispid(146), 'propget'], HRESULT, 'Font',
              ( ['out', 'retval'], POINTER(POINTER(ChartFont)), 'prop' )),
    COMMETHOD([dispid(486), 'propget'], HRESULT, 'Index',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(174), 'propget'], HRESULT, 'LegendKey',
              ( ['out', 'retval'], POINTER(POINTER(LegendKey)), 'prop' )),
    COMMETHOD([dispid(235)], HRESULT, 'Select',
              ( ['out', 'retval'], POINTER(VARIANT), 'prop' )),
    COMMETHOD([dispid(1525), 'hidden', 'propget'], HRESULT, 'AutoScaleFont',
              ( ['out', 'retval'], POINTER(VARIANT), 'prop' )),
    COMMETHOD([dispid(1525), 'hidden', 'propput'], HRESULT, 'AutoScaleFont',
              ( ['in'], VARIANT, 'prop' )),
    COMMETHOD([dispid(127), 'propget'], HRESULT, 'Left',
              ( ['out', 'retval'], POINTER(c_double), 'prop' )),
    COMMETHOD([dispid(126), 'propget'], HRESULT, 'Top',
              ( ['out', 'retval'], POINTER(c_double), 'prop' )),
    COMMETHOD([dispid(122), 'propget'], HRESULT, 'Width',
              ( ['out', 'retval'], POINTER(c_double), 'prop' )),
    COMMETHOD([dispid(123), 'propget'], HRESULT, 'Height',
              ( ['out', 'retval'], POINTER(c_double), 'prop' )),
    COMMETHOD([dispid(1610743820), 'propget'], HRESULT, 'Format',
              ( ['out', 'retval'], POINTER(POINTER(ChartFormat)), 'prop' )),
    COMMETHOD([dispid(148), 'propget'], HRESULT, 'Application',
              ( ['out', 'retval'], POINTER(POINTER(IDispatch)), 'prop' )),
    COMMETHOD([dispid(149), 'propget'], HRESULT, 'Creator',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
]
################################################################
## code template for LegendEntry implementation
##class LegendEntry_Impl(object):
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return prop
##
##    def Delete(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Font(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Index(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def LegendKey(self):
##        '-no docstring-'
##        #return prop
##
##    def Select(self):
##        '-no docstring-'
##        #return prop
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    AutoScaleFont = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Left(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Top(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Width(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Height(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Format(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Creator(self):
##        '-no docstring-'
##        #return prop
##


# values for enumeration 'XlBackground'
xlBackgroundAutomatic = -4105
xlBackgroundOpaque = 3
xlBackgroundTransparent = 2
XlBackground = c_int # enum
ConnectorFormat._methods_ = [
    COMMETHOD([dispid(1000), 'propget'], HRESULT, 'Application',
              ( ['out', 'retval'], POINTER(POINTER(Application)), 'prop' )),
    COMMETHOD([dispid(1001), 'propget'], HRESULT, 'Creator',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(100), 'propget'], HRESULT, 'BeginConnected',
              ( ['out', 'retval'], POINTER(comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoTriState), 'prop' )),
    COMMETHOD([dispid(101), 'propget'], HRESULT, 'BeginConnectedShape',
              ( ['out', 'retval'], POINTER(POINTER(Shape)), 'prop' )),
    COMMETHOD([dispid(102), 'propget'], HRESULT, 'BeginConnectionSite',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(103), 'propget'], HRESULT, 'EndConnected',
              ( ['out', 'retval'], POINTER(comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoTriState), 'prop' )),
    COMMETHOD([dispid(104), 'propget'], HRESULT, 'EndConnectedShape',
              ( ['out', 'retval'], POINTER(POINTER(Shape)), 'prop' )),
    COMMETHOD([dispid(105), 'propget'], HRESULT, 'EndConnectionSite',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(1), 'propget'], HRESULT, 'Parent',
              ( ['out', 'retval'], POINTER(POINTER(IDispatch)), 'prop' )),
    COMMETHOD([dispid(106), 'propget'], HRESULT, 'Type',
              ( ['out', 'retval'], POINTER(comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoConnectorType), 'prop' )),
    COMMETHOD([dispid(106), 'propput'], HRESULT, 'Type',
              ( ['in'], comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoConnectorType, 'prop' )),
    COMMETHOD([dispid(10)], HRESULT, 'BeginConnect',
              ( ['out'], POINTER(POINTER(Shape)), 'ConnectedShape' ),
              ( ['in'], c_int, 'ConnectionSite' )),
    COMMETHOD([dispid(11)], HRESULT, 'BeginDisconnect'),
    COMMETHOD([dispid(12)], HRESULT, 'EndConnect',
              ( ['out'], POINTER(POINTER(Shape)), 'ConnectedShape' ),
              ( ['in'], c_int, 'ConnectionSite' )),
    COMMETHOD([dispid(13)], HRESULT, 'EndDisconnect'),
]
################################################################
## code template for ConnectorFormat implementation
##class ConnectorFormat_Impl(object):
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Creator(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def BeginConnected(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def BeginConnectedShape(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def BeginConnectionSite(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def EndConnected(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def EndConnectedShape(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def EndConnectionSite(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return prop
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    Type = property(_get, _set, doc = _set.__doc__)
##
##    def BeginConnect(self, ConnectionSite):
##        '-no docstring-'
##        #return ConnectedShape
##
##    def BeginDisconnect(self):
##        '-no docstring-'
##        #return 
##
##    def EndConnect(self, ConnectionSite):
##        '-no docstring-'
##        #return ConnectedShape
##
##    def EndDisconnect(self):
##        '-no docstring-'
##        #return 
##


# values for enumeration 'WdCaptionLabelID'
wdCaptionFigure = -1
wdCaptionTable = -2
wdCaptionEquation = -3
WdCaptionLabelID = c_int # enum

# values for enumeration 'WdCaptionNumberStyle'
wdCaptionNumberStyleArabic = 0
wdCaptionNumberStyleUppercaseRoman = 1
wdCaptionNumberStyleLowercaseRoman = 2
wdCaptionNumberStyleUppercaseLetter = 3
wdCaptionNumberStyleLowercaseLetter = 4
wdCaptionNumberStyleArabicFullWidth = 14
wdCaptionNumberStyleKanji = 10
wdCaptionNumberStyleKanjiDigit = 11
wdCaptionNumberStyleKanjiTraditional = 16
wdCaptionNumberStyleNumberInCircle = 18
wdCaptionNumberStyleGanada = 24
wdCaptionNumberStyleChosung = 25
wdCaptionNumberStyleZodiac1 = 30
wdCaptionNumberStyleZodiac2 = 31
wdCaptionNumberStyleHanjaRead = 41
wdCaptionNumberStyleHanjaReadDigit = 42
wdCaptionNumberStyleTradChinNum2 = 34
wdCaptionNumberStyleTradChinNum3 = 35
wdCaptionNumberStyleSimpChinNum2 = 38
wdCaptionNumberStyleSimpChinNum3 = 39
wdCaptionNumberStyleHebrewLetter1 = 45
wdCaptionNumberStyleArabicLetter1 = 46
wdCaptionNumberStyleHebrewLetter2 = 47
wdCaptionNumberStyleArabicLetter2 = 48
wdCaptionNumberStyleHindiLetter1 = 49
wdCaptionNumberStyleHindiLetter2 = 50
wdCaptionNumberStyleHindiArabic = 51
wdCaptionNumberStyleHindiCardinalText = 52
wdCaptionNumberStyleThaiLetter = 53
wdCaptionNumberStyleThaiArabic = 54
wdCaptionNumberStyleThaiCardinalText = 55
wdCaptionNumberStyleVietCardinalText = 56
WdCaptionNumberStyle = c_int # enum

# values for enumeration 'WdCaptionPosition'
wdCaptionPositionAbove = 0
wdCaptionPositionBelow = 1
WdCaptionPosition = c_int # enum
CaptionLabel._methods_ = [
    COMMETHOD([dispid(1000), 'propget'], HRESULT, 'Application',
              ( ['out', 'retval'], POINTER(POINTER(Application)), 'prop' )),
    COMMETHOD([dispid(1001), 'propget'], HRESULT, 'Creator',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(1002), 'propget'], HRESULT, 'Parent',
              ( ['out', 'retval'], POINTER(POINTER(IDispatch)), 'prop' )),
    COMMETHOD([dispid(0), 'propget'], HRESULT, 'Name',
              ( ['out', 'retval'], POINTER(BSTR), 'prop' )),
    COMMETHOD([dispid(1), 'propget'], HRESULT, 'BuiltIn',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'prop' )),
    COMMETHOD([dispid(2), 'propget'], HRESULT, 'ID',
              ( ['out', 'retval'], POINTER(WdCaptionLabelID), 'prop' )),
    COMMETHOD([dispid(3), 'propget'], HRESULT, 'IncludeChapterNumber',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'prop' )),
    COMMETHOD([dispid(3), 'propput'], HRESULT, 'IncludeChapterNumber',
              ( ['in'], VARIANT_BOOL, 'prop' )),
    COMMETHOD([dispid(4), 'propget'], HRESULT, 'NumberStyle',
              ( ['out', 'retval'], POINTER(WdCaptionNumberStyle), 'prop' )),
    COMMETHOD([dispid(4), 'propput'], HRESULT, 'NumberStyle',
              ( ['in'], WdCaptionNumberStyle, 'prop' )),
    COMMETHOD([dispid(5), 'propget'], HRESULT, 'ChapterStyleLevel',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(5), 'propput'], HRESULT, 'ChapterStyleLevel',
              ( ['in'], c_int, 'prop' )),
    COMMETHOD([dispid(6), 'propget'], HRESULT, 'Separator',
              ( ['out', 'retval'], POINTER(WdSeparatorType), 'prop' )),
    COMMETHOD([dispid(6), 'propput'], HRESULT, 'Separator',
              ( ['in'], WdSeparatorType, 'prop' )),
    COMMETHOD([dispid(7), 'propget'], HRESULT, 'Position',
              ( ['out', 'retval'], POINTER(WdCaptionPosition), 'prop' )),
    COMMETHOD([dispid(7), 'propput'], HRESULT, 'Position',
              ( ['in'], WdCaptionPosition, 'prop' )),
    COMMETHOD([dispid(100)], HRESULT, 'Delete'),
]
################################################################
## code template for CaptionLabel implementation
##class CaptionLabel_Impl(object):
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Creator(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Name(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def BuiltIn(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def ID(self):
##        '-no docstring-'
##        #return prop
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    IncludeChapterNumber = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    NumberStyle = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    ChapterStyleLevel = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    Separator = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    Position = property(_get, _set, doc = _set.__doc__)
##
##    def Delete(self):
##        '-no docstring-'
##        #return 
##


# values for enumeration 'XlPattern'
xlPatternAutomatic = -4105
xlPatternChecker = 9
xlPatternCrissCross = 16
xlPatternDown = -4121
xlPatternGray16 = 17
xlPatternGray25 = -4124
xlPatternGray50 = -4125
xlPatternGray75 = -4126
xlPatternGray8 = 18
xlPatternGrid = 15
xlPatternHorizontal = -4128
xlPatternLightDown = 13
xlPatternLightHorizontal = 11
xlPatternLightUp = 14
xlPatternLightVertical = 12
xlPatternNone = -4142
xlPatternSemiGray75 = 10
xlPatternSolid = 1
xlPatternUp = -4162
xlPatternVertical = -4166
xlPatternLinearGradient = 4000
xlPatternRectangularGradient = 4001
XlPattern = c_int # enum
class Dictionary(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{000209AD-0000-0000-C000-000000000046}')
    _idlflags_ = ['dual', 'nonextensible', 'oleautomation']

# values for enumeration 'WdDictionaryType'
wdSpelling = 0
wdGrammar = 1
wdThesaurus = 2
wdHyphenation = 3
wdSpellingComplete = 4
wdSpellingCustom = 5
wdSpellingLegal = 6
wdSpellingMedical = 7
wdHangulHanjaConversion = 8
wdHangulHanjaConversionCustom = 9
WdDictionaryType = c_int # enum
Language._methods_ = [
    COMMETHOD([dispid(1000), 'propget'], HRESULT, 'Application',
              ( ['out', 'retval'], POINTER(POINTER(Application)), 'prop' )),
    COMMETHOD([dispid(1001), 'propget'], HRESULT, 'Creator',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(1002), 'propget'], HRESULT, 'Parent',
              ( ['out', 'retval'], POINTER(POINTER(IDispatch)), 'prop' )),
    COMMETHOD([dispid(10), 'propget'], HRESULT, 'ID',
              ( ['out', 'retval'], POINTER(WdLanguageID), 'prop' )),
    COMMETHOD([dispid(0), 'propget'], HRESULT, 'NameLocal',
              ( ['out', 'retval'], POINTER(BSTR), 'prop' )),
    COMMETHOD([dispid(12), 'propget'], HRESULT, 'Name',
              ( ['out', 'retval'], POINTER(BSTR), 'prop' )),
    COMMETHOD([dispid(13), 'propget'], HRESULT, 'ActiveGrammarDictionary',
              ( ['out', 'retval'], POINTER(POINTER(Dictionary)), 'prop' )),
    COMMETHOD([dispid(14), 'propget'], HRESULT, 'ActiveHyphenationDictionary',
              ( ['out', 'retval'], POINTER(POINTER(Dictionary)), 'prop' )),
    COMMETHOD([dispid(15), 'propget'], HRESULT, 'ActiveSpellingDictionary',
              ( ['out', 'retval'], POINTER(POINTER(Dictionary)), 'prop' )),
    COMMETHOD([dispid(16), 'propget'], HRESULT, 'ActiveThesaurusDictionary',
              ( ['out', 'retval'], POINTER(POINTER(Dictionary)), 'prop' )),
    COMMETHOD([dispid(17), 'propget'], HRESULT, 'DefaultWritingStyle',
              ( ['out', 'retval'], POINTER(BSTR), 'prop' )),
    COMMETHOD([dispid(17), 'propput'], HRESULT, 'DefaultWritingStyle',
              ( ['in'], BSTR, 'prop' )),
    COMMETHOD([dispid(18), 'propget'], HRESULT, 'WritingStyleList',
              ( ['out', 'retval'], POINTER(VARIANT), 'prop' )),
    COMMETHOD([dispid(19), 'propget'], HRESULT, 'SpellingDictionaryType',
              ( ['out', 'retval'], POINTER(WdDictionaryType), 'prop' )),
    COMMETHOD([dispid(19), 'propput'], HRESULT, 'SpellingDictionaryType',
              ( ['in'], WdDictionaryType, 'prop' )),
]
################################################################
## code template for Language implementation
##class Language_Impl(object):
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Creator(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def ID(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def NameLocal(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Name(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def ActiveGrammarDictionary(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def ActiveHyphenationDictionary(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def ActiveSpellingDictionary(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def ActiveThesaurusDictionary(self):
##        '-no docstring-'
##        #return prop
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    DefaultWritingStyle = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def WritingStyleList(self):
##        '-no docstring-'
##        #return prop
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    SpellingDictionaryType = property(_get, _set, doc = _set.__doc__)
##

FirstLetterException._methods_ = [
    COMMETHOD([dispid(1000), 'propget'], HRESULT, 'Application',
              ( ['out', 'retval'], POINTER(POINTER(Application)), 'prop' )),
    COMMETHOD([dispid(1001), 'propget'], HRESULT, 'Creator',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(1002), 'propget'], HRESULT, 'Parent',
              ( ['out', 'retval'], POINTER(POINTER(IDispatch)), 'prop' )),
    COMMETHOD([dispid(1), 'propget'], HRESULT, 'Index',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(2), 'propget'], HRESULT, 'Name',
              ( ['out', 'retval'], POINTER(BSTR), 'prop' )),
    COMMETHOD([dispid(101)], HRESULT, 'Delete'),
]
################################################################
## code template for FirstLetterException implementation
##class FirstLetterException_Impl(object):
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Creator(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Index(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Name(self):
##        '-no docstring-'
##        #return prop
##
##    def Delete(self):
##        '-no docstring-'
##        #return 
##

class DiagramNodes(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{000209EB-0000-0000-C000-000000000046}')
    _idlflags_ = ['hidden', 'dual', 'nonextensible', 'oleautomation']
DiagramNodes._methods_ = [
    COMMETHOD([dispid(1000), 'propget'], HRESULT, 'Application',
              ( ['out', 'retval'], POINTER(POINTER(Application)), 'prop' )),
    COMMETHOD([dispid(1001), 'propget'], HRESULT, 'Creator',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(-4), 'nonbrowsable', 'propget'], HRESULT, '_NewEnum',
              ( ['out', 'retval'], POINTER(POINTER(IUnknown)), 'prop' )),
    COMMETHOD([dispid(100), 'propget'], HRESULT, 'Parent',
              ( ['out', 'retval'], POINTER(POINTER(IDispatch)), 'prop' )),
    COMMETHOD([dispid(101), 'propget'], HRESULT, 'Count',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(0)], HRESULT, 'Item',
              ( ['in'], POINTER(VARIANT), 'Index' ),
              ( ['out', 'retval'], POINTER(POINTER(DiagramNode)), 'prop' )),
    COMMETHOD([dispid(10)], HRESULT, 'SelectAll'),
]
################################################################
## code template for DiagramNodes implementation
##class DiagramNodes_Impl(object):
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Creator(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def _NewEnum(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Count(self):
##        '-no docstring-'
##        #return prop
##
##    def Item(self, Index):
##        '-no docstring-'
##        #return prop
##
##    def SelectAll(self):
##        '-no docstring-'
##        #return 
##

ColorFormat._methods_ = [
    COMMETHOD([dispid(1000), 'propget'], HRESULT, 'Application',
              ( ['out', 'retval'], POINTER(POINTER(Application)), 'prop' )),
    COMMETHOD([dispid(1001), 'propget'], HRESULT, 'Creator',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(1), 'propget'], HRESULT, 'Parent',
              ( ['out', 'retval'], POINTER(POINTER(IDispatch)), 'prop' )),
    COMMETHOD([dispid(0), 'propget'], HRESULT, 'RGB',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(0), 'propput'], HRESULT, 'RGB',
              ( ['in'], c_int, 'prop' )),
    COMMETHOD([dispid(100), 'hidden', 'propget'], HRESULT, 'SchemeColor',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(100), 'hidden', 'propput'], HRESULT, 'SchemeColor',
              ( ['in'], c_int, 'prop' )),
    COMMETHOD([dispid(101), 'propget'], HRESULT, 'Type',
              ( ['out', 'retval'], POINTER(comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoColorType), 'prop' )),
    COMMETHOD([dispid(102), 'hidden', 'propget'], HRESULT, 'Name',
              ( ['out', 'retval'], POINTER(BSTR), 'prop' )),
    COMMETHOD([dispid(102), 'hidden', 'propput'], HRESULT, 'Name',
              ( ['in'], BSTR, 'prop' )),
    COMMETHOD([dispid(103), 'propget'], HRESULT, 'TintAndShade',
              ( ['out', 'retval'], POINTER(c_float), 'prop' )),
    COMMETHOD([dispid(103), 'propput'], HRESULT, 'TintAndShade',
              ( ['in'], c_float, 'prop' )),
    COMMETHOD([dispid(104), 'hidden', 'propget'], HRESULT, 'OverPrint',
              ( ['out', 'retval'], POINTER(comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoTriState), 'prop' )),
    COMMETHOD([dispid(104), 'hidden', 'propput'], HRESULT, 'OverPrint',
              ( ['in'], comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoTriState, 'prop' )),
    COMMETHOD([dispid(105), 'hidden', 'propget'], HRESULT, 'Ink',
              ( ['in'], c_int, 'Index' ),
              ( ['out', 'retval'], POINTER(c_float), 'prop' )),
    COMMETHOD([dispid(105), 'hidden', 'propput'], HRESULT, 'Ink',
              ( ['in'], c_int, 'Index' ),
              ( ['in'], c_float, 'prop' )),
    COMMETHOD([dispid(106), 'hidden', 'propget'], HRESULT, 'Cyan',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(106), 'hidden', 'propput'], HRESULT, 'Cyan',
              ( ['in'], c_int, 'prop' )),
    COMMETHOD([dispid(107), 'hidden', 'propget'], HRESULT, 'Magenta',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(107), 'hidden', 'propput'], HRESULT, 'Magenta',
              ( ['in'], c_int, 'prop' )),
    COMMETHOD([dispid(108), 'hidden', 'propget'], HRESULT, 'Yellow',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(108), 'hidden', 'propput'], HRESULT, 'Yellow',
              ( ['in'], c_int, 'prop' )),
    COMMETHOD([dispid(109), 'hidden', 'propget'], HRESULT, 'Black',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(109), 'hidden', 'propput'], HRESULT, 'Black',
              ( ['in'], c_int, 'prop' )),
    COMMETHOD([dispid(110), 'hidden'], HRESULT, 'SetCMYK',
              ( ['in'], c_int, 'Cyan' ),
              ( ['in'], c_int, 'Magenta' ),
              ( ['in'], c_int, 'Yellow' ),
              ( ['in'], c_int, 'Black' )),
    COMMETHOD([dispid(200), 'propget'], HRESULT, 'ObjectThemeColor',
              ( ['out', 'retval'], POINTER(WdThemeColorIndex), 'prop' )),
    COMMETHOD([dispid(200), 'propput'], HRESULT, 'ObjectThemeColor',
              ( ['in'], WdThemeColorIndex, 'prop' )),
    COMMETHOD([dispid(201), 'propget'], HRESULT, 'Brightness',
              ( ['out', 'retval'], POINTER(c_float), 'prop' )),
    COMMETHOD([dispid(201), 'propput'], HRESULT, 'Brightness',
              ( ['in'], c_float, 'prop' )),
]
################################################################
## code template for ColorFormat implementation
##class ColorFormat_Impl(object):
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Creator(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return prop
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    RGB = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    SchemeColor = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Type(self):
##        '-no docstring-'
##        #return prop
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    Name = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    TintAndShade = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    OverPrint = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self, Index):
##        '-no docstring-'
##        #return prop
##    def _set(self, Index, prop):
##        '-no docstring-'
##    Ink = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    Cyan = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    Magenta = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    Yellow = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    Black = property(_get, _set, doc = _set.__doc__)
##
##    def SetCMYK(self, Cyan, Magenta, Yellow, Black):
##        '-no docstring-'
##        #return 
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    ObjectThemeColor = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    Brightness = property(_get, _set, doc = _set.__doc__)
##

XMLMapping._methods_ = [
    COMMETHOD([dispid(1000), 'propget'], HRESULT, 'Application',
              ( ['out', 'retval'], POINTER(POINTER(Application)), 'prop' )),
    COMMETHOD([dispid(1001), 'propget'], HRESULT, 'Creator',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(1002), 'propget'], HRESULT, 'Parent',
              ( ['out', 'retval'], POINTER(POINTER(IDispatch)), 'prop' )),
    COMMETHOD([dispid(0), 'propget'], HRESULT, 'IsMapped',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'prop' )),
    COMMETHOD([dispid(1), 'propget'], HRESULT, 'CustomXMLPart',
              ( ['out', 'retval'], POINTER(POINTER(comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.CustomXMLPart)), 'prop' )),
    COMMETHOD([dispid(2), 'propget'], HRESULT, 'CustomXMLNode',
              ( ['out', 'retval'], POINTER(POINTER(comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.CustomXMLNode)), 'prop' )),
    COMMETHOD([dispid(3)], HRESULT, 'SetMapping',
              ( ['in'], BSTR, 'XPath' ),
              ( ['in', 'optional'], BSTR, 'PrefixMapping' ),
              ( ['in', 'optional'], POINTER(comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.CustomXMLPart), 'Source', 0 ),
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'prop' )),
    COMMETHOD([dispid(4)], HRESULT, 'Delete'),
    COMMETHOD([dispid(5)], HRESULT, 'SetMappingByNode',
              ( ['in'], POINTER(comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.CustomXMLNode), 'Node' ),
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'prop' )),
    COMMETHOD([dispid(6), 'propget'], HRESULT, 'XPath',
              ( ['out', 'retval'], POINTER(BSTR), 'prop' )),
    COMMETHOD([dispid(7), 'propget'], HRESULT, 'PrefixMappings',
              ( ['out', 'retval'], POINTER(BSTR), 'prop' )),
]
################################################################
## code template for XMLMapping implementation
##class XMLMapping_Impl(object):
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Creator(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def IsMapped(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def CustomXMLPart(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def CustomXMLNode(self):
##        '-no docstring-'
##        #return prop
##
##    def SetMapping(self, XPath, PrefixMapping, Source):
##        '-no docstring-'
##        #return prop
##
##    def Delete(self):
##        '-no docstring-'
##        #return 
##
##    def SetMappingByNode(self, Node):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def XPath(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def PrefixMappings(self):
##        '-no docstring-'
##        #return prop
##

ProtectedViewWindow._methods_ = [
    COMMETHOD([dispid(1000), 'propget'], HRESULT, 'Application',
              ( ['out', 'retval'], POINTER(POINTER(Application)), 'prop' )),
    COMMETHOD([dispid(1001), 'propget'], HRESULT, 'Creator',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(1002), 'propget'], HRESULT, 'Parent',
              ( ['out', 'retval'], POINTER(POINTER(IDispatch)), 'prop' )),
    COMMETHOD([dispid(0), 'propget'], HRESULT, 'Caption',
              ( ['out', 'retval'], POINTER(BSTR), 'prop' )),
    COMMETHOD([dispid(0), 'propput'], HRESULT, 'Caption',
              ( ['in'], BSTR, 'prop' )),
    COMMETHOD([dispid(1), 'propget'], HRESULT, 'Document',
              ( ['out', 'retval'], POINTER(POINTER(Document)), 'prop' )),
    COMMETHOD([dispid(2), 'propget'], HRESULT, 'Left',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(2), 'propput'], HRESULT, 'Left',
              ( ['in'], c_int, 'prop' )),
    COMMETHOD([dispid(3), 'propget'], HRESULT, 'Top',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(3), 'propput'], HRESULT, 'Top',
              ( ['in'], c_int, 'prop' )),
    COMMETHOD([dispid(4), 'propget'], HRESULT, 'Width',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(4), 'propput'], HRESULT, 'Width',
              ( ['in'], c_int, 'prop' )),
    COMMETHOD([dispid(5), 'propget'], HRESULT, 'Height',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(5), 'propput'], HRESULT, 'Height',
              ( ['in'], c_int, 'prop' )),
    COMMETHOD([dispid(6), 'propget'], HRESULT, 'WindowState',
              ( ['out', 'retval'], POINTER(WdWindowState), 'prop' )),
    COMMETHOD([dispid(6), 'propput'], HRESULT, 'WindowState',
              ( ['in'], WdWindowState, 'prop' )),
    COMMETHOD([dispid(7), 'propget'], HRESULT, 'Active',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'prop' )),
    COMMETHOD([dispid(8), 'propget'], HRESULT, 'Index',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(9), 'propget'], HRESULT, 'Visible',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'prop' )),
    COMMETHOD([dispid(9), 'propput'], HRESULT, 'Visible',
              ( ['in'], VARIANT_BOOL, 'prop' )),
    COMMETHOD([dispid(10), 'propget'], HRESULT, 'SourceName',
              ( ['out', 'retval'], POINTER(BSTR), 'prop' )),
    COMMETHOD([dispid(11), 'propget'], HRESULT, 'SourcePath',
              ( ['out', 'retval'], POINTER(BSTR), 'prop' )),
    COMMETHOD([dispid(100)], HRESULT, 'Activate'),
    COMMETHOD([dispid(101)], HRESULT, 'Edit',
              ( ['in', 'optional'], POINTER(VARIANT), 'PasswordTemplate' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'WritePasswordDocument' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'WritePasswordTemplate' ),
              ( ['out', 'retval'], POINTER(POINTER(Document)), 'prop' )),
    COMMETHOD([dispid(102)], HRESULT, 'Close'),
    COMMETHOD([dispid(103)], HRESULT, 'ToggleRibbon'),
]
################################################################
## code template for ProtectedViewWindow implementation
##class ProtectedViewWindow_Impl(object):
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Creator(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return prop
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    Caption = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Document(self):
##        '-no docstring-'
##        #return prop
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    Left = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    Top = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    Width = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    Height = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    WindowState = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Active(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Index(self):
##        '-no docstring-'
##        #return prop
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    Visible = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def SourceName(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def SourcePath(self):
##        '-no docstring-'
##        #return prop
##
##    def Activate(self):
##        '-no docstring-'
##        #return 
##
##    def Edit(self, PasswordTemplate, WritePasswordDocument, WritePasswordTemplate):
##        '-no docstring-'
##        #return prop
##
##    def Close(self):
##        '-no docstring-'
##        #return 
##
##    def ToggleRibbon(self):
##        '-no docstring-'
##        #return 
##

class ReadabilityStatistic(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{000209AF-0000-0000-C000-000000000046}')
    _idlflags_ = ['dual', 'nonextensible', 'oleautomation']
ReadabilityStatistics._methods_ = [
    COMMETHOD([dispid(1000), 'propget'], HRESULT, 'Application',
              ( ['out', 'retval'], POINTER(POINTER(Application)), 'prop' )),
    COMMETHOD([dispid(1001), 'propget'], HRESULT, 'Creator',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(1002), 'propget'], HRESULT, 'Parent',
              ( ['out', 'retval'], POINTER(POINTER(IDispatch)), 'prop' )),
    COMMETHOD([dispid(-4), 'nonbrowsable', 'propget'], HRESULT, '_NewEnum',
              ( ['out', 'retval'], POINTER(POINTER(IUnknown)), 'prop' )),
    COMMETHOD([dispid(1), 'propget'], HRESULT, 'Count',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(0)], HRESULT, 'Item',
              ( ['in'], POINTER(VARIANT), 'Index' ),
              ( ['out', 'retval'], POINTER(POINTER(ReadabilityStatistic)), 'prop' )),
]
################################################################
## code template for ReadabilityStatistics implementation
##class ReadabilityStatistics_Impl(object):
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Creator(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def _NewEnum(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Count(self):
##        '-no docstring-'
##        #return prop
##
##    def Item(self, Index):
##        '-no docstring-'
##        #return prop
##

XSLTransforms._methods_ = [
    COMMETHOD([dispid(-4), 'nonbrowsable', 'propget'], HRESULT, '_NewEnum',
              ( ['out', 'retval'], POINTER(POINTER(IUnknown)), 'prop' )),
    COMMETHOD([dispid(2), 'propget'], HRESULT, 'Count',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(1000), 'propget'], HRESULT, 'Application',
              ( ['out', 'retval'], POINTER(POINTER(Application)), 'prop' )),
    COMMETHOD([dispid(1001), 'propget'], HRESULT, 'Creator',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(1002), 'propget'], HRESULT, 'Parent',
              ( ['out', 'retval'], POINTER(POINTER(IDispatch)), 'prop' )),
    COMMETHOD([dispid(0)], HRESULT, 'Item',
              ( ['in'], POINTER(VARIANT), 'Index' ),
              ( ['out', 'retval'], POINTER(POINTER(XSLTransform)), 'prop' )),
    COMMETHOD([dispid(101)], HRESULT, 'Add',
              ( ['in'], BSTR, 'Location' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'Alias' ),
              ( ['in', 'optional'], VARIANT_BOOL, 'InstallForAllUsers', False ),
              ( ['out', 'retval'], POINTER(POINTER(XSLTransform)), 'prop' )),
]
################################################################
## code template for XSLTransforms implementation
##class XSLTransforms_Impl(object):
##    @property
##    def _NewEnum(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Count(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Creator(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return prop
##
##    def Item(self, Index):
##        '-no docstring-'
##        #return prop
##
##    def Add(self, Location, Alias, InstallForAllUsers):
##        '-no docstring-'
##        #return prop
##

class CustomProperty(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{B923FDE0-F08C-11D3-91B0-00105A0A19FD}')
    _idlflags_ = ['dual', 'nonextensible', 'oleautomation']
CustomProperties._methods_ = [
    COMMETHOD([dispid(-4), 'nonbrowsable', 'propget'], HRESULT, '_NewEnum',
              ( ['out', 'retval'], POINTER(POINTER(IUnknown)), 'prop' )),
    COMMETHOD([dispid(2), 'propget'], HRESULT, 'Count',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(1000), 'propget'], HRESULT, 'Application',
              ( ['out', 'retval'], POINTER(POINTER(Application)), 'prop' )),
    COMMETHOD([dispid(1001), 'propget'], HRESULT, 'Creator',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(1002), 'propget'], HRESULT, 'Parent',
              ( ['out', 'retval'], POINTER(POINTER(IDispatch)), 'prop' )),
    COMMETHOD([dispid(0)], HRESULT, 'Item',
              ( ['in'], POINTER(VARIANT), 'Index' ),
              ( ['out', 'retval'], POINTER(POINTER(CustomProperty)), 'prop' )),
    COMMETHOD([dispid(5)], HRESULT, 'Add',
              ( ['in'], BSTR, 'Name' ),
              ( ['in'], BSTR, 'Value' ),
              ( ['out', 'retval'], POINTER(POINTER(CustomProperty)), 'prop' )),
]
################################################################
## code template for CustomProperties implementation
##class CustomProperties_Impl(object):
##    @property
##    def _NewEnum(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Count(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Creator(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return prop
##
##    def Item(self, Index):
##        '-no docstring-'
##        #return prop
##
##    def Add(self, Name, Value):
##        '-no docstring-'
##        #return prop
##


# values for enumeration 'XlDisplayBlanksAs'
xlInterpolated = 3
xlNotPlotted = 1
xlZero = 2
XlDisplayBlanksAs = c_int # enum
class OMathAcc(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{F258DE05-C41B-4C33-A778-F0D3F98CEEB3}')
    _idlflags_ = ['dual', 'nonextensible', 'oleautomation']
OMathAcc._methods_ = [
    COMMETHOD([dispid(100), 'propget'], HRESULT, 'Application',
              ( ['out', 'retval'], POINTER(POINTER(Application)), 'prop' )),
    COMMETHOD([dispid(101), 'propget'], HRESULT, 'Creator',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(102), 'propget'], HRESULT, 'Parent',
              ( ['out', 'retval'], POINTER(POINTER(IDispatch)), 'prop' )),
    COMMETHOD([dispid(103), 'propget'], HRESULT, 'E',
              ( ['out', 'retval'], POINTER(POINTER(OMath)), 'prop' )),
    COMMETHOD([dispid(104), 'propget'], HRESULT, 'Char',
              ( ['out', 'retval'], POINTER(c_short), 'prop' )),
    COMMETHOD([dispid(104), 'propput'], HRESULT, 'Char',
              ( ['in'], c_short, 'prop' )),
]
################################################################
## code template for OMathAcc implementation
##class OMathAcc_Impl(object):
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Creator(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def E(self):
##        '-no docstring-'
##        #return prop
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    Char = property(_get, _set, doc = _set.__doc__)
##

LineFormat._methods_ = [
    COMMETHOD([dispid(1000), 'propget'], HRESULT, 'Application',
              ( ['out', 'retval'], POINTER(POINTER(Application)), 'prop' )),
    COMMETHOD([dispid(1001), 'propget'], HRESULT, 'Creator',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(1), 'propget'], HRESULT, 'Parent',
              ( ['out', 'retval'], POINTER(POINTER(IDispatch)), 'prop' )),
    COMMETHOD([dispid(100), 'propget'], HRESULT, 'BackColor',
              ( ['out', 'retval'], POINTER(POINTER(ColorFormat)), 'prop' )),
    COMMETHOD([dispid(101), 'propget'], HRESULT, 'BeginArrowheadLength',
              ( ['out', 'retval'], POINTER(comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoArrowheadLength), 'prop' )),
    COMMETHOD([dispid(101), 'propput'], HRESULT, 'BeginArrowheadLength',
              ( ['in'], comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoArrowheadLength, 'prop' )),
    COMMETHOD([dispid(102), 'propget'], HRESULT, 'BeginArrowheadStyle',
              ( ['out', 'retval'], POINTER(comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoArrowheadStyle), 'prop' )),
    COMMETHOD([dispid(102), 'propput'], HRESULT, 'BeginArrowheadStyle',
              ( ['in'], comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoArrowheadStyle, 'prop' )),
    COMMETHOD([dispid(103), 'propget'], HRESULT, 'BeginArrowheadWidth',
              ( ['out', 'retval'], POINTER(comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoArrowheadWidth), 'prop' )),
    COMMETHOD([dispid(103), 'propput'], HRESULT, 'BeginArrowheadWidth',
              ( ['in'], comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoArrowheadWidth, 'prop' )),
    COMMETHOD([dispid(104), 'propget'], HRESULT, 'DashStyle',
              ( ['out', 'retval'], POINTER(comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoLineDashStyle), 'prop' )),
    COMMETHOD([dispid(104), 'propput'], HRESULT, 'DashStyle',
              ( ['in'], comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoLineDashStyle, 'prop' )),
    COMMETHOD([dispid(105), 'propget'], HRESULT, 'EndArrowheadLength',
              ( ['out', 'retval'], POINTER(comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoArrowheadLength), 'prop' )),
    COMMETHOD([dispid(105), 'propput'], HRESULT, 'EndArrowheadLength',
              ( ['in'], comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoArrowheadLength, 'prop' )),
    COMMETHOD([dispid(106), 'propget'], HRESULT, 'EndArrowheadStyle',
              ( ['out', 'retval'], POINTER(comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoArrowheadStyle), 'prop' )),
    COMMETHOD([dispid(106), 'propput'], HRESULT, 'EndArrowheadStyle',
              ( ['in'], comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoArrowheadStyle, 'prop' )),
    COMMETHOD([dispid(107), 'propget'], HRESULT, 'EndArrowheadWidth',
              ( ['out', 'retval'], POINTER(comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoArrowheadWidth), 'prop' )),
    COMMETHOD([dispid(107), 'propput'], HRESULT, 'EndArrowheadWidth',
              ( ['in'], comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoArrowheadWidth, 'prop' )),
    COMMETHOD([dispid(108), 'propget'], HRESULT, 'ForeColor',
              ( ['out', 'retval'], POINTER(POINTER(ColorFormat)), 'prop' )),
    COMMETHOD([dispid(109), 'propget'], HRESULT, 'Pattern',
              ( ['out', 'retval'], POINTER(comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoPatternType), 'prop' )),
    COMMETHOD([dispid(109), 'propput'], HRESULT, 'Pattern',
              ( ['in'], comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoPatternType, 'prop' )),
    COMMETHOD([dispid(110), 'propget'], HRESULT, 'Style',
              ( ['out', 'retval'], POINTER(comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoLineStyle), 'prop' )),
    COMMETHOD([dispid(110), 'propput'], HRESULT, 'Style',
              ( ['in'], comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoLineStyle, 'prop' )),
    COMMETHOD([dispid(111), 'propget'], HRESULT, 'Transparency',
              ( ['out', 'retval'], POINTER(c_float), 'prop' )),
    COMMETHOD([dispid(111), 'propput'], HRESULT, 'Transparency',
              ( ['in'], c_float, 'prop' )),
    COMMETHOD([dispid(112), 'propget'], HRESULT, 'Visible',
              ( ['out', 'retval'], POINTER(comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoTriState), 'prop' )),
    COMMETHOD([dispid(112), 'propput'], HRESULT, 'Visible',
              ( ['in'], comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoTriState, 'prop' )),
    COMMETHOD([dispid(113), 'propget'], HRESULT, 'Weight',
              ( ['out', 'retval'], POINTER(c_float), 'prop' )),
    COMMETHOD([dispid(113), 'propput'], HRESULT, 'Weight',
              ( ['in'], c_float, 'prop' )),
    COMMETHOD([dispid(114), 'propget'], HRESULT, 'InsetPen',
              ( ['out', 'retval'], POINTER(comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoTriState), 'prop' )),
    COMMETHOD([dispid(114), 'propput'], HRESULT, 'InsetPen',
              ( ['in'], comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoTriState, 'prop' )),
]
################################################################
## code template for LineFormat implementation
##class LineFormat_Impl(object):
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Creator(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def BackColor(self):
##        '-no docstring-'
##        #return prop
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    BeginArrowheadLength = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    BeginArrowheadStyle = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    BeginArrowheadWidth = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    DashStyle = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    EndArrowheadLength = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    EndArrowheadStyle = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    EndArrowheadWidth = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def ForeColor(self):
##        '-no docstring-'
##        #return prop
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    Pattern = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    Style = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    Transparency = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    Visible = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    Weight = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    InsetPen = property(_get, _set, doc = _set.__doc__)
##


# values for enumeration 'WdNumberStyleWordBasicBiDi'
wdListNumberStyleBidi1 = 49
wdListNumberStyleBidi2 = 50
wdCaptionNumberStyleBidiLetter1 = 49
wdCaptionNumberStyleBidiLetter2 = 50
wdNoteNumberStyleBidiLetter1 = 49
wdNoteNumberStyleBidiLetter2 = 50
wdPageNumberStyleBidiLetter1 = 49
wdPageNumberStyleBidiLetter2 = 50
WdNumberStyleWordBasicBiDi = c_int # enum

# values for enumeration 'WdMailMergeMailFormat'
wdMailFormatPlainText = 0
wdMailFormatHTML = 1
WdMailMergeMailFormat = c_int # enum
Subdocument._methods_ = [
    COMMETHOD([dispid(1000), 'propget'], HRESULT, 'Application',
              ( ['out', 'retval'], POINTER(POINTER(Application)), 'prop' )),
    COMMETHOD([dispid(1001), 'propget'], HRESULT, 'Creator',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(1002), 'propget'], HRESULT, 'Parent',
              ( ['out', 'retval'], POINTER(POINTER(IDispatch)), 'prop' )),
    COMMETHOD([dispid(1), 'propget'], HRESULT, 'Locked',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'prop' )),
    COMMETHOD([dispid(1), 'propput'], HRESULT, 'Locked',
              ( ['in'], VARIANT_BOOL, 'prop' )),
    COMMETHOD([dispid(2), 'propget'], HRESULT, 'Range',
              ( ['out', 'retval'], POINTER(POINTER(Range)), 'prop' )),
    COMMETHOD([dispid(3), 'propget'], HRESULT, 'Name',
              ( ['out', 'retval'], POINTER(BSTR), 'prop' )),
    COMMETHOD([dispid(4), 'propget'], HRESULT, 'Path',
              ( ['out', 'retval'], POINTER(BSTR), 'prop' )),
    COMMETHOD([dispid(5), 'propget'], HRESULT, 'HasFile',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'prop' )),
    COMMETHOD([dispid(6), 'propget'], HRESULT, 'Level',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(100)], HRESULT, 'Delete'),
    COMMETHOD([dispid(101)], HRESULT, 'Split',
              ( ['in'], POINTER(Range), 'Range' )),
    COMMETHOD([dispid(102)], HRESULT, 'Open',
              ( ['out', 'retval'], POINTER(POINTER(Document)), 'prop' )),
]
################################################################
## code template for Subdocument implementation
##class Subdocument_Impl(object):
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Creator(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return prop
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    Locked = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Range(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Name(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Path(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def HasFile(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Level(self):
##        '-no docstring-'
##        #return prop
##
##    def Delete(self):
##        '-no docstring-'
##        #return 
##
##    def Split(self, Range):
##        '-no docstring-'
##        #return 
##
##    def Open(self):
##        '-no docstring-'
##        #return prop
##

class Chart(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{6FFA84BB-A350-4442-BB53-A43653459A84}')
    _idlflags_ = ['dual', 'nonextensible', 'oleautomation']
class ChartTitle(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{C1AD33E4-F088-40A9-9D2F-D94017D115C4}')
    _idlflags_ = ['dual', 'nonextensible', 'oleautomation']
class Corners(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{AE6D45E5-981E-4547-8752-674BB55420A5}')
    _idlflags_ = ['hidden', 'dual', 'nonextensible', 'oleautomation']

# values for enumeration 'XlRowCol'
xlColumns = 2
xlRows = 1
XlRowCol = c_int # enum
class Legend(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{B3A1E8C6-E1CE-4A46-8D12-E017157B03D7}')
    _idlflags_ = ['dual', 'nonextensible', 'oleautomation']
class Walls(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{A2E94180-7564-4D97-806B-BBC0D0A1350C}')
    _idlflags_ = ['dual', 'nonextensible', 'oleautomation']
class Floor(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{7E64D2BE-2818-48CB-8F8A-CC7B61D9E860}')
    _idlflags_ = ['dual', 'nonextensible', 'oleautomation']

# values for enumeration 'XlBarShape'
xlBox = 0
xlPyramidToPoint = 1
xlPyramidToMax = 2
xlCylinder = 3
xlConeToPoint = 4
xlConeToMax = 5
XlBarShape = c_int # enum
class ChartData(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{4A304B59-31FF-42DD-B436-7FC9C5DB7559}')
    _idlflags_ = ['dual', 'nonextensible', 'oleautomation']

# values for enumeration 'XlCategoryLabelLevel'
xlCategoryLabelLevelNone = -3
xlCategoryLabelLevelCustom = -2
xlCategoryLabelLevelAll = -1
XlCategoryLabelLevel = c_int # enum

# values for enumeration 'XlSeriesNameLevel'
xlSeriesNameLevelNone = -3
xlSeriesNameLevelCustom = -2
xlSeriesNameLevelAll = -1
XlSeriesNameLevel = c_int # enum
Chart._methods_ = [
    COMMETHOD([dispid(150), 'propget'], HRESULT, 'Parent',
              ( ['out', 'retval'], POINTER(POINTER(IDispatch)), 'prop' )),
    COMMETHOD([dispid(1610743809), 'propget'], HRESULT, 'HasTitle',
              ( ['in', 'lcid'], c_int, 'lcid', _lcid ),
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'prop' )),
    COMMETHOD([dispid(1610743809), 'propput'], HRESULT, 'HasTitle',
              ( ['in', 'lcid'], c_int, 'lcid', _lcid ),
              ( ['in'], VARIANT_BOOL, 'prop' )),
    COMMETHOD([dispid(1610743811), 'propget'], HRESULT, 'ChartTitle',
              ( ['in', 'lcid'], c_int, 'lcid', _lcid ),
              ( ['out', 'retval'], POINTER(POINTER(ChartTitle)), 'prop' )),
    COMMETHOD([dispid(1610743812), 'propget'], HRESULT, 'DepthPercent',
              ( ['in', 'lcid'], c_int, 'lcid', _lcid ),
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(1610743812), 'propput'], HRESULT, 'DepthPercent',
              ( ['in', 'lcid'], c_int, 'lcid', _lcid ),
              ( ['in'], c_int, 'prop' )),
    COMMETHOD([dispid(1610743814), 'propget'], HRESULT, 'Elevation',
              ( ['in', 'lcid'], c_int, 'lcid', _lcid ),
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(1610743814), 'propput'], HRESULT, 'Elevation',
              ( ['in', 'lcid'], c_int, 'lcid', _lcid ),
              ( ['in'], c_int, 'prop' )),
    COMMETHOD([dispid(1610743816), 'propget'], HRESULT, 'GapDepth',
              ( ['in', 'lcid'], c_int, 'lcid', _lcid ),
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(1610743816), 'propput'], HRESULT, 'GapDepth',
              ( ['in', 'lcid'], c_int, 'lcid', _lcid ),
              ( ['in'], c_int, 'prop' )),
    COMMETHOD([dispid(1610743818), 'propget'], HRESULT, 'HeightPercent',
              ( ['in', 'lcid'], c_int, 'lcid', _lcid ),
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(1610743818), 'propput'], HRESULT, 'HeightPercent',
              ( ['in', 'lcid'], c_int, 'lcid', _lcid ),
              ( ['in'], c_int, 'prop' )),
    COMMETHOD([dispid(1610743820), 'propget'], HRESULT, 'Perspective',
              ( ['in', 'lcid'], c_int, 'lcid', _lcid ),
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(1610743820), 'propput'], HRESULT, 'Perspective',
              ( ['in', 'lcid'], c_int, 'lcid', _lcid ),
              ( ['in'], c_int, 'prop' )),
    COMMETHOD([dispid(1610743822), 'propget'], HRESULT, 'RightAngleAxes',
              ( ['in', 'lcid'], c_int, 'lcid', _lcid ),
              ( ['out', 'retval'], POINTER(VARIANT), 'prop' )),
    COMMETHOD([dispid(1610743822), 'propput'], HRESULT, 'RightAngleAxes',
              ( ['in', 'lcid'], c_int, 'lcid', _lcid ),
              ( ['in'], VARIANT, 'prop' )),
    COMMETHOD([dispid(1610743824), 'propget'], HRESULT, 'Rotation',
              ( ['in', 'lcid'], c_int, 'lcid', _lcid ),
              ( ['out', 'retval'], POINTER(VARIANT), 'prop' )),
    COMMETHOD([dispid(1610743824), 'propput'], HRESULT, 'Rotation',
              ( ['in', 'lcid'], c_int, 'lcid', _lcid ),
              ( ['in'], VARIANT, 'prop' )),
    COMMETHOD([dispid(1610743826), 'propget'], HRESULT, 'DisplayBlanksAs',
              ( ['in', 'lcid'], c_int, 'lcid', _lcid ),
              ( ['out', 'retval'], POINTER(XlDisplayBlanksAs), 'prop' )),
    COMMETHOD([dispid(1610743826), 'propput'], HRESULT, 'DisplayBlanksAs',
              ( ['in', 'lcid'], c_int, 'lcid', _lcid ),
              ( ['in'], XlDisplayBlanksAs, 'prop' )),
    COMMETHOD([dispid(8), 'propget'], HRESULT, 'ChartGroups',
              ( ['in', 'optional'], VARIANT, 'Index' ),
              ( ['in', 'lcid'], c_int, 'lcid', _lcid ),
              ( ['out', 'retval'], POINTER(POINTER(IDispatch)), 'prop' )),
    COMMETHOD([dispid(68)], HRESULT, 'SeriesCollection',
              ( ['in', 'optional'], VARIANT, 'Index' ),
              ( ['in', 'lcid'], c_int, 'lcid', _lcid ),
              ( ['out', 'retval'], POINTER(POINTER(IDispatch)), 'prop' )),
    COMMETHOD([dispid(109), 'hidden', 'propget'], HRESULT, 'SubType',
              ( ['in', 'lcid'], c_int, 'lcid', _lcid ),
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(109), 'hidden', 'propput'], HRESULT, 'SubType',
              ( ['in', 'lcid'], c_int, 'lcid', _lcid ),
              ( ['in'], c_int, 'prop' )),
    COMMETHOD([dispid(108), 'hidden', 'propget'], HRESULT, 'Type',
              ( ['in', 'lcid'], c_int, 'lcid', _lcid ),
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(108), 'hidden', 'propput'], HRESULT, 'Type',
              ( ['in', 'lcid'], c_int, 'lcid', _lcid ),
              ( ['in'], c_int, 'prop' )),
    COMMETHOD([dispid(79), 'hidden', 'propget'], HRESULT, 'Corners',
              ( ['in', 'lcid'], c_int, 'lcid', _lcid ),
              ( ['out', 'retval'], POINTER(POINTER(Corners)), 'prop' )),
    COMMETHOD([dispid(1922)], HRESULT, 'ApplyDataLabels',
              ( ['in', 'optional'], XlDataLabelsType, 'Type', 2 ),
              ( ['in', 'optional'], VARIANT, 'LegendKey' ),
              ( ['in', 'optional'], VARIANT, 'AutoText' ),
              ( ['in', 'optional'], VARIANT, 'HasLeaderLines' ),
              ( ['in', 'optional'], VARIANT, 'ShowSeriesName' ),
              ( ['in', 'optional'], VARIANT, 'ShowCategoryName' ),
              ( ['in', 'optional'], VARIANT, 'ShowValue' ),
              ( ['in', 'optional'], VARIANT, 'ShowPercentage' ),
              ( ['in', 'optional'], VARIANT, 'ShowBubbleSize' ),
              ( ['in', 'optional'], VARIANT, 'Separator' ),
              ( ['in', 'lcid'], c_int, 'lcid', _lcid )),
    COMMETHOD([dispid(1400), 'propget'], HRESULT, 'ChartType',
              ( ['out', 'retval'], POINTER(comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.XlChartType), 'prop' )),
    COMMETHOD([dispid(1400), 'propput'], HRESULT, 'ChartType',
              ( ['in'], comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.XlChartType, 'prop' )),
    COMMETHOD([dispid(1396), 'propget'], HRESULT, 'HasDataTable',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'prop' )),
    COMMETHOD([dispid(1396), 'propput'], HRESULT, 'HasDataTable',
              ( ['in'], VARIANT_BOOL, 'prop' )),
    COMMETHOD([dispid(1401), 'hidden'], HRESULT, 'ApplyCustomType',
              ( ['in'], comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.XlChartType, 'ChartType' ),
              ( ['in', 'optional'], VARIANT, 'TypeName' )),
    COMMETHOD([dispid(1409)], HRESULT, 'GetChartElement',
              ( ['in'], c_int, 'x' ),
              ( ['in'], c_int, 'y' ),
              ( ['out'], POINTER(c_int), 'ElementID' ),
              ( ['out'], POINTER(c_int), 'Arg1' ),
              ( ['out'], POINTER(c_int), 'Arg2' )),
    COMMETHOD([dispid(1413)], HRESULT, 'SetSourceData',
              ( ['in'], BSTR, 'Source' ),
              ( ['in', 'optional'], VARIANT, 'PlotBy' )),
    COMMETHOD([dispid(202), 'propget'], HRESULT, 'PlotBy',
              ( ['out', 'retval'], POINTER(XlRowCol), 'prop' )),
    COMMETHOD([dispid(202), 'propput'], HRESULT, 'PlotBy',
              ( ['in'], XlRowCol, 'prop' )),
    COMMETHOD([dispid(53), 'propget'], HRESULT, 'HasLegend',
              ( ['in', 'lcid'], c_int, 'lcid', _lcid ),
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'prop' )),
    COMMETHOD([dispid(53), 'propput'], HRESULT, 'HasLegend',
              ( ['in', 'lcid'], c_int, 'lcid', _lcid ),
              ( ['in'], VARIANT_BOOL, 'prop' )),
    COMMETHOD([dispid(84), 'propget'], HRESULT, 'Legend',
              ( ['in', 'lcid'], c_int, 'lcid', _lcid ),
              ( ['out', 'retval'], POINTER(POINTER(Legend)), 'prop' )),
    COMMETHOD([dispid(1610743861)], HRESULT, 'Axes',
              ( ['in', 'optional'], VARIANT, 'Type' ),
              ( ['in', 'optional'], XlAxisGroup, 'AxisGroup', 1 ),
              ( ['in', 'lcid'], c_int, 'lcid', _lcid ),
              ( ['out', 'retval'], POINTER(POINTER(IDispatch)), 'prop' )),
    COMMETHOD([dispid(1610743862), 'propget'], HRESULT, 'HasAxis',
              ( ['in', 'optional'], VARIANT, 'Index1' ),
              ( ['in', 'optional'], VARIANT, 'Index2' ),
              ( ['in', 'lcid'], c_int, 'lcid', _lcid ),
              ( ['out', 'retval'], POINTER(VARIANT), 'prop' )),
    COMMETHOD([dispid(1610743862), 'propput'], HRESULT, 'HasAxis',
              ( ['in', 'optional'], VARIANT, 'Index1' ),
              ( ['in', 'optional'], VARIANT, 'Index2' ),
              ( ['in', 'lcid'], c_int, 'lcid', _lcid ),
              ( ['in'], VARIANT, 'prop' )),
    COMMETHOD([dispid(1610743864), 'propget'], HRESULT, 'Walls',
              ( ['in', 'lcid'], c_int, 'lcid', _lcid ),
              ( ['out', 'retval'], POINTER(POINTER(Walls)), 'prop' )),
    COMMETHOD([dispid(1610743865), 'propget'], HRESULT, 'Floor',
              ( ['in', 'lcid'], c_int, 'lcid', _lcid ),
              ( ['out', 'retval'], POINTER(POINTER(Floor)), 'prop' )),
    COMMETHOD([dispid(1610743866), 'propget'], HRESULT, 'PlotArea',
              ( ['in', 'lcid'], c_int, 'lcid', _lcid ),
              ( ['out', 'retval'], POINTER(POINTER(PlotArea)), 'prop' )),
    COMMETHOD([dispid(92), 'propget'], HRESULT, 'PlotVisibleOnly',
              ( ['in', 'lcid'], c_int, 'lcid', _lcid ),
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'prop' )),
    COMMETHOD([dispid(92), 'propput'], HRESULT, 'PlotVisibleOnly',
              ( ['in', 'lcid'], c_int, 'lcid', _lcid ),
              ( ['in'], VARIANT_BOOL, 'prop' )),
    COMMETHOD([dispid(1610743869), 'propget'], HRESULT, 'ChartArea',
              ( ['in', 'lcid'], c_int, 'lcid', _lcid ),
              ( ['out', 'retval'], POINTER(POINTER(ChartArea)), 'prop' )),
    COMMETHOD([dispid(1610743870), 'hidden'], HRESULT, 'AutoFormat',
              ( ['in'], c_int, 'Gallery' ),
              ( ['in', 'optional'], VARIANT, 'Format' )),
    COMMETHOD([dispid(1610743871), 'propget'], HRESULT, 'AutoScaling',
              ( ['in', 'lcid'], c_int, 'lcid', _lcid ),
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'prop' )),
    COMMETHOD([dispid(1610743871), 'propput'], HRESULT, 'AutoScaling',
              ( ['in', 'lcid'], c_int, 'lcid', _lcid ),
              ( ['in'], VARIANT_BOOL, 'prop' )),
    COMMETHOD([dispid(1610743873)], HRESULT, 'SetBackgroundPicture',
              ( ['in'], BSTR, 'FileName' )),
    COMMETHOD([dispid(1610743874)], HRESULT, 'ChartWizard',
              ( ['in', 'optional'], VARIANT, 'Source' ),
              ( ['in', 'optional'], VARIANT, 'Gallery' ),
              ( ['in', 'optional'], VARIANT, 'Format' ),
              ( ['in', 'optional'], VARIANT, 'PlotBy' ),
              ( ['in', 'optional'], VARIANT, 'CategoryLabels' ),
              ( ['in', 'optional'], VARIANT, 'SeriesLabels' ),
              ( ['in', 'optional'], VARIANT, 'HasLegend' ),
              ( ['in', 'optional'], VARIANT, 'Title' ),
              ( ['in', 'optional'], VARIANT, 'CategoryTitle' ),
              ( ['in', 'optional'], VARIANT, 'ValueTitle' ),
              ( ['in', 'optional'], VARIANT, 'ExtraTitle' ),
              ( ['in', 'lcid'], c_int, 'lcid', _lcid )),
    COMMETHOD([dispid(1610743875)], HRESULT, 'CopyPicture',
              ( ['in', 'optional'], XlPictureAppearance, 'Appearance', 1 ),
              ( ['in', 'optional'], XlCopyPictureFormat, 'Format', -4147 ),
              ( ['in', 'optional'], XlPictureAppearance, 'Size', 2 ),
              ( ['in', 'lcid'], c_int, 'lcid', _lcid )),
    COMMETHOD([dispid(1610743876), 'propget'], HRESULT, 'DataTable',
              ( ['out', 'retval'], POINTER(POINTER(DataTable)), 'prop' )),
    COMMETHOD([dispid(1610743879)], HRESULT, 'Paste',
              ( ['in', 'optional'], VARIANT, 'Type' ),
              ( ['in', 'lcid'], c_int, 'lcid', _lcid )),
    COMMETHOD([dispid(1610743880), 'propget'], HRESULT, 'BarShape',
              ( ['out', 'retval'], POINTER(XlBarShape), 'prop' )),
    COMMETHOD([dispid(1610743880), 'propput'], HRESULT, 'BarShape',
              ( ['in'], XlBarShape, 'prop' )),
    COMMETHOD([dispid(1610743882)], HRESULT, 'Export',
              ( ['in'], BSTR, 'FileName' ),
              ( ['in', 'optional'], VARIANT, 'FilterName' ),
              ( ['in', 'optional'], VARIANT, 'Interactive' ),
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'prop' )),
    COMMETHOD([dispid(1610743883)], HRESULT, 'SetDefaultChart',
              ( ['in'], VARIANT, 'Name' )),
    COMMETHOD([dispid(1610743884)], HRESULT, 'ApplyChartTemplate',
              ( ['in'], BSTR, 'FileName' )),
    COMMETHOD([dispid(1610743885)], HRESULT, 'SaveChartTemplate',
              ( ['in'], BSTR, 'FileName' )),
    COMMETHOD([dispid(2377), 'propget'], HRESULT, 'SideWall',
              ( ['out', 'retval'], POINTER(POINTER(Walls)), 'prop' )),
    COMMETHOD([dispid(2378), 'propget'], HRESULT, 'BackWall',
              ( ['out', 'retval'], POINTER(POINTER(Walls)), 'prop' )),
    COMMETHOD([dispid(2465), 'propget'], HRESULT, 'ChartStyle',
              ( ['out', 'retval'], POINTER(VARIANT), 'prop' )),
    COMMETHOD([dispid(2465), 'propput'], HRESULT, 'ChartStyle',
              ( ['in'], VARIANT, 'prop' )),
    COMMETHOD([dispid(2466)], HRESULT, 'ClearToMatchStyle'),
    COMMETHOD([dispid(1814), 'propget'], HRESULT, 'PivotLayout',
              ( ['out', 'retval'], POINTER(POINTER(IDispatch)), 'prop' )),
    COMMETHOD([dispid(1815), 'hidden', 'propget'], HRESULT, 'HasPivotFields',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'prop' )),
    COMMETHOD([dispid(1815), 'hidden', 'propput'], HRESULT, 'HasPivotFields',
              ( ['in'], VARIANT_BOOL, 'prop' )),
    COMMETHOD([dispid(1610743895), 'propget'], HRESULT, 'ShowDataLabelsOverMaximum',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'prop' )),
    COMMETHOD([dispid(1610743895), 'propput'], HRESULT, 'ShowDataLabelsOverMaximum',
              ( ['in'], VARIANT_BOOL, 'prop' )),
    COMMETHOD([dispid(2468)], HRESULT, 'ApplyLayout',
              ( ['in'], c_int, 'Layout' ),
              ( ['in', 'optional'], VARIANT, 'ChartType' )),
    COMMETHOD([dispid(1610743899)], HRESULT, 'Refresh'),
    COMMETHOD([dispid(1610743900)], HRESULT, 'SetElement',
              ( ['in'], comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoChartElementType, 'Element' )),
    COMMETHOD([dispid(1610743901), 'propget'], HRESULT, 'ChartData',
              ( ['out', 'retval'], POINTER(POINTER(ChartData)), 'prop' )),
    COMMETHOD([dispid(1610743903), 'propget'], HRESULT, 'Shapes',
              ( ['out', 'retval'], POINTER(POINTER(IDispatch)), 'prop' )),
    COMMETHOD([dispid(148), 'propget'], HRESULT, 'Application',
              ( ['out', 'retval'], POINTER(POINTER(IDispatch)), 'prop' )),
    COMMETHOD([dispid(149), 'propget'], HRESULT, 'Creator',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(17), 'hidden', 'propget'], HRESULT, 'Area3DGroup',
              ( ['in', 'lcid'], c_int, 'lcid', _lcid ),
              ( ['out', 'retval'], POINTER(POINTER(ChartGroup)), 'prop' )),
    COMMETHOD([dispid(9), 'hidden'], HRESULT, 'AreaGroups',
              ( ['in', 'optional'], VARIANT, 'Index' ),
              ( ['in', 'lcid'], c_int, 'lcid', _lcid ),
              ( ['out', 'retval'], POINTER(POINTER(IDispatch)), 'prop' )),
    COMMETHOD([dispid(18), 'hidden', 'propget'], HRESULT, 'Bar3DGroup',
              ( ['in', 'lcid'], c_int, 'lcid', _lcid ),
              ( ['out', 'retval'], POINTER(POINTER(ChartGroup)), 'prop' )),
    COMMETHOD([dispid(10), 'hidden'], HRESULT, 'BarGroups',
              ( ['in', 'optional'], VARIANT, 'Index' ),
              ( ['in', 'lcid'], c_int, 'lcid', _lcid ),
              ( ['out', 'retval'], POINTER(POINTER(IDispatch)), 'prop' )),
    COMMETHOD([dispid(19), 'hidden', 'propget'], HRESULT, 'Column3DGroup',
              ( ['in', 'lcid'], c_int, 'lcid', _lcid ),
              ( ['out', 'retval'], POINTER(POINTER(ChartGroup)), 'prop' )),
    COMMETHOD([dispid(11), 'hidden'], HRESULT, 'ColumnGroups',
              ( ['in', 'optional'], VARIANT, 'Index' ),
              ( ['in', 'lcid'], c_int, 'lcid', _lcid ),
              ( ['out', 'retval'], POINTER(POINTER(IDispatch)), 'prop' )),
    COMMETHOD([dispid(20), 'hidden', 'propget'], HRESULT, 'Line3DGroup',
              ( ['in', 'lcid'], c_int, 'lcid', _lcid ),
              ( ['out', 'retval'], POINTER(POINTER(ChartGroup)), 'prop' )),
    COMMETHOD([dispid(12), 'hidden'], HRESULT, 'LineGroups',
              ( ['in', 'optional'], VARIANT, 'Index' ),
              ( ['in', 'lcid'], c_int, 'lcid', _lcid ),
              ( ['out', 'retval'], POINTER(POINTER(IDispatch)), 'prop' )),
    COMMETHOD([dispid(21), 'hidden', 'propget'], HRESULT, 'Pie3DGroup',
              ( ['in', 'lcid'], c_int, 'lcid', _lcid ),
              ( ['out', 'retval'], POINTER(POINTER(ChartGroup)), 'prop' )),
    COMMETHOD([dispid(13), 'hidden'], HRESULT, 'PieGroups',
              ( ['in', 'optional'], VARIANT, 'Index' ),
              ( ['in', 'lcid'], c_int, 'lcid', _lcid ),
              ( ['out', 'retval'], POINTER(POINTER(IDispatch)), 'prop' )),
    COMMETHOD([dispid(14), 'hidden'], HRESULT, 'DoughnutGroups',
              ( ['in', 'optional'], VARIANT, 'Index' ),
              ( ['in', 'lcid'], c_int, 'lcid', _lcid ),
              ( ['out', 'retval'], POINTER(POINTER(IDispatch)), 'prop' )),
    COMMETHOD([dispid(15), 'hidden'], HRESULT, 'RadarGroups',
              ( ['in', 'optional'], VARIANT, 'Index' ),
              ( ['in', 'lcid'], c_int, 'lcid', _lcid ),
              ( ['out', 'retval'], POINTER(POINTER(IDispatch)), 'prop' )),
    COMMETHOD([dispid(22), 'hidden', 'propget'], HRESULT, 'SurfaceGroup',
              ( ['in', 'lcid'], c_int, 'lcid', _lcid ),
              ( ['out', 'retval'], POINTER(POINTER(ChartGroup)), 'prop' )),
    COMMETHOD([dispid(16), 'hidden'], HRESULT, 'XYGroups',
              ( ['in', 'optional'], VARIANT, 'Index' ),
              ( ['in', 'lcid'], c_int, 'lcid', _lcid ),
              ( ['out', 'retval'], POINTER(POINTER(IDispatch)), 'prop' )),
    COMMETHOD([dispid(117)], HRESULT, 'Delete',
              ( ['in', 'lcid'], c_int, 'lcid', _lcid ),
              ( ['out', 'retval'], POINTER(VARIANT), 'prop' )),
    COMMETHOD([dispid(551)], HRESULT, 'Copy',
              ( ['in', 'optional'], VARIANT, 'Before' ),
              ( ['in', 'optional'], VARIANT, 'After' ),
              ( ['in', 'lcid'], c_int, 'lcid', _lcid )),
    COMMETHOD([dispid(235)], HRESULT, 'Select',
              ( ['in', 'optional'], VARIANT, 'Replace' ),
              ( ['in', 'lcid'], c_int, 'lcid', _lcid ),
              ( ['out', 'retval'], POINTER(VARIANT), 'prop' )),
    COMMETHOD([dispid(2844), 'propget'], HRESULT, 'ShowReportFilterFieldButtons',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'prop' )),
    COMMETHOD([dispid(2844), 'propput'], HRESULT, 'ShowReportFilterFieldButtons',
              ( ['in'], VARIANT_BOOL, 'prop' )),
    COMMETHOD([dispid(2845), 'propget'], HRESULT, 'ShowLegendFieldButtons',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'prop' )),
    COMMETHOD([dispid(2845), 'propput'], HRESULT, 'ShowLegendFieldButtons',
              ( ['in'], VARIANT_BOOL, 'prop' )),
    COMMETHOD([dispid(2846), 'propget'], HRESULT, 'ShowAxisFieldButtons',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'prop' )),
    COMMETHOD([dispid(2846), 'propput'], HRESULT, 'ShowAxisFieldButtons',
              ( ['in'], VARIANT_BOOL, 'prop' )),
    COMMETHOD([dispid(2847), 'propget'], HRESULT, 'ShowValueFieldButtons',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'prop' )),
    COMMETHOD([dispid(2847), 'propput'], HRESULT, 'ShowValueFieldButtons',
              ( ['in'], VARIANT_BOOL, 'prop' )),
    COMMETHOD([dispid(2848), 'propget'], HRESULT, 'ShowAllFieldButtons',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'prop' )),
    COMMETHOD([dispid(2848), 'propput'], HRESULT, 'ShowAllFieldButtons',
              ( ['in'], VARIANT_BOOL, 'prop' )),
    COMMETHOD([dispid(236)], HRESULT, 'FullSeriesCollection',
              ( ['in', 'optional'], VARIANT, 'Index' ),
              ( ['in', 'lcid'], c_int, 'lcid', _lcid ),
              ( ['out', 'retval'], POINTER(POINTER(IDispatch)), 'prop' )),
    COMMETHOD([dispid(237), 'propget'], HRESULT, 'CategoryLabelLevel',
              ( ['out', 'retval'], POINTER(XlCategoryLabelLevel), 'prop' )),
    COMMETHOD([dispid(237), 'propput'], HRESULT, 'CategoryLabelLevel',
              ( ['in'], XlCategoryLabelLevel, 'prop' )),
    COMMETHOD([dispid(238), 'propget'], HRESULT, 'SeriesNameLevel',
              ( ['out', 'retval'], POINTER(XlSeriesNameLevel), 'prop' )),
    COMMETHOD([dispid(238), 'propput'], HRESULT, 'SeriesNameLevel',
              ( ['in'], XlSeriesNameLevel, 'prop' )),
    COMMETHOD([dispid(239), 'hidden', 'propget'], HRESULT, 'HasHiddenContent',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'prop' )),
    COMMETHOD([dispid(240), 'hidden'], HRESULT, 'DeleteHiddenContent'),
    COMMETHOD([dispid(2467), 'propget'], HRESULT, 'ChartColor',
              ( ['out', 'retval'], POINTER(VARIANT), 'prop' )),
    COMMETHOD([dispid(2467), 'propput'], HRESULT, 'ChartColor',
              ( ['in'], VARIANT, 'prop' )),
    COMMETHOD([dispid(2469)], HRESULT, 'ClearToMatchColorStyle'),
]
################################################################
## code template for Chart implementation
##class Chart_Impl(object):
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return prop
##
##    def _get(self, lcid):
##        '-no docstring-'
##        #return prop
##    def _set(self, lcid, prop):
##        '-no docstring-'
##    HasTitle = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def ChartTitle(self, lcid):
##        '-no docstring-'
##        #return prop
##
##    def _get(self, lcid):
##        '-no docstring-'
##        #return prop
##    def _set(self, lcid, prop):
##        '-no docstring-'
##    DepthPercent = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self, lcid):
##        '-no docstring-'
##        #return prop
##    def _set(self, lcid, prop):
##        '-no docstring-'
##    Elevation = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self, lcid):
##        '-no docstring-'
##        #return prop
##    def _set(self, lcid, prop):
##        '-no docstring-'
##    GapDepth = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self, lcid):
##        '-no docstring-'
##        #return prop
##    def _set(self, lcid, prop):
##        '-no docstring-'
##    HeightPercent = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self, lcid):
##        '-no docstring-'
##        #return prop
##    def _set(self, lcid, prop):
##        '-no docstring-'
##    Perspective = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self, lcid):
##        '-no docstring-'
##        #return prop
##    def _set(self, lcid, prop):
##        '-no docstring-'
##    RightAngleAxes = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self, lcid):
##        '-no docstring-'
##        #return prop
##    def _set(self, lcid, prop):
##        '-no docstring-'
##    Rotation = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self, lcid):
##        '-no docstring-'
##        #return prop
##    def _set(self, lcid, prop):
##        '-no docstring-'
##    DisplayBlanksAs = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def ChartGroups(self, Index, lcid):
##        '-no docstring-'
##        #return prop
##
##    def SeriesCollection(self, Index, lcid):
##        '-no docstring-'
##        #return prop
##
##    def _get(self, lcid):
##        '-no docstring-'
##        #return prop
##    def _set(self, lcid, prop):
##        '-no docstring-'
##    SubType = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self, lcid):
##        '-no docstring-'
##        #return prop
##    def _set(self, lcid, prop):
##        '-no docstring-'
##    Type = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Corners(self, lcid):
##        '-no docstring-'
##        #return prop
##
##    def ApplyDataLabels(self, Type, LegendKey, AutoText, HasLeaderLines, ShowSeriesName, ShowCategoryName, ShowValue, ShowPercentage, ShowBubbleSize, Separator, lcid):
##        '-no docstring-'
##        #return 
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    ChartType = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    HasDataTable = property(_get, _set, doc = _set.__doc__)
##
##    def ApplyCustomType(self, ChartType, TypeName):
##        '-no docstring-'
##        #return 
##
##    def GetChartElement(self, x, y):
##        '-no docstring-'
##        #return ElementID, Arg1, Arg2
##
##    def SetSourceData(self, Source, PlotBy):
##        '-no docstring-'
##        #return 
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    PlotBy = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self, lcid):
##        '-no docstring-'
##        #return prop
##    def _set(self, lcid, prop):
##        '-no docstring-'
##    HasLegend = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Legend(self, lcid):
##        '-no docstring-'
##        #return prop
##
##    def Axes(self, Type, AxisGroup, lcid):
##        '-no docstring-'
##        #return prop
##
##    def _get(self, Index1, Index2, lcid):
##        '-no docstring-'
##        #return prop
##    def _set(self, Index1, Index2, lcid, prop):
##        '-no docstring-'
##    HasAxis = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Walls(self, lcid):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Floor(self, lcid):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def PlotArea(self, lcid):
##        '-no docstring-'
##        #return prop
##
##    def _get(self, lcid):
##        '-no docstring-'
##        #return prop
##    def _set(self, lcid, prop):
##        '-no docstring-'
##    PlotVisibleOnly = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def ChartArea(self, lcid):
##        '-no docstring-'
##        #return prop
##
##    def AutoFormat(self, Gallery, Format):
##        '-no docstring-'
##        #return 
##
##    def _get(self, lcid):
##        '-no docstring-'
##        #return prop
##    def _set(self, lcid, prop):
##        '-no docstring-'
##    AutoScaling = property(_get, _set, doc = _set.__doc__)
##
##    def SetBackgroundPicture(self, FileName):
##        '-no docstring-'
##        #return 
##
##    def ChartWizard(self, Source, Gallery, Format, PlotBy, CategoryLabels, SeriesLabels, HasLegend, Title, CategoryTitle, ValueTitle, ExtraTitle, lcid):
##        '-no docstring-'
##        #return 
##
##    def CopyPicture(self, Appearance, Format, Size, lcid):
##        '-no docstring-'
##        #return 
##
##    @property
##    def DataTable(self):
##        '-no docstring-'
##        #return prop
##
##    def Paste(self, Type, lcid):
##        '-no docstring-'
##        #return 
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    BarShape = property(_get, _set, doc = _set.__doc__)
##
##    def Export(self, FileName, FilterName, Interactive):
##        '-no docstring-'
##        #return prop
##
##    def SetDefaultChart(self, Name):
##        '-no docstring-'
##        #return 
##
##    def ApplyChartTemplate(self, FileName):
##        '-no docstring-'
##        #return 
##
##    def SaveChartTemplate(self, FileName):
##        '-no docstring-'
##        #return 
##
##    @property
##    def SideWall(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def BackWall(self):
##        '-no docstring-'
##        #return prop
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    ChartStyle = property(_get, _set, doc = _set.__doc__)
##
##    def ClearToMatchStyle(self):
##        '-no docstring-'
##        #return 
##
##    @property
##    def PivotLayout(self):
##        '-no docstring-'
##        #return prop
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    HasPivotFields = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    ShowDataLabelsOverMaximum = property(_get, _set, doc = _set.__doc__)
##
##    def ApplyLayout(self, Layout, ChartType):
##        '-no docstring-'
##        #return 
##
##    def Refresh(self):
##        '-no docstring-'
##        #return 
##
##    def SetElement(self, Element):
##        '-no docstring-'
##        #return 
##
##    @property
##    def ChartData(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Shapes(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Creator(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Area3DGroup(self, lcid):
##        '-no docstring-'
##        #return prop
##
##    def AreaGroups(self, Index, lcid):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Bar3DGroup(self, lcid):
##        '-no docstring-'
##        #return prop
##
##    def BarGroups(self, Index, lcid):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Column3DGroup(self, lcid):
##        '-no docstring-'
##        #return prop
##
##    def ColumnGroups(self, Index, lcid):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Line3DGroup(self, lcid):
##        '-no docstring-'
##        #return prop
##
##    def LineGroups(self, Index, lcid):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Pie3DGroup(self, lcid):
##        '-no docstring-'
##        #return prop
##
##    def PieGroups(self, Index, lcid):
##        '-no docstring-'
##        #return prop
##
##    def DoughnutGroups(self, Index, lcid):
##        '-no docstring-'
##        #return prop
##
##    def RadarGroups(self, Index, lcid):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def SurfaceGroup(self, lcid):
##        '-no docstring-'
##        #return prop
##
##    def XYGroups(self, Index, lcid):
##        '-no docstring-'
##        #return prop
##
##    def Delete(self, lcid):
##        '-no docstring-'
##        #return prop
##
##    def Copy(self, Before, After, lcid):
##        '-no docstring-'
##        #return 
##
##    def Select(self, Replace, lcid):
##        '-no docstring-'
##        #return prop
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    ShowReportFilterFieldButtons = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    ShowLegendFieldButtons = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    ShowAxisFieldButtons = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    ShowValueFieldButtons = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    ShowAllFieldButtons = property(_get, _set, doc = _set.__doc__)
##
##    def FullSeriesCollection(self, Index, lcid):
##        '-no docstring-'
##        #return prop
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    CategoryLabelLevel = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    SeriesNameLevel = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def HasHiddenContent(self):
##        '-no docstring-'
##        #return prop
##
##    def DeleteHiddenContent(self):
##        '-no docstring-'
##        #return 
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    ChartColor = property(_get, _set, doc = _set.__doc__)
##
##    def ClearToMatchColorStyle(self):
##        '-no docstring-'
##        #return 
##

class EmailSignatureEntries(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{000209E5-0000-0000-C000-000000000046}')
    _idlflags_ = ['dual', 'nonextensible', 'oleautomation']
EmailSignature._methods_ = [
    COMMETHOD([dispid(100), 'propget'], HRESULT, 'Application',
              ( ['out', 'retval'], POINTER(POINTER(Application)), 'prop' )),
    COMMETHOD([dispid(101), 'propget'], HRESULT, 'Creator',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(102), 'propget'], HRESULT, 'Parent',
              ( ['out', 'retval'], POINTER(POINTER(IDispatch)), 'prop' )),
    COMMETHOD([dispid(103), 'propget'], HRESULT, 'NewMessageSignature',
              ( ['out', 'retval'], POINTER(BSTR), 'prop' )),
    COMMETHOD([dispid(103), 'propput'], HRESULT, 'NewMessageSignature',
              ( ['in'], BSTR, 'prop' )),
    COMMETHOD([dispid(104), 'propget'], HRESULT, 'ReplyMessageSignature',
              ( ['out', 'retval'], POINTER(BSTR), 'prop' )),
    COMMETHOD([dispid(104), 'propput'], HRESULT, 'ReplyMessageSignature',
              ( ['in'], BSTR, 'prop' )),
    COMMETHOD([dispid(105), 'propget'], HRESULT, 'EmailSignatureEntries',
              ( ['out', 'retval'], POINTER(POINTER(EmailSignatureEntries)), 'prop' )),
]
################################################################
## code template for EmailSignature implementation
##class EmailSignature_Impl(object):
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Creator(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return prop
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    NewMessageSignature = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    ReplyMessageSignature = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def EmailSignatureEntries(self):
##        '-no docstring-'
##        #return prop
##

class AddIn(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{0002097E-0000-0000-C000-000000000046}')
    _idlflags_ = ['dual', 'nonextensible', 'oleautomation']
AddIns._methods_ = [
    COMMETHOD([dispid(1000), 'propget'], HRESULT, 'Application',
              ( ['out', 'retval'], POINTER(POINTER(Application)), 'prop' )),
    COMMETHOD([dispid(1001), 'propget'], HRESULT, 'Creator',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(1002), 'propget'], HRESULT, 'Parent',
              ( ['out', 'retval'], POINTER(POINTER(IDispatch)), 'prop' )),
    COMMETHOD([dispid(-4), 'nonbrowsable', 'propget'], HRESULT, '_NewEnum',
              ( ['out', 'retval'], POINTER(POINTER(IUnknown)), 'prop' )),
    COMMETHOD([dispid(1), 'propget'], HRESULT, 'Count',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(0)], HRESULT, 'Item',
              ( ['in'], POINTER(VARIANT), 'Index' ),
              ( ['out', 'retval'], POINTER(POINTER(AddIn)), 'prop' )),
    COMMETHOD([dispid(2)], HRESULT, 'Add',
              ( ['in'], BSTR, 'FileName' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'Install' ),
              ( ['out', 'retval'], POINTER(POINTER(AddIn)), 'prop' )),
    COMMETHOD([dispid(3)], HRESULT, 'Unload',
              ( ['in'], VARIANT_BOOL, 'RemoveFromList' )),
]
################################################################
## code template for AddIns implementation
##class AddIns_Impl(object):
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Creator(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def _NewEnum(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Count(self):
##        '-no docstring-'
##        #return prop
##
##    def Item(self, Index):
##        '-no docstring-'
##        #return prop
##
##    def Add(self, FileName, Install):
##        '-no docstring-'
##        #return prop
##
##    def Unload(self, RemoveFromList):
##        '-no docstring-'
##        #return 
##

AxisTitle._methods_ = [
    COMMETHOD([dispid(1610743808), 'propget'], HRESULT, 'Caption',
              ( ['out', 'retval'], POINTER(BSTR), 'prop' )),
    COMMETHOD([dispid(1610743808), 'propput'], HRESULT, 'Caption',
              ( ['in'], BSTR, 'prop' )),
    COMMETHOD([dispid(1610743810), 'propget'], HRESULT, 'Characters',
              ( ['in', 'optional'], VARIANT, 'Start' ),
              ( ['in', 'optional'], VARIANT, 'Length' ),
              ( ['out', 'retval'], POINTER(POINTER(ChartCharacters)), 'prop' )),
    COMMETHOD([dispid(1610743811), 'hidden', 'propget'], HRESULT, 'Font',
              ( ['out', 'retval'], POINTER(POINTER(ChartFont)), 'prop' )),
    COMMETHOD([dispid(1610743812), 'propget'], HRESULT, 'HorizontalAlignment',
              ( ['out', 'retval'], POINTER(VARIANT), 'prop' )),
    COMMETHOD([dispid(1610743812), 'propput'], HRESULT, 'HorizontalAlignment',
              ( ['in'], VARIANT, 'prop' )),
    COMMETHOD([dispid(1610743814), 'propget'], HRESULT, 'Left',
              ( ['out', 'retval'], POINTER(c_double), 'prop' )),
    COMMETHOD([dispid(1610743814), 'propput'], HRESULT, 'Left',
              ( ['in'], c_double, 'prop' )),
    COMMETHOD([dispid(1610743816), 'propget'], HRESULT, 'Orientation',
              ( ['out', 'retval'], POINTER(VARIANT), 'prop' )),
    COMMETHOD([dispid(1610743816), 'propput'], HRESULT, 'Orientation',
              ( ['in'], VARIANT, 'prop' )),
    COMMETHOD([dispid(1610743818), 'propget'], HRESULT, 'Shadow',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'prop' )),
    COMMETHOD([dispid(1610743818), 'propput'], HRESULT, 'Shadow',
              ( ['in'], VARIANT_BOOL, 'prop' )),
    COMMETHOD([dispid(1610743820), 'propget'], HRESULT, 'Text',
              ( ['out', 'retval'], POINTER(BSTR), 'prop' )),
    COMMETHOD([dispid(1610743820), 'propput'], HRESULT, 'Text',
              ( ['in'], BSTR, 'prop' )),
    COMMETHOD([dispid(1610743822), 'propget'], HRESULT, 'Top',
              ( ['out', 'retval'], POINTER(c_double), 'prop' )),
    COMMETHOD([dispid(1610743822), 'propput'], HRESULT, 'Top',
              ( ['in'], c_double, 'prop' )),
    COMMETHOD([dispid(1610743824), 'propget'], HRESULT, 'VerticalAlignment',
              ( ['out', 'retval'], POINTER(VARIANT), 'prop' )),
    COMMETHOD([dispid(1610743824), 'propput'], HRESULT, 'VerticalAlignment',
              ( ['in'], VARIANT, 'prop' )),
    COMMETHOD([dispid(1610743826), 'propget'], HRESULT, 'ReadingOrder',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(1610743826), 'propput'], HRESULT, 'ReadingOrder',
              ( ['in'], c_int, 'prop' )),
    COMMETHOD([dispid(1610743828), 'hidden', 'propget'], HRESULT, 'AutoScaleFont',
              ( ['out', 'retval'], POINTER(VARIANT), 'prop' )),
    COMMETHOD([dispid(1610743828), 'hidden', 'propput'], HRESULT, 'AutoScaleFont',
              ( ['in'], VARIANT, 'prop' )),
    COMMETHOD([dispid(1610743830), 'hidden', 'propget'], HRESULT, 'Interior',
              ( ['out', 'retval'], POINTER(POINTER(Interior)), 'prop' )),
    COMMETHOD([dispid(1610743831), 'hidden', 'propget'], HRESULT, 'Fill',
              ( ['out', 'retval'], POINTER(POINTER(ChartFillFormat)), 'prop' )),
    COMMETHOD([dispid(1610743832)], HRESULT, 'Delete',
              ( ['out', 'retval'], POINTER(VARIANT), 'prop' )),
    COMMETHOD([dispid(1610743833), 'hidden', 'propget'], HRESULT, 'Border',
              ( ['out', 'retval'], POINTER(POINTER(ChartBorder)), 'prop' )),
    COMMETHOD([dispid(1610743834), 'propget'], HRESULT, 'Name',
              ( ['out', 'retval'], POINTER(BSTR), 'prop' )),
    COMMETHOD([dispid(1610743835), 'propget'], HRESULT, 'Parent',
              ( ['out', 'retval'], POINTER(POINTER(IDispatch)), 'prop' )),
    COMMETHOD([dispid(1610743836)], HRESULT, 'Select',
              ( ['out', 'retval'], POINTER(VARIANT), 'prop' )),
    COMMETHOD([dispid(2418), 'propget'], HRESULT, 'IncludeInLayout',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'prop' )),
    COMMETHOD([dispid(2418), 'propput'], HRESULT, 'IncludeInLayout',
              ( ['in'], VARIANT_BOOL, 'prop' )),
    COMMETHOD([dispid(1671), 'propget'], HRESULT, 'Position',
              ( ['out', 'retval'], POINTER(XlChartElementPosition), 'prop' )),
    COMMETHOD([dispid(1671), 'propput'], HRESULT, 'Position',
              ( ['in'], XlChartElementPosition, 'prop' )),
    COMMETHOD([dispid(1610743841), 'propget'], HRESULT, 'Format',
              ( ['out', 'retval'], POINTER(POINTER(ChartFormat)), 'prop' )),
    COMMETHOD([dispid(148), 'propget'], HRESULT, 'Application',
              ( ['out', 'retval'], POINTER(POINTER(IDispatch)), 'prop' )),
    COMMETHOD([dispid(149), 'propget'], HRESULT, 'Creator',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(1610743842), 'propget'], HRESULT, 'Height',
              ( ['out', 'retval'], POINTER(c_double), 'prop' )),
    COMMETHOD([dispid(1610743845), 'propget'], HRESULT, 'Width',
              ( ['out', 'retval'], POINTER(c_double), 'prop' )),
    COMMETHOD([dispid(1610743846), 'propget'], HRESULT, 'Formula',
              ( ['out', 'retval'], POINTER(BSTR), 'prop' )),
    COMMETHOD([dispid(1610743846), 'propput'], HRESULT, 'Formula',
              ( ['in'], BSTR, 'prop' )),
    COMMETHOD([dispid(1610743848), 'propget'], HRESULT, 'FormulaR1C1',
              ( ['out', 'retval'], POINTER(BSTR), 'prop' )),
    COMMETHOD([dispid(1610743848), 'propput'], HRESULT, 'FormulaR1C1',
              ( ['in'], BSTR, 'prop' )),
    COMMETHOD([dispid(1610743850), 'propget'], HRESULT, 'FormulaLocal',
              ( ['out', 'retval'], POINTER(BSTR), 'prop' )),
    COMMETHOD([dispid(1610743850), 'propput'], HRESULT, 'FormulaLocal',
              ( ['in'], BSTR, 'prop' )),
    COMMETHOD([dispid(1610743852), 'propget'], HRESULT, 'FormulaR1C1Local',
              ( ['out', 'retval'], POINTER(BSTR), 'prop' )),
    COMMETHOD([dispid(1610743852), 'propput'], HRESULT, 'FormulaR1C1Local',
              ( ['in'], BSTR, 'prop' )),
    COMMETHOD([dispid(253)], HRESULT, 'SetProperty',
              ( ['in'], BSTR, 'ID' ),
              ( ['in'], VARIANT, 'Value' )),
    COMMETHOD([dispid(254)], HRESULT, 'GetProperty',
              ( ['in'], BSTR, 'ID' ),
              ( ['out', 'retval'], POINTER(VARIANT), 'prop' )),
]
################################################################
## code template for AxisTitle implementation
##class AxisTitle_Impl(object):
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    Caption = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Characters(self, Start, Length):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Font(self):
##        '-no docstring-'
##        #return prop
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    HorizontalAlignment = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    Left = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    Orientation = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    Shadow = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    Text = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    Top = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    VerticalAlignment = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    ReadingOrder = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    AutoScaleFont = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Interior(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Fill(self):
##        '-no docstring-'
##        #return prop
##
##    def Delete(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Border(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Name(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return prop
##
##    def Select(self):
##        '-no docstring-'
##        #return prop
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    IncludeInLayout = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    Position = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Format(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Creator(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Height(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Width(self):
##        '-no docstring-'
##        #return prop
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    Formula = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    FormulaR1C1 = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    FormulaLocal = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    FormulaR1C1Local = property(_get, _set, doc = _set.__doc__)
##
##    def SetProperty(self, ID, Value):
##        '-no docstring-'
##        #return 
##
##    def GetProperty(self, ID):
##        '-no docstring-'
##        #return prop
##


# values for enumeration 'XlDataLabelSeparator'
xlDataLabelSeparatorDefault = 1
XlDataLabelSeparator = c_int # enum
Characters._methods_ = [
    COMMETHOD([dispid(-4), 'nonbrowsable', 'propget'], HRESULT, '_NewEnum',
              ( ['out', 'retval'], POINTER(POINTER(IUnknown)), 'prop' )),
    COMMETHOD([dispid(2), 'propget'], HRESULT, 'Count',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(3), 'propget'], HRESULT, 'First',
              ( ['out', 'retval'], POINTER(POINTER(Range)), 'prop' )),
    COMMETHOD([dispid(4), 'propget'], HRESULT, 'Last',
              ( ['out', 'retval'], POINTER(POINTER(Range)), 'prop' )),
    COMMETHOD([dispid(1000), 'propget'], HRESULT, 'Application',
              ( ['out', 'retval'], POINTER(POINTER(Application)), 'prop' )),
    COMMETHOD([dispid(1001), 'propget'], HRESULT, 'Creator',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(1002), 'propget'], HRESULT, 'Parent',
              ( ['out', 'retval'], POINTER(POINTER(IDispatch)), 'prop' )),
    COMMETHOD([dispid(0)], HRESULT, 'Item',
              ( ['in'], c_int, 'Index' ),
              ( ['out', 'retval'], POINTER(POINTER(Range)), 'prop' )),
]
################################################################
## code template for Characters implementation
##class Characters_Impl(object):
##    @property
##    def _NewEnum(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Count(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def First(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Last(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Creator(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return prop
##
##    def Item(self, Index):
##        '-no docstring-'
##        #return prop
##

class HTMLDivision(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{000209E7-0000-0000-C000-000000000046}')
    _idlflags_ = ['dual', 'nonextensible', 'oleautomation']
HTMLDivisions._methods_ = [
    COMMETHOD([dispid(1000), 'propget'], HRESULT, 'Application',
              ( ['out', 'retval'], POINTER(POINTER(Application)), 'prop' )),
    COMMETHOD([dispid(1001), 'propget'], HRESULT, 'Creator',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(1002), 'propget'], HRESULT, 'Parent',
              ( ['out', 'retval'], POINTER(POINTER(IDispatch)), 'prop' )),
    COMMETHOD([dispid(-4), 'nonbrowsable', 'propget'], HRESULT, '_NewEnum',
              ( ['out', 'retval'], POINTER(POINTER(IUnknown)), 'prop' )),
    COMMETHOD([dispid(1), 'propget'], HRESULT, 'Count',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(2), 'propget'], HRESULT, 'NestingLevel',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(101)], HRESULT, 'Add',
              ( ['in', 'optional'], POINTER(VARIANT), 'Range' ),
              ( ['out', 'retval'], POINTER(POINTER(HTMLDivision)), 'prop' )),
    COMMETHOD([dispid(0)], HRESULT, 'Item',
              ( ['in'], c_int, 'Index' ),
              ( ['out', 'retval'], POINTER(POINTER(HTMLDivision)), 'prop' )),
]
################################################################
## code template for HTMLDivisions implementation
##class HTMLDivisions_Impl(object):
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Creator(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def _NewEnum(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Count(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def NestingLevel(self):
##        '-no docstring-'
##        #return prop
##
##    def Add(self, Range):
##        '-no docstring-'
##        #return prop
##
##    def Item(self, Index):
##        '-no docstring-'
##        #return prop
##

class AutoCorrectEntries(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{00020948-0000-0000-C000-000000000046}')
    _idlflags_ = ['dual', 'nonextensible', 'oleautomation']
class AutoCorrectEntry(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{00020947-0000-0000-C000-000000000046}')
    _idlflags_ = ['dual', 'nonextensible', 'oleautomation']
AutoCorrectEntries._methods_ = [
    COMMETHOD([dispid(1000), 'propget'], HRESULT, 'Application',
              ( ['out', 'retval'], POINTER(POINTER(Application)), 'prop' )),
    COMMETHOD([dispid(1001), 'propget'], HRESULT, 'Creator',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(1002), 'propget'], HRESULT, 'Parent',
              ( ['out', 'retval'], POINTER(POINTER(IDispatch)), 'prop' )),
    COMMETHOD([dispid(-4), 'nonbrowsable', 'propget'], HRESULT, '_NewEnum',
              ( ['out', 'retval'], POINTER(POINTER(IUnknown)), 'prop' )),
    COMMETHOD([dispid(1), 'propget'], HRESULT, 'Count',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(0)], HRESULT, 'Item',
              ( ['in'], POINTER(VARIANT), 'Index' ),
              ( ['out', 'retval'], POINTER(POINTER(AutoCorrectEntry)), 'prop' )),
    COMMETHOD([dispid(101)], HRESULT, 'Add',
              ( ['in'], BSTR, 'Name' ),
              ( ['in'], BSTR, 'Value' ),
              ( ['out', 'retval'], POINTER(POINTER(AutoCorrectEntry)), 'prop' )),
    COMMETHOD([dispid(102)], HRESULT, 'AddRichText',
              ( ['in'], BSTR, 'Name' ),
              ( ['in'], POINTER(Range), 'Range' ),
              ( ['out', 'retval'], POINTER(POINTER(AutoCorrectEntry)), 'prop' )),
]
################################################################
## code template for AutoCorrectEntries implementation
##class AutoCorrectEntries_Impl(object):
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Creator(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def _NewEnum(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Count(self):
##        '-no docstring-'
##        #return prop
##
##    def Item(self, Index):
##        '-no docstring-'
##        #return prop
##
##    def Add(self, Name, Value):
##        '-no docstring-'
##        #return prop
##
##    def AddRichText(self, Name, Range):
##        '-no docstring-'
##        #return prop
##

class Endnote(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{0002093E-0000-0000-C000-000000000046}')
    _idlflags_ = ['dual', 'nonextensible', 'oleautomation']
Endnote._methods_ = [
    COMMETHOD([dispid(1000), 'propget'], HRESULT, 'Application',
              ( ['out', 'retval'], POINTER(POINTER(Application)), 'prop' )),
    COMMETHOD([dispid(1001), 'propget'], HRESULT, 'Creator',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(1002), 'propget'], HRESULT, 'Parent',
              ( ['out', 'retval'], POINTER(POINTER(IDispatch)), 'prop' )),
    COMMETHOD([dispid(4), 'propget'], HRESULT, 'Range',
              ( ['out', 'retval'], POINTER(POINTER(Range)), 'prop' )),
    COMMETHOD([dispid(5), 'propget'], HRESULT, 'Reference',
              ( ['out', 'retval'], POINTER(POINTER(Range)), 'prop' )),
    COMMETHOD([dispid(6), 'propget'], HRESULT, 'Index',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(10)], HRESULT, 'Delete'),
]
################################################################
## code template for Endnote implementation
##class Endnote_Impl(object):
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Creator(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Range(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Reference(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Index(self):
##        '-no docstring-'
##        #return prop
##
##    def Delete(self):
##        '-no docstring-'
##        #return 
##

class OMathGroupChar(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{02B17CB4-7D55-4B34-B38B-10381433441F}')
    _idlflags_ = ['dual', 'nonextensible', 'oleautomation']
OMathGroupChar._methods_ = [
    COMMETHOD([dispid(100), 'propget'], HRESULT, 'Application',
              ( ['out', 'retval'], POINTER(POINTER(Application)), 'prop' )),
    COMMETHOD([dispid(101), 'propget'], HRESULT, 'Creator',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(102), 'propget'], HRESULT, 'Parent',
              ( ['out', 'retval'], POINTER(POINTER(IDispatch)), 'prop' )),
    COMMETHOD([dispid(103), 'propget'], HRESULT, 'E',
              ( ['out', 'retval'], POINTER(POINTER(OMath)), 'prop' )),
    COMMETHOD([dispid(104), 'propget'], HRESULT, 'Char',
              ( ['out', 'retval'], POINTER(c_short), 'prop' )),
    COMMETHOD([dispid(104), 'propput'], HRESULT, 'Char',
              ( ['in'], c_short, 'prop' )),
    COMMETHOD([dispid(105), 'propget'], HRESULT, 'CharTop',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'prop' )),
    COMMETHOD([dispid(105), 'propput'], HRESULT, 'CharTop',
              ( ['in'], VARIANT_BOOL, 'prop' )),
    COMMETHOD([dispid(106), 'propget'], HRESULT, 'AlignTop',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'prop' )),
    COMMETHOD([dispid(106), 'propput'], HRESULT, 'AlignTop',
              ( ['in'], VARIANT_BOOL, 'prop' )),
]
################################################################
## code template for OMathGroupChar implementation
##class OMathGroupChar_Impl(object):
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Creator(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def E(self):
##        '-no docstring-'
##        #return prop
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    Char = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    CharTop = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    AlignTop = property(_get, _set, doc = _set.__doc__)
##

EmailAuthor._methods_ = [
    COMMETHOD([dispid(1000), 'propget'], HRESULT, 'Application',
              ( ['out', 'retval'], POINTER(POINTER(Application)), 'prop' )),
    COMMETHOD([dispid(1001), 'propget'], HRESULT, 'Creator',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(1002), 'propget'], HRESULT, 'Parent',
              ( ['out', 'retval'], POINTER(POINTER(IDispatch)), 'prop' )),
    COMMETHOD([dispid(103), 'propget'], HRESULT, 'Style',
              ( ['out', 'retval'], POINTER(POINTER(Style)), 'prop' )),
]
################################################################
## code template for EmailAuthor implementation
##class EmailAuthor_Impl(object):
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Creator(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Style(self):
##        '-no docstring-'
##        #return prop
##


# values for enumeration 'WdRevisionsMode'
wdBalloonRevisions = 0
wdInLineRevisions = 1
wdMixedRevisions = 2
WdRevisionsMode = c_int # enum

# values for enumeration 'WdRevisionsBalloonWidthType'
wdBalloonWidthPercent = 0
wdBalloonWidthPoints = 1
WdRevisionsBalloonWidthType = c_int # enum

# values for enumeration 'WdRevisionsBalloonMargin'
wdLeftMargin = 0
wdRightMargin = 1
WdRevisionsBalloonMargin = c_int # enum
class Reviewers(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{12DCDC9A-5418-48A3-BBE6-EB57BAE275E8}')
    _idlflags_ = ['dual', 'nonextensible', 'oleautomation']

# values for enumeration 'WdReadingLayoutMargin'
wdAutomaticMargin = 0
wdSuppressMargin = 1
wdFullMargin = 2
WdReadingLayoutMargin = c_int # enum
class RevisionsFilter(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{D523C26B-7278-4FA9-AA0B-0827DC8B41CE}')
    _idlflags_ = ['dual', 'nonextensible', 'oleautomation']

# values for enumeration 'WdPageColor'
wdPageColorNone = 0
wdPageColorSepia = 1
wdPageColorInverse = 2
WdPageColor = c_int # enum

# values for enumeration 'WdColumnWidth'
wdColumnWidthNarrow = 1
wdColumnWidthDefault = 2
wdColumnWidthWide = 3
WdColumnWidth = c_int # enum

# values for enumeration 'WdPageMovementType'
wdVertical = 1
wdSideToSide = 2
WdPageMovementType = c_int # enum
View._methods_ = [
    COMMETHOD([dispid(1000), 'propget'], HRESULT, 'Application',
              ( ['out', 'retval'], POINTER(POINTER(Application)), 'prop' )),
    COMMETHOD([dispid(1001), 'propget'], HRESULT, 'Creator',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(1002), 'propget'], HRESULT, 'Parent',
              ( ['out', 'retval'], POINTER(POINTER(IDispatch)), 'prop' )),
    COMMETHOD([dispid(0), 'propget'], HRESULT, 'Type',
              ( ['out', 'retval'], POINTER(WdViewType), 'prop' )),
    COMMETHOD([dispid(0), 'propput'], HRESULT, 'Type',
              ( ['in'], WdViewType, 'prop' )),
    COMMETHOD([dispid(1), 'propget'], HRESULT, 'FullScreen',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'prop' )),
    COMMETHOD([dispid(1), 'propput'], HRESULT, 'FullScreen',
              ( ['in'], VARIANT_BOOL, 'prop' )),
    COMMETHOD([dispid(2), 'propget'], HRESULT, 'Draft',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'prop' )),
    COMMETHOD([dispid(2), 'propput'], HRESULT, 'Draft',
              ( ['in'], VARIANT_BOOL, 'prop' )),
    COMMETHOD([dispid(3), 'propget'], HRESULT, 'ShowAll',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'prop' )),
    COMMETHOD([dispid(3), 'propput'], HRESULT, 'ShowAll',
              ( ['in'], VARIANT_BOOL, 'prop' )),
    COMMETHOD([dispid(4), 'propget'], HRESULT, 'ShowFieldCodes',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'prop' )),
    COMMETHOD([dispid(4), 'propput'], HRESULT, 'ShowFieldCodes',
              ( ['in'], VARIANT_BOOL, 'prop' )),
    COMMETHOD([dispid(5), 'propget'], HRESULT, 'MailMergeDataView',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'prop' )),
    COMMETHOD([dispid(5), 'propput'], HRESULT, 'MailMergeDataView',
              ( ['in'], VARIANT_BOOL, 'prop' )),
    COMMETHOD([dispid(7), 'propget'], HRESULT, 'Magnifier',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'prop' )),
    COMMETHOD([dispid(7), 'propput'], HRESULT, 'Magnifier',
              ( ['in'], VARIANT_BOOL, 'prop' )),
    COMMETHOD([dispid(8), 'propget'], HRESULT, 'ShowFirstLineOnly',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'prop' )),
    COMMETHOD([dispid(8), 'propput'], HRESULT, 'ShowFirstLineOnly',
              ( ['in'], VARIANT_BOOL, 'prop' )),
    COMMETHOD([dispid(9), 'propget'], HRESULT, 'ShowFormat',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'prop' )),
    COMMETHOD([dispid(9), 'propput'], HRESULT, 'ShowFormat',
              ( ['in'], VARIANT_BOOL, 'prop' )),
    COMMETHOD([dispid(10), 'propget'], HRESULT, 'Zoom',
              ( ['out', 'retval'], POINTER(POINTER(Zoom)), 'prop' )),
    COMMETHOD([dispid(11), 'propget'], HRESULT, 'ShowObjectAnchors',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'prop' )),
    COMMETHOD([dispid(11), 'propput'], HRESULT, 'ShowObjectAnchors',
              ( ['in'], VARIANT_BOOL, 'prop' )),
    COMMETHOD([dispid(12), 'propget'], HRESULT, 'ShowTextBoundaries',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'prop' )),
    COMMETHOD([dispid(12), 'propput'], HRESULT, 'ShowTextBoundaries',
              ( ['in'], VARIANT_BOOL, 'prop' )),
    COMMETHOD([dispid(13), 'propget'], HRESULT, 'ShowHighlight',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'prop' )),
    COMMETHOD([dispid(13), 'propput'], HRESULT, 'ShowHighlight',
              ( ['in'], VARIANT_BOOL, 'prop' )),
    COMMETHOD([dispid(14), 'propget'], HRESULT, 'ShowDrawings',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'prop' )),
    COMMETHOD([dispid(14), 'propput'], HRESULT, 'ShowDrawings',
              ( ['in'], VARIANT_BOOL, 'prop' )),
    COMMETHOD([dispid(15), 'propget'], HRESULT, 'ShowTabs',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'prop' )),
    COMMETHOD([dispid(15), 'propput'], HRESULT, 'ShowTabs',
              ( ['in'], VARIANT_BOOL, 'prop' )),
    COMMETHOD([dispid(16), 'propget'], HRESULT, 'ShowSpaces',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'prop' )),
    COMMETHOD([dispid(16), 'propput'], HRESULT, 'ShowSpaces',
              ( ['in'], VARIANT_BOOL, 'prop' )),
    COMMETHOD([dispid(17), 'propget'], HRESULT, 'ShowParagraphs',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'prop' )),
    COMMETHOD([dispid(17), 'propput'], HRESULT, 'ShowParagraphs',
              ( ['in'], VARIANT_BOOL, 'prop' )),
    COMMETHOD([dispid(18), 'propget'], HRESULT, 'ShowHyphens',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'prop' )),
    COMMETHOD([dispid(18), 'propput'], HRESULT, 'ShowHyphens',
              ( ['in'], VARIANT_BOOL, 'prop' )),
    COMMETHOD([dispid(19), 'propget'], HRESULT, 'ShowHiddenText',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'prop' )),
    COMMETHOD([dispid(19), 'propput'], HRESULT, 'ShowHiddenText',
              ( ['in'], VARIANT_BOOL, 'prop' )),
    COMMETHOD([dispid(20), 'propget'], HRESULT, 'WrapToWindow',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'prop' )),
    COMMETHOD([dispid(20), 'propput'], HRESULT, 'WrapToWindow',
              ( ['in'], VARIANT_BOOL, 'prop' )),
    COMMETHOD([dispid(21), 'propget'], HRESULT, 'ShowPicturePlaceHolders',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'prop' )),
    COMMETHOD([dispid(21), 'propput'], HRESULT, 'ShowPicturePlaceHolders',
              ( ['in'], VARIANT_BOOL, 'prop' )),
    COMMETHOD([dispid(22), 'propget'], HRESULT, 'ShowBookmarks',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'prop' )),
    COMMETHOD([dispid(22), 'propput'], HRESULT, 'ShowBookmarks',
              ( ['in'], VARIANT_BOOL, 'prop' )),
    COMMETHOD([dispid(23), 'propget'], HRESULT, 'FieldShading',
              ( ['out', 'retval'], POINTER(WdFieldShading), 'prop' )),
    COMMETHOD([dispid(23), 'propput'], HRESULT, 'FieldShading',
              ( ['in'], WdFieldShading, 'prop' )),
    COMMETHOD([dispid(24), 'hidden', 'propget'], HRESULT, 'ShowAnimation',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'prop' )),
    COMMETHOD([dispid(24), 'hidden', 'propput'], HRESULT, 'ShowAnimation',
              ( ['in'], VARIANT_BOOL, 'prop' )),
    COMMETHOD([dispid(25), 'propget'], HRESULT, 'TableGridlines',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'prop' )),
    COMMETHOD([dispid(25), 'propput'], HRESULT, 'TableGridlines',
              ( ['in'], VARIANT_BOOL, 'prop' )),
    COMMETHOD([dispid(26), 'hidden', 'propget'], HRESULT, 'EnlargeFontsLessThan',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(26), 'hidden', 'propput'], HRESULT, 'EnlargeFontsLessThan',
              ( ['in'], c_int, 'prop' )),
    COMMETHOD([dispid(27), 'propget'], HRESULT, 'ShowMainTextLayer',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'prop' )),
    COMMETHOD([dispid(27), 'propput'], HRESULT, 'ShowMainTextLayer',
              ( ['in'], VARIANT_BOOL, 'prop' )),
    COMMETHOD([dispid(28), 'propget'], HRESULT, 'SeekView',
              ( ['out', 'retval'], POINTER(WdSeekView), 'prop' )),
    COMMETHOD([dispid(28), 'propput'], HRESULT, 'SeekView',
              ( ['in'], WdSeekView, 'prop' )),
    COMMETHOD([dispid(29), 'propget'], HRESULT, 'SplitSpecial',
              ( ['out', 'retval'], POINTER(WdSpecialPane), 'prop' )),
    COMMETHOD([dispid(29), 'propput'], HRESULT, 'SplitSpecial',
              ( ['in'], WdSpecialPane, 'prop' )),
    COMMETHOD([dispid(30), 'hidden', 'propget'], HRESULT, 'BrowseToWindow',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(30), 'hidden', 'propput'], HRESULT, 'BrowseToWindow',
              ( ['in'], c_int, 'prop' )),
    COMMETHOD([dispid(31), 'propget'], HRESULT, 'ShowOptionalBreaks',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'prop' )),
    COMMETHOD([dispid(31), 'propput'], HRESULT, 'ShowOptionalBreaks',
              ( ['in'], VARIANT_BOOL, 'prop' )),
    COMMETHOD([dispid(101)], HRESULT, 'CollapseOutline',
              ( ['in', 'optional'], POINTER(VARIANT), 'Range' )),
    COMMETHOD([dispid(102)], HRESULT, 'ExpandOutline',
              ( ['in', 'optional'], POINTER(VARIANT), 'Range' )),
    COMMETHOD([dispid(103)], HRESULT, 'ShowAllHeadings'),
    COMMETHOD([dispid(104)], HRESULT, 'ShowHeading',
              ( ['in'], c_int, 'Level' )),
    COMMETHOD([dispid(105)], HRESULT, 'PreviousHeaderFooter'),
    COMMETHOD([dispid(106)], HRESULT, 'NextHeaderFooter'),
    COMMETHOD([dispid(32), 'propget'], HRESULT, 'DisplayPageBoundaries',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'prop' )),
    COMMETHOD([dispid(32), 'propput'], HRESULT, 'DisplayPageBoundaries',
              ( ['in'], VARIANT_BOOL, 'prop' )),
    COMMETHOD([dispid(33), 'hidden', 'propget'], HRESULT, 'DisplaySmartTags',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'prop' )),
    COMMETHOD([dispid(33), 'hidden', 'propput'], HRESULT, 'DisplaySmartTags',
              ( ['in'], VARIANT_BOOL, 'prop' )),
    COMMETHOD([dispid(34), 'propget'], HRESULT, 'ShowRevisionsAndComments',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'prop' )),
    COMMETHOD([dispid(34), 'propput'], HRESULT, 'ShowRevisionsAndComments',
              ( ['in'], VARIANT_BOOL, 'prop' )),
    COMMETHOD([dispid(35), 'propget'], HRESULT, 'ShowComments',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'prop' )),
    COMMETHOD([dispid(35), 'propput'], HRESULT, 'ShowComments',
              ( ['in'], VARIANT_BOOL, 'prop' )),
    COMMETHOD([dispid(36), 'propget'], HRESULT, 'ShowInsertionsAndDeletions',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'prop' )),
    COMMETHOD([dispid(36), 'propput'], HRESULT, 'ShowInsertionsAndDeletions',
              ( ['in'], VARIANT_BOOL, 'prop' )),
    COMMETHOD([dispid(37), 'propget'], HRESULT, 'ShowFormatChanges',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'prop' )),
    COMMETHOD([dispid(37), 'propput'], HRESULT, 'ShowFormatChanges',
              ( ['in'], VARIANT_BOOL, 'prop' )),
    COMMETHOD([dispid(38), 'hidden', 'propget'], HRESULT, 'RevisionsView',
              ( ['out', 'retval'], POINTER(WdRevisionsView), 'prop' )),
    COMMETHOD([dispid(38), 'hidden', 'propput'], HRESULT, 'RevisionsView',
              ( ['in'], WdRevisionsView, 'prop' )),
    COMMETHOD([dispid(39), 'hidden', 'propget'], HRESULT, 'RevisionsMode',
              ( ['out', 'retval'], POINTER(WdRevisionsMode), 'prop' )),
    COMMETHOD([dispid(39), 'hidden', 'propput'], HRESULT, 'RevisionsMode',
              ( ['in'], WdRevisionsMode, 'prop' )),
    COMMETHOD([dispid(40), 'propget'], HRESULT, 'RevisionsBalloonWidth',
              ( ['out', 'retval'], POINTER(c_float), 'prop' )),
    COMMETHOD([dispid(40), 'propput'], HRESULT, 'RevisionsBalloonWidth',
              ( ['in'], c_float, 'prop' )),
    COMMETHOD([dispid(41), 'propget'], HRESULT, 'RevisionsBalloonWidthType',
              ( ['out', 'retval'], POINTER(WdRevisionsBalloonWidthType), 'prop' )),
    COMMETHOD([dispid(41), 'propput'], HRESULT, 'RevisionsBalloonWidthType',
              ( ['in'], WdRevisionsBalloonWidthType, 'prop' )),
    COMMETHOD([dispid(42), 'propget'], HRESULT, 'RevisionsBalloonSide',
              ( ['out', 'retval'], POINTER(WdRevisionsBalloonMargin), 'prop' )),
    COMMETHOD([dispid(42), 'propput'], HRESULT, 'RevisionsBalloonSide',
              ( ['in'], WdRevisionsBalloonMargin, 'prop' )),
    COMMETHOD([dispid(43), 'hidden', 'propget'], HRESULT, 'Reviewers',
              ( ['out', 'retval'], POINTER(POINTER(Reviewers)), 'prop' )),
    COMMETHOD([dispid(44), 'propget'], HRESULT, 'RevisionsBalloonShowConnectingLines',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'prop' )),
    COMMETHOD([dispid(44), 'propput'], HRESULT, 'RevisionsBalloonShowConnectingLines',
              ( ['in'], VARIANT_BOOL, 'prop' )),
    COMMETHOD([dispid(45), 'propget'], HRESULT, 'ReadingLayout',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'prop' )),
    COMMETHOD([dispid(45), 'propput'], HRESULT, 'ReadingLayout',
              ( ['in'], VARIANT_BOOL, 'prop' )),
    COMMETHOD([dispid(46), 'propget'], HRESULT, 'ShowXMLMarkup',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(46), 'propput'], HRESULT, 'ShowXMLMarkup',
              ( ['in'], c_int, 'prop' )),
    COMMETHOD([dispid(47), 'propget'], HRESULT, 'ShadeEditableRanges',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(47), 'propput'], HRESULT, 'ShadeEditableRanges',
              ( ['in'], c_int, 'prop' )),
    COMMETHOD([dispid(48), 'propget'], HRESULT, 'ShowInkAnnotations',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'prop' )),
    COMMETHOD([dispid(48), 'propput'], HRESULT, 'ShowInkAnnotations',
              ( ['in'], VARIANT_BOOL, 'prop' )),
    COMMETHOD([dispid(49), 'propget'], HRESULT, 'DisplayBackgrounds',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'prop' )),
    COMMETHOD([dispid(49), 'propput'], HRESULT, 'DisplayBackgrounds',
              ( ['in'], VARIANT_BOOL, 'prop' )),
    COMMETHOD([dispid(50), 'propget'], HRESULT, 'ReadingLayoutActualView',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'prop' )),
    COMMETHOD([dispid(50), 'propput'], HRESULT, 'ReadingLayoutActualView',
              ( ['in'], VARIANT_BOOL, 'prop' )),
    COMMETHOD([dispid(51), 'hidden', 'propget'], HRESULT, 'ReadingLayoutAllowMultiplePages',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'prop' )),
    COMMETHOD([dispid(51), 'hidden', 'propput'], HRESULT, 'ReadingLayoutAllowMultiplePages',
              ( ['in'], VARIANT_BOOL, 'prop' )),
    COMMETHOD([dispid(53), 'hidden', 'propget'], HRESULT, 'ReadingLayoutAllowEditing',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'prop' )),
    COMMETHOD([dispid(53), 'hidden', 'propput'], HRESULT, 'ReadingLayoutAllowEditing',
              ( ['in'], VARIANT_BOOL, 'prop' )),
    COMMETHOD([dispid(54), 'propget'], HRESULT, 'ReadingLayoutTruncateMargins',
              ( ['out', 'retval'], POINTER(WdReadingLayoutMargin), 'prop' )),
    COMMETHOD([dispid(54), 'propput'], HRESULT, 'ReadingLayoutTruncateMargins',
              ( ['in'], WdReadingLayoutMargin, 'prop' )),
    COMMETHOD([dispid(52), 'hidden', 'propget'], HRESULT, 'ShowMarkupAreaHighlight',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'prop' )),
    COMMETHOD([dispid(52), 'hidden', 'propput'], HRESULT, 'ShowMarkupAreaHighlight',
              ( ['in'], VARIANT_BOOL, 'prop' )),
    COMMETHOD([dispid(55), 'propget'], HRESULT, 'Panning',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'prop' )),
    COMMETHOD([dispid(55), 'propput'], HRESULT, 'Panning',
              ( ['in'], VARIANT_BOOL, 'prop' )),
    COMMETHOD([dispid(56), 'propget'], HRESULT, 'ShowCropMarks',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'prop' )),
    COMMETHOD([dispid(56), 'propput'], HRESULT, 'ShowCropMarks',
              ( ['in'], VARIANT_BOOL, 'prop' )),
    COMMETHOD([dispid(57), 'propget'], HRESULT, 'MarkupMode',
              ( ['out', 'retval'], POINTER(WdRevisionsMode), 'prop' )),
    COMMETHOD([dispid(57), 'propput'], HRESULT, 'MarkupMode',
              ( ['in'], WdRevisionsMode, 'prop' )),
    COMMETHOD([dispid(58), 'propget'], HRESULT, 'ConflictMode',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'prop' )),
    COMMETHOD([dispid(58), 'propput'], HRESULT, 'ConflictMode',
              ( ['in'], VARIANT_BOOL, 'prop' )),
    COMMETHOD([dispid(59), 'propget'], HRESULT, 'ShowOtherAuthors',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'prop' )),
    COMMETHOD([dispid(59), 'propput'], HRESULT, 'ShowOtherAuthors',
              ( ['in'], VARIANT_BOOL, 'prop' )),
    COMMETHOD([dispid(1107)], HRESULT, 'ExpandAllHeadings'),
    COMMETHOD([dispid(1108)], HRESULT, 'CollapseAllHeadings'),
    COMMETHOD([dispid(62), 'propget'], HRESULT, 'RevisionsFilter',
              ( ['out', 'retval'], POINTER(POINTER(RevisionsFilter)), 'prop' )),
    COMMETHOD([dispid(63), 'propget'], HRESULT, 'PageColor',
              ( ['out', 'retval'], POINTER(WdPageColor), 'prop' )),
    COMMETHOD([dispid(63), 'propput'], HRESULT, 'PageColor',
              ( ['in'], WdPageColor, 'prop' )),
    COMMETHOD([dispid(64), 'propget'], HRESULT, 'ColumnWidth',
              ( ['out', 'retval'], POINTER(WdColumnWidth), 'prop' )),
    COMMETHOD([dispid(64), 'propput'], HRESULT, 'ColumnWidth',
              ( ['in'], WdColumnWidth, 'prop' )),
    COMMETHOD([dispid(65), 'propget'], HRESULT, 'PageMovementType',
              ( ['out', 'retval'], POINTER(WdPageMovementType), 'prop' )),
    COMMETHOD([dispid(65), 'propput'], HRESULT, 'PageMovementType',
              ( ['in'], WdPageMovementType, 'prop' )),
]
################################################################
## code template for View implementation
##class View_Impl(object):
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Creator(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return prop
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    Type = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    FullScreen = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    Draft = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    ShowAll = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    ShowFieldCodes = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    MailMergeDataView = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    Magnifier = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    ShowFirstLineOnly = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    ShowFormat = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Zoom(self):
##        '-no docstring-'
##        #return prop
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    ShowObjectAnchors = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    ShowTextBoundaries = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    ShowHighlight = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    ShowDrawings = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    ShowTabs = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    ShowSpaces = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    ShowParagraphs = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    ShowHyphens = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    ShowHiddenText = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    WrapToWindow = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    ShowPicturePlaceHolders = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    ShowBookmarks = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    FieldShading = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    ShowAnimation = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    TableGridlines = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    EnlargeFontsLessThan = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    ShowMainTextLayer = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    SeekView = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    SplitSpecial = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    BrowseToWindow = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    ShowOptionalBreaks = property(_get, _set, doc = _set.__doc__)
##
##    def CollapseOutline(self, Range):
##        '-no docstring-'
##        #return 
##
##    def ExpandOutline(self, Range):
##        '-no docstring-'
##        #return 
##
##    def ShowAllHeadings(self):
##        '-no docstring-'
##        #return 
##
##    def ShowHeading(self, Level):
##        '-no docstring-'
##        #return 
##
##    def PreviousHeaderFooter(self):
##        '-no docstring-'
##        #return 
##
##    def NextHeaderFooter(self):
##        '-no docstring-'
##        #return 
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    DisplayPageBoundaries = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    DisplaySmartTags = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    ShowRevisionsAndComments = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    ShowComments = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    ShowInsertionsAndDeletions = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    ShowFormatChanges = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    RevisionsView = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    RevisionsMode = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    RevisionsBalloonWidth = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    RevisionsBalloonWidthType = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    RevisionsBalloonSide = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Reviewers(self):
##        '-no docstring-'
##        #return prop
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    RevisionsBalloonShowConnectingLines = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    ReadingLayout = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    ShowXMLMarkup = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    ShadeEditableRanges = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    ShowInkAnnotations = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    DisplayBackgrounds = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    ReadingLayoutActualView = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    ReadingLayoutAllowMultiplePages = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    ReadingLayoutAllowEditing = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    ReadingLayoutTruncateMargins = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    ShowMarkupAreaHighlight = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    Panning = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    ShowCropMarks = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    MarkupMode = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    ConflictMode = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    ShowOtherAuthors = property(_get, _set, doc = _set.__doc__)
##
##    def ExpandAllHeadings(self):
##        '-no docstring-'
##        #return 
##
##    def CollapseAllHeadings(self):
##        '-no docstring-'
##        #return 
##
##    @property
##    def RevisionsFilter(self):
##        '-no docstring-'
##        #return prop
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    PageColor = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    ColumnWidth = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    PageMovementType = property(_get, _set, doc = _set.__doc__)
##

ContentControlListEntry._methods_ = [
    COMMETHOD([dispid(100), 'propget'], HRESULT, 'Application',
              ( ['out', 'retval'], POINTER(POINTER(Application)), 'prop' )),
    COMMETHOD([dispid(101), 'propget'], HRESULT, 'Creator',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(102), 'propget'], HRESULT, 'Parent',
              ( ['out', 'retval'], POINTER(POINTER(IDispatch)), 'prop' )),
    COMMETHOD([dispid(0), 'propget'], HRESULT, 'Text',
              ( ['out', 'retval'], POINTER(BSTR), 'prop' )),
    COMMETHOD([dispid(0), 'propput'], HRESULT, 'Text',
              ( ['in'], BSTR, 'prop' )),
    COMMETHOD([dispid(104), 'propget'], HRESULT, 'Value',
              ( ['out', 'retval'], POINTER(BSTR), 'prop' )),
    COMMETHOD([dispid(104), 'propput'], HRESULT, 'Value',
              ( ['in'], BSTR, 'prop' )),
    COMMETHOD([dispid(105), 'propget'], HRESULT, 'Index',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(105), 'propput'], HRESULT, 'Index',
              ( ['in'], c_int, 'prop' )),
    COMMETHOD([dispid(106)], HRESULT, 'Delete'),
    COMMETHOD([dispid(107)], HRESULT, 'MoveUp'),
    COMMETHOD([dispid(108)], HRESULT, 'MoveDown'),
    COMMETHOD([dispid(109)], HRESULT, 'Select'),
]
################################################################
## code template for ContentControlListEntry implementation
##class ContentControlListEntry_Impl(object):
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Creator(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return prop
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    Text = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    Value = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    Index = property(_get, _set, doc = _set.__doc__)
##
##    def Delete(self):
##        '-no docstring-'
##        #return 
##
##    def MoveUp(self):
##        '-no docstring-'
##        #return 
##
##    def MoveDown(self):
##        '-no docstring-'
##        #return 
##
##    def Select(self):
##        '-no docstring-'
##        #return 
##


# values for enumeration 'XlUnderlineStyle'
xlUnderlineStyleDouble = -4119
xlUnderlineStyleDoubleAccounting = 5
xlUnderlineStyleNone = -4142
xlUnderlineStyleSingle = 2
xlUnderlineStyleSingleAccounting = 4
XlUnderlineStyle = c_int # enum
ChartFormat._methods_ = [
    COMMETHOD([dispid(1610743808), 'propget'], HRESULT, 'Fill',
              ( ['out', 'retval'], POINTER(POINTER(FillFormat)), 'prop' )),
    COMMETHOD([dispid(1610743809), 'propget'], HRESULT, 'Glow',
              ( ['out', 'retval'], POINTER(POINTER(GlowFormat)), 'prop' )),
    COMMETHOD([dispid(1610743810), 'propget'], HRESULT, 'Line',
              ( ['out', 'retval'], POINTER(POINTER(LineFormat)), 'prop' )),
    COMMETHOD([dispid(1610743811), 'propget'], HRESULT, 'Parent',
              ( ['out', 'retval'], POINTER(POINTER(IDispatch)), 'prop' )),
    COMMETHOD([dispid(1610743812), 'propget'], HRESULT, 'PictureFormat',
              ( ['out', 'retval'], POINTER(POINTER(PictureFormat)), 'prop' )),
    COMMETHOD([dispid(1610743813), 'propget'], HRESULT, 'Shadow',
              ( ['out', 'retval'], POINTER(POINTER(ShadowFormat)), 'prop' )),
    COMMETHOD([dispid(1610743814), 'propget'], HRESULT, 'SoftEdge',
              ( ['out', 'retval'], POINTER(POINTER(SoftEdgeFormat)), 'prop' )),
    COMMETHOD([dispid(1610743815), 'propget'], HRESULT, 'TextFrame2',
              ( ['out', 'retval'], POINTER(POINTER(comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.TextFrame2)), 'prop' )),
    COMMETHOD([dispid(1610743816), 'propget'], HRESULT, 'ThreeD',
              ( ['out', 'retval'], POINTER(POINTER(ThreeDFormat)), 'prop' )),
    COMMETHOD([dispid(148), 'propget'], HRESULT, 'Application',
              ( ['out', 'retval'], POINTER(POINTER(IDispatch)), 'prop' )),
    COMMETHOD([dispid(149), 'propget'], HRESULT, 'Creator',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(200), 'propget'], HRESULT, 'Adjustments',
              ( ['out', 'retval'], POINTER(POINTER(Adjustments)), 'prop' )),
    COMMETHOD([dispid(201), 'propget'], HRESULT, 'AutoShapeType',
              ( ['out', 'retval'], POINTER(comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoAutoShapeType), 'prop' )),
    COMMETHOD([dispid(201), 'propput'], HRESULT, 'AutoShapeType',
              ( ['in'], comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoAutoShapeType, 'prop' )),
]
################################################################
## code template for ChartFormat implementation
##class ChartFormat_Impl(object):
##    @property
##    def Fill(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Glow(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Line(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def PictureFormat(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Shadow(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def SoftEdge(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def TextFrame2(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def ThreeD(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Creator(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Adjustments(self):
##        '-no docstring-'
##        #return prop
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    AutoShapeType = property(_get, _set, doc = _set.__doc__)
##


# values for enumeration 'WdOMathHorizAlignType'
wdOMathHorizAlignCenter = 0
wdOMathHorizAlignLeft = 1
wdOMathHorizAlignRight = 2
WdOMathHorizAlignType = c_int # enum
SmartTags._methods_ = [
    COMMETHOD([dispid(-4), 'hidden', 'nonbrowsable', 'propget'], HRESULT, '_NewEnum',
              ( ['out', 'retval'], POINTER(POINTER(IUnknown)), 'prop' )),
    COMMETHOD([dispid(2), 'hidden', 'propget'], HRESULT, 'Count',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(1000), 'hidden', 'propget'], HRESULT, 'Application',
              ( ['out', 'retval'], POINTER(POINTER(Application)), 'prop' )),
    COMMETHOD([dispid(1001), 'hidden', 'propget'], HRESULT, 'Creator',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(1002), 'hidden', 'propget'], HRESULT, 'Parent',
              ( ['out', 'retval'], POINTER(POINTER(IDispatch)), 'prop' )),
    COMMETHOD([dispid(0), 'hidden'], HRESULT, 'Item',
              ( ['in'], POINTER(VARIANT), 'Index' ),
              ( ['out', 'retval'], POINTER(POINTER(SmartTag)), 'prop' )),
    COMMETHOD([dispid(5), 'hidden'], HRESULT, 'Add',
              ( ['in'], BSTR, 'Name' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'Range' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'Properties' ),
              ( ['out', 'retval'], POINTER(POINTER(SmartTag)), 'prop' )),
    COMMETHOD([dispid(1003), 'hidden'], HRESULT, 'SmartTagsByType',
              ( ['in'], BSTR, 'Name' ),
              ( ['out', 'retval'], POINTER(POINTER(SmartTags)), 'prop' )),
]
################################################################
## code template for SmartTags implementation
##class SmartTags_Impl(object):
##    @property
##    def _NewEnum(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Count(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Creator(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return prop
##
##    def Item(self, Index):
##        '-no docstring-'
##        #return prop
##
##    def Add(self, Name, Range, Properties):
##        '-no docstring-'
##        #return prop
##
##    def SmartTagsByType(self, Name):
##        '-no docstring-'
##        #return prop
##


# values for enumeration 'XlConstants'
xlAutomatic = -4105
xlCombination = -4111
xlCustom = -4114
xlBar = 2
xlColumn = 3
xl3DBar = -4099
xl3DSurface = -4103
xlDefaultAutoFormat = -1
xlNone = -4142
xlAbove = 0
xlBelow = 1
xlBoth = 1
xlBottom = -4107
xlCenter = -4108
xlChecker = 9
xlCircle = 8
xlCorner = 2
xlCrissCross = 16
xlCross = 4
xlDiamond = 2
xlDistributed = -4117
xlFill = 5
xlFixedValue = 1
xlGeneral = 1
xlGray16 = 17
xlGray25 = -4124
xlGray50 = -4125
xlGray75 = -4126
xlGray8 = 18
xlGrid = 15
xlHigh = -4127
xlInside = 2
xlJustify = -4130
xlLeft = -4131
xlLightDown = 13
xlLightHorizontal = 11
xlLightUp = 14
xlLightVertical = 12
xlLow = -4134
xlMaximum = 2
xlMinimum = 4
xlMinusValues = 3
xlNextToAxis = 4
xlOpaque = 3
xlOutside = 3
xlPercent = 2
xlPlus = 9
xlPlusValues = 2
xlRight = -4152
xlScale = 3
xlSemiGray75 = 10
xlShowLabel = 4
xlShowLabelAndPercent = 5
xlShowPercent = 3
xlShowValue = 2
xlSingle = 2
xlSolid = 1
xlSquare = 1
xlStar = 5
xlStError = 4
xlTop = -4160
xlTransparent = 2
xlTriangle = 3
XlConstants = c_int # enum

# values for enumeration 'WdContinue'
wdContinueDisabled = 0
wdResetList = 1
wdContinueList = 2
WdContinue = c_int # enum

# values for enumeration 'WdMeasurementUnitsHID'
emptyenum = 0
WdMeasurementUnitsHID = c_int # enum
class MappedDataField(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{5D311669-EA51-11D3-87CC-00105AA31A34}')
    _idlflags_ = ['dual', 'nonextensible', 'oleautomation']
MappedDataField._methods_ = [
    COMMETHOD([dispid(1000), 'propget'], HRESULT, 'Application',
              ( ['out', 'retval'], POINTER(POINTER(Application)), 'prop' )),
    COMMETHOD([dispid(1001), 'propget'], HRESULT, 'Creator',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(1002), 'propget'], HRESULT, 'Parent',
              ( ['out', 'retval'], POINTER(POINTER(IDispatch)), 'prop' )),
    COMMETHOD([dispid(1), 'propget'], HRESULT, 'Index',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(2), 'propget'], HRESULT, 'DataFieldName',
              ( ['out', 'retval'], POINTER(BSTR), 'prop' )),
    COMMETHOD([dispid(0), 'propget'], HRESULT, 'Name',
              ( ['out', 'retval'], POINTER(BSTR), 'prop' )),
    COMMETHOD([dispid(4), 'propget'], HRESULT, 'Value',
              ( ['out', 'retval'], POINTER(BSTR), 'prop' )),
    COMMETHOD([dispid(5), 'propget'], HRESULT, 'DataFieldIndex',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(5), 'propput'], HRESULT, 'DataFieldIndex',
              ( ['in'], c_int, 'prop' )),
]
################################################################
## code template for MappedDataField implementation
##class MappedDataField_Impl(object):
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Creator(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Index(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def DataFieldName(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Name(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Value(self):
##        '-no docstring-'
##        #return prop
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    DataFieldIndex = property(_get, _set, doc = _set.__doc__)
##


# values for enumeration 'WdIndexFormat'
wdIndexTemplate = 0
wdIndexClassic = 1
wdIndexFancy = 2
wdIndexModern = 3
wdIndexBulleted = 4
wdIndexFormal = 5
wdIndexSimple = 6
WdIndexFormat = c_int # enum
AutoTextEntry._methods_ = [
    COMMETHOD([dispid(1000), 'propget'], HRESULT, 'Application',
              ( ['out', 'retval'], POINTER(POINTER(Application)), 'prop' )),
    COMMETHOD([dispid(1001), 'propget'], HRESULT, 'Creator',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(1002), 'propget'], HRESULT, 'Parent',
              ( ['out', 'retval'], POINTER(POINTER(IDispatch)), 'prop' )),
    COMMETHOD([dispid(1), 'propget'], HRESULT, 'Index',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(2), 'propget'], HRESULT, 'Name',
              ( ['out', 'retval'], POINTER(BSTR), 'prop' )),
    COMMETHOD([dispid(2), 'propput'], HRESULT, 'Name',
              ( ['in'], BSTR, 'prop' )),
    COMMETHOD([dispid(3), 'propget'], HRESULT, 'StyleName',
              ( ['out', 'retval'], POINTER(BSTR), 'prop' )),
    COMMETHOD([dispid(0), 'propget'], HRESULT, 'Value',
              ( ['out', 'retval'], POINTER(BSTR), 'prop' )),
    COMMETHOD([dispid(0), 'propput'], HRESULT, 'Value',
              ( ['in'], BSTR, 'prop' )),
    COMMETHOD([dispid(101)], HRESULT, 'Delete'),
    COMMETHOD([dispid(102)], HRESULT, 'Insert',
              ( ['in'], POINTER(Range), 'Where' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'RichText' ),
              ( ['out', 'retval'], POINTER(POINTER(Range)), 'prop' )),
]
################################################################
## code template for AutoTextEntry implementation
##class AutoTextEntry_Impl(object):
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Creator(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Index(self):
##        '-no docstring-'
##        #return prop
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    Name = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def StyleName(self):
##        '-no docstring-'
##        #return prop
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    Value = property(_get, _set, doc = _set.__doc__)
##
##    def Delete(self):
##        '-no docstring-'
##        #return 
##
##    def Insert(self, Where, RichText):
##        '-no docstring-'
##        #return prop
##


# values for enumeration 'WdOLEPlacement'
wdInLine = 0
wdFloatOverText = 1
WdOLEPlacement = c_int # enum

# values for enumeration 'WdHelpType'
wdHelp = 0
wdHelpAbout = 1
wdHelpActiveWindow = 2
wdHelpContents = 3
wdHelpExamplesAndDemos = 4
wdHelpIndex = 5
wdHelpKeyboard = 6
wdHelpPSSHelp = 7
wdHelpQuickPreview = 8
wdHelpSearch = 9
wdHelpUsingHelp = 10
wdHelpIchitaro = 11
wdHelpPE2 = 12
wdHelpHWP = 13
WdHelpType = c_int # enum
class TaskPane(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{B9F1A4E2-0D0A-43B7-8495-139E7ACBD840}')
    _idlflags_ = ['dual', 'nonextensible', 'oleautomation']
TaskPane._methods_ = [
    COMMETHOD([dispid(1000), 'propget'], HRESULT, 'Application',
              ( ['out', 'retval'], POINTER(POINTER(Application)), 'prop' )),
    COMMETHOD([dispid(1001), 'propget'], HRESULT, 'Creator',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(1002), 'propget'], HRESULT, 'Parent',
              ( ['out', 'retval'], POINTER(POINTER(IDispatch)), 'prop' )),
    COMMETHOD([dispid(1003), 'propget'], HRESULT, 'Visible',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'prop' )),
    COMMETHOD([dispid(1003), 'propput'], HRESULT, 'Visible',
              ( ['in'], VARIANT_BOOL, 'prop' )),
]
################################################################
## code template for TaskPane implementation
##class TaskPane_Impl(object):
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Creator(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return prop
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    Visible = property(_get, _set, doc = _set.__doc__)
##


# values for enumeration 'WdTextureIndex'
wdTextureNone = 0
wdTexture2Pt5Percent = 25
wdTexture5Percent = 50
wdTexture7Pt5Percent = 75
wdTexture10Percent = 100
wdTexture12Pt5Percent = 125
wdTexture15Percent = 150
wdTexture17Pt5Percent = 175
wdTexture20Percent = 200
wdTexture22Pt5Percent = 225
wdTexture25Percent = 250
wdTexture27Pt5Percent = 275
wdTexture30Percent = 300
wdTexture32Pt5Percent = 325
wdTexture35Percent = 350
wdTexture37Pt5Percent = 375
wdTexture40Percent = 400
wdTexture42Pt5Percent = 425
wdTexture45Percent = 450
wdTexture47Pt5Percent = 475
wdTexture50Percent = 500
wdTexture52Pt5Percent = 525
wdTexture55Percent = 550
wdTexture57Pt5Percent = 575
wdTexture60Percent = 600
wdTexture62Pt5Percent = 625
wdTexture65Percent = 650
wdTexture67Pt5Percent = 675
wdTexture70Percent = 700
wdTexture72Pt5Percent = 725
wdTexture75Percent = 750
wdTexture77Pt5Percent = 775
wdTexture80Percent = 800
wdTexture82Pt5Percent = 825
wdTexture85Percent = 850
wdTexture87Pt5Percent = 875
wdTexture90Percent = 900
wdTexture92Pt5Percent = 925
wdTexture95Percent = 950
wdTexture97Pt5Percent = 975
wdTextureSolid = 1000
wdTextureDarkHorizontal = -1
wdTextureDarkVertical = -2
wdTextureDarkDiagonalDown = -3
wdTextureDarkDiagonalUp = -4
wdTextureDarkCross = -5
wdTextureDarkDiagonalCross = -6
wdTextureHorizontal = -7
wdTextureVertical = -8
wdTextureDiagonalDown = -9
wdTextureDiagonalUp = -10
wdTextureCross = -11
wdTextureDiagonalCross = -12
WdTextureIndex = c_int # enum

# values for enumeration 'WdTemplateType'
wdNormalTemplate = 0
wdGlobalTemplate = 1
wdAttachedTemplate = 2
WdTemplateType = c_int # enum

# values for enumeration 'WdOMathShapeType'
wdOMathShapeCentered = 0
wdOMathShapeMatch = 1
WdOMathShapeType = c_int # enum
class FreeformBuilder(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{000209C9-0000-0000-C000-000000000046}')
    _idlflags_ = ['dual', 'nonextensible', 'oleautomation']
Shapes._methods_ = [
    COMMETHOD([dispid(8000), 'propget'], HRESULT, 'Application',
              ( ['out', 'retval'], POINTER(POINTER(Application)), 'prop' )),
    COMMETHOD([dispid(8001), 'propget'], HRESULT, 'Creator',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(1), 'propget'], HRESULT, 'Parent',
              ( ['out', 'retval'], POINTER(POINTER(IDispatch)), 'prop' )),
    COMMETHOD([dispid(2), 'propget'], HRESULT, 'Count',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(-4), 'nonbrowsable', 'propget'], HRESULT, '_NewEnum',
              ( ['out', 'retval'], POINTER(POINTER(IUnknown)), 'prop' )),
    COMMETHOD([dispid(0)], HRESULT, 'Item',
              ( ['in'], POINTER(VARIANT), 'Index' ),
              ( ['out', 'retval'], POINTER(POINTER(Shape)), 'prop' )),
    COMMETHOD([dispid(10)], HRESULT, 'AddCallout',
              ( ['in'], comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoCalloutType, 'Type' ),
              ( ['in'], c_float, 'Left' ),
              ( ['in'], c_float, 'Top' ),
              ( ['in'], c_float, 'Width' ),
              ( ['in'], c_float, 'Height' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'Anchor' ),
              ( ['out', 'retval'], POINTER(POINTER(Shape)), 'prop' )),
    COMMETHOD([dispid(11), 'hidden'], HRESULT, 'AddConnector',
              ( ['in'], comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoConnectorType, 'Type' ),
              ( ['in'], c_float, 'BeginX' ),
              ( ['in'], c_float, 'BeginY' ),
              ( ['in'], c_float, 'EndX' ),
              ( ['in'], c_float, 'EndY' ),
              ( ['out', 'retval'], POINTER(POINTER(Shape)), 'prop' )),
    COMMETHOD([dispid(12)], HRESULT, 'AddCurve',
              ( ['in'], POINTER(VARIANT), 'SafeArrayOfPoints' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'Anchor' ),
              ( ['out', 'retval'], POINTER(POINTER(Shape)), 'prop' )),
    COMMETHOD([dispid(13)], HRESULT, 'AddLabel',
              ( ['in'], comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoTextOrientation, 'Orientation' ),
              ( ['in'], c_float, 'Left' ),
              ( ['in'], c_float, 'Top' ),
              ( ['in'], c_float, 'Width' ),
              ( ['in'], c_float, 'Height' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'Anchor' ),
              ( ['out', 'retval'], POINTER(POINTER(Shape)), 'prop' )),
    COMMETHOD([dispid(14)], HRESULT, 'AddLine',
              ( ['in'], c_float, 'BeginX' ),
              ( ['in'], c_float, 'BeginY' ),
              ( ['in'], c_float, 'EndX' ),
              ( ['in'], c_float, 'EndY' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'Anchor' ),
              ( ['out', 'retval'], POINTER(POINTER(Shape)), 'prop' )),
    COMMETHOD([dispid(15)], HRESULT, 'AddPicture',
              ( ['in'], BSTR, 'FileName' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'LinkToFile' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'SaveWithDocument' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'Left' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'Top' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'Width' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'Height' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'Anchor' ),
              ( ['out', 'retval'], POINTER(POINTER(Shape)), 'prop' )),
    COMMETHOD([dispid(16)], HRESULT, 'AddPolyline',
              ( ['in'], POINTER(VARIANT), 'SafeArrayOfPoints' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'Anchor' ),
              ( ['out', 'retval'], POINTER(POINTER(Shape)), 'prop' )),
    COMMETHOD([dispid(17)], HRESULT, 'AddShape',
              ( ['in'], c_int, 'Type' ),
              ( ['in'], c_float, 'Left' ),
              ( ['in'], c_float, 'Top' ),
              ( ['in'], c_float, 'Width' ),
              ( ['in'], c_float, 'Height' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'Anchor' ),
              ( ['out', 'retval'], POINTER(POINTER(Shape)), 'prop' )),
    COMMETHOD([dispid(18)], HRESULT, 'AddTextEffect',
              ( ['in'], comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoPresetTextEffect, 'PresetTextEffect' ),
              ( ['in'], BSTR, 'Text' ),
              ( ['in'], BSTR, 'FontName' ),
              ( ['in'], c_float, 'FontSize' ),
              ( ['in'], comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoTriState, 'FontBold' ),
              ( ['in'], comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoTriState, 'FontItalic' ),
              ( ['in'], c_float, 'Left' ),
              ( ['in'], c_float, 'Top' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'Anchor' ),
              ( ['out', 'retval'], POINTER(POINTER(Shape)), 'prop' )),
    COMMETHOD([dispid(19)], HRESULT, 'AddTextbox',
              ( ['in'], comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoTextOrientation, 'Orientation' ),
              ( ['in'], c_float, 'Left' ),
              ( ['in'], c_float, 'Top' ),
              ( ['in'], c_float, 'Width' ),
              ( ['in'], c_float, 'Height' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'Anchor' ),
              ( ['out', 'retval'], POINTER(POINTER(Shape)), 'prop' )),
    COMMETHOD([dispid(20)], HRESULT, 'BuildFreeform',
              ( ['in'], comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoEditingType, 'EditingType' ),
              ( ['in'], c_float, 'X1' ),
              ( ['in'], c_float, 'Y1' ),
              ( ['out', 'retval'], POINTER(POINTER(FreeformBuilder)), 'prop' )),
    COMMETHOD([dispid(21)], HRESULT, 'Range',
              ( ['in'], POINTER(VARIANT), 'Index' ),
              ( ['out', 'retval'], POINTER(POINTER(ShapeRange)), 'prop' )),
    COMMETHOD([dispid(22)], HRESULT, 'SelectAll'),
    COMMETHOD([dispid(24)], HRESULT, 'AddOLEObject',
              ( ['in', 'optional'], POINTER(VARIANT), 'ClassType' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'FileName' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'LinkToFile' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'DisplayAsIcon' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'IconFileName' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'IconIndex' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'IconLabel' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'Left' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'Top' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'Width' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'Height' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'Anchor' ),
              ( ['out', 'retval'], POINTER(POINTER(Shape)), 'prop' )),
    COMMETHOD([dispid(102)], HRESULT, 'AddOLEControl',
              ( ['in', 'optional'], POINTER(VARIANT), 'ClassType' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'Left' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'Top' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'Width' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'Height' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'Anchor' ),
              ( ['out', 'retval'], POINTER(POINTER(Shape)), 'prop' )),
    COMMETHOD([dispid(23), 'hidden'], HRESULT, 'AddDiagram',
              ( ['in'], comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoDiagramType, 'Type' ),
              ( ['in'], c_float, 'Left' ),
              ( ['in'], c_float, 'Top' ),
              ( ['in'], c_float, 'Width' ),
              ( ['in'], c_float, 'Height' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'Anchor' ),
              ( ['out', 'retval'], POINTER(POINTER(Shape)), 'prop' )),
    COMMETHOD([dispid(25)], HRESULT, 'AddCanvas',
              ( ['in'], c_float, 'Left' ),
              ( ['in'], c_float, 'Top' ),
              ( ['in'], c_float, 'Width' ),
              ( ['in'], c_float, 'Height' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'Anchor' ),
              ( ['out', 'retval'], POINTER(POINTER(Shape)), 'prop' )),
    COMMETHOD([dispid(103), 'hidden'], HRESULT, 'AddChart',
              ( ['in', 'optional'], comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.XlChartType, 'Type', -1 ),
              ( ['in', 'optional'], POINTER(VARIANT), 'Left' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'Top' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'Width' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'Height' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'Anchor' ),
              ( ['out', 'retval'], POINTER(POINTER(Shape)), 'prop' )),
    COMMETHOD([dispid(28)], HRESULT, 'AddSmartArt',
              ( ['in'], POINTER(comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.SmartArtLayout), 'Layout' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'Left' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'Top' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'Width' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'Height' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'Anchor' ),
              ( ['out', 'retval'], POINTER(POINTER(Shape)), 'prop' )),
    COMMETHOD([dispid(104)], HRESULT, 'AddWebVideo',
              ( ['in'], BSTR, 'EmbedCode' ),
              ( ['in'], POINTER(VARIANT), 'VideoWidth' ),
              ( ['in'], POINTER(VARIANT), 'VideoHeight' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'PosterFrameImage' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'Url' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'Left' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'Top' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'Width' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'Height' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'Anchor' ),
              ( ['out', 'retval'], POINTER(POINTER(Shape)), 'prop' )),
    COMMETHOD([dispid(105)], HRESULT, 'AddChart2',
              ( ['in', 'optional'], c_int, 'Style', -1 ),
              ( ['in', 'optional'], comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.XlChartType, 'Type', -1 ),
              ( ['in', 'optional'], POINTER(VARIANT), 'Left' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'Top' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'Width' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'Height' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'Anchor' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'NewLayout' ),
              ( ['out', 'retval'], POINTER(POINTER(Shape)), 'prop' )),
    COMMETHOD([dispid(106)], HRESULT, 'Add3DModel',
              ( ['in'], BSTR, 'FileName' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'LinkToFile' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'SaveWithDocument' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'Left' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'Top' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'Width' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'Height' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'Anchor' ),
              ( ['out', 'retval'], POINTER(POINTER(Shape)), 'prop' )),
]
################################################################
## code template for Shapes implementation
##class Shapes_Impl(object):
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Creator(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Count(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def _NewEnum(self):
##        '-no docstring-'
##        #return prop
##
##    def Item(self, Index):
##        '-no docstring-'
##        #return prop
##
##    def AddCallout(self, Type, Left, Top, Width, Height, Anchor):
##        '-no docstring-'
##        #return prop
##
##    def AddConnector(self, Type, BeginX, BeginY, EndX, EndY):
##        '-no docstring-'
##        #return prop
##
##    def AddCurve(self, SafeArrayOfPoints, Anchor):
##        '-no docstring-'
##        #return prop
##
##    def AddLabel(self, Orientation, Left, Top, Width, Height, Anchor):
##        '-no docstring-'
##        #return prop
##
##    def AddLine(self, BeginX, BeginY, EndX, EndY, Anchor):
##        '-no docstring-'
##        #return prop
##
##    def AddPicture(self, FileName, LinkToFile, SaveWithDocument, Left, Top, Width, Height, Anchor):
##        '-no docstring-'
##        #return prop
##
##    def AddPolyline(self, SafeArrayOfPoints, Anchor):
##        '-no docstring-'
##        #return prop
##
##    def AddShape(self, Type, Left, Top, Width, Height, Anchor):
##        '-no docstring-'
##        #return prop
##
##    def AddTextEffect(self, PresetTextEffect, Text, FontName, FontSize, FontBold, FontItalic, Left, Top, Anchor):
##        '-no docstring-'
##        #return prop
##
##    def AddTextbox(self, Orientation, Left, Top, Width, Height, Anchor):
##        '-no docstring-'
##        #return prop
##
##    def BuildFreeform(self, EditingType, X1, Y1):
##        '-no docstring-'
##        #return prop
##
##    def Range(self, Index):
##        '-no docstring-'
##        #return prop
##
##    def SelectAll(self):
##        '-no docstring-'
##        #return 
##
##    def AddOLEObject(self, ClassType, FileName, LinkToFile, DisplayAsIcon, IconFileName, IconIndex, IconLabel, Left, Top, Width, Height, Anchor):
##        '-no docstring-'
##        #return prop
##
##    def AddOLEControl(self, ClassType, Left, Top, Width, Height, Anchor):
##        '-no docstring-'
##        #return prop
##
##    def AddDiagram(self, Type, Left, Top, Width, Height, Anchor):
##        '-no docstring-'
##        #return prop
##
##    def AddCanvas(self, Left, Top, Width, Height, Anchor):
##        '-no docstring-'
##        #return prop
##
##    def AddChart(self, Type, Left, Top, Width, Height, Anchor):
##        '-no docstring-'
##        #return prop
##
##    def AddSmartArt(self, Layout, Left, Top, Width, Height, Anchor):
##        '-no docstring-'
##        #return prop
##
##    def AddWebVideo(self, EmbedCode, VideoWidth, VideoHeight, PosterFrameImage, Url, Left, Top, Width, Height, Anchor):
##        '-no docstring-'
##        #return prop
##
##    def AddChart2(self, Style, Type, Left, Top, Width, Height, Anchor, NewLayout):
##        '-no docstring-'
##        #return prop
##
##    def Add3DModel(self, FileName, LinkToFile, SaveWithDocument, Left, Top, Width, Height, Anchor):
##        '-no docstring-'
##        #return prop
##


# values for enumeration 'WdBookmarkSortBy'
wdSortByName = 0
wdSortByLocation = 1
WdBookmarkSortBy = c_int # enum
class Bookmark(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{00020968-0000-0000-C000-000000000046}')
    _idlflags_ = ['dual', 'nonextensible', 'oleautomation']
Bookmarks._methods_ = [
    COMMETHOD([dispid(-4), 'nonbrowsable', 'propget'], HRESULT, '_NewEnum',
              ( ['out', 'retval'], POINTER(POINTER(IUnknown)), 'prop' )),
    COMMETHOD([dispid(2), 'propget'], HRESULT, 'Count',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(3), 'propget'], HRESULT, 'DefaultSorting',
              ( ['out', 'retval'], POINTER(WdBookmarkSortBy), 'prop' )),
    COMMETHOD([dispid(3), 'propput'], HRESULT, 'DefaultSorting',
              ( ['in'], WdBookmarkSortBy, 'prop' )),
    COMMETHOD([dispid(4), 'propget'], HRESULT, 'ShowHidden',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'prop' )),
    COMMETHOD([dispid(4), 'propput'], HRESULT, 'ShowHidden',
              ( ['in'], VARIANT_BOOL, 'prop' )),
    COMMETHOD([dispid(1000), 'propget'], HRESULT, 'Application',
              ( ['out', 'retval'], POINTER(POINTER(Application)), 'prop' )),
    COMMETHOD([dispid(1001), 'propget'], HRESULT, 'Creator',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(1002), 'propget'], HRESULT, 'Parent',
              ( ['out', 'retval'], POINTER(POINTER(IDispatch)), 'prop' )),
    COMMETHOD([dispid(0)], HRESULT, 'Item',
              ( ['in'], POINTER(VARIANT), 'Index' ),
              ( ['out', 'retval'], POINTER(POINTER(Bookmark)), 'prop' )),
    COMMETHOD([dispid(5)], HRESULT, 'Add',
              ( ['in'], BSTR, 'Name' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'Range' ),
              ( ['out', 'retval'], POINTER(POINTER(Bookmark)), 'prop' )),
    COMMETHOD([dispid(6)], HRESULT, 'Exists',
              ( ['in'], BSTR, 'Name' ),
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'prop' )),
]
################################################################
## code template for Bookmarks implementation
##class Bookmarks_Impl(object):
##    @property
##    def _NewEnum(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Count(self):
##        '-no docstring-'
##        #return prop
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    DefaultSorting = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    ShowHidden = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Creator(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return prop
##
##    def Item(self, Index):
##        '-no docstring-'
##        #return prop
##
##    def Add(self, Name, Range):
##        '-no docstring-'
##        #return prop
##
##    def Exists(self, Name):
##        '-no docstring-'
##        #return prop
##

class Revision(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{00020981-0000-0000-C000-000000000046}')
    _idlflags_ = ['dual', 'nonextensible', 'oleautomation']
Revisions._methods_ = [
    COMMETHOD([dispid(1000), 'propget'], HRESULT, 'Application',
              ( ['out', 'retval'], POINTER(POINTER(Application)), 'prop' )),
    COMMETHOD([dispid(1001), 'propget'], HRESULT, 'Creator',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(1002), 'propget'], HRESULT, 'Parent',
              ( ['out', 'retval'], POINTER(POINTER(IDispatch)), 'prop' )),
    COMMETHOD([dispid(-4), 'nonbrowsable', 'propget'], HRESULT, '_NewEnum',
              ( ['out', 'retval'], POINTER(POINTER(IUnknown)), 'prop' )),
    COMMETHOD([dispid(5), 'propget'], HRESULT, 'Count',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(0)], HRESULT, 'Item',
              ( ['in'], c_int, 'Index' ),
              ( ['out', 'retval'], POINTER(POINTER(Revision)), 'prop' )),
    COMMETHOD([dispid(101)], HRESULT, 'AcceptAll'),
    COMMETHOD([dispid(102)], HRESULT, 'RejectAll'),
]
################################################################
## code template for Revisions implementation
##class Revisions_Impl(object):
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Creator(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def _NewEnum(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Count(self):
##        '-no docstring-'
##        #return prop
##
##    def Item(self, Index):
##        '-no docstring-'
##        #return prop
##
##    def AcceptAll(self):
##        '-no docstring-'
##        #return 
##
##    def RejectAll(self):
##        '-no docstring-'
##        #return 
##

class OMathAutoCorrectEntry(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{D8779F01-4869-4403-B334-D60C5F9C9175}')
    _idlflags_ = ['dual', 'nonextensible', 'oleautomation']
OMathAutoCorrectEntries._methods_ = [
    COMMETHOD([dispid(100), 'propget'], HRESULT, 'Application',
              ( ['out', 'retval'], POINTER(POINTER(Application)), 'prop' )),
    COMMETHOD([dispid(101), 'propget'], HRESULT, 'Creator',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(102), 'propget'], HRESULT, 'Parent',
              ( ['out', 'retval'], POINTER(POINTER(IDispatch)), 'prop' )),
    COMMETHOD([dispid(-4), 'nonbrowsable', 'propget'], HRESULT, '_NewEnum',
              ( ['out', 'retval'], POINTER(POINTER(IUnknown)), 'prop' )),
    COMMETHOD([dispid(103), 'propget'], HRESULT, 'Count',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(0)], HRESULT, 'Item',
              ( ['in'], POINTER(VARIANT), 'Index' ),
              ( ['out', 'retval'], POINTER(POINTER(OMathAutoCorrectEntry)), 'prop' )),
    COMMETHOD([dispid(200)], HRESULT, 'Add',
              ( ['in'], BSTR, 'Name' ),
              ( ['in'], BSTR, 'Value' ),
              ( ['out', 'retval'], POINTER(POINTER(OMathAutoCorrectEntry)), 'prop' )),
]
################################################################
## code template for OMathAutoCorrectEntries implementation
##class OMathAutoCorrectEntries_Impl(object):
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Creator(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def _NewEnum(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Count(self):
##        '-no docstring-'
##        #return prop
##
##    def Item(self, Index):
##        '-no docstring-'
##        #return prop
##
##    def Add(self, Name, Value):
##        '-no docstring-'
##        #return prop
##

class Replacement(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{000209B1-0000-0000-C000-000000000046}')
    _idlflags_ = ['dual', 'nonextensible', 'oleautomation']
Replacement._methods_ = [
    COMMETHOD([dispid(1000), 'propget'], HRESULT, 'Application',
              ( ['out', 'retval'], POINTER(POINTER(Application)), 'prop' )),
    COMMETHOD([dispid(1001), 'propget'], HRESULT, 'Creator',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(1002), 'propget'], HRESULT, 'Parent',
              ( ['out', 'retval'], POINTER(POINTER(IDispatch)), 'prop' )),
    COMMETHOD([dispid(10), 'propget'], HRESULT, 'Font',
              ( ['out', 'retval'], POINTER(POINTER(Font)), 'prop' )),
    COMMETHOD([dispid(10), 'propput'], HRESULT, 'Font',
              ( ['in'], POINTER(Font), 'prop' )),
    COMMETHOD([dispid(11), 'propget'], HRESULT, 'ParagraphFormat',
              ( ['out', 'retval'], POINTER(POINTER(ParagraphFormat)), 'prop' )),
    COMMETHOD([dispid(11), 'propput'], HRESULT, 'ParagraphFormat',
              ( ['in'], POINTER(ParagraphFormat), 'prop' )),
    COMMETHOD([dispid(12), 'propget'], HRESULT, 'Style',
              ( ['out', 'retval'], POINTER(VARIANT), 'prop' )),
    COMMETHOD([dispid(12), 'propput'], HRESULT, 'Style',
              ( ['in'], POINTER(VARIANT), 'prop' )),
    COMMETHOD([dispid(15), 'propget'], HRESULT, 'Text',
              ( ['out', 'retval'], POINTER(BSTR), 'prop' )),
    COMMETHOD([dispid(15), 'propput'], HRESULT, 'Text',
              ( ['in'], BSTR, 'prop' )),
    COMMETHOD([dispid(16), 'propget'], HRESULT, 'LanguageID',
              ( ['out', 'retval'], POINTER(WdLanguageID), 'prop' )),
    COMMETHOD([dispid(16), 'propput'], HRESULT, 'LanguageID',
              ( ['in'], WdLanguageID, 'prop' )),
    COMMETHOD([dispid(17), 'propget'], HRESULT, 'Highlight',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(17), 'propput'], HRESULT, 'Highlight',
              ( ['in'], c_int, 'prop' )),
    COMMETHOD([dispid(18), 'propget'], HRESULT, 'Frame',
              ( ['out', 'retval'], POINTER(POINTER(Frame)), 'prop' )),
    COMMETHOD([dispid(19), 'propget'], HRESULT, 'LanguageIDFarEast',
              ( ['out', 'retval'], POINTER(WdLanguageID), 'prop' )),
    COMMETHOD([dispid(19), 'propput'], HRESULT, 'LanguageIDFarEast',
              ( ['in'], WdLanguageID, 'prop' )),
    COMMETHOD([dispid(20)], HRESULT, 'ClearFormatting'),
    COMMETHOD([dispid(21), 'propget'], HRESULT, 'NoProofing',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(21), 'propput'], HRESULT, 'NoProofing',
              ( ['in'], c_int, 'prop' )),
]
################################################################
## code template for Replacement implementation
##class Replacement_Impl(object):
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Creator(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return prop
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    Font = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    ParagraphFormat = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    Style = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    Text = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    LanguageID = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    Highlight = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Frame(self):
##        '-no docstring-'
##        #return prop
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    LanguageIDFarEast = property(_get, _set, doc = _set.__doc__)
##
##    def ClearFormatting(self):
##        '-no docstring-'
##        #return 
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    NoProofing = property(_get, _set, doc = _set.__doc__)
##


# values for enumeration 'WdRectangleType'
wdTextRectangle = 0
wdShapeRectangle = 1
wdMarkupRectangle = 2
wdMarkupRectangleButton = 3
wdPageBorderRectangle = 4
wdLineBetweenColumnRectangle = 5
wdSelection = 6
wdSystem = 7
wdMarkupRectangleArea = 8
wdReadingModeNavigation = 9
wdMarkupRectangleMoveMatch = 10
wdReadingModePanningArea = 11
wdMailNavArea = 12
wdDocumentControlRectangle = 13
WdRectangleType = c_int # enum
class Lines(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{E2E8A400-0615-427D-ADCC-CAD39FFEBD42}')
    _idlflags_ = ['dual', 'nonextensible', 'oleautomation']
Rectangle._methods_ = [
    COMMETHOD([dispid(1000), 'propget'], HRESULT, 'Application',
              ( ['out', 'retval'], POINTER(POINTER(Application)), 'prop' )),
    COMMETHOD([dispid(1001), 'propget'], HRESULT, 'Creator',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(1002), 'propget'], HRESULT, 'Parent',
              ( ['out', 'retval'], POINTER(POINTER(IDispatch)), 'prop' )),
    COMMETHOD([dispid(2), 'propget'], HRESULT, 'RectangleType',
              ( ['out', 'retval'], POINTER(WdRectangleType), 'prop' )),
    COMMETHOD([dispid(3), 'propget'], HRESULT, 'Left',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(4), 'propget'], HRESULT, 'Top',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(5), 'propget'], HRESULT, 'Width',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(6), 'propget'], HRESULT, 'Height',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(7), 'propget'], HRESULT, 'Range',
              ( ['out', 'retval'], POINTER(POINTER(Range)), 'prop' )),
    COMMETHOD([dispid(8), 'propget'], HRESULT, 'Lines',
              ( ['out', 'retval'], POINTER(POINTER(Lines)), 'prop' )),
]
################################################################
## code template for Rectangle implementation
##class Rectangle_Impl(object):
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Creator(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def RectangleType(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Left(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Top(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Width(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Height(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Range(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Lines(self):
##        '-no docstring-'
##        #return prop
##

class SeriesCollection(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{8FEB78F7-35C6-4871-918C-193C3CDD886D}')
    _idlflags_ = ['dual', 'nonextensible', 'oleautomation']
SeriesCollection._methods_ = [
    COMMETHOD([dispid(150), 'propget'], HRESULT, 'Parent',
              ( ['out', 'retval'], POINTER(POINTER(IDispatch)), 'prop' )),
    COMMETHOD([dispid(181)], HRESULT, 'Add',
              ( ['in'], VARIANT, 'Source' ),
              ( ['in', 'optional'], XlRowCol, 'Rowcol', 2 ),
              ( ['in', 'optional'], VARIANT, 'SeriesLabels' ),
              ( ['in', 'optional'], VARIANT, 'CategoryLabels' ),
              ( ['in', 'optional'], VARIANT, 'Replace' ),
              ( ['out', 'retval'], POINTER(POINTER(Series)), 'prop' )),
    COMMETHOD([dispid(118), 'propget'], HRESULT, 'Count',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(227)], HRESULT, 'Extend',
              ( ['in'], VARIANT, 'Source' ),
              ( ['in', 'optional'], VARIANT, 'Rowcol' ),
              ( ['in', 'optional'], VARIANT, 'CategoryLabels' ),
              ( ['out', 'retval'], POINTER(VARIANT), 'prop' )),
    COMMETHOD([dispid(0)], HRESULT, 'Item',
              ( ['in'], VARIANT, 'Index' ),
              ( ['out', 'retval'], POINTER(POINTER(Series)), 'prop' )),
    COMMETHOD([dispid(-4), 'nonbrowsable'], HRESULT, '_NewEnum',
              ( ['out', 'retval'], POINTER(POINTER(IUnknown)), 'prop' )),
    COMMETHOD([dispid(1117)], HRESULT, 'NewSeries',
              ( ['out', 'retval'], POINTER(POINTER(Series)), 'prop' )),
    COMMETHOD([dispid(148), 'propget'], HRESULT, 'Application',
              ( ['out', 'retval'], POINTER(POINTER(IDispatch)), 'prop' )),
    COMMETHOD([dispid(149), 'propget'], HRESULT, 'Creator',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(1610743818), 'nonbrowsable'], HRESULT, '_Default',
              ( ['in'], VARIANT, 'Index' ),
              ( ['out', 'retval'], POINTER(POINTER(Series)), 'prop' )),
]
################################################################
## code template for SeriesCollection implementation
##class SeriesCollection_Impl(object):
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return prop
##
##    def Add(self, Source, Rowcol, SeriesLabels, CategoryLabels, Replace):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Count(self):
##        '-no docstring-'
##        #return prop
##
##    def Extend(self, Source, Rowcol, CategoryLabels):
##        '-no docstring-'
##        #return prop
##
##    def Item(self, Index):
##        '-no docstring-'
##        #return prop
##
##    def _NewEnum(self):
##        '-no docstring-'
##        #return prop
##
##    def NewSeries(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Creator(self):
##        '-no docstring-'
##        #return prop
##
##    def _Default(self, Index):
##        '-no docstring-'
##        #return prop
##


# values for enumeration 'WdWordDialog'
wdDialogHelpAbout = 9
wdDialogHelpWordPerfectHelp = 10
wdDialogDocumentStatistics = 78
wdDialogFileNew = 79
wdDialogFileOpen = 80
wdDialogMailMergeOpenDataSource = 81
wdDialogMailMergeOpenHeaderSource = 82
wdDialogFileSaveAs = 84
wdDialogFileSummaryInfo = 86
wdDialogToolsTemplates = 87
wdDialogFilePrint = 88
wdDialogFilePrintSetup = 97
wdDialogFileFind = 99
wdDialogFormatAddrFonts = 103
wdDialogEditPasteSpecial = 111
wdDialogEditFind = 112
wdDialogEditReplace = 117
wdDialogEditStyle = 120
wdDialogEditLinks = 124
wdDialogEditObject = 125
wdDialogTableToText = 128
wdDialogTextToTable = 127
wdDialogTableInsertTable = 129
wdDialogTableInsertCells = 130
wdDialogTableInsertRow = 131
wdDialogTableDeleteCells = 133
wdDialogTableSplitCells = 137
wdDialogTableRowHeight = 142
wdDialogTableColumnWidth = 143
wdDialogToolsCustomize = 152
wdDialogInsertBreak = 159
wdDialogInsertSymbol = 162
wdDialogInsertPicture = 163
wdDialogInsertFile = 164
wdDialogInsertDateTime = 165
wdDialogInsertField = 166
wdDialogInsertMergeField = 167
wdDialogInsertBookmark = 168
wdDialogMarkIndexEntry = 169
wdDialogInsertIndex = 170
wdDialogInsertTableOfContents = 171
wdDialogInsertObject = 172
wdDialogToolsCreateEnvelope = 173
wdDialogFormatFont = 174
wdDialogFormatParagraph = 175
wdDialogFormatSectionLayout = 176
wdDialogFormatColumns = 177
wdDialogFileDocumentLayout = 178
wdDialogFilePageSetup = 178
wdDialogFormatTabs = 179
wdDialogFormatStyle = 180
wdDialogFormatDefineStyleFont = 181
wdDialogFormatDefineStylePara = 182
wdDialogFormatDefineStyleTabs = 183
wdDialogFormatDefineStyleFrame = 184
wdDialogFormatDefineStyleBorders = 185
wdDialogFormatDefineStyleLang = 186
wdDialogFormatPicture = 187
wdDialogToolsLanguage = 188
wdDialogFormatBordersAndShading = 189
wdDialogFormatFrame = 190
wdDialogToolsThesaurus = 194
wdDialogToolsHyphenation = 195
wdDialogToolsBulletsNumbers = 196
wdDialogToolsHighlightChanges = 197
wdDialogToolsRevisions = 197
wdDialogToolsCompareDocuments = 198
wdDialogTableSort = 199
wdDialogToolsOptionsGeneral = 203
wdDialogToolsOptionsView = 204
wdDialogToolsAdvancedSettings = 206
wdDialogToolsOptionsPrint = 208
wdDialogToolsOptionsSave = 209
wdDialogToolsOptionsSpellingAndGrammar = 211
wdDialogToolsOptionsUserInfo = 213
wdDialogToolsMacroRecord = 214
wdDialogToolsMacro = 215
wdDialogWindowActivate = 220
wdDialogFormatRetAddrFonts = 221
wdDialogOrganizer = 222
wdDialogToolsOptionsEdit = 224
wdDialogToolsOptionsFileLocations = 225
wdDialogToolsWordCount = 228
wdDialogControlRun = 235
wdDialogInsertPageNumbers = 294
wdDialogFormatPageNumber = 298
wdDialogCopyFile = 300
wdDialogFormatChangeCase = 322
wdDialogUpdateTOC = 331
wdDialogInsertDatabase = 341
wdDialogTableFormula = 348
wdDialogFormFieldOptions = 353
wdDialogInsertCaption = 357
wdDialogInsertCaptionNumbering = 358
wdDialogInsertAutoCaption = 359
wdDialogFormFieldHelp = 361
wdDialogInsertCrossReference = 367
wdDialogInsertFootnote = 370
wdDialogNoteOptions = 373
wdDialogToolsAutoCorrect = 378
wdDialogToolsOptionsTrackChanges = 386
wdDialogConvertObject = 392
wdDialogInsertAddCaption = 402
wdDialogConnect = 420
wdDialogToolsCustomizeKeyboard = 432
wdDialogToolsCustomizeMenus = 433
wdDialogToolsMergeDocuments = 435
wdDialogMarkTableOfContentsEntry = 442
wdDialogFileMacPageSetupGX = 444
wdDialogFilePrintOneCopy = 445
wdDialogEditFrame = 458
wdDialogMarkCitation = 463
wdDialogTableOfContentsOptions = 470
wdDialogInsertTableOfAuthorities = 471
wdDialogInsertTableOfFigures = 472
wdDialogInsertIndexAndTables = 473
wdDialogInsertFormField = 483
wdDialogFormatDropCap = 488
wdDialogToolsCreateLabels = 489
wdDialogToolsProtectDocument = 503
wdDialogFormatStyleGallery = 505
wdDialogToolsAcceptRejectChanges = 506
wdDialogHelpWordPerfectHelpOptions = 511
wdDialogToolsUnprotectDocument = 521
wdDialogToolsOptionsCompatibility = 525
wdDialogTableOfCaptionsOptions = 551
wdDialogTableAutoFormat = 563
wdDialogMailMergeFindRecord = 569
wdDialogReviewAfmtRevisions = 570
wdDialogViewZoom = 577
wdDialogToolsProtectSection = 578
wdDialogFontSubstitution = 581
wdDialogInsertSubdocument = 583
wdDialogNewToolbar = 586
wdDialogToolsEnvelopesAndLabels = 607
wdDialogFormatCallout = 610
wdDialogTableFormatCell = 612
wdDialogToolsCustomizeMenuBar = 615
wdDialogFileRoutingSlip = 624
wdDialogEditTOACategory = 625
wdDialogToolsManageFields = 631
wdDialogDrawSnapToGrid = 633
wdDialogDrawAlign = 634
wdDialogMailMergeCreateDataSource = 642
wdDialogMailMergeCreateHeaderSource = 643
wdDialogMailMerge = 676
wdDialogMailMergeCheck = 677
wdDialogMailMergeHelper = 680
wdDialogMailMergeQueryOptions = 681
wdDialogFileMacPageSetup = 685
wdDialogListCommands = 723
wdDialogEditCreatePublisher = 732
wdDialogEditSubscribeTo = 733
wdDialogEditPublishOptions = 735
wdDialogEditSubscribeOptions = 736
wdDialogFileMacCustomPageSetupGX = 737
wdDialogToolsOptionsTypography = 739
wdDialogToolsAutoCorrectExceptions = 762
wdDialogToolsOptionsAutoFormatAsYouType = 778
wdDialogMailMergeUseAddressBook = 779
wdDialogToolsHangulHanjaConversion = 784
wdDialogToolsOptionsFuzzy = 790
wdDialogEditGoToOld = 811
wdDialogInsertNumber = 812
wdDialogLetterWizard = 821
wdDialogFormatBulletsAndNumbering = 824
wdDialogToolsSpellingAndGrammar = 828
wdDialogToolsCreateDirectory = 833
wdDialogTableWrapping = 854
wdDialogFormatTheme = 855
wdDialogTableProperties = 861
wdDialogEmailOptions = 863
wdDialogCreateAutoText = 872
wdDialogToolsAutoSummarize = 874
wdDialogToolsGrammarSettings = 885
wdDialogEditGoTo = 896
wdDialogWebOptions = 898
wdDialogInsertHyperlink = 925
wdDialogToolsAutoManager = 915
wdDialogFileVersions = 945
wdDialogToolsOptionsAutoFormat = 959
wdDialogFormatDrawingObject = 960
wdDialogToolsOptions = 974
wdDialogFitText = 983
wdDialogEditAutoText = 985
wdDialogPhoneticGuide = 986
wdDialogToolsDictionary = 989
wdDialogFileSaveVersion = 1007
wdDialogToolsOptionsBidi = 1029
wdDialogFrameSetProperties = 1074
wdDialogTableTableOptions = 1080
wdDialogTableCellOptions = 1081
wdDialogIMESetDefault = 1094
wdDialogTCSCTranslator = 1156
wdDialogHorizontalInVertical = 1160
wdDialogTwoLinesInOne = 1161
wdDialogFormatEncloseCharacters = 1162
wdDialogConsistencyChecker = 1121
wdDialogToolsOptionsSmartTag = 1395
wdDialogFormatStylesCustom = 1248
wdDialogCSSLinks = 1261
wdDialogInsertWebComponent = 1324
wdDialogToolsOptionsEditCopyPaste = 1356
wdDialogToolsOptionsSecurity = 1361
wdDialogSearch = 1363
wdDialogShowRepairs = 1381
wdDialogMailMergeInsertAsk = 4047
wdDialogMailMergeInsertFillIn = 4048
wdDialogMailMergeInsertIf = 4049
wdDialogMailMergeInsertNextIf = 4053
wdDialogMailMergeInsertSet = 4054
wdDialogMailMergeInsertSkipIf = 4055
wdDialogMailMergeFieldMapping = 1304
wdDialogMailMergeInsertAddressBlock = 1305
wdDialogMailMergeInsertGreetingLine = 1306
wdDialogMailMergeInsertFields = 1307
wdDialogMailMergeRecipients = 1308
wdDialogMailMergeFindRecipient = 1326
wdDialogMailMergeSetDocumentType = 1339
wdDialogLabelOptions = 1367
wdDialogXMLElementAttributes = 1460
wdDialogSchemaLibrary = 1417
wdDialogPermission = 1469
wdDialogMyPermission = 1437
wdDialogXMLOptions = 1425
wdDialogFormattingRestrictions = 1427
wdDialogSourceManager = 1920
wdDialogCreateSource = 1922
wdDialogDocumentInspector = 1482
wdDialogStyleManagement = 1948
wdDialogInsertSource = 2120
wdDialogOMathRecognizedFunctions = 2165
wdDialogInsertPlaceholder = 2348
wdDialogBuildingBlockOrganizer = 2067
wdDialogContentControlProperties = 2394
wdDialogCompatibilityChecker = 2439
wdDialogExportAsFixedFormat = 2349
wdDialogFileNew2007 = 1116
WdWordDialog = c_int # enum
class Dialog(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{000209B8-0000-0000-C000-000000000046}')
    _idlflags_ = ['dual', 'oleautomation']
Dialogs._methods_ = [
    COMMETHOD([dispid(1000), 'propget'], HRESULT, 'Application',
              ( ['out', 'retval'], POINTER(POINTER(Application)), 'prop' )),
    COMMETHOD([dispid(1001), 'propget'], HRESULT, 'Creator',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(1002), 'propget'], HRESULT, 'Parent',
              ( ['out', 'retval'], POINTER(POINTER(IDispatch)), 'prop' )),
    COMMETHOD([dispid(-4), 'nonbrowsable', 'propget'], HRESULT, '_NewEnum',
              ( ['out', 'retval'], POINTER(POINTER(IUnknown)), 'prop' )),
    COMMETHOD([dispid(1), 'propget'], HRESULT, 'Count',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(0)], HRESULT, 'Item',
              ( ['in'], WdWordDialog, 'Index' ),
              ( ['out', 'retval'], POINTER(POINTER(Dialog)), 'prop' )),
]
################################################################
## code template for Dialogs implementation
##class Dialogs_Impl(object):
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Creator(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def _NewEnum(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Count(self):
##        '-no docstring-'
##        #return prop
##
##    def Item(self, Index):
##        '-no docstring-'
##        #return prop
##


# values for enumeration 'WdDropPosition'
wdDropNone = 0
wdDropNormal = 1
wdDropMargin = 2
WdDropPosition = c_int # enum
class OMathLimUpp(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{FC9086C6-0287-4997-B2E1-816C334A22F8}')
    _idlflags_ = ['dual', 'nonextensible', 'oleautomation']
OMathLimUpp._methods_ = [
    COMMETHOD([dispid(100), 'propget'], HRESULT, 'Application',
              ( ['out', 'retval'], POINTER(POINTER(Application)), 'prop' )),
    COMMETHOD([dispid(101), 'propget'], HRESULT, 'Creator',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(102), 'propget'], HRESULT, 'Parent',
              ( ['out', 'retval'], POINTER(POINTER(IDispatch)), 'prop' )),
    COMMETHOD([dispid(103), 'propget'], HRESULT, 'E',
              ( ['out', 'retval'], POINTER(POINTER(OMath)), 'prop' )),
    COMMETHOD([dispid(104), 'propget'], HRESULT, 'Lim',
              ( ['out', 'retval'], POINTER(POINTER(OMath)), 'prop' )),
    COMMETHOD([dispid(201)], HRESULT, 'ToLimLow',
              ( ['out', 'retval'], POINTER(POINTER(OMathFunction)), 'prop' )),
]
################################################################
## code template for OMathLimUpp implementation
##class OMathLimUpp_Impl(object):
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Creator(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def E(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Lim(self):
##        '-no docstring-'
##        #return prop
##
##    def ToLimLow(self):
##        '-no docstring-'
##        #return prop
##

ShapeNode._methods_ = [
    COMMETHOD([dispid(1000), 'propget'], HRESULT, 'Application',
              ( ['out', 'retval'], POINTER(POINTER(Application)), 'prop' )),
    COMMETHOD([dispid(1001), 'propget'], HRESULT, 'Creator',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(1), 'propget'], HRESULT, 'Parent',
              ( ['out', 'retval'], POINTER(POINTER(IDispatch)), 'prop' )),
    COMMETHOD([dispid(100), 'propget'], HRESULT, 'EditingType',
              ( ['out', 'retval'], POINTER(comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoEditingType), 'prop' )),
    COMMETHOD([dispid(101), 'propget'], HRESULT, 'Points',
              ( ['out', 'retval'], POINTER(VARIANT), 'prop' )),
    COMMETHOD([dispid(102), 'propget'], HRESULT, 'SegmentType',
              ( ['out', 'retval'], POINTER(comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoSegmentType), 'prop' )),
]
################################################################
## code template for ShapeNode implementation
##class ShapeNode_Impl(object):
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Creator(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def EditingType(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Points(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def SegmentType(self):
##        '-no docstring-'
##        #return prop
##

Column._methods_ = [
    COMMETHOD([dispid(1000), 'propget'], HRESULT, 'Application',
              ( ['out', 'retval'], POINTER(POINTER(Application)), 'prop' )),
    COMMETHOD([dispid(1001), 'propget'], HRESULT, 'Creator',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(1002), 'propget'], HRESULT, 'Parent',
              ( ['out', 'retval'], POINTER(POINTER(IDispatch)), 'prop' )),
    COMMETHOD([dispid(3), 'propget'], HRESULT, 'Width',
              ( ['out', 'retval'], POINTER(c_float), 'prop' )),
    COMMETHOD([dispid(3), 'propput'], HRESULT, 'Width',
              ( ['in'], c_float, 'prop' )),
    COMMETHOD([dispid(4), 'propget'], HRESULT, 'IsFirst',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'prop' )),
    COMMETHOD([dispid(5), 'propget'], HRESULT, 'IsLast',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'prop' )),
    COMMETHOD([dispid(6), 'propget'], HRESULT, 'Index',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(100), 'propget'], HRESULT, 'Cells',
              ( ['out', 'retval'], POINTER(POINTER(Cells)), 'prop' )),
    COMMETHOD([dispid(1100), 'propget'], HRESULT, 'Borders',
              ( ['out', 'retval'], POINTER(POINTER(Borders)), 'prop' )),
    COMMETHOD([dispid(1100), 'propput'], HRESULT, 'Borders',
              ( ['in'], POINTER(Borders), 'prop' )),
    COMMETHOD([dispid(102), 'propget'], HRESULT, 'Shading',
              ( ['out', 'retval'], POINTER(POINTER(Shading)), 'prop' )),
    COMMETHOD([dispid(103), 'propget'], HRESULT, 'Next',
              ( ['out', 'retval'], POINTER(POINTER(Column)), 'prop' )),
    COMMETHOD([dispid(104), 'propget'], HRESULT, 'Previous',
              ( ['out', 'retval'], POINTER(POINTER(Column)), 'prop' )),
    COMMETHOD([dispid(65535)], HRESULT, 'Select'),
    COMMETHOD([dispid(200)], HRESULT, 'Delete'),
    COMMETHOD([dispid(201)], HRESULT, 'SetWidth',
              ( ['in'], c_float, 'ColumnWidth' ),
              ( ['in'], WdRulerStyle, 'RulerStyle' )),
    COMMETHOD([dispid(202)], HRESULT, 'AutoFit'),
    COMMETHOD([dispid(203), 'hidden'], HRESULT, 'SortOld',
              ( ['in', 'optional'], POINTER(VARIANT), 'ExcludeHeader' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'SortFieldType' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'SortOrder' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'CaseSensitive' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'LanguageID' )),
    COMMETHOD([dispid(204)], HRESULT, 'Sort',
              ( ['in', 'optional'], POINTER(VARIANT), 'ExcludeHeader' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'SortFieldType' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'SortOrder' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'CaseSensitive' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'BidiSort' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'IgnoreThe' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'IgnoreKashida' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'IgnoreDiacritics' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'IgnoreHe' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'LanguageID' )),
    COMMETHOD([dispid(105), 'propget'], HRESULT, 'NestingLevel',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(106), 'propget'], HRESULT, 'PreferredWidth',
              ( ['out', 'retval'], POINTER(c_float), 'prop' )),
    COMMETHOD([dispid(106), 'propput'], HRESULT, 'PreferredWidth',
              ( ['in'], c_float, 'prop' )),
    COMMETHOD([dispid(107), 'propget'], HRESULT, 'PreferredWidthType',
              ( ['out', 'retval'], POINTER(WdPreferredWidthType), 'prop' )),
    COMMETHOD([dispid(107), 'propput'], HRESULT, 'PreferredWidthType',
              ( ['in'], WdPreferredWidthType, 'prop' )),
]
################################################################
## code template for Column implementation
##class Column_Impl(object):
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Creator(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return prop
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    Width = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def IsFirst(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def IsLast(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Index(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Cells(self):
##        '-no docstring-'
##        #return prop
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    Borders = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Shading(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Next(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Previous(self):
##        '-no docstring-'
##        #return prop
##
##    def Select(self):
##        '-no docstring-'
##        #return 
##
##    def Delete(self):
##        '-no docstring-'
##        #return 
##
##    def SetWidth(self, ColumnWidth, RulerStyle):
##        '-no docstring-'
##        #return 
##
##    def AutoFit(self):
##        '-no docstring-'
##        #return 
##
##    def SortOld(self, ExcludeHeader, SortFieldType, SortOrder, CaseSensitive, LanguageID):
##        '-no docstring-'
##        #return 
##
##    def Sort(self, ExcludeHeader, SortFieldType, SortOrder, CaseSensitive, BidiSort, IgnoreThe, IgnoreKashida, IgnoreDiacritics, IgnoreHe, LanguageID):
##        '-no docstring-'
##        #return 
##
##    @property
##    def NestingLevel(self):
##        '-no docstring-'
##        #return prop
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    PreferredWidth = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    PreferredWidthType = property(_get, _set, doc = _set.__doc__)
##


# values for enumeration 'WdAnimation'
wdAnimationNone = 0
wdAnimationLasVegasLights = 1
wdAnimationBlinkingBackground = 2
wdAnimationSparkleText = 3
wdAnimationMarchingBlackAnts = 4
wdAnimationMarchingRedAnts = 5
wdAnimationShimmer = 6
WdAnimation = c_int # enum

# values for enumeration 'WdLigatures'
wdLigaturesNone = 0
wdLigaturesStandard = 1
wdLigaturesContextual = 2
wdLigaturesHistorical = 4
wdLigaturesDiscretional = 8
wdLigaturesStandardContextual = 3
wdLigaturesStandardHistorical = 5
wdLigaturesContextualHistorical = 6
wdLigaturesStandardDiscretional = 9
wdLigaturesContextualDiscretional = 10
wdLigaturesHistoricalDiscretional = 12
wdLigaturesStandardContextualHistorical = 7
wdLigaturesStandardContextualDiscretional = 11
wdLigaturesStandardHistoricalDiscretional = 13
wdLigaturesContextualHistoricalDiscretional = 14
wdLigaturesAll = 15
WdLigatures = c_int # enum
_Font._methods_ = [
    COMMETHOD([dispid(1000), 'propget'], HRESULT, 'Application',
              ( ['out', 'retval'], POINTER(POINTER(Application)), 'prop' )),
    COMMETHOD([dispid(1001), 'propget'], HRESULT, 'Creator',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(1002), 'propget'], HRESULT, 'Parent',
              ( ['out', 'retval'], POINTER(POINTER(IDispatch)), 'prop' )),
    COMMETHOD([dispid(10), 'propget'], HRESULT, 'Duplicate',
              ( ['out', 'retval'], POINTER(POINTER(Font)), 'prop' )),
    COMMETHOD([dispid(130), 'propget'], HRESULT, 'Bold',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(130), 'propput'], HRESULT, 'Bold',
              ( ['in'], c_int, 'prop' )),
    COMMETHOD([dispid(131), 'propget'], HRESULT, 'Italic',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(131), 'propput'], HRESULT, 'Italic',
              ( ['in'], c_int, 'prop' )),
    COMMETHOD([dispid(132), 'propget'], HRESULT, 'Hidden',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(132), 'propput'], HRESULT, 'Hidden',
              ( ['in'], c_int, 'prop' )),
    COMMETHOD([dispid(133), 'propget'], HRESULT, 'SmallCaps',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(133), 'propput'], HRESULT, 'SmallCaps',
              ( ['in'], c_int, 'prop' )),
    COMMETHOD([dispid(134), 'propget'], HRESULT, 'AllCaps',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(134), 'propput'], HRESULT, 'AllCaps',
              ( ['in'], c_int, 'prop' )),
    COMMETHOD([dispid(135), 'propget'], HRESULT, 'StrikeThrough',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(135), 'propput'], HRESULT, 'StrikeThrough',
              ( ['in'], c_int, 'prop' )),
    COMMETHOD([dispid(136), 'propget'], HRESULT, 'DoubleStrikeThrough',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(136), 'propput'], HRESULT, 'DoubleStrikeThrough',
              ( ['in'], c_int, 'prop' )),
    COMMETHOD([dispid(137), 'propget'], HRESULT, 'ColorIndex',
              ( ['out', 'retval'], POINTER(WdColorIndex), 'prop' )),
    COMMETHOD([dispid(137), 'propput'], HRESULT, 'ColorIndex',
              ( ['in'], WdColorIndex, 'prop' )),
    COMMETHOD([dispid(138), 'propget'], HRESULT, 'Subscript',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(138), 'propput'], HRESULT, 'Subscript',
              ( ['in'], c_int, 'prop' )),
    COMMETHOD([dispid(139), 'propget'], HRESULT, 'Superscript',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(139), 'propput'], HRESULT, 'Superscript',
              ( ['in'], c_int, 'prop' )),
    COMMETHOD([dispid(140), 'propget'], HRESULT, 'Underline',
              ( ['out', 'retval'], POINTER(WdUnderline), 'prop' )),
    COMMETHOD([dispid(140), 'propput'], HRESULT, 'Underline',
              ( ['in'], WdUnderline, 'prop' )),
    COMMETHOD([dispid(141), 'propget'], HRESULT, 'Size',
              ( ['out', 'retval'], POINTER(c_float), 'prop' )),
    COMMETHOD([dispid(141), 'propput'], HRESULT, 'Size',
              ( ['in'], c_float, 'prop' )),
    COMMETHOD([dispid(142), 'propget'], HRESULT, 'Name',
              ( ['out', 'retval'], POINTER(BSTR), 'prop' )),
    COMMETHOD([dispid(142), 'propput'], HRESULT, 'Name',
              ( ['in'], BSTR, 'prop' )),
    COMMETHOD([dispid(143), 'propget'], HRESULT, 'Position',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(143), 'propput'], HRESULT, 'Position',
              ( ['in'], c_int, 'prop' )),
    COMMETHOD([dispid(144), 'propget'], HRESULT, 'Spacing',
              ( ['out', 'retval'], POINTER(c_float), 'prop' )),
    COMMETHOD([dispid(144), 'propput'], HRESULT, 'Spacing',
              ( ['in'], c_float, 'prop' )),
    COMMETHOD([dispid(145), 'propget'], HRESULT, 'Scaling',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(145), 'propput'], HRESULT, 'Scaling',
              ( ['in'], c_int, 'prop' )),
    COMMETHOD([dispid(146), 'propget'], HRESULT, 'Shadow',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(146), 'propput'], HRESULT, 'Shadow',
              ( ['in'], c_int, 'prop' )),
    COMMETHOD([dispid(147), 'propget'], HRESULT, 'Outline',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(147), 'propput'], HRESULT, 'Outline',
              ( ['in'], c_int, 'prop' )),
    COMMETHOD([dispid(148), 'propget'], HRESULT, 'Emboss',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(148), 'propput'], HRESULT, 'Emboss',
              ( ['in'], c_int, 'prop' )),
    COMMETHOD([dispid(149), 'propget'], HRESULT, 'Kerning',
              ( ['out', 'retval'], POINTER(c_float), 'prop' )),
    COMMETHOD([dispid(149), 'propput'], HRESULT, 'Kerning',
              ( ['in'], c_float, 'prop' )),
    COMMETHOD([dispid(150), 'propget'], HRESULT, 'Engrave',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(150), 'propput'], HRESULT, 'Engrave',
              ( ['in'], c_int, 'prop' )),
    COMMETHOD([dispid(151), 'hidden', 'propget'], HRESULT, 'Animation',
              ( ['out', 'retval'], POINTER(WdAnimation), 'prop' )),
    COMMETHOD([dispid(151), 'hidden', 'propput'], HRESULT, 'Animation',
              ( ['in'], WdAnimation, 'prop' )),
    COMMETHOD([dispid(1100), 'propget'], HRESULT, 'Borders',
              ( ['out', 'retval'], POINTER(POINTER(Borders)), 'prop' )),
    COMMETHOD([dispid(1100), 'propput'], HRESULT, 'Borders',
              ( ['in'], POINTER(Borders), 'prop' )),
    COMMETHOD([dispid(153), 'propget'], HRESULT, 'Shading',
              ( ['out', 'retval'], POINTER(POINTER(Shading)), 'prop' )),
    COMMETHOD([dispid(154), 'propget'], HRESULT, 'EmphasisMark',
              ( ['out', 'retval'], POINTER(WdEmphasisMark), 'prop' )),
    COMMETHOD([dispid(154), 'propput'], HRESULT, 'EmphasisMark',
              ( ['in'], WdEmphasisMark, 'prop' )),
    COMMETHOD([dispid(155), 'propget'], HRESULT, 'DisableCharacterSpaceGrid',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'prop' )),
    COMMETHOD([dispid(155), 'propput'], HRESULT, 'DisableCharacterSpaceGrid',
              ( ['in'], VARIANT_BOOL, 'prop' )),
    COMMETHOD([dispid(156), 'propget'], HRESULT, 'NameFarEast',
              ( ['out', 'retval'], POINTER(BSTR), 'prop' )),
    COMMETHOD([dispid(156), 'propput'], HRESULT, 'NameFarEast',
              ( ['in'], BSTR, 'prop' )),
    COMMETHOD([dispid(157), 'propget'], HRESULT, 'NameAscii',
              ( ['out', 'retval'], POINTER(BSTR), 'prop' )),
    COMMETHOD([dispid(157), 'propput'], HRESULT, 'NameAscii',
              ( ['in'], BSTR, 'prop' )),
    COMMETHOD([dispid(158), 'propget'], HRESULT, 'NameOther',
              ( ['out', 'retval'], POINTER(BSTR), 'prop' )),
    COMMETHOD([dispid(158), 'propput'], HRESULT, 'NameOther',
              ( ['in'], BSTR, 'prop' )),
    COMMETHOD([dispid(100)], HRESULT, 'Grow'),
    COMMETHOD([dispid(101)], HRESULT, 'Shrink'),
    COMMETHOD([dispid(102)], HRESULT, 'Reset'),
    COMMETHOD([dispid(103)], HRESULT, 'SetAsTemplateDefault'),
    COMMETHOD([dispid(159), 'hidden', 'propget'], HRESULT, 'Color',
              ( ['out', 'retval'], POINTER(WdColor), 'prop' )),
    COMMETHOD([dispid(159), 'hidden', 'propput'], HRESULT, 'Color',
              ( ['in'], WdColor, 'prop' )),
    COMMETHOD([dispid(160), 'propget'], HRESULT, 'BoldBi',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(160), 'propput'], HRESULT, 'BoldBi',
              ( ['in'], c_int, 'prop' )),
    COMMETHOD([dispid(161), 'propget'], HRESULT, 'ItalicBi',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(161), 'propput'], HRESULT, 'ItalicBi',
              ( ['in'], c_int, 'prop' )),
    COMMETHOD([dispid(162), 'propget'], HRESULT, 'SizeBi',
              ( ['out', 'retval'], POINTER(c_float), 'prop' )),
    COMMETHOD([dispid(162), 'propput'], HRESULT, 'SizeBi',
              ( ['in'], c_float, 'prop' )),
    COMMETHOD([dispid(163), 'propget'], HRESULT, 'NameBi',
              ( ['out', 'retval'], POINTER(BSTR), 'prop' )),
    COMMETHOD([dispid(163), 'propput'], HRESULT, 'NameBi',
              ( ['in'], BSTR, 'prop' )),
    COMMETHOD([dispid(164), 'propget'], HRESULT, 'ColorIndexBi',
              ( ['out', 'retval'], POINTER(WdColorIndex), 'prop' )),
    COMMETHOD([dispid(164), 'propput'], HRESULT, 'ColorIndexBi',
              ( ['in'], WdColorIndex, 'prop' )),
    COMMETHOD([dispid(165), 'propget'], HRESULT, 'DiacriticColor',
              ( ['out', 'retval'], POINTER(WdColor), 'prop' )),
    COMMETHOD([dispid(165), 'propput'], HRESULT, 'DiacriticColor',
              ( ['in'], WdColor, 'prop' )),
    COMMETHOD([dispid(166), 'propget'], HRESULT, 'UnderlineColor',
              ( ['out', 'retval'], POINTER(WdColor), 'prop' )),
    COMMETHOD([dispid(166), 'propput'], HRESULT, 'UnderlineColor',
              ( ['in'], WdColor, 'prop' )),
    COMMETHOD([dispid(167), 'propget'], HRESULT, 'Glow',
              ( ['out', 'retval'], POINTER(POINTER(GlowFormat)), 'prop' )),
    COMMETHOD([dispid(167), 'propput'], HRESULT, 'Glow',
              ( ['in'], POINTER(GlowFormat), 'prop' )),
    COMMETHOD([dispid(168), 'propget'], HRESULT, 'Reflection',
              ( ['out', 'retval'], POINTER(POINTER(ReflectionFormat)), 'prop' )),
    COMMETHOD([dispid(168), 'propput'], HRESULT, 'Reflection',
              ( ['in'], POINTER(ReflectionFormat), 'prop' )),
    COMMETHOD([dispid(169), 'propget'], HRESULT, 'TextShadow',
              ( ['out', 'retval'], POINTER(POINTER(ShadowFormat)), 'prop' )),
    COMMETHOD([dispid(169), 'propput'], HRESULT, 'TextShadow',
              ( ['in'], POINTER(ShadowFormat), 'prop' )),
    COMMETHOD([dispid(170), 'propget'], HRESULT, 'Fill',
              ( ['out', 'retval'], POINTER(POINTER(FillFormat)), 'prop' )),
    COMMETHOD([dispid(170), 'propput'], HRESULT, 'Fill',
              ( ['in'], POINTER(FillFormat), 'prop' )),
    COMMETHOD([dispid(171), 'propget'], HRESULT, 'Line',
              ( ['out', 'retval'], POINTER(POINTER(LineFormat)), 'prop' )),
    COMMETHOD([dispid(171), 'propput'], HRESULT, 'Line',
              ( ['in'], POINTER(LineFormat), 'prop' )),
    COMMETHOD([dispid(172), 'propget'], HRESULT, 'ThreeD',
              ( ['out', 'retval'], POINTER(POINTER(ThreeDFormat)), 'prop' )),
    COMMETHOD([dispid(172), 'propput'], HRESULT, 'ThreeD',
              ( ['in'], POINTER(ThreeDFormat), 'prop' )),
    COMMETHOD([dispid(173), 'propget'], HRESULT, 'TextColor',
              ( ['out', 'retval'], POINTER(POINTER(ColorFormat)), 'prop' )),
    COMMETHOD([dispid(174), 'propget'], HRESULT, 'Ligatures',
              ( ['out', 'retval'], POINTER(WdLigatures), 'prop' )),
    COMMETHOD([dispid(174), 'propput'], HRESULT, 'Ligatures',
              ( ['in'], WdLigatures, 'prop' )),
    COMMETHOD([dispid(175), 'propget'], HRESULT, 'NumberForm',
              ( ['out', 'retval'], POINTER(WdNumberForm), 'prop' )),
    COMMETHOD([dispid(175), 'propput'], HRESULT, 'NumberForm',
              ( ['in'], WdNumberForm, 'prop' )),
    COMMETHOD([dispid(176), 'propget'], HRESULT, 'NumberSpacing',
              ( ['out', 'retval'], POINTER(WdNumberSpacing), 'prop' )),
    COMMETHOD([dispid(176), 'propput'], HRESULT, 'NumberSpacing',
              ( ['in'], WdNumberSpacing, 'prop' )),
    COMMETHOD([dispid(177), 'propget'], HRESULT, 'ContextualAlternates',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(177), 'propput'], HRESULT, 'ContextualAlternates',
              ( ['in'], c_int, 'prop' )),
    COMMETHOD([dispid(178), 'propget'], HRESULT, 'StylisticSet',
              ( ['out', 'retval'], POINTER(WdStylisticSet), 'prop' )),
    COMMETHOD([dispid(178), 'propput'], HRESULT, 'StylisticSet',
              ( ['in'], WdStylisticSet, 'prop' )),
]
################################################################
## code template for _Font implementation
##class _Font_Impl(object):
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Creator(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Duplicate(self):
##        '-no docstring-'
##        #return prop
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    Bold = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    Italic = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    Hidden = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    SmallCaps = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    AllCaps = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    StrikeThrough = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    DoubleStrikeThrough = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    ColorIndex = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    Subscript = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    Superscript = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    Underline = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    Size = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    Name = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    Position = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    Spacing = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    Scaling = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    Shadow = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    Outline = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    Emboss = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    Kerning = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    Engrave = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    Animation = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    Borders = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Shading(self):
##        '-no docstring-'
##        #return prop
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    EmphasisMark = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    DisableCharacterSpaceGrid = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    NameFarEast = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    NameAscii = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    NameOther = property(_get, _set, doc = _set.__doc__)
##
##    def Grow(self):
##        '-no docstring-'
##        #return 
##
##    def Shrink(self):
##        '-no docstring-'
##        #return 
##
##    def Reset(self):
##        '-no docstring-'
##        #return 
##
##    def SetAsTemplateDefault(self):
##        '-no docstring-'
##        #return 
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    Color = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    BoldBi = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    ItalicBi = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    SizeBi = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    NameBi = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    ColorIndexBi = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    DiacriticColor = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    UnderlineColor = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    Glow = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    Reflection = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    TextShadow = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    Fill = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    Line = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    ThreeD = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def TextColor(self):
##        '-no docstring-'
##        #return prop
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    Ligatures = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    NumberForm = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    NumberSpacing = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    ContextualAlternates = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    StylisticSet = property(_get, _set, doc = _set.__doc__)
##


# values for enumeration 'WdMailMergeState'
wdNormalDocument = 0
wdMainDocumentOnly = 1
wdMainAndDataSource = 2
wdMainAndHeader = 3
wdMainAndSourceAndHeader = 4
wdDataSource = 5
WdMailMergeState = c_int # enum
class OMathPhantom(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{DB77D541-85C3-42E8-8649-AFBD7CF87866}')
    _idlflags_ = ['dual', 'nonextensible', 'oleautomation']
OMathPhantom._methods_ = [
    COMMETHOD([dispid(100), 'propget'], HRESULT, 'Application',
              ( ['out', 'retval'], POINTER(POINTER(Application)), 'prop' )),
    COMMETHOD([dispid(101), 'propget'], HRESULT, 'Creator',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(102), 'propget'], HRESULT, 'Parent',
              ( ['out', 'retval'], POINTER(POINTER(IDispatch)), 'prop' )),
    COMMETHOD([dispid(103), 'propget'], HRESULT, 'E',
              ( ['out', 'retval'], POINTER(POINTER(OMath)), 'prop' )),
    COMMETHOD([dispid(104), 'propget'], HRESULT, 'Show',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'prop' )),
    COMMETHOD([dispid(104), 'propput'], HRESULT, 'Show',
              ( ['in'], VARIANT_BOOL, 'prop' )),
    COMMETHOD([dispid(105), 'propget'], HRESULT, 'ZeroWid',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'prop' )),
    COMMETHOD([dispid(105), 'propput'], HRESULT, 'ZeroWid',
              ( ['in'], VARIANT_BOOL, 'prop' )),
    COMMETHOD([dispid(106), 'propget'], HRESULT, 'ZeroAsc',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'prop' )),
    COMMETHOD([dispid(106), 'propput'], HRESULT, 'ZeroAsc',
              ( ['in'], VARIANT_BOOL, 'prop' )),
    COMMETHOD([dispid(107), 'propget'], HRESULT, 'ZeroDesc',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'prop' )),
    COMMETHOD([dispid(107), 'propput'], HRESULT, 'ZeroDesc',
              ( ['in'], VARIANT_BOOL, 'prop' )),
    COMMETHOD([dispid(108), 'propget'], HRESULT, 'Transp',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'prop' )),
    COMMETHOD([dispid(108), 'propput'], HRESULT, 'Transp',
              ( ['in'], VARIANT_BOOL, 'prop' )),
    COMMETHOD([dispid(109), 'propget'], HRESULT, 'Smash',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'prop' )),
    COMMETHOD([dispid(109), 'propput'], HRESULT, 'Smash',
              ( ['in'], VARIANT_BOOL, 'prop' )),
]
################################################################
## code template for OMathPhantom implementation
##class OMathPhantom_Impl(object):
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Creator(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def E(self):
##        '-no docstring-'
##        #return prop
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    Show = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    ZeroWid = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    ZeroAsc = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    ZeroDesc = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    Transp = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    Smash = property(_get, _set, doc = _set.__doc__)
##

class DiagramNodeChildren(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{000209EA-0000-0000-C000-000000000046}')
    _idlflags_ = ['hidden', 'dual', 'nonextensible', 'oleautomation']
class Diagram(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{000209EC-0000-0000-C000-000000000046}')
    _idlflags_ = ['hidden', 'dual', 'nonextensible', 'oleautomation']
DiagramNode._methods_ = [
    COMMETHOD([dispid(1000), 'propget'], HRESULT, 'Application',
              ( ['out', 'retval'], POINTER(POINTER(Application)), 'prop' )),
    COMMETHOD([dispid(1001), 'propget'], HRESULT, 'Creator',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(100), 'propget'], HRESULT, 'Parent',
              ( ['out', 'retval'], POINTER(POINTER(IDispatch)), 'prop' )),
    COMMETHOD([dispid(101), 'propget'], HRESULT, 'Children',
              ( ['out', 'retval'], POINTER(POINTER(DiagramNodeChildren)), 'prop' )),
    COMMETHOD([dispid(102), 'propget'], HRESULT, 'Shape',
              ( ['out', 'retval'], POINTER(POINTER(Shape)), 'prop' )),
    COMMETHOD([dispid(103), 'propget'], HRESULT, 'Root',
              ( ['out', 'retval'], POINTER(POINTER(DiagramNode)), 'prop' )),
    COMMETHOD([dispid(104), 'propget'], HRESULT, 'Diagram',
              ( ['out', 'retval'], POINTER(POINTER(Diagram)), 'prop' )),
    COMMETHOD([dispid(105), 'propget'], HRESULT, 'Layout',
              ( ['out', 'retval'], POINTER(comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoOrgChartLayoutType), 'prop' )),
    COMMETHOD([dispid(105), 'propput'], HRESULT, 'Layout',
              ( ['in'], comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoOrgChartLayoutType, 'prop' )),
    COMMETHOD([dispid(106), 'propget'], HRESULT, 'TextShape',
              ( ['out', 'retval'], POINTER(POINTER(Shape)), 'prop' )),
    COMMETHOD([dispid(10)], HRESULT, 'AddNode',
              ( ['in', 'optional'], comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoRelativeNodePosition, 'Pos', 2 ),
              ( ['in', 'optional'], comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoDiagramNodeType, 'NodeType', 1 ),
              ( ['out', 'retval'], POINTER(POINTER(DiagramNode)), 'prop' )),
    COMMETHOD([dispid(11)], HRESULT, 'Delete'),
    COMMETHOD([dispid(12)], HRESULT, 'MoveNode',
              ( ['out'], POINTER(POINTER(DiagramNode)), 'TargetNode' ),
              ( ['in'], comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoRelativeNodePosition, 'Pos' )),
    COMMETHOD([dispid(13)], HRESULT, 'ReplaceNode',
              ( ['out'], POINTER(POINTER(DiagramNode)), 'TargetNode' )),
    COMMETHOD([dispid(14)], HRESULT, 'SwapNode',
              ( ['out'], POINTER(POINTER(DiagramNode)), 'TargetNode' ),
              ( ['in', 'optional'], comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoRelativeNodePosition, 'Pos', -1 )),
    COMMETHOD([dispid(15)], HRESULT, 'CloneNode',
              ( ['in'], VARIANT_BOOL, 'copyChildren' ),
              ( ['out', 'optional'], POINTER(POINTER(DiagramNode)), 'TargetNode', 0 ),
              ( ['in', 'optional'], comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoRelativeNodePosition, 'Pos', 2 ),
              ( ['out', 'retval'], POINTER(POINTER(DiagramNode)), 'prop' )),
    COMMETHOD([dispid(16)], HRESULT, 'TransferChildren',
              ( ['out'], POINTER(POINTER(DiagramNode)), 'ReceivingNode' )),
    COMMETHOD([dispid(17)], HRESULT, 'NextNode',
              ( ['out', 'retval'], POINTER(POINTER(DiagramNode)), 'prop' )),
    COMMETHOD([dispid(18)], HRESULT, 'PrevNode',
              ( ['out', 'retval'], POINTER(POINTER(DiagramNode)), 'prop' )),
]
################################################################
## code template for DiagramNode implementation
##class DiagramNode_Impl(object):
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Creator(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Children(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Shape(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Root(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Diagram(self):
##        '-no docstring-'
##        #return prop
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    Layout = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def TextShape(self):
##        '-no docstring-'
##        #return prop
##
##    def AddNode(self, Pos, NodeType):
##        '-no docstring-'
##        #return prop
##
##    def Delete(self):
##        '-no docstring-'
##        #return 
##
##    def MoveNode(self, Pos):
##        '-no docstring-'
##        #return TargetNode
##
##    def ReplaceNode(self):
##        '-no docstring-'
##        #return TargetNode
##
##    def SwapNode(self, Pos):
##        '-no docstring-'
##        #return TargetNode
##
##    def CloneNode(self, copyChildren, Pos):
##        '-no docstring-'
##        #return TargetNode, prop
##
##    def TransferChildren(self):
##        '-no docstring-'
##        #return ReceivingNode
##
##    def NextNode(self):
##        '-no docstring-'
##        #return prop
##
##    def PrevNode(self):
##        '-no docstring-'
##        #return prop
##


# values for enumeration 'WdMailMergeMainDocType'
wdNotAMergeDocument = -1
wdFormLetters = 0
wdMailingLabels = 1
wdEnvelopes = 2
wdCatalog = 3
wdEMail = 4
wdFax = 5
wdDirectory = 3
WdMailMergeMainDocType = c_int # enum

# values for enumeration 'WdHelpTypeHID'
emptyenum = 0
WdHelpTypeHID = c_int # enum

# values for enumeration 'WdRevisionsWrap'
wdWrapNever = 0
wdWrapAlways = 1
wdWrapAsk = 2
WdRevisionsWrap = c_int # enum

# values for enumeration 'WdMailMergeActiveRecord'
wdNoActiveRecord = -1
wdNextRecord = -2
wdPreviousRecord = -3
wdFirstRecord = -4
wdLastRecord = -5
wdFirstDataSourceRecord = -6
wdLastDataSourceRecord = -7
wdNextDataSourceRecord = -8
wdPreviousDataSourceRecord = -9
WdMailMergeActiveRecord = c_int # enum
Variable._methods_ = [
    COMMETHOD([dispid(1000), 'propget'], HRESULT, 'Application',
              ( ['out', 'retval'], POINTER(POINTER(Application)), 'prop' )),
    COMMETHOD([dispid(1001), 'propget'], HRESULT, 'Creator',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(1002), 'propget'], HRESULT, 'Parent',
              ( ['out', 'retval'], POINTER(POINTER(IDispatch)), 'prop' )),
    COMMETHOD([dispid(1), 'propget'], HRESULT, 'Name',
              ( ['out', 'retval'], POINTER(BSTR), 'prop' )),
    COMMETHOD([dispid(0), 'propget'], HRESULT, 'Value',
              ( ['out', 'retval'], POINTER(BSTR), 'prop' )),
    COMMETHOD([dispid(0), 'propput'], HRESULT, 'Value',
              ( ['in'], BSTR, 'prop' )),
    COMMETHOD([dispid(2), 'propget'], HRESULT, 'Index',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(11)], HRESULT, 'Delete'),
]
################################################################
## code template for Variable implementation
##class Variable_Impl(object):
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Creator(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Name(self):
##        '-no docstring-'
##        #return prop
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    Value = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Index(self):
##        '-no docstring-'
##        #return prop
##
##    def Delete(self):
##        '-no docstring-'
##        #return 
##

class DropCap(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{00020956-0000-0000-C000-000000000046}')
    _idlflags_ = ['dual', 'nonextensible', 'oleautomation']
DropCap._methods_ = [
    COMMETHOD([dispid(1000), 'propget'], HRESULT, 'Application',
              ( ['out', 'retval'], POINTER(POINTER(Application)), 'prop' )),
    COMMETHOD([dispid(1001), 'propget'], HRESULT, 'Creator',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(1002), 'propget'], HRESULT, 'Parent',
              ( ['out', 'retval'], POINTER(POINTER(IDispatch)), 'prop' )),
    COMMETHOD([dispid(10), 'propget'], HRESULT, 'Position',
              ( ['out', 'retval'], POINTER(WdDropPosition), 'prop' )),
    COMMETHOD([dispid(10), 'propput'], HRESULT, 'Position',
              ( ['in'], WdDropPosition, 'prop' )),
    COMMETHOD([dispid(11), 'propget'], HRESULT, 'FontName',
              ( ['out', 'retval'], POINTER(BSTR), 'prop' )),
    COMMETHOD([dispid(11), 'propput'], HRESULT, 'FontName',
              ( ['in'], BSTR, 'prop' )),
    COMMETHOD([dispid(12), 'propget'], HRESULT, 'LinesToDrop',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(12), 'propput'], HRESULT, 'LinesToDrop',
              ( ['in'], c_int, 'prop' )),
    COMMETHOD([dispid(13), 'propget'], HRESULT, 'DistanceFromText',
              ( ['out', 'retval'], POINTER(c_float), 'prop' )),
    COMMETHOD([dispid(13), 'propput'], HRESULT, 'DistanceFromText',
              ( ['in'], c_float, 'prop' )),
    COMMETHOD([dispid(100)], HRESULT, 'Clear'),
    COMMETHOD([dispid(101)], HRESULT, 'Enable'),
]
################################################################
## code template for DropCap implementation
##class DropCap_Impl(object):
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Creator(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return prop
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    Position = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    FontName = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    LinesToDrop = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    DistanceFromText = property(_get, _set, doc = _set.__doc__)
##
##    def Clear(self):
##        '-no docstring-'
##        #return 
##
##    def Enable(self):
##        '-no docstring-'
##        #return 
##


# values for enumeration 'WdRevisionsMarkup'
wdRevisionsMarkupNone = 0
wdRevisionsMarkupSimple = 1
wdRevisionsMarkupAll = 2
WdRevisionsMarkup = c_int # enum
RevisionsFilter._methods_ = [
    COMMETHOD([dispid(1), 'propget'], HRESULT, 'View',
              ( ['out', 'retval'], POINTER(WdRevisionsView), 'prop' )),
    COMMETHOD([dispid(1), 'propput'], HRESULT, 'View',
              ( ['in'], WdRevisionsView, 'prop' )),
    COMMETHOD([dispid(2), 'propget'], HRESULT, 'Markup',
              ( ['out', 'retval'], POINTER(WdRevisionsMarkup), 'prop' )),
    COMMETHOD([dispid(2), 'propput'], HRESULT, 'Markup',
              ( ['in'], WdRevisionsMarkup, 'prop' )),
    COMMETHOD([dispid(3), 'propget'], HRESULT, 'Reviewers',
              ( ['out', 'retval'], POINTER(POINTER(Reviewers)), 'prop' )),
    COMMETHOD([dispid(101)], HRESULT, 'ToggleShowAllReviewers'),
]
################################################################
## code template for RevisionsFilter implementation
##class RevisionsFilter_Impl(object):
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    View = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    Markup = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Reviewers(self):
##        '-no docstring-'
##        #return prop
##
##    def ToggleShowAllReviewers(self):
##        '-no docstring-'
##        #return 
##

class _OLEControl(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{000209A4-0000-0000-C000-000000000046}')
    _idlflags_ = ['hidden', 'dual', 'oleautomation']
_OLEControl._methods_ = [
    COMMETHOD([dispid(-2147417853), 'propget'], HRESULT, 'Left',
              ( ['out', 'retval'], POINTER(c_float), 'prop' )),
    COMMETHOD([dispid(-2147417853), 'propput'], HRESULT, 'Left',
              ( ['in'], c_float, 'prop' )),
    COMMETHOD([dispid(-2147417852), 'propget'], HRESULT, 'Top',
              ( ['out', 'retval'], POINTER(c_float), 'prop' )),
    COMMETHOD([dispid(-2147417852), 'propput'], HRESULT, 'Top',
              ( ['in'], c_float, 'prop' )),
    COMMETHOD([dispid(-2147417851), 'propget'], HRESULT, 'Height',
              ( ['out', 'retval'], POINTER(c_float), 'prop' )),
    COMMETHOD([dispid(-2147417851), 'propput'], HRESULT, 'Height',
              ( ['in'], c_float, 'prop' )),
    COMMETHOD([dispid(-2147417850), 'propget'], HRESULT, 'Width',
              ( ['out', 'retval'], POINTER(c_float), 'prop' )),
    COMMETHOD([dispid(-2147417850), 'propput'], HRESULT, 'Width',
              ( ['in'], c_float, 'prop' )),
    COMMETHOD([dispid(-2147418112), 'propget'], HRESULT, 'Name',
              ( ['out', 'retval'], POINTER(BSTR), 'prop' )),
    COMMETHOD([dispid(-2147418112), 'propput'], HRESULT, 'Name',
              ( ['in'], BSTR, 'prop' )),
    COMMETHOD([dispid(-2147417849), 'propget'], HRESULT, 'Automation',
              ( ['out', 'retval'], POINTER(POINTER(IDispatch)), 'prop' )),
    COMMETHOD([dispid(-2147417568)], HRESULT, 'Select'),
    COMMETHOD([dispid(-2147417560)], HRESULT, 'Copy'),
    COMMETHOD([dispid(-2147417559)], HRESULT, 'Cut'),
    COMMETHOD([dispid(-2147417520)], HRESULT, 'Delete'),
    COMMETHOD([dispid(-2147417519)], HRESULT, 'Activate'),
    COMMETHOD([dispid(-2147415101), 'hidden', 'propget'], HRESULT, 'AltHTML',
              ( ['out', 'retval'], POINTER(BSTR), 'prop' )),
    COMMETHOD([dispid(-2147415101), 'hidden', 'propput'], HRESULT, 'AltHTML',
              ( ['in'], BSTR, 'prop' )),
]
################################################################
## code template for _OLEControl implementation
##class _OLEControl_Impl(object):
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    Left = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    Top = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    Height = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    Width = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    Name = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Automation(self):
##        '-no docstring-'
##        #return prop
##
##    def Select(self):
##        '-no docstring-'
##        #return 
##
##    def Copy(self):
##        '-no docstring-'
##        #return 
##
##    def Cut(self):
##        '-no docstring-'
##        #return 
##
##    def Delete(self):
##        '-no docstring-'
##        #return 
##
##    def Activate(self):
##        '-no docstring-'
##        #return 
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    AltHTML = property(_get, _set, doc = _set.__doc__)
##


# values for enumeration 'WdEndnoteLocation'
wdEndOfSection = 0
wdEndOfDocument = 1
WdEndnoteLocation = c_int # enum

# values for enumeration 'WdRevisionType'
wdNoRevision = 0
wdRevisionInsert = 1
wdRevisionDelete = 2
wdRevisionProperty = 3
wdRevisionParagraphNumber = 4
wdRevisionDisplayField = 5
wdRevisionReconcile = 6
wdRevisionConflict = 7
wdRevisionStyle = 8
wdRevisionReplace = 9
wdRevisionParagraphProperty = 10
wdRevisionTableProperty = 11
wdRevisionSectionProperty = 12
wdRevisionStyleDefinition = 13
wdRevisionMovedFrom = 14
wdRevisionMovedTo = 15
wdRevisionCellInsertion = 16
wdRevisionCellDeletion = 17
wdRevisionCellMerge = 18
wdRevisionCellSplit = 19
wdRevisionConflictInsert = 20
wdRevisionConflictDelete = 21
WdRevisionType = c_int # enum

# values for enumeration 'WdFramesetType'
wdFramesetTypeFrameset = 0
wdFramesetTypeFrame = 1
WdFramesetType = c_int # enum

# values for enumeration 'WdFramesetSizeType'
wdFramesetSizeTypePercent = 0
wdFramesetSizeTypeFixed = 1
wdFramesetSizeTypeRelative = 2
WdFramesetSizeType = c_int # enum

# values for enumeration 'WdFramesetNewFrameLocation'
wdFramesetNewFrameAbove = 0
wdFramesetNewFrameBelow = 1
wdFramesetNewFrameRight = 2
wdFramesetNewFrameLeft = 3
WdFramesetNewFrameLocation = c_int # enum
Frameset._methods_ = [
    COMMETHOD([dispid(1000), 'propget'], HRESULT, 'Application',
              ( ['out', 'retval'], POINTER(POINTER(Application)), 'prop' )),
    COMMETHOD([dispid(1001), 'propget'], HRESULT, 'Creator',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(1002), 'propget'], HRESULT, 'Parent',
              ( ['out', 'retval'], POINTER(POINTER(IDispatch)), 'prop' )),
    COMMETHOD([dispid(-4), 'nonbrowsable', 'propget'], HRESULT, '_NewEnum',
              ( ['out', 'retval'], POINTER(POINTER(IUnknown)), 'prop' )),
    COMMETHOD([dispid(1003), 'propget'], HRESULT, 'ParentFrameset',
              ( ['out', 'retval'], POINTER(POINTER(Frameset)), 'prop' )),
    COMMETHOD([dispid(0), 'propget'], HRESULT, 'Type',
              ( ['out', 'retval'], POINTER(WdFramesetType), 'prop' )),
    COMMETHOD([dispid(1), 'propget'], HRESULT, 'WidthType',
              ( ['out', 'retval'], POINTER(WdFramesetSizeType), 'prop' )),
    COMMETHOD([dispid(1), 'propput'], HRESULT, 'WidthType',
              ( ['in'], WdFramesetSizeType, 'prop' )),
    COMMETHOD([dispid(2), 'propget'], HRESULT, 'HeightType',
              ( ['out', 'retval'], POINTER(WdFramesetSizeType), 'prop' )),
    COMMETHOD([dispid(2), 'propput'], HRESULT, 'HeightType',
              ( ['in'], WdFramesetSizeType, 'prop' )),
    COMMETHOD([dispid(3), 'propget'], HRESULT, 'Width',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(3), 'propput'], HRESULT, 'Width',
              ( ['in'], c_int, 'prop' )),
    COMMETHOD([dispid(4), 'propget'], HRESULT, 'Height',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(4), 'propput'], HRESULT, 'Height',
              ( ['in'], c_int, 'prop' )),
    COMMETHOD([dispid(5), 'propget'], HRESULT, 'ChildFramesetCount',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(6), 'propget'], HRESULT, 'ChildFramesetItem',
              ( ['in'], c_int, 'Index' ),
              ( ['out', 'retval'], POINTER(POINTER(Frameset)), 'prop' )),
    COMMETHOD([dispid(20), 'propget'], HRESULT, 'FramesetBorderWidth',
              ( ['out', 'retval'], POINTER(c_float), 'prop' )),
    COMMETHOD([dispid(20), 'propput'], HRESULT, 'FramesetBorderWidth',
              ( ['in'], c_float, 'prop' )),
    COMMETHOD([dispid(21), 'propget'], HRESULT, 'FramesetBorderColor',
              ( ['out', 'retval'], POINTER(WdColor), 'prop' )),
    COMMETHOD([dispid(21), 'propput'], HRESULT, 'FramesetBorderColor',
              ( ['in'], WdColor, 'prop' )),
    COMMETHOD([dispid(30), 'propget'], HRESULT, 'FrameScrollbarType',
              ( ['out', 'retval'], POINTER(WdScrollbarType), 'prop' )),
    COMMETHOD([dispid(30), 'propput'], HRESULT, 'FrameScrollbarType',
              ( ['in'], WdScrollbarType, 'prop' )),
    COMMETHOD([dispid(31), 'propget'], HRESULT, 'FrameResizable',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'prop' )),
    COMMETHOD([dispid(31), 'propput'], HRESULT, 'FrameResizable',
              ( ['in'], VARIANT_BOOL, 'prop' )),
    COMMETHOD([dispid(34), 'propget'], HRESULT, 'FrameName',
              ( ['out', 'retval'], POINTER(BSTR), 'prop' )),
    COMMETHOD([dispid(34), 'propput'], HRESULT, 'FrameName',
              ( ['in'], BSTR, 'prop' )),
    COMMETHOD([dispid(35), 'propget'], HRESULT, 'FrameDisplayBorders',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'prop' )),
    COMMETHOD([dispid(35), 'propput'], HRESULT, 'FrameDisplayBorders',
              ( ['in'], VARIANT_BOOL, 'prop' )),
    COMMETHOD([dispid(36), 'propget'], HRESULT, 'FrameDefaultURL',
              ( ['out', 'retval'], POINTER(BSTR), 'prop' )),
    COMMETHOD([dispid(36), 'propput'], HRESULT, 'FrameDefaultURL',
              ( ['in'], BSTR, 'prop' )),
    COMMETHOD([dispid(37), 'propget'], HRESULT, 'FrameLinkToFile',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'prop' )),
    COMMETHOD([dispid(37), 'propput'], HRESULT, 'FrameLinkToFile',
              ( ['in'], VARIANT_BOOL, 'prop' )),
    COMMETHOD([dispid(50)], HRESULT, 'AddNewFrame',
              ( ['in'], WdFramesetNewFrameLocation, 'Where' ),
              ( ['out', 'retval'], POINTER(POINTER(Frameset)), 'prop' )),
    COMMETHOD([dispid(51)], HRESULT, 'Delete'),
]
################################################################
## code template for Frameset implementation
##class Frameset_Impl(object):
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Creator(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def _NewEnum(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def ParentFrameset(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Type(self):
##        '-no docstring-'
##        #return prop
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    WidthType = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    HeightType = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    Width = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    Height = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def ChildFramesetCount(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def ChildFramesetItem(self, Index):
##        '-no docstring-'
##        #return prop
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    FramesetBorderWidth = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    FramesetBorderColor = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    FrameScrollbarType = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    FrameResizable = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    FrameName = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    FrameDisplayBorders = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    FrameDefaultURL = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    FrameLinkToFile = property(_get, _set, doc = _set.__doc__)
##
##    def AddNewFrame(self, Where):
##        '-no docstring-'
##        #return prop
##
##    def Delete(self):
##        '-no docstring-'
##        #return 
##

OMathRecognizedFunction._methods_ = [
    COMMETHOD([dispid(100), 'propget'], HRESULT, 'Application',
              ( ['out', 'retval'], POINTER(POINTER(Application)), 'prop' )),
    COMMETHOD([dispid(101), 'propget'], HRESULT, 'Creator',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(102), 'propget'], HRESULT, 'Parent',
              ( ['out', 'retval'], POINTER(POINTER(IDispatch)), 'prop' )),
    COMMETHOD([dispid(103), 'propget'], HRESULT, 'Index',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(104), 'propget'], HRESULT, 'Name',
              ( ['out', 'retval'], POINTER(BSTR), 'prop' )),
    COMMETHOD([dispid(200)], HRESULT, 'Delete'),
]
################################################################
## code template for OMathRecognizedFunction implementation
##class OMathRecognizedFunction_Impl(object):
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Creator(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Index(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Name(self):
##        '-no docstring-'
##        #return prop
##
##    def Delete(self):
##        '-no docstring-'
##        #return 
##

class OMathScrSub(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{98DFBD12-96CB-4F07-90EA-749FF1D6B89D}')
    _idlflags_ = ['dual', 'nonextensible', 'oleautomation']
OMathScrSub._methods_ = [
    COMMETHOD([dispid(100), 'propget'], HRESULT, 'Application',
              ( ['out', 'retval'], POINTER(POINTER(Application)), 'prop' )),
    COMMETHOD([dispid(101), 'propget'], HRESULT, 'Creator',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(102), 'propget'], HRESULT, 'Parent',
              ( ['out', 'retval'], POINTER(POINTER(IDispatch)), 'prop' )),
    COMMETHOD([dispid(103), 'propget'], HRESULT, 'E',
              ( ['out', 'retval'], POINTER(POINTER(OMath)), 'prop' )),
    COMMETHOD([dispid(104), 'propget'], HRESULT, 'Sub',
              ( ['out', 'retval'], POINTER(POINTER(OMath)), 'prop' )),
]
################################################################
## code template for OMathScrSub implementation
##class OMathScrSub_Impl(object):
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Creator(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def E(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Sub(self):
##        '-no docstring-'
##        #return prop
##

class Pages(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{91807402-6C6F-47CD-B8FA-C42FEE8EE924}')
    _idlflags_ = ['dual', 'nonextensible', 'oleautomation']
Pane._methods_ = [
    COMMETHOD([dispid(1000), 'propget'], HRESULT, 'Application',
              ( ['out', 'retval'], POINTER(POINTER(Application)), 'prop' )),
    COMMETHOD([dispid(1001), 'propget'], HRESULT, 'Creator',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(1002), 'propget'], HRESULT, 'Parent',
              ( ['out', 'retval'], POINTER(POINTER(IDispatch)), 'prop' )),
    COMMETHOD([dispid(1), 'propget'], HRESULT, 'Document',
              ( ['out', 'retval'], POINTER(POINTER(Document)), 'prop' )),
    COMMETHOD([dispid(3), 'propget'], HRESULT, 'Selection',
              ( ['out', 'retval'], POINTER(POINTER(Selection)), 'prop' )),
    COMMETHOD([dispid(4), 'propget'], HRESULT, 'DisplayRulers',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'prop' )),
    COMMETHOD([dispid(4), 'propput'], HRESULT, 'DisplayRulers',
              ( ['in'], VARIANT_BOOL, 'prop' )),
    COMMETHOD([dispid(5), 'propget'], HRESULT, 'DisplayVerticalRuler',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'prop' )),
    COMMETHOD([dispid(5), 'propput'], HRESULT, 'DisplayVerticalRuler',
              ( ['in'], VARIANT_BOOL, 'prop' )),
    COMMETHOD([dispid(7), 'propget'], HRESULT, 'Zooms',
              ( ['out', 'retval'], POINTER(POINTER(Zooms)), 'prop' )),
    COMMETHOD([dispid(9), 'propget'], HRESULT, 'Index',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(10), 'propget'], HRESULT, 'View',
              ( ['out', 'retval'], POINTER(POINTER(View)), 'prop' )),
    COMMETHOD([dispid(11), 'propget'], HRESULT, 'Next',
              ( ['out', 'retval'], POINTER(POINTER(Pane)), 'prop' )),
    COMMETHOD([dispid(12), 'propget'], HRESULT, 'Previous',
              ( ['out', 'retval'], POINTER(POINTER(Pane)), 'prop' )),
    COMMETHOD([dispid(13), 'propget'], HRESULT, 'HorizontalPercentScrolled',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(13), 'propput'], HRESULT, 'HorizontalPercentScrolled',
              ( ['in'], c_int, 'prop' )),
    COMMETHOD([dispid(14), 'propget'], HRESULT, 'VerticalPercentScrolled',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(14), 'propput'], HRESULT, 'VerticalPercentScrolled',
              ( ['in'], c_int, 'prop' )),
    COMMETHOD([dispid(15), 'propget'], HRESULT, 'MinimumFontSize',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(15), 'propput'], HRESULT, 'MinimumFontSize',
              ( ['in'], c_int, 'prop' )),
    COMMETHOD([dispid(16), 'hidden', 'propget'], HRESULT, 'BrowseToWindow',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'prop' )),
    COMMETHOD([dispid(16), 'hidden', 'propput'], HRESULT, 'BrowseToWindow',
              ( ['in'], VARIANT_BOOL, 'prop' )),
    COMMETHOD([dispid(17), 'propget'], HRESULT, 'BrowseWidth',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(100)], HRESULT, 'Activate'),
    COMMETHOD([dispid(101)], HRESULT, 'Close'),
    COMMETHOD([dispid(102)], HRESULT, 'LargeScroll',
              ( ['in', 'optional'], POINTER(VARIANT), 'Down' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'Up' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'ToRight' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'ToLeft' )),
    COMMETHOD([dispid(103)], HRESULT, 'SmallScroll',
              ( ['in', 'optional'], POINTER(VARIANT), 'Down' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'Up' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'ToRight' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'ToLeft' )),
    COMMETHOD([dispid(104)], HRESULT, 'AutoScroll',
              ( ['in'], c_int, 'Velocity' )),
    COMMETHOD([dispid(105)], HRESULT, 'PageScroll',
              ( ['in', 'optional'], POINTER(VARIANT), 'Down' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'Up' )),
    COMMETHOD([dispid(106)], HRESULT, 'NewFrameset'),
    COMMETHOD([dispid(107)], HRESULT, 'TOCInFrameset'),
    COMMETHOD([dispid(18), 'propget'], HRESULT, 'Frameset',
              ( ['out', 'retval'], POINTER(POINTER(Frameset)), 'prop' )),
    COMMETHOD([dispid(19), 'propget'], HRESULT, 'Pages',
              ( ['out', 'retval'], POINTER(POINTER(Pages)), 'prop' )),
]
################################################################
## code template for Pane implementation
##class Pane_Impl(object):
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Creator(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Document(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Selection(self):
##        '-no docstring-'
##        #return prop
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    DisplayRulers = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    DisplayVerticalRuler = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Zooms(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Index(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def View(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Next(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Previous(self):
##        '-no docstring-'
##        #return prop
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    HorizontalPercentScrolled = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    VerticalPercentScrolled = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    MinimumFontSize = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    BrowseToWindow = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def BrowseWidth(self):
##        '-no docstring-'
##        #return prop
##
##    def Activate(self):
##        '-no docstring-'
##        #return 
##
##    def Close(self):
##        '-no docstring-'
##        #return 
##
##    def LargeScroll(self, Down, Up, ToRight, ToLeft):
##        '-no docstring-'
##        #return 
##
##    def SmallScroll(self, Down, Up, ToRight, ToLeft):
##        '-no docstring-'
##        #return 
##
##    def AutoScroll(self, Velocity):
##        '-no docstring-'
##        #return 
##
##    def PageScroll(self, Down, Up):
##        '-no docstring-'
##        #return 
##
##    def NewFrameset(self):
##        '-no docstring-'
##        #return 
##
##    def TOCInFrameset(self):
##        '-no docstring-'
##        #return 
##
##    @property
##    def Frameset(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Pages(self):
##        '-no docstring-'
##        #return prop
##

class Breaks(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{16BE9309-D708-4322-BB1A-B056F58D17EA}')
    _idlflags_ = ['dual', 'nonextensible', 'oleautomation']
class Break(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{79635BF1-BD1D-4B3F-A520-C1106F1AAAD8}')
    _idlflags_ = ['dual', 'nonextensible', 'oleautomation']
Breaks._methods_ = [
    COMMETHOD([dispid(-4), 'nonbrowsable', 'propget'], HRESULT, '_NewEnum',
              ( ['out', 'retval'], POINTER(POINTER(IUnknown)), 'prop' )),
    COMMETHOD([dispid(2), 'propget'], HRESULT, 'Count',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(1000), 'propget'], HRESULT, 'Application',
              ( ['out', 'retval'], POINTER(POINTER(Application)), 'prop' )),
    COMMETHOD([dispid(1001), 'propget'], HRESULT, 'Creator',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(1002), 'propget'], HRESULT, 'Parent',
              ( ['out', 'retval'], POINTER(POINTER(IDispatch)), 'prop' )),
    COMMETHOD([dispid(0)], HRESULT, 'Item',
              ( ['in'], c_int, 'Index' ),
              ( ['out', 'retval'], POINTER(POINTER(Break)), 'prop' )),
]
################################################################
## code template for Breaks implementation
##class Breaks_Impl(object):
##    @property
##    def _NewEnum(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Count(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Creator(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return prop
##
##    def Item(self, Index):
##        '-no docstring-'
##        #return prop
##

class CustomLabel(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{00020915-0000-0000-C000-000000000046}')
    _idlflags_ = ['dual', 'nonextensible', 'oleautomation']
CustomLabels._methods_ = [
    COMMETHOD([dispid(1000), 'propget'], HRESULT, 'Application',
              ( ['out', 'retval'], POINTER(POINTER(Application)), 'prop' )),
    COMMETHOD([dispid(1001), 'propget'], HRESULT, 'Creator',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(1002), 'propget'], HRESULT, 'Parent',
              ( ['out', 'retval'], POINTER(POINTER(IDispatch)), 'prop' )),
    COMMETHOD([dispid(-4), 'nonbrowsable', 'propget'], HRESULT, '_NewEnum',
              ( ['out', 'retval'], POINTER(POINTER(IUnknown)), 'prop' )),
    COMMETHOD([dispid(1), 'propget'], HRESULT, 'Count',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(0)], HRESULT, 'Item',
              ( ['in'], POINTER(VARIANT), 'Index' ),
              ( ['out', 'retval'], POINTER(POINTER(CustomLabel)), 'prop' )),
    COMMETHOD([dispid(101)], HRESULT, 'Add',
              ( ['in'], BSTR, 'Name' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'DotMatrix' ),
              ( ['out', 'retval'], POINTER(POINTER(CustomLabel)), 'prop' )),
]
################################################################
## code template for CustomLabels implementation
##class CustomLabels_Impl(object):
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Creator(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def _NewEnum(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Count(self):
##        '-no docstring-'
##        #return prop
##
##    def Item(self, Index):
##        '-no docstring-'
##        #return prop
##
##    def Add(self, Name, DotMatrix):
##        '-no docstring-'
##        #return prop
##

class EmailSignatureEntry(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{000209E6-0000-0000-C000-000000000046}')
    _idlflags_ = ['dual', 'nonextensible', 'oleautomation']
EmailSignatureEntry._methods_ = [
    COMMETHOD([dispid(1000), 'propget'], HRESULT, 'Application',
              ( ['out', 'retval'], POINTER(POINTER(Application)), 'prop' )),
    COMMETHOD([dispid(1001), 'propget'], HRESULT, 'Creator',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(1002), 'propget'], HRESULT, 'Parent',
              ( ['out', 'retval'], POINTER(POINTER(IDispatch)), 'prop' )),
    COMMETHOD([dispid(1), 'propget'], HRESULT, 'Index',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(2), 'propget'], HRESULT, 'Name',
              ( ['out', 'retval'], POINTER(BSTR), 'prop' )),
    COMMETHOD([dispid(2), 'propput'], HRESULT, 'Name',
              ( ['in'], BSTR, 'prop' )),
    COMMETHOD([dispid(101)], HRESULT, 'Delete'),
]
################################################################
## code template for EmailSignatureEntry implementation
##class EmailSignatureEntry_Impl(object):
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Creator(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Index(self):
##        '-no docstring-'
##        #return prop
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    Name = property(_get, _set, doc = _set.__doc__)
##
##    def Delete(self):
##        '-no docstring-'
##        #return 
##


# values for enumeration 'XlErrorBarDirection'
xlChartX = -4168
xlChartY = 1
XlErrorBarDirection = c_int # enum

# values for enumeration 'WdEncloseStyle'
wdEncloseStyleNone = 0
wdEncloseStyleSmall = 1
wdEncloseStyleLarge = 2
WdEncloseStyle = c_int # enum

# values for enumeration 'WdSortSeparator'
wdSortSeparateByTabs = 0
wdSortSeparateByCommas = 1
wdSortSeparateByDefaultTableSeparator = 2
WdSortSeparator = c_int # enum

# values for enumeration 'WdCalendarTypeBi'
wdCalendarTypeBidi = 99
wdCalendarTypeGregorian = 100
WdCalendarTypeBi = c_int # enum

# values for enumeration 'WdEnclosureType'
wdEnclosureCircle = 0
wdEnclosureSquare = 1
wdEnclosureTriangle = 2
wdEnclosureDiamond = 3
WdEnclosureType = c_int # enum

# values for enumeration 'WdMultipleWordConversionsMode'
wdHangulToHanja = 0
wdHanjaToHangul = 1
WdMultipleWordConversionsMode = c_int # enum
class Trendlines(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{54B7061A-D56C-40E5-B85B-58146446C782}')
    _idlflags_ = ['dual', 'nonextensible', 'oleautomation']
Trendlines._methods_ = [
    COMMETHOD([dispid(150), 'propget'], HRESULT, 'Parent',
              ( ['out', 'retval'], POINTER(POINTER(IDispatch)), 'prop' )),
    COMMETHOD([dispid(181)], HRESULT, 'Add',
              ( ['in', 'optional'], XlTrendlineType, 'Type', -4132 ),
              ( ['in', 'optional'], VARIANT, 'Order' ),
              ( ['in', 'optional'], VARIANT, 'Period' ),
              ( ['in', 'optional'], VARIANT, 'Forward' ),
              ( ['in', 'optional'], VARIANT, 'Backward' ),
              ( ['in', 'optional'], VARIANT, 'Intercept' ),
              ( ['in', 'optional'], VARIANT, 'DisplayEquation' ),
              ( ['in', 'optional'], VARIANT, 'DisplayRSquared' ),
              ( ['in', 'optional'], VARIANT, 'Name' ),
              ( ['out', 'retval'], POINTER(POINTER(Trendline)), 'prop' )),
    COMMETHOD([dispid(118), 'propget'], HRESULT, 'Count',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(0)], HRESULT, 'Item',
              ( ['in', 'optional'], VARIANT, 'Index' ),
              ( ['out', 'retval'], POINTER(POINTER(Trendline)), 'prop' )),
    COMMETHOD([dispid(-4), 'nonbrowsable'], HRESULT, '_NewEnum',
              ( ['out', 'retval'], POINTER(POINTER(IUnknown)), 'prop' )),
    COMMETHOD([dispid(148), 'propget'], HRESULT, 'Application',
              ( ['out', 'retval'], POINTER(POINTER(IDispatch)), 'prop' )),
    COMMETHOD([dispid(149), 'propget'], HRESULT, 'Creator',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(1610743815), 'nonbrowsable'], HRESULT, '_Default',
              ( ['in', 'optional'], VARIANT, 'Index' ),
              ( ['out', 'retval'], POINTER(POINTER(Trendline)), 'prop' )),
]
################################################################
## code template for Trendlines implementation
##class Trendlines_Impl(object):
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return prop
##
##    def Add(self, Type, Order, Period, Forward, Backward, Intercept, DisplayEquation, DisplayRSquared, Name):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Count(self):
##        '-no docstring-'
##        #return prop
##
##    def Item(self, Index):
##        '-no docstring-'
##        #return prop
##
##    def _NewEnum(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Creator(self):
##        '-no docstring-'
##        #return prop
##
##    def _Default(self, Index):
##        '-no docstring-'
##        #return prop
##


# values for enumeration 'WdOpenFormat'
wdOpenFormatAuto = 0
wdOpenFormatDocument = 1
wdOpenFormatTemplate = 2
wdOpenFormatRTF = 3
wdOpenFormatText = 4
wdOpenFormatUnicodeText = 5
wdOpenFormatEncodedText = 5
wdOpenFormatAllWord = 6
wdOpenFormatWebPages = 7
wdOpenFormatXML = 8
wdOpenFormatXMLDocument = 9
wdOpenFormatXMLDocumentMacroEnabled = 10
wdOpenFormatXMLTemplate = 11
wdOpenFormatXMLTemplateMacroEnabled = 12
wdOpenFormatDocument97 = 1
wdOpenFormatTemplate97 = 2
wdOpenFormatAllWordTemplates = 13
wdOpenFormatXMLDocumentSerialized = 14
wdOpenFormatXMLDocumentMacroEnabledSerialized = 15
wdOpenFormatXMLTemplateSerialized = 16
wdOpenFormatXMLTemplateMacroEnabledSerialized = 17
wdOpenFormatOpenDocumentText = 18
WdOpenFormat = c_int # enum

# values for enumeration 'WdMailerPriority'
wdPriorityNormal = 1
wdPriorityLow = 2
wdPriorityHigh = 3
WdMailerPriority = c_int # enum
class OMathBreaks(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{E2E0F3A7-204C-40C5-BAA5-290F374FDF5A}')
    _idlflags_ = ['dual', 'nonextensible', 'oleautomation']
class OMathBreak(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{65E515D5-F50B-4951-8F38-FA6AC8707387}')
    _idlflags_ = ['dual', 'nonextensible', 'oleautomation']
OMathBreaks._methods_ = [
    COMMETHOD([dispid(101), 'propget'], HRESULT, 'Application',
              ( ['out', 'retval'], POINTER(POINTER(Application)), 'prop' )),
    COMMETHOD([dispid(102), 'propget'], HRESULT, 'Creator',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(103), 'propget'], HRESULT, 'Parent',
              ( ['out', 'retval'], POINTER(POINTER(IDispatch)), 'prop' )),
    COMMETHOD([dispid(104), 'propget'], HRESULT, 'Count',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(0)], HRESULT, 'Item',
              ( ['in'], c_int, 'Index' ),
              ( ['out', 'retval'], POINTER(POINTER(OMathBreak)), 'prop' )),
    COMMETHOD([dispid(105)], HRESULT, 'Add',
              ( ['in'], POINTER(Range), 'Range' ),
              ( ['out', 'retval'], POINTER(POINTER(OMathBreak)), 'prop' )),
]
################################################################
## code template for OMathBreaks implementation
##class OMathBreaks_Impl(object):
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Creator(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Count(self):
##        '-no docstring-'
##        #return prop
##
##    def Item(self, Index):
##        '-no docstring-'
##        #return prop
##
##    def Add(self, Range):
##        '-no docstring-'
##        #return prop
##


# values for enumeration 'WdTableFieldSeparator'
wdSeparateByParagraphs = 0
wdSeparateByTabs = 1
wdSeparateByCommas = 2
wdSeparateByDefaultListSeparator = 3
WdTableFieldSeparator = c_int # enum

# values for enumeration 'WdTabAlignment'
wdAlignTabLeft = 0
wdAlignTabCenter = 1
wdAlignTabRight = 2
wdAlignTabDecimal = 3
wdAlignTabBar = 4
wdAlignTabList = 6
WdTabAlignment = c_int # enum
TabStop._methods_ = [
    COMMETHOD([dispid(1000), 'propget'], HRESULT, 'Application',
              ( ['out', 'retval'], POINTER(POINTER(Application)), 'prop' )),
    COMMETHOD([dispid(1001), 'propget'], HRESULT, 'Creator',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(1002), 'propget'], HRESULT, 'Parent',
              ( ['out', 'retval'], POINTER(POINTER(IDispatch)), 'prop' )),
    COMMETHOD([dispid(100), 'propget'], HRESULT, 'Alignment',
              ( ['out', 'retval'], POINTER(WdTabAlignment), 'prop' )),
    COMMETHOD([dispid(100), 'propput'], HRESULT, 'Alignment',
              ( ['in'], WdTabAlignment, 'prop' )),
    COMMETHOD([dispid(101), 'propget'], HRESULT, 'Leader',
              ( ['out', 'retval'], POINTER(WdTabLeader), 'prop' )),
    COMMETHOD([dispid(101), 'propput'], HRESULT, 'Leader',
              ( ['in'], WdTabLeader, 'prop' )),
    COMMETHOD([dispid(102), 'propget'], HRESULT, 'Position',
              ( ['out', 'retval'], POINTER(c_float), 'prop' )),
    COMMETHOD([dispid(102), 'propput'], HRESULT, 'Position',
              ( ['in'], c_float, 'prop' )),
    COMMETHOD([dispid(103), 'propget'], HRESULT, 'CustomTab',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'prop' )),
    COMMETHOD([dispid(104), 'propget'], HRESULT, 'Next',
              ( ['out', 'retval'], POINTER(POINTER(TabStop)), 'prop' )),
    COMMETHOD([dispid(105), 'propget'], HRESULT, 'Previous',
              ( ['out', 'retval'], POINTER(POINTER(TabStop)), 'prop' )),
    COMMETHOD([dispid(200)], HRESULT, 'Clear'),
]
################################################################
## code template for TabStop implementation
##class TabStop_Impl(object):
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Creator(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return prop
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    Alignment = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    Leader = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    Position = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def CustomTab(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Next(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Previous(self):
##        '-no docstring-'
##        #return prop
##
##    def Clear(self):
##        '-no docstring-'
##        #return 
##


# values for enumeration 'XlDataLabelPosition'
xlLabelPositionCenter = -4108
xlLabelPositionAbove = 0
xlLabelPositionBelow = 1
xlLabelPositionLeft = -4131
xlLabelPositionRight = -4152
xlLabelPositionOutsideEnd = 2
xlLabelPositionInsideEnd = 3
xlLabelPositionInsideBase = 4
xlLabelPositionBestFit = 5
xlLabelPositionMixed = 6
xlLabelPositionCustom = 7
XlDataLabelPosition = c_int # enum
DataLabel._methods_ = [
    COMMETHOD([dispid(150), 'propget'], HRESULT, 'Parent',
              ( ['out', 'retval'], POINTER(POINTER(IDispatch)), 'prop' )),
    COMMETHOD([dispid(110), 'propget'], HRESULT, 'Name',
              ( ['out', 'retval'], POINTER(BSTR), 'prop' )),
    COMMETHOD([dispid(235)], HRESULT, 'Select',
              ( ['out', 'retval'], POINTER(VARIANT), 'prop' )),
    COMMETHOD([dispid(128), 'hidden', 'propget'], HRESULT, 'Border',
              ( ['out', 'retval'], POINTER(POINTER(ChartBorder)), 'prop' )),
    COMMETHOD([dispid(117)], HRESULT, 'Delete',
              ( ['out', 'retval'], POINTER(VARIANT), 'prop' )),
    COMMETHOD([dispid(129), 'hidden', 'propget'], HRESULT, 'Interior',
              ( ['out', 'retval'], POINTER(POINTER(Interior)), 'prop' )),
    COMMETHOD([dispid(1663), 'hidden', 'propget'], HRESULT, 'Fill',
              ( ['out', 'retval'], POINTER(POINTER(ChartFillFormat)), 'prop' )),
    COMMETHOD([dispid(139), 'propget'], HRESULT, 'Caption',
              ( ['out', 'retval'], POINTER(BSTR), 'prop' )),
    COMMETHOD([dispid(139), 'propput'], HRESULT, 'Caption',
              ( ['in'], BSTR, 'prop' )),
    COMMETHOD([dispid(603), 'propget'], HRESULT, 'Characters',
              ( ['in', 'optional'], VARIANT, 'Start' ),
              ( ['in', 'optional'], VARIANT, 'Length' ),
              ( ['out', 'retval'], POINTER(POINTER(ChartCharacters)), 'prop' )),
    COMMETHOD([dispid(146), 'hidden', 'propget'], HRESULT, 'Font',
              ( ['out', 'retval'], POINTER(POINTER(ChartFont)), 'prop' )),
    COMMETHOD([dispid(136), 'propget'], HRESULT, 'HorizontalAlignment',
              ( ['out', 'retval'], POINTER(VARIANT), 'prop' )),
    COMMETHOD([dispid(136), 'propput'], HRESULT, 'HorizontalAlignment',
              ( ['in'], VARIANT, 'prop' )),
    COMMETHOD([dispid(127), 'propget'], HRESULT, 'Left',
              ( ['out', 'retval'], POINTER(c_double), 'prop' )),
    COMMETHOD([dispid(127), 'propput'], HRESULT, 'Left',
              ( ['in'], c_double, 'prop' )),
    COMMETHOD([dispid(134), 'propget'], HRESULT, 'Orientation',
              ( ['out', 'retval'], POINTER(VARIANT), 'prop' )),
    COMMETHOD([dispid(134), 'propput'], HRESULT, 'Orientation',
              ( ['in'], VARIANT, 'prop' )),
    COMMETHOD([dispid(103), 'propget'], HRESULT, 'Shadow',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'prop' )),
    COMMETHOD([dispid(103), 'propput'], HRESULT, 'Shadow',
              ( ['in'], VARIANT_BOOL, 'prop' )),
    COMMETHOD([dispid(138), 'propget'], HRESULT, 'Text',
              ( ['out', 'retval'], POINTER(BSTR), 'prop' )),
    COMMETHOD([dispid(138), 'propput'], HRESULT, 'Text',
              ( ['in'], BSTR, 'prop' )),
    COMMETHOD([dispid(126), 'propget'], HRESULT, 'Top',
              ( ['out', 'retval'], POINTER(c_double), 'prop' )),
    COMMETHOD([dispid(126), 'propput'], HRESULT, 'Top',
              ( ['in'], c_double, 'prop' )),
    COMMETHOD([dispid(137), 'propget'], HRESULT, 'VerticalAlignment',
              ( ['out', 'retval'], POINTER(VARIANT), 'prop' )),
    COMMETHOD([dispid(137), 'propput'], HRESULT, 'VerticalAlignment',
              ( ['in'], VARIANT, 'prop' )),
    COMMETHOD([dispid(975), 'propget'], HRESULT, 'ReadingOrder',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(975), 'propput'], HRESULT, 'ReadingOrder',
              ( ['in'], c_int, 'prop' )),
    COMMETHOD([dispid(1525), 'hidden', 'propget'], HRESULT, 'AutoScaleFont',
              ( ['out', 'retval'], POINTER(VARIANT), 'prop' )),
    COMMETHOD([dispid(1525), 'hidden', 'propput'], HRESULT, 'AutoScaleFont',
              ( ['in'], VARIANT, 'prop' )),
    COMMETHOD([dispid(135), 'propget'], HRESULT, 'AutoText',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'prop' )),
    COMMETHOD([dispid(135), 'propput'], HRESULT, 'AutoText',
              ( ['in'], VARIANT_BOOL, 'prop' )),
    COMMETHOD([dispid(193), 'propget'], HRESULT, 'NumberFormat',
              ( ['out', 'retval'], POINTER(BSTR), 'prop' )),
    COMMETHOD([dispid(193), 'propput'], HRESULT, 'NumberFormat',
              ( ['in'], BSTR, 'prop' )),
    COMMETHOD([dispid(194), 'propget'], HRESULT, 'NumberFormatLinked',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'prop' )),
    COMMETHOD([dispid(194), 'propput'], HRESULT, 'NumberFormatLinked',
              ( ['in'], VARIANT_BOOL, 'prop' )),
    COMMETHOD([dispid(1097), 'propget'], HRESULT, 'NumberFormatLocal',
              ( ['out', 'retval'], POINTER(VARIANT), 'prop' )),
    COMMETHOD([dispid(1097), 'propput'], HRESULT, 'NumberFormatLocal',
              ( ['in'], VARIANT, 'prop' )),
    COMMETHOD([dispid(171), 'propget'], HRESULT, 'ShowLegendKey',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'prop' )),
    COMMETHOD([dispid(171), 'propput'], HRESULT, 'ShowLegendKey',
              ( ['in'], VARIANT_BOOL, 'prop' )),
    COMMETHOD([dispid(108), 'hidden', 'propget'], HRESULT, 'Type',
              ( ['out', 'retval'], POINTER(VARIANT), 'prop' )),
    COMMETHOD([dispid(108), 'hidden', 'propput'], HRESULT, 'Type',
              ( ['in'], VARIANT, 'prop' )),
    COMMETHOD([dispid(133), 'propget'], HRESULT, 'Position',
              ( ['out', 'retval'], POINTER(XlDataLabelPosition), 'prop' )),
    COMMETHOD([dispid(133), 'propput'], HRESULT, 'Position',
              ( ['in'], XlDataLabelPosition, 'prop' )),
    COMMETHOD([dispid(2022), 'propget'], HRESULT, 'ShowSeriesName',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'prop' )),
    COMMETHOD([dispid(2022), 'propput'], HRESULT, 'ShowSeriesName',
              ( ['in'], VARIANT_BOOL, 'prop' )),
    COMMETHOD([dispid(2023), 'propget'], HRESULT, 'ShowCategoryName',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'prop' )),
    COMMETHOD([dispid(2023), 'propput'], HRESULT, 'ShowCategoryName',
              ( ['in'], VARIANT_BOOL, 'prop' )),
    COMMETHOD([dispid(2024), 'propget'], HRESULT, 'ShowValue',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'prop' )),
    COMMETHOD([dispid(2024), 'propput'], HRESULT, 'ShowValue',
              ( ['in'], VARIANT_BOOL, 'prop' )),
    COMMETHOD([dispid(2025), 'propget'], HRESULT, 'ShowPercentage',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'prop' )),
    COMMETHOD([dispid(2025), 'propput'], HRESULT, 'ShowPercentage',
              ( ['in'], VARIANT_BOOL, 'prop' )),
    COMMETHOD([dispid(2026), 'propget'], HRESULT, 'ShowBubbleSize',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'prop' )),
    COMMETHOD([dispid(2026), 'propput'], HRESULT, 'ShowBubbleSize',
              ( ['in'], VARIANT_BOOL, 'prop' )),
    COMMETHOD([dispid(2027), 'propget'], HRESULT, 'Separator',
              ( ['out', 'retval'], POINTER(VARIANT), 'prop' )),
    COMMETHOD([dispid(2027), 'propput'], HRESULT, 'Separator',
              ( ['in'], VARIANT, 'prop' )),
    COMMETHOD([dispid(1610743863), 'propget'], HRESULT, 'Format',
              ( ['out', 'retval'], POINTER(POINTER(ChartFormat)), 'prop' )),
    COMMETHOD([dispid(148), 'propget'], HRESULT, 'Application',
              ( ['out', 'retval'], POINTER(POINTER(IDispatch)), 'prop' )),
    COMMETHOD([dispid(149), 'propget'], HRESULT, 'Creator',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(1610743864), 'hidden', 'propget'], HRESULT, '_Height',
              ( ['out', 'retval'], POINTER(c_double), 'prop' )),
    COMMETHOD([dispid(2030), 'hidden', 'propget'], HRESULT, '_Width',
              ( ['out', 'retval'], POINTER(c_double), 'prop' )),
    COMMETHOD([dispid(2031), 'propget'], HRESULT, 'Formula',
              ( ['out', 'retval'], POINTER(BSTR), 'prop' )),
    COMMETHOD([dispid(2031), 'propput'], HRESULT, 'Formula',
              ( ['in'], BSTR, 'prop' )),
    COMMETHOD([dispid(2032), 'propget'], HRESULT, 'FormulaR1C1',
              ( ['out', 'retval'], POINTER(BSTR), 'prop' )),
    COMMETHOD([dispid(2032), 'propput'], HRESULT, 'FormulaR1C1',
              ( ['in'], BSTR, 'prop' )),
    COMMETHOD([dispid(2033), 'propget'], HRESULT, 'FormulaLocal',
              ( ['out', 'retval'], POINTER(BSTR), 'prop' )),
    COMMETHOD([dispid(2033), 'propput'], HRESULT, 'FormulaLocal',
              ( ['in'], BSTR, 'prop' )),
    COMMETHOD([dispid(2034), 'propget'], HRESULT, 'FormulaR1C1Local',
              ( ['out', 'retval'], POINTER(BSTR), 'prop' )),
    COMMETHOD([dispid(2034), 'propput'], HRESULT, 'FormulaR1C1Local',
              ( ['in'], BSTR, 'prop' )),
    COMMETHOD([dispid(2035), 'propget'], HRESULT, 'ShowRange',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'prop' )),
    COMMETHOD([dispid(2035), 'propput'], HRESULT, 'ShowRange',
              ( ['in'], VARIANT_BOOL, 'prop' )),
    COMMETHOD([dispid(2036), 'propget'], HRESULT, 'Height',
              ( ['out', 'retval'], POINTER(c_double), 'prop' )),
    COMMETHOD([dispid(2036), 'propput'], HRESULT, 'Height',
              ( ['in'], c_double, 'prop' )),
    COMMETHOD([dispid(2037), 'propget'], HRESULT, 'Width',
              ( ['out', 'retval'], POINTER(c_double), 'prop' )),
    COMMETHOD([dispid(2037), 'propput'], HRESULT, 'Width',
              ( ['in'], c_double, 'prop' )),
    COMMETHOD([dispid(253)], HRESULT, 'SetProperty',
              ( ['in'], BSTR, 'ID' ),
              ( ['in'], VARIANT, 'Value' )),
    COMMETHOD([dispid(254)], HRESULT, 'GetProperty',
              ( ['in'], BSTR, 'ID' ),
              ( ['out', 'retval'], POINTER(VARIANT), 'prop' )),
]
################################################################
## code template for DataLabel implementation
##class DataLabel_Impl(object):
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Name(self):
##        '-no docstring-'
##        #return prop
##
##    def Select(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Border(self):
##        '-no docstring-'
##        #return prop
##
##    def Delete(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Interior(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Fill(self):
##        '-no docstring-'
##        #return prop
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    Caption = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Characters(self, Start, Length):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Font(self):
##        '-no docstring-'
##        #return prop
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    HorizontalAlignment = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    Left = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    Orientation = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    Shadow = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    Text = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    Top = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    VerticalAlignment = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    ReadingOrder = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    AutoScaleFont = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    AutoText = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    NumberFormat = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    NumberFormatLinked = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    NumberFormatLocal = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    ShowLegendKey = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    Type = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    Position = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    ShowSeriesName = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    ShowCategoryName = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    ShowValue = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    ShowPercentage = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    ShowBubbleSize = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    Separator = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Format(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Creator(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def _Height(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def _Width(self):
##        '-no docstring-'
##        #return prop
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    Formula = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    FormulaR1C1 = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    FormulaLocal = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    FormulaR1C1Local = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    ShowRange = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    Height = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    Width = property(_get, _set, doc = _set.__doc__)
##
##    def SetProperty(self, ID, Value):
##        '-no docstring-'
##        #return 
##
##    def GetProperty(self, ID):
##        '-no docstring-'
##        #return prop
##


# values for enumeration 'WdMailMergeDestination'
wdSendToNewDocument = 0
wdSendToPrinter = 1
wdSendToEmail = 2
wdSendToFax = 3
WdMailMergeDestination = c_int # enum
EmailSignatureEntries._methods_ = [
    COMMETHOD([dispid(1000), 'propget'], HRESULT, 'Application',
              ( ['out', 'retval'], POINTER(POINTER(Application)), 'prop' )),
    COMMETHOD([dispid(1001), 'propget'], HRESULT, 'Creator',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(1002), 'propget'], HRESULT, 'Parent',
              ( ['out', 'retval'], POINTER(POINTER(IDispatch)), 'prop' )),
    COMMETHOD([dispid(-4), 'nonbrowsable', 'propget'], HRESULT, '_NewEnum',
              ( ['out', 'retval'], POINTER(POINTER(IUnknown)), 'prop' )),
    COMMETHOD([dispid(1), 'propget'], HRESULT, 'Count',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(0)], HRESULT, 'Item',
              ( ['in'], POINTER(VARIANT), 'Index' ),
              ( ['out', 'retval'], POINTER(POINTER(EmailSignatureEntry)), 'prop' )),
    COMMETHOD([dispid(101)], HRESULT, 'Add',
              ( ['in'], BSTR, 'Name' ),
              ( ['in'], POINTER(Range), 'Range' ),
              ( ['out', 'retval'], POINTER(POINTER(EmailSignatureEntry)), 'prop' )),
]
################################################################
## code template for EmailSignatureEntries implementation
##class EmailSignatureEntries_Impl(object):
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Creator(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def _NewEnum(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Count(self):
##        '-no docstring-'
##        #return prop
##
##    def Item(self, Index):
##        '-no docstring-'
##        #return prop
##
##    def Add(self, Name, Range):
##        '-no docstring-'
##        #return prop
##

class OMathEqArray(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{1F998A61-71C6-44C2-A0F2-1D66169B47CB}')
    _idlflags_ = ['dual', 'nonextensible', 'oleautomation']

# values for enumeration 'WdOMathVertAlignType'
wdOMathVertAlignCenter = 0
wdOMathVertAlignTop = 1
wdOMathVertAlignBottom = 2
WdOMathVertAlignType = c_int # enum

# values for enumeration 'WdOMathSpacingRule'
wdOMathSpacingSingle = 0
wdOMathSpacing1pt5 = 1
wdOMathSpacingDouble = 2
wdOMathSpacingExactly = 3
wdOMathSpacingMultiple = 4
WdOMathSpacingRule = c_int # enum
OMathEqArray._methods_ = [
    COMMETHOD([dispid(100), 'propget'], HRESULT, 'Application',
              ( ['out', 'retval'], POINTER(POINTER(Application)), 'prop' )),
    COMMETHOD([dispid(101), 'propget'], HRESULT, 'Creator',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(102), 'propget'], HRESULT, 'Parent',
              ( ['out', 'retval'], POINTER(POINTER(IDispatch)), 'prop' )),
    COMMETHOD([dispid(103), 'propget'], HRESULT, 'E',
              ( ['out', 'retval'], POINTER(POINTER(OMathArgs)), 'prop' )),
    COMMETHOD([dispid(104), 'propget'], HRESULT, 'MaxDist',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'prop' )),
    COMMETHOD([dispid(104), 'propput'], HRESULT, 'MaxDist',
              ( ['in'], VARIANT_BOOL, 'prop' )),
    COMMETHOD([dispid(105), 'propget'], HRESULT, 'ObjDist',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'prop' )),
    COMMETHOD([dispid(105), 'propput'], HRESULT, 'ObjDist',
              ( ['in'], VARIANT_BOOL, 'prop' )),
    COMMETHOD([dispid(106), 'propget'], HRESULT, 'Align',
              ( ['out', 'retval'], POINTER(WdOMathVertAlignType), 'prop' )),
    COMMETHOD([dispid(106), 'propput'], HRESULT, 'Align',
              ( ['in'], WdOMathVertAlignType, 'prop' )),
    COMMETHOD([dispid(107), 'propget'], HRESULT, 'RowSpacingRule',
              ( ['out', 'retval'], POINTER(WdOMathSpacingRule), 'prop' )),
    COMMETHOD([dispid(107), 'propput'], HRESULT, 'RowSpacingRule',
              ( ['in'], WdOMathSpacingRule, 'prop' )),
    COMMETHOD([dispid(108), 'propget'], HRESULT, 'RowSpacing',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(108), 'propput'], HRESULT, 'RowSpacing',
              ( ['in'], c_int, 'prop' )),
]
################################################################
## code template for OMathEqArray implementation
##class OMathEqArray_Impl(object):
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Creator(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def E(self):
##        '-no docstring-'
##        #return prop
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    MaxDist = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    ObjDist = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    Align = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    RowSpacingRule = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    RowSpacing = property(_get, _set, doc = _set.__doc__)
##


# values for enumeration 'WdMailSystem'
wdNoMailSystem = 0
wdMAPI = 1
wdPowerTalk = 2
wdMAPIandPowerTalk = 3
WdMailSystem = c_int # enum
Styles._methods_ = [
    COMMETHOD([dispid(1000), 'propget'], HRESULT, 'Application',
              ( ['out', 'retval'], POINTER(POINTER(Application)), 'prop' )),
    COMMETHOD([dispid(1001), 'propget'], HRESULT, 'Creator',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(1002), 'propget'], HRESULT, 'Parent',
              ( ['out', 'retval'], POINTER(POINTER(IDispatch)), 'prop' )),
    COMMETHOD([dispid(-4), 'nonbrowsable', 'propget'], HRESULT, '_NewEnum',
              ( ['out', 'retval'], POINTER(POINTER(IUnknown)), 'prop' )),
    COMMETHOD([dispid(1), 'propget'], HRESULT, 'Count',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(0)], HRESULT, 'Item',
              ( ['in'], POINTER(VARIANT), 'Index' ),
              ( ['out', 'retval'], POINTER(POINTER(Style)), 'prop' )),
    COMMETHOD([dispid(100)], HRESULT, 'Add',
              ( ['in'], BSTR, 'Name' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'Type' ),
              ( ['out', 'retval'], POINTER(POINTER(Style)), 'prop' )),
]
################################################################
## code template for Styles implementation
##class Styles_Impl(object):
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Creator(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def _NewEnum(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Count(self):
##        '-no docstring-'
##        #return prop
##
##    def Item(self, Index):
##        '-no docstring-'
##        #return prop
##
##    def Add(self, Name, Type):
##        '-no docstring-'
##        #return prop
##


# values for enumeration 'XlErrorBarInclude'
xlErrorBarIncludeBoth = 1
xlErrorBarIncludeMinusValues = 3
xlErrorBarIncludeNone = -4142
xlErrorBarIncludePlusValues = 2
XlErrorBarInclude = c_int # enum

# values for enumeration 'XlChartPictureType'
xlStackScale = 3
xlStack = 2
xlStretch = 1
XlChartPictureType = c_int # enum
class LeaderLines(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{36162C62-B59A-4278-AF3D-F2AC1EB999D9}')
    _idlflags_ = ['dual', 'nonextensible', 'oleautomation']

# values for enumeration 'XlValueSortOrder'
xlValueNone = 0
xlValueAscending = 1
xlValueDescending = 2
XlValueSortOrder = c_int # enum

# values for enumeration 'XlGeoProjectionType'
xlGeoProjectionTypeAutomatic = 0
xlGeoProjectionTypeMercator = 1
xlGeoProjectionTypeMiller = 2
xlGeoProjectionTypeAlbers = 3
xlGeoProjectionTypeRobinson = 4
XlGeoProjectionType = c_int # enum

# values for enumeration 'XlGeoMappingLevel'
xlGeoMappingLevelAutomatic = 0
xlGeoMappingLevelDataOnly = 1
xlGeoMappingLevelPostalCode = 2
xlGeoMappingLevelCounty = 3
xlGeoMappingLevelState = 4
xlGeoMappingLevelCountryRegion = 5
xlGeoMappingLevelCountryRegionList = 6
xlGeoMappingLevelWorld = 7
XlGeoMappingLevel = c_int # enum

# values for enumeration 'XlRegionLabelOptions'
xlRegionLabelOptionsNone = 0
xlRegionLabelOptionsBestFitOnly = 1
xlRegionLabelOptionsShowAll = 2
XlRegionLabelOptions = c_int # enum

# values for enumeration 'XlSeriesColorGradientStyle'
xlSeriesColorGradientStyleSequential = 0
xlSeriesColorGradientStyleDiverging = 1
XlSeriesColorGradientStyle = c_int # enum
Series._methods_ = [
    COMMETHOD([dispid(150), 'propget'], HRESULT, 'Parent',
              ( ['out', 'retval'], POINTER(POINTER(IDispatch)), 'prop' )),
    COMMETHOD([dispid(47), 'propget'], HRESULT, 'AxisGroup',
              ( ['out', 'retval'], POINTER(XlAxisGroup), 'prop' )),
    COMMETHOD([dispid(47), 'propput'], HRESULT, 'AxisGroup',
              ( ['in'], XlAxisGroup, 'prop' )),
    COMMETHOD([dispid(128), 'propget'], HRESULT, 'Border',
              ( ['out', 'retval'], POINTER(POINTER(ChartBorder)), 'prop' )),
    COMMETHOD([dispid(112)], HRESULT, 'ClearFormats',
              ( ['out', 'retval'], POINTER(VARIANT), 'prop' )),
    COMMETHOD([dispid(551)], HRESULT, 'Copy',
              ( ['out', 'retval'], POINTER(VARIANT), 'prop' )),
    COMMETHOD([dispid(157)], HRESULT, 'DataLabels',
              ( ['in', 'optional'], VARIANT, 'Index' ),
              ( ['out', 'retval'], POINTER(POINTER(IDispatch)), 'prop' )),
    COMMETHOD([dispid(117)], HRESULT, 'Delete',
              ( ['out', 'retval'], POINTER(VARIANT), 'prop' )),
    COMMETHOD([dispid(152)], HRESULT, 'ErrorBar',
              ( ['in'], XlErrorBarDirection, 'Direction' ),
              ( ['in'], XlErrorBarInclude, 'Include' ),
              ( ['in'], XlErrorBarType, 'Type' ),
              ( ['in', 'optional'], VARIANT, 'Amount' ),
              ( ['in', 'optional'], VARIANT, 'MinusValues' ),
              ( ['out', 'retval'], POINTER(VARIANT), 'prop' )),
    COMMETHOD([dispid(159), 'propget'], HRESULT, 'ErrorBars',
              ( ['out', 'retval'], POINTER(POINTER(ErrorBars)), 'prop' )),
    COMMETHOD([dispid(182), 'propget'], HRESULT, 'Explosion',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(182), 'propput'], HRESULT, 'Explosion',
              ( ['in'], c_int, 'prop' )),
    COMMETHOD([dispid(261), 'propget'], HRESULT, 'Formula',
              ( ['out', 'retval'], POINTER(BSTR), 'prop' )),
    COMMETHOD([dispid(261), 'propput'], HRESULT, 'Formula',
              ( ['in'], BSTR, 'prop' )),
    COMMETHOD([dispid(263), 'propget'], HRESULT, 'FormulaLocal',
              ( ['out', 'retval'], POINTER(BSTR), 'prop' )),
    COMMETHOD([dispid(263), 'propput'], HRESULT, 'FormulaLocal',
              ( ['in'], BSTR, 'prop' )),
    COMMETHOD([dispid(264), 'propget'], HRESULT, 'FormulaR1C1',
              ( ['out', 'retval'], POINTER(BSTR), 'prop' )),
    COMMETHOD([dispid(264), 'propput'], HRESULT, 'FormulaR1C1',
              ( ['in'], BSTR, 'prop' )),
    COMMETHOD([dispid(265), 'propget'], HRESULT, 'FormulaR1C1Local',
              ( ['out', 'retval'], POINTER(BSTR), 'prop' )),
    COMMETHOD([dispid(265), 'propput'], HRESULT, 'FormulaR1C1Local',
              ( ['in'], BSTR, 'prop' )),
    COMMETHOD([dispid(78), 'propget'], HRESULT, 'HasDataLabels',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'prop' )),
    COMMETHOD([dispid(78), 'propput'], HRESULT, 'HasDataLabels',
              ( ['in'], VARIANT_BOOL, 'prop' )),
    COMMETHOD([dispid(160), 'propget'], HRESULT, 'HasErrorBars',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'prop' )),
    COMMETHOD([dispid(160), 'propput'], HRESULT, 'HasErrorBars',
              ( ['in'], VARIANT_BOOL, 'prop' )),
    COMMETHOD([dispid(129), 'hidden', 'propget'], HRESULT, 'Interior',
              ( ['out', 'retval'], POINTER(POINTER(Interior)), 'prop' )),
    COMMETHOD([dispid(1663), 'hidden', 'propget'], HRESULT, 'Fill',
              ( ['out', 'retval'], POINTER(POINTER(ChartFillFormat)), 'prop' )),
    COMMETHOD([dispid(132), 'propget'], HRESULT, 'InvertIfNegative',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'prop' )),
    COMMETHOD([dispid(132), 'propput'], HRESULT, 'InvertIfNegative',
              ( ['in'], VARIANT_BOOL, 'prop' )),
    COMMETHOD([dispid(73), 'propget'], HRESULT, 'MarkerBackgroundColor',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(73), 'propput'], HRESULT, 'MarkerBackgroundColor',
              ( ['in'], c_int, 'prop' )),
    COMMETHOD([dispid(74), 'propget'], HRESULT, 'MarkerBackgroundColorIndex',
              ( ['out', 'retval'], POINTER(XlColorIndex), 'prop' )),
    COMMETHOD([dispid(74), 'propput'], HRESULT, 'MarkerBackgroundColorIndex',
              ( ['in'], XlColorIndex, 'prop' )),
    COMMETHOD([dispid(75), 'propget'], HRESULT, 'MarkerForegroundColor',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(75), 'propput'], HRESULT, 'MarkerForegroundColor',
              ( ['in'], c_int, 'prop' )),
    COMMETHOD([dispid(76), 'propget'], HRESULT, 'MarkerForegroundColorIndex',
              ( ['out', 'retval'], POINTER(XlColorIndex), 'prop' )),
    COMMETHOD([dispid(76), 'propput'], HRESULT, 'MarkerForegroundColorIndex',
              ( ['in'], XlColorIndex, 'prop' )),
    COMMETHOD([dispid(231), 'propget'], HRESULT, 'MarkerSize',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(231), 'propput'], HRESULT, 'MarkerSize',
              ( ['in'], c_int, 'prop' )),
    COMMETHOD([dispid(72), 'propget'], HRESULT, 'MarkerStyle',
              ( ['out', 'retval'], POINTER(XlMarkerStyle), 'prop' )),
    COMMETHOD([dispid(72), 'propput'], HRESULT, 'MarkerStyle',
              ( ['in'], XlMarkerStyle, 'prop' )),
    COMMETHOD([dispid(110), 'propget'], HRESULT, 'Name',
              ( ['out', 'retval'], POINTER(BSTR), 'prop' )),
    COMMETHOD([dispid(110), 'propput'], HRESULT, 'Name',
              ( ['in'], BSTR, 'prop' )),
    COMMETHOD([dispid(211)], HRESULT, 'Paste',
              ( ['out', 'retval'], POINTER(VARIANT), 'prop' )),
    COMMETHOD([dispid(161), 'propget'], HRESULT, 'PictureType',
              ( ['out', 'retval'], POINTER(XlChartPictureType), 'prop' )),
    COMMETHOD([dispid(161), 'propput'], HRESULT, 'PictureType',
              ( ['in'], XlChartPictureType, 'prop' )),
    COMMETHOD([dispid(162), 'hidden', 'propget'], HRESULT, 'PictureUnit',
              ( ['out', 'retval'], POINTER(c_double), 'prop' )),
    COMMETHOD([dispid(162), 'hidden', 'propput'], HRESULT, 'PictureUnit',
              ( ['in'], c_double, 'prop' )),
    COMMETHOD([dispid(228), 'propget'], HRESULT, 'PlotOrder',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(228), 'propput'], HRESULT, 'PlotOrder',
              ( ['in'], c_int, 'prop' )),
    COMMETHOD([dispid(70)], HRESULT, 'Points',
              ( ['in', 'optional'], VARIANT, 'Index' ),
              ( ['out', 'retval'], POINTER(POINTER(IDispatch)), 'prop' )),
    COMMETHOD([dispid(235)], HRESULT, 'Select',
              ( ['out', 'retval'], POINTER(VARIANT), 'prop' )),
    COMMETHOD([dispid(163), 'propget'], HRESULT, 'Smooth',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'prop' )),
    COMMETHOD([dispid(163), 'propput'], HRESULT, 'Smooth',
              ( ['in'], VARIANT_BOOL, 'prop' )),
    COMMETHOD([dispid(154)], HRESULT, 'Trendlines',
              ( ['in', 'optional'], VARIANT, 'Index' ),
              ( ['out', 'retval'], POINTER(POINTER(IDispatch)), 'prop' )),
    COMMETHOD([dispid(108), 'propget'], HRESULT, 'Type',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(108), 'propput'], HRESULT, 'Type',
              ( ['in'], c_int, 'prop' )),
    COMMETHOD([dispid(1400), 'propget'], HRESULT, 'ChartType',
              ( ['out', 'retval'], POINTER(comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.XlChartType), 'prop' )),
    COMMETHOD([dispid(1400), 'propput'], HRESULT, 'ChartType',
              ( ['in'], comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.XlChartType, 'prop' )),
    COMMETHOD([dispid(1401), 'hidden'], HRESULT, 'ApplyCustomType',
              ( ['in'], comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.XlChartType, 'ChartType' )),
    COMMETHOD([dispid(164), 'propget'], HRESULT, 'Values',
              ( ['out', 'retval'], POINTER(VARIANT), 'prop' )),
    COMMETHOD([dispid(164), 'propput'], HRESULT, 'Values',
              ( ['in'], VARIANT, 'prop' )),
    COMMETHOD([dispid(1111), 'propget'], HRESULT, 'XValues',
              ( ['out', 'retval'], POINTER(VARIANT), 'prop' )),
    COMMETHOD([dispid(1111), 'propput'], HRESULT, 'XValues',
              ( ['in'], VARIANT, 'prop' )),
    COMMETHOD([dispid(1664), 'propget'], HRESULT, 'BubbleSizes',
              ( ['out', 'retval'], POINTER(VARIANT), 'prop' )),
    COMMETHOD([dispid(1664), 'propput'], HRESULT, 'BubbleSizes',
              ( ['in'], VARIANT, 'prop' )),
    COMMETHOD([dispid(1403), 'propget'], HRESULT, 'BarShape',
              ( ['out', 'retval'], POINTER(XlBarShape), 'prop' )),
    COMMETHOD([dispid(1403), 'propput'], HRESULT, 'BarShape',
              ( ['in'], XlBarShape, 'prop' )),
    COMMETHOD([dispid(1659), 'propget'], HRESULT, 'ApplyPictToSides',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'prop' )),
    COMMETHOD([dispid(1659), 'propput'], HRESULT, 'ApplyPictToSides',
              ( ['in'], VARIANT_BOOL, 'prop' )),
    COMMETHOD([dispid(1660), 'propget'], HRESULT, 'ApplyPictToFront',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'prop' )),
    COMMETHOD([dispid(1660), 'propput'], HRESULT, 'ApplyPictToFront',
              ( ['in'], VARIANT_BOOL, 'prop' )),
    COMMETHOD([dispid(1661), 'propget'], HRESULT, 'ApplyPictToEnd',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'prop' )),
    COMMETHOD([dispid(1661), 'propput'], HRESULT, 'ApplyPictToEnd',
              ( ['in'], VARIANT_BOOL, 'prop' )),
    COMMETHOD([dispid(1665), 'propget'], HRESULT, 'Has3DEffect',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'prop' )),
    COMMETHOD([dispid(1665), 'propput'], HRESULT, 'Has3DEffect',
              ( ['in'], VARIANT_BOOL, 'prop' )),
    COMMETHOD([dispid(103), 'propget'], HRESULT, 'Shadow',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'prop' )),
    COMMETHOD([dispid(103), 'propput'], HRESULT, 'Shadow',
              ( ['in'], VARIANT_BOOL, 'prop' )),
    COMMETHOD([dispid(1394), 'propget'], HRESULT, 'HasLeaderLines',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'prop' )),
    COMMETHOD([dispid(1394), 'propput'], HRESULT, 'HasLeaderLines',
              ( ['in'], VARIANT_BOOL, 'prop' )),
    COMMETHOD([dispid(1666), 'propget'], HRESULT, 'LeaderLines',
              ( ['out', 'retval'], POINTER(POINTER(LeaderLines)), 'prop' )),
    COMMETHOD([dispid(1922)], HRESULT, 'ApplyDataLabels',
              ( ['in', 'optional'], XlDataLabelsType, 'Type', 2 ),
              ( ['in', 'optional'], VARIANT, 'LegendKey' ),
              ( ['in', 'optional'], VARIANT, 'AutoText' ),
              ( ['in', 'optional'], VARIANT, 'HasLeaderLines' ),
              ( ['in', 'optional'], VARIANT, 'ShowSeriesName' ),
              ( ['in', 'optional'], VARIANT, 'ShowCategoryName' ),
              ( ['in', 'optional'], VARIANT, 'ShowValue' ),
              ( ['in', 'optional'], VARIANT, 'ShowPercentage' ),
              ( ['in', 'optional'], VARIANT, 'ShowBubbleSize' ),
              ( ['in', 'optional'], VARIANT, 'Separator' ),
              ( ['out', 'retval'], POINTER(VARIANT), 'prop' )),
    COMMETHOD([dispid(1610743890), 'propget'], HRESULT, 'Format',
              ( ['out', 'retval'], POINTER(POINTER(ChartFormat)), 'prop' )),
    COMMETHOD([dispid(148), 'propget'], HRESULT, 'Application',
              ( ['out', 'retval'], POINTER(POINTER(IDispatch)), 'prop' )),
    COMMETHOD([dispid(149), 'propget'], HRESULT, 'Creator',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(2649), 'propget'], HRESULT, 'PictureUnit2',
              ( ['out', 'retval'], POINTER(c_double), 'prop' )),
    COMMETHOD([dispid(2649), 'propput'], HRESULT, 'PictureUnit2',
              ( ['in'], c_double, 'prop' )),
    COMMETHOD([dispid(1924), 'propget'], HRESULT, 'PlotColorIndex',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(2884), 'propget'], HRESULT, 'InvertColor',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(2884), 'propput'], HRESULT, 'InvertColor',
              ( ['in'], c_int, 'prop' )),
    COMMETHOD([dispid(2885), 'propget'], HRESULT, 'InvertColorIndex',
              ( ['out', 'retval'], POINTER(XlColorIndex), 'prop' )),
    COMMETHOD([dispid(2885), 'propput'], HRESULT, 'InvertColorIndex',
              ( ['in'], XlColorIndex, 'prop' )),
    COMMETHOD([dispid(2887), 'propget'], HRESULT, 'IsFiltered',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'prop' )),
    COMMETHOD([dispid(2887), 'propput'], HRESULT, 'IsFiltered',
              ( ['in'], VARIANT_BOOL, 'prop' )),
    COMMETHOD([dispid(2888), 'propget'], HRESULT, 'ParentDataLabelOption',
              ( ['out', 'retval'], POINTER(XlParentDataLabelOptions), 'prop' )),
    COMMETHOD([dispid(2888), 'propput'], HRESULT, 'ParentDataLabelOption',
              ( ['in'], XlParentDataLabelOptions, 'prop' )),
    COMMETHOD([dispid(2889), 'propget'], HRESULT, 'QuartileCalculationInclusiveMedian',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'prop' )),
    COMMETHOD([dispid(2889), 'propput'], HRESULT, 'QuartileCalculationInclusiveMedian',
              ( ['in'], VARIANT_BOOL, 'prop' )),
    COMMETHOD([dispid(2890), 'propget'], HRESULT, 'ValueSortOrder',
              ( ['out', 'retval'], POINTER(XlValueSortOrder), 'prop' )),
    COMMETHOD([dispid(2890), 'propput'], HRESULT, 'ValueSortOrder',
              ( ['in'], XlValueSortOrder, 'prop' )),
    COMMETHOD([dispid(2891), 'propget'], HRESULT, 'GeoProjectionType',
              ( ['out', 'retval'], POINTER(XlGeoProjectionType), 'prop' )),
    COMMETHOD([dispid(2891), 'propput'], HRESULT, 'GeoProjectionType',
              ( ['in'], XlGeoProjectionType, 'prop' )),
    COMMETHOD([dispid(2892), 'propget'], HRESULT, 'GeoMappingLevel',
              ( ['out', 'retval'], POINTER(XlGeoMappingLevel), 'prop' )),
    COMMETHOD([dispid(2892), 'propput'], HRESULT, 'GeoMappingLevel',
              ( ['in'], XlGeoMappingLevel, 'prop' )),
    COMMETHOD([dispid(2893), 'propget'], HRESULT, 'RegionLabelOption',
              ( ['out', 'retval'], POINTER(XlRegionLabelOptions), 'prop' )),
    COMMETHOD([dispid(2893), 'propput'], HRESULT, 'RegionLabelOption',
              ( ['in'], XlRegionLabelOptions, 'prop' )),
    COMMETHOD([dispid(2894), 'propget'], HRESULT, 'SeriesColorGradientStyle',
              ( ['out', 'retval'], POINTER(XlSeriesColorGradientStyle), 'prop' )),
    COMMETHOD([dispid(2894), 'propput'], HRESULT, 'SeriesColorGradientStyle',
              ( ['in'], XlSeriesColorGradientStyle, 'prop' )),
    COMMETHOD([dispid(253)], HRESULT, 'SetProperty',
              ( ['in'], BSTR, 'ID' ),
              ( ['in'], VARIANT, 'Value' )),
    COMMETHOD([dispid(254)], HRESULT, 'GetProperty',
              ( ['in'], BSTR, 'ID' ),
              ( ['out', 'retval'], POINTER(VARIANT), 'prop' )),
]
################################################################
## code template for Series implementation
##class Series_Impl(object):
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return prop
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    AxisGroup = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Border(self):
##        '-no docstring-'
##        #return prop
##
##    def ClearFormats(self):
##        '-no docstring-'
##        #return prop
##
##    def Copy(self):
##        '-no docstring-'
##        #return prop
##
##    def DataLabels(self, Index):
##        '-no docstring-'
##        #return prop
##
##    def Delete(self):
##        '-no docstring-'
##        #return prop
##
##    def ErrorBar(self, Direction, Include, Type, Amount, MinusValues):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def ErrorBars(self):
##        '-no docstring-'
##        #return prop
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    Explosion = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    Formula = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    FormulaLocal = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    FormulaR1C1 = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    FormulaR1C1Local = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    HasDataLabels = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    HasErrorBars = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Interior(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Fill(self):
##        '-no docstring-'
##        #return prop
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    InvertIfNegative = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    MarkerBackgroundColor = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    MarkerBackgroundColorIndex = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    MarkerForegroundColor = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    MarkerForegroundColorIndex = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    MarkerSize = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    MarkerStyle = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    Name = property(_get, _set, doc = _set.__doc__)
##
##    def Paste(self):
##        '-no docstring-'
##        #return prop
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    PictureType = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    PictureUnit = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    PlotOrder = property(_get, _set, doc = _set.__doc__)
##
##    def Points(self, Index):
##        '-no docstring-'
##        #return prop
##
##    def Select(self):
##        '-no docstring-'
##        #return prop
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    Smooth = property(_get, _set, doc = _set.__doc__)
##
##    def Trendlines(self, Index):
##        '-no docstring-'
##        #return prop
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    Type = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    ChartType = property(_get, _set, doc = _set.__doc__)
##
##    def ApplyCustomType(self, ChartType):
##        '-no docstring-'
##        #return 
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    Values = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    XValues = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    BubbleSizes = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    BarShape = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    ApplyPictToSides = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    ApplyPictToFront = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    ApplyPictToEnd = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    Has3DEffect = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    Shadow = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    HasLeaderLines = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def LeaderLines(self):
##        '-no docstring-'
##        #return prop
##
##    def ApplyDataLabels(self, Type, LegendKey, AutoText, HasLeaderLines, ShowSeriesName, ShowCategoryName, ShowValue, ShowPercentage, ShowBubbleSize, Separator):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Format(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Creator(self):
##        '-no docstring-'
##        #return prop
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    PictureUnit2 = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def PlotColorIndex(self):
##        '-no docstring-'
##        #return prop
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    InvertColor = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    InvertColorIndex = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    IsFiltered = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    ParentDataLabelOption = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    QuartileCalculationInclusiveMedian = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    ValueSortOrder = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    GeoProjectionType = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    GeoMappingLevel = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    RegionLabelOption = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    SeriesColorGradientStyle = property(_get, _set, doc = _set.__doc__)
##
##    def SetProperty(self, ID, Value):
##        '-no docstring-'
##        #return 
##
##    def GetProperty(self, ID):
##        '-no docstring-'
##        #return prop
##


# values for enumeration 'WdInternationalIndex'
wdListSeparator = 17
wdDecimalSeparator = 18
wdThousandsSeparator = 19
wdCurrencyCode = 20
wd24HourClock = 21
wdInternationalAM = 22
wdInternationalPM = 23
wdTimeSeparator = 24
wdDateSeparator = 25
wdProductLanguageID = 26
WdInternationalIndex = c_int # enum
class BuildingBlockEntries(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{39709229-56A0-4E29-9112-B31DD067EBFD}')
    _idlflags_ = ['dual', 'nonextensible', 'oleautomation']

# values for enumeration 'WdDocPartInsertOptions'
wdInsertContent = 0
wdInsertParagraph = 1
wdInsertPage = 2
WdDocPartInsertOptions = c_int # enum
BuildingBlockEntries._methods_ = [
    COMMETHOD([dispid(1000), 'propget'], HRESULT, 'Application',
              ( ['out', 'retval'], POINTER(POINTER(Application)), 'prop' )),
    COMMETHOD([dispid(1001), 'propget'], HRESULT, 'Creator',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(1002), 'propget'], HRESULT, 'Parent',
              ( ['out', 'retval'], POINTER(POINTER(IDispatch)), 'prop' )),
    COMMETHOD([dispid(1), 'propget'], HRESULT, 'Count',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(0)], HRESULT, 'Item',
              ( ['in'], POINTER(VARIANT), 'Index' ),
              ( ['out', 'retval'], POINTER(POINTER(BuildingBlock)), 'prop' )),
    COMMETHOD([dispid(101)], HRESULT, 'Add',
              ( ['in'], BSTR, 'Name' ),
              ( ['in'], WdBuildingBlockTypes, 'Type' ),
              ( ['in'], BSTR, 'Category' ),
              ( ['in'], POINTER(Range), 'Range' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'Description' ),
              ( ['in', 'optional'], WdDocPartInsertOptions, 'InsertOptions', 0 ),
              ( ['out', 'retval'], POINTER(POINTER(BuildingBlock)), 'prop' )),
]
################################################################
## code template for BuildingBlockEntries implementation
##class BuildingBlockEntries_Impl(object):
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Creator(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Count(self):
##        '-no docstring-'
##        #return prop
##
##    def Item(self, Index):
##        '-no docstring-'
##        #return prop
##
##    def Add(self, Name, Type, Category, Range, Description, InsertOptions):
##        '-no docstring-'
##        #return prop
##

Dictionaries._methods_ = [
    COMMETHOD([dispid(1000), 'propget'], HRESULT, 'Application',
              ( ['out', 'retval'], POINTER(POINTER(Application)), 'prop' )),
    COMMETHOD([dispid(1001), 'propget'], HRESULT, 'Creator',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(1002), 'propget'], HRESULT, 'Parent',
              ( ['out', 'retval'], POINTER(POINTER(IDispatch)), 'prop' )),
    COMMETHOD([dispid(-4), 'nonbrowsable', 'propget'], HRESULT, '_NewEnum',
              ( ['out', 'retval'], POINTER(POINTER(IUnknown)), 'prop' )),
    COMMETHOD([dispid(1), 'propget'], HRESULT, 'Count',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(2), 'propget'], HRESULT, 'Maximum',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(3), 'propget'], HRESULT, 'ActiveCustomDictionary',
              ( ['out', 'retval'], POINTER(POINTER(Dictionary)), 'prop' )),
    COMMETHOD([dispid(3), 'propput'], HRESULT, 'ActiveCustomDictionary',
              ( ['in'], POINTER(Dictionary), 'prop' )),
    COMMETHOD([dispid(0)], HRESULT, 'Item',
              ( ['in'], POINTER(VARIANT), 'Index' ),
              ( ['out', 'retval'], POINTER(POINTER(Dictionary)), 'prop' )),
    COMMETHOD([dispid(101)], HRESULT, 'Add',
              ( ['in'], BSTR, 'FileName' ),
              ( ['out', 'retval'], POINTER(POINTER(Dictionary)), 'prop' )),
    COMMETHOD([dispid(102)], HRESULT, 'ClearAll'),
]
################################################################
## code template for Dictionaries implementation
##class Dictionaries_Impl(object):
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Creator(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def _NewEnum(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Count(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Maximum(self):
##        '-no docstring-'
##        #return prop
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    ActiveCustomDictionary = property(_get, _set, doc = _set.__doc__)
##
##    def Item(self, Index):
##        '-no docstring-'
##        #return prop
##
##    def Add(self, FileName):
##        '-no docstring-'
##        #return prop
##
##    def ClearAll(self):
##        '-no docstring-'
##        #return 
##


# values for enumeration 'WdPartOfSpeech'
wdAdjective = 0
wdNoun = 1
wdAdverb = 2
wdVerb = 3
wdPronoun = 4
wdConjunction = 5
wdPreposition = 6
wdInterjection = 7
wdIdiom = 8
wdOther = 9
WdPartOfSpeech = c_int # enum
class HeadingStyle(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{0002098B-0000-0000-C000-000000000046}')
    _idlflags_ = ['dual', 'nonextensible', 'oleautomation']
HeadingStyles._methods_ = [
    COMMETHOD([dispid(1000), 'propget'], HRESULT, 'Application',
              ( ['out', 'retval'], POINTER(POINTER(Application)), 'prop' )),
    COMMETHOD([dispid(1001), 'propget'], HRESULT, 'Creator',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(1002), 'propget'], HRESULT, 'Parent',
              ( ['out', 'retval'], POINTER(POINTER(IDispatch)), 'prop' )),
    COMMETHOD([dispid(-4), 'nonbrowsable', 'propget'], HRESULT, '_NewEnum',
              ( ['out', 'retval'], POINTER(POINTER(IUnknown)), 'prop' )),
    COMMETHOD([dispid(1), 'propget'], HRESULT, 'Count',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(0)], HRESULT, 'Item',
              ( ['in'], c_int, 'Index' ),
              ( ['out', 'retval'], POINTER(POINTER(HeadingStyle)), 'prop' )),
    COMMETHOD([dispid(100)], HRESULT, 'Add',
              ( ['in'], POINTER(VARIANT), 'Style' ),
              ( ['in'], c_short, 'Level' ),
              ( ['out', 'retval'], POINTER(POINTER(HeadingStyle)), 'prop' )),
]
################################################################
## code template for HeadingStyles implementation
##class HeadingStyles_Impl(object):
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Creator(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def _NewEnum(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Count(self):
##        '-no docstring-'
##        #return prop
##
##    def Item(self, Index):
##        '-no docstring-'
##        #return prop
##
##    def Add(self, Style, Level):
##        '-no docstring-'
##        #return prop
##

class ChartCategory(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{5A90588C-C066-4BD4-8FE5-722454A15553}')
    _idlflags_ = ['dual', 'nonextensible', 'oleautomation']
ChartCategory._methods_ = [
    COMMETHOD([dispid(150), 'propget'], HRESULT, 'Parent',
              ( ['out', 'retval'], POINTER(POINTER(IDispatch)), 'prop' )),
    COMMETHOD([dispid(110), 'propget'], HRESULT, 'Name',
              ( ['out', 'retval'], POINTER(BSTR), 'prop' )),
    COMMETHOD([dispid(2887), 'propget'], HRESULT, 'IsFiltered',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'prop' )),
    COMMETHOD([dispid(2887), 'propput'], HRESULT, 'IsFiltered',
              ( ['in'], VARIANT_BOOL, 'prop' )),
]
################################################################
## code template for ChartCategory implementation
##class ChartCategory_Impl(object):
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Name(self):
##        '-no docstring-'
##        #return prop
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    IsFiltered = property(_get, _set, doc = _set.__doc__)
##


# values for enumeration 'WdSortFieldType'
wdSortFieldAlphanumeric = 0
wdSortFieldNumeric = 1
wdSortFieldDate = 2
wdSortFieldSyllable = 3
wdSortFieldJapanJIS = 4
wdSortFieldStroke = 5
wdSortFieldKoreaKS = 6
WdSortFieldType = c_int # enum

# values for enumeration 'WdSalutationGender'
wdGenderFemale = 0
wdGenderMale = 1
wdGenderNeutral = 2
wdGenderUnknown = 3
WdSalutationGender = c_int # enum
class Library(object):
    'Microsoft Word 16.0 Object Library'
    name = 'Word'
    _reg_typelib_ = ('{00020905-0000-0000-C000-000000000046}', 8, 7)

class SeriesLines(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{5D7F6C15-36CE-44CC-9692-5A1F8B8C906D}')
    _idlflags_ = ['dual', 'nonextensible', 'oleautomation']
SeriesLines._methods_ = [
    COMMETHOD([dispid(110), 'propget'], HRESULT, 'Name',
              ( ['out', 'retval'], POINTER(BSTR), 'prop' )),
    COMMETHOD([dispid(235)], HRESULT, 'Select',
              ( ['out', 'retval'], POINTER(VARIANT), 'prop' )),
    COMMETHOD([dispid(150), 'propget'], HRESULT, 'Parent',
              ( ['out', 'retval'], POINTER(POINTER(IDispatch)), 'prop' )),
    COMMETHOD([dispid(128), 'propget'], HRESULT, 'Border',
              ( ['out', 'retval'], POINTER(POINTER(ChartBorder)), 'prop' )),
    COMMETHOD([dispid(117)], HRESULT, 'Delete',
              ( ['out', 'retval'], POINTER(VARIANT), 'prop' )),
    COMMETHOD([dispid(1610743813), 'propget'], HRESULT, 'Format',
              ( ['out', 'retval'], POINTER(POINTER(ChartFormat)), 'prop' )),
    COMMETHOD([dispid(148), 'propget'], HRESULT, 'Application',
              ( ['out', 'retval'], POINTER(POINTER(IDispatch)), 'prop' )),
    COMMETHOD([dispid(149), 'propget'], HRESULT, 'Creator',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(253)], HRESULT, 'SetProperty',
              ( ['in'], BSTR, 'ID' ),
              ( ['in'], VARIANT, 'Value' )),
    COMMETHOD([dispid(254)], HRESULT, 'GetProperty',
              ( ['in'], BSTR, 'ID' ),
              ( ['out', 'retval'], POINTER(VARIANT), 'prop' )),
]
################################################################
## code template for SeriesLines implementation
##class SeriesLines_Impl(object):
##    @property
##    def Name(self):
##        '-no docstring-'
##        #return prop
##
##    def Select(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Border(self):
##        '-no docstring-'
##        #return prop
##
##    def Delete(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Format(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Creator(self):
##        '-no docstring-'
##        #return prop
##
##    def SetProperty(self, ID, Value):
##        '-no docstring-'
##        #return 
##
##    def GetProperty(self, ID):
##        '-no docstring-'
##        #return prop
##

class CategoryCollection(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{04124C2D-039D-4442-9C68-8FA38D11DDD6}')
    _idlflags_ = ['dual', 'nonextensible', 'oleautomation']
CategoryCollection._methods_ = [
    COMMETHOD([dispid(150), 'propget'], HRESULT, 'Parent',
              ( ['out', 'retval'], POINTER(POINTER(IDispatch)), 'prop' )),
    COMMETHOD([dispid(118), 'propget'], HRESULT, 'Count',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(0)], HRESULT, 'Item',
              ( ['in'], VARIANT, 'Index' ),
              ( ['out', 'retval'], POINTER(POINTER(ChartCategory)), 'prop' )),
    COMMETHOD([dispid(-4), 'nonbrowsable'], HRESULT, '_NewEnum',
              ( ['out', 'retval'], POINTER(POINTER(IUnknown)), 'prop' )),
    COMMETHOD([dispid(148), 'propget'], HRESULT, 'Application',
              ( ['out', 'retval'], POINTER(POINTER(IDispatch)), 'prop' )),
    COMMETHOD([dispid(149), 'propget'], HRESULT, 'Creator',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(1610743818), 'nonbrowsable'], HRESULT, '_Default',
              ( ['in'], VARIANT, 'Index' ),
              ( ['out', 'retval'], POINTER(POINTER(ChartCategory)), 'prop' )),
]
################################################################
## code template for CategoryCollection implementation
##class CategoryCollection_Impl(object):
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Count(self):
##        '-no docstring-'
##        #return prop
##
##    def Item(self, Index):
##        '-no docstring-'
##        #return prop
##
##    def _NewEnum(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Creator(self):
##        '-no docstring-'
##        #return prop
##
##    def _Default(self, Index):
##        '-no docstring-'
##        #return prop
##


# values for enumeration 'WdBaselineAlignment'
wdBaselineAlignTop = 0
wdBaselineAlignCenter = 1
wdBaselineAlignBaseline = 2
wdBaselineAlignFarEast50 = 3
wdBaselineAlignAuto = 4
WdBaselineAlignment = c_int # enum

# values for enumeration 'WdSubscriberFormats'
wdSubscriberBestFormat = 0
wdSubscriberRTF = 1
wdSubscriberText = 2
wdSubscriberPict = 4
WdSubscriberFormats = c_int # enum
HTMLDivision._methods_ = [
    COMMETHOD([dispid(1000), 'propget'], HRESULT, 'Application',
              ( ['out', 'retval'], POINTER(POINTER(Application)), 'prop' )),
    COMMETHOD([dispid(1001), 'propget'], HRESULT, 'Creator',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(1002), 'propget'], HRESULT, 'Parent',
              ( ['out', 'retval'], POINTER(POINTER(IDispatch)), 'prop' )),
    COMMETHOD([dispid(1), 'propget'], HRESULT, 'Range',
              ( ['out', 'retval'], POINTER(POINTER(Range)), 'prop' )),
    COMMETHOD([dispid(1100), 'propget'], HRESULT, 'Borders',
              ( ['out', 'retval'], POINTER(POINTER(Borders)), 'prop' )),
    COMMETHOD([dispid(3), 'propget'], HRESULT, 'LeftIndent',
              ( ['out', 'retval'], POINTER(c_float), 'prop' )),
    COMMETHOD([dispid(3), 'propput'], HRESULT, 'LeftIndent',
              ( ['in'], c_float, 'prop' )),
    COMMETHOD([dispid(4), 'propget'], HRESULT, 'RightIndent',
              ( ['out', 'retval'], POINTER(c_float), 'prop' )),
    COMMETHOD([dispid(4), 'propput'], HRESULT, 'RightIndent',
              ( ['in'], c_float, 'prop' )),
    COMMETHOD([dispid(5), 'propget'], HRESULT, 'SpaceBefore',
              ( ['out', 'retval'], POINTER(c_float), 'prop' )),
    COMMETHOD([dispid(5), 'propput'], HRESULT, 'SpaceBefore',
              ( ['in'], c_float, 'prop' )),
    COMMETHOD([dispid(6), 'propget'], HRESULT, 'SpaceAfter',
              ( ['out', 'retval'], POINTER(c_float), 'prop' )),
    COMMETHOD([dispid(6), 'propput'], HRESULT, 'SpaceAfter',
              ( ['in'], c_float, 'prop' )),
    COMMETHOD([dispid(7), 'propget'], HRESULT, 'HTMLDivisions',
              ( ['out', 'retval'], POINTER(POINTER(HTMLDivisions)), 'prop' )),
    COMMETHOD([dispid(8)], HRESULT, 'HTMLDivisionParent',
              ( ['in', 'optional'], POINTER(VARIANT), 'LevelsUp' ),
              ( ['out', 'retval'], POINTER(POINTER(HTMLDivision)), 'prop' )),
    COMMETHOD([dispid(101)], HRESULT, 'Delete'),
]
################################################################
## code template for HTMLDivision implementation
##class HTMLDivision_Impl(object):
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Creator(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Range(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Borders(self):
##        '-no docstring-'
##        #return prop
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    LeftIndent = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    RightIndent = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    SpaceBefore = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    SpaceAfter = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def HTMLDivisions(self):
##        '-no docstring-'
##        #return prop
##
##    def HTMLDivisionParent(self, LevelsUp):
##        '-no docstring-'
##        #return prop
##
##    def Delete(self):
##        '-no docstring-'
##        #return 
##

FileConverter._methods_ = [
    COMMETHOD([dispid(1000), 'propget'], HRESULT, 'Application',
              ( ['out', 'retval'], POINTER(POINTER(Application)), 'prop' )),
    COMMETHOD([dispid(1001), 'propget'], HRESULT, 'Creator',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(1002), 'propget'], HRESULT, 'Parent',
              ( ['out', 'retval'], POINTER(POINTER(IDispatch)), 'prop' )),
    COMMETHOD([dispid(0), 'propget'], HRESULT, 'FormatName',
              ( ['out', 'retval'], POINTER(BSTR), 'prop' )),
    COMMETHOD([dispid(1), 'propget'], HRESULT, 'ClassName',
              ( ['out', 'retval'], POINTER(BSTR), 'prop' )),
    COMMETHOD([dispid(2), 'propget'], HRESULT, 'SaveFormat',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(3), 'propget'], HRESULT, 'OpenFormat',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(4), 'propget'], HRESULT, 'CanSave',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'prop' )),
    COMMETHOD([dispid(5), 'propget'], HRESULT, 'CanOpen',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'prop' )),
    COMMETHOD([dispid(6), 'propget'], HRESULT, 'Path',
              ( ['out', 'retval'], POINTER(BSTR), 'prop' )),
    COMMETHOD([dispid(7), 'propget'], HRESULT, 'Name',
              ( ['out', 'retval'], POINTER(BSTR), 'prop' )),
    COMMETHOD([dispid(8), 'propget'], HRESULT, 'Extensions',
              ( ['out', 'retval'], POINTER(BSTR), 'prop' )),
]
################################################################
## code template for FileConverter implementation
##class FileConverter_Impl(object):
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Creator(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def FormatName(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def ClassName(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def SaveFormat(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def OpenFormat(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def CanSave(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def CanOpen(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Path(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Name(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Extensions(self):
##        '-no docstring-'
##        #return prop
##


# values for enumeration 'WdSortFieldTypeHID'
emptyenum = 0
WdSortFieldTypeHID = c_int # enum

# values for enumeration 'WdDiacriticColor'
wdDiacriticColorBidi = 0
wdDiacriticColorLatin = 1
WdDiacriticColor = c_int # enum
class DropLines(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{9F1DF642-3CCE-4D83-A770-D2634A05D278}')
    _idlflags_ = ['dual', 'nonextensible', 'oleautomation']
DropLines._methods_ = [
    COMMETHOD([dispid(1610743808), 'propget'], HRESULT, 'Name',
              ( ['out', 'retval'], POINTER(BSTR), 'prop' )),
    COMMETHOD([dispid(1610743809)], HRESULT, 'Select'),
    COMMETHOD([dispid(1610743810), 'propget'], HRESULT, 'Parent',
              ( ['out', 'retval'], POINTER(POINTER(IDispatch)), 'prop' )),
    COMMETHOD([dispid(1610743811), 'propget'], HRESULT, 'Border',
              ( ['out', 'retval'], POINTER(POINTER(ChartBorder)), 'prop' )),
    COMMETHOD([dispid(1610743812)], HRESULT, 'Delete'),
    COMMETHOD([dispid(1610743813), 'propget'], HRESULT, 'Format',
              ( ['out', 'retval'], POINTER(POINTER(ChartFormat)), 'prop' )),
    COMMETHOD([dispid(148), 'propget'], HRESULT, 'Application',
              ( ['out', 'retval'], POINTER(POINTER(IDispatch)), 'prop' )),
    COMMETHOD([dispid(149), 'propget'], HRESULT, 'Creator',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
]
################################################################
## code template for DropLines implementation
##class DropLines_Impl(object):
##    @property
##    def Name(self):
##        '-no docstring-'
##        #return prop
##
##    def Select(self):
##        '-no docstring-'
##        #return 
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Border(self):
##        '-no docstring-'
##        #return prop
##
##    def Delete(self):
##        '-no docstring-'
##        #return 
##
##    @property
##    def Format(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Creator(self):
##        '-no docstring-'
##        #return prop
##


# values for enumeration 'WdTrailingCharacter'
wdTrailingTab = 0
wdTrailingSpace = 1
wdTrailingNone = 2
WdTrailingCharacter = c_int # enum

# values for enumeration 'WdTocFormat'
wdTOCTemplate = 0
wdTOCClassic = 1
wdTOCDistinctive = 2
wdTOCFancy = 3
wdTOCModern = 4
wdTOCFormal = 5
wdTOCSimple = 6
WdTocFormat = c_int # enum
class Paragraph(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{00020957-0000-0000-C000-000000000046}')
    _idlflags_ = ['dual', 'nonextensible', 'oleautomation']

# values for enumeration 'WdLineSpacing'
wdLineSpaceSingle = 0
wdLineSpace1pt5 = 1
wdLineSpaceDouble = 2
wdLineSpaceAtLeast = 3
wdLineSpaceExactly = 4
wdLineSpaceMultiple = 5
WdLineSpacing = c_int # enum

# values for enumeration 'WdReadingOrder'
wdReadingOrderRtl = 0
wdReadingOrderLtr = 1
WdReadingOrder = c_int # enum
Paragraphs._methods_ = [
    COMMETHOD([dispid(-4), 'nonbrowsable', 'propget'], HRESULT, '_NewEnum',
              ( ['out', 'retval'], POINTER(POINTER(IUnknown)), 'prop' )),
    COMMETHOD([dispid(2), 'propget'], HRESULT, 'Count',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(3), 'propget'], HRESULT, 'First',
              ( ['out', 'retval'], POINTER(POINTER(Paragraph)), 'prop' )),
    COMMETHOD([dispid(4), 'propget'], HRESULT, 'Last',
              ( ['out', 'retval'], POINTER(POINTER(Paragraph)), 'prop' )),
    COMMETHOD([dispid(1000), 'propget'], HRESULT, 'Application',
              ( ['out', 'retval'], POINTER(POINTER(Application)), 'prop' )),
    COMMETHOD([dispid(1001), 'propget'], HRESULT, 'Creator',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(1002), 'propget'], HRESULT, 'Parent',
              ( ['out', 'retval'], POINTER(POINTER(IDispatch)), 'prop' )),
    COMMETHOD([dispid(1102), 'propget'], HRESULT, 'Format',
              ( ['out', 'retval'], POINTER(POINTER(ParagraphFormat)), 'prop' )),
    COMMETHOD([dispid(1102), 'propput'], HRESULT, 'Format',
              ( ['in'], POINTER(ParagraphFormat), 'prop' )),
    COMMETHOD([dispid(1103), 'propget'], HRESULT, 'TabStops',
              ( ['out', 'retval'], POINTER(POINTER(TabStops)), 'prop' )),
    COMMETHOD([dispid(1103), 'propput'], HRESULT, 'TabStops',
              ( ['in'], POINTER(TabStops), 'prop' )),
    COMMETHOD([dispid(1100), 'propget'], HRESULT, 'Borders',
              ( ['out', 'retval'], POINTER(POINTER(Borders)), 'prop' )),
    COMMETHOD([dispid(1100), 'propput'], HRESULT, 'Borders',
              ( ['in'], POINTER(Borders), 'prop' )),
    COMMETHOD([dispid(100), 'propget'], HRESULT, 'Style',
              ( ['out', 'retval'], POINTER(VARIANT), 'prop' )),
    COMMETHOD([dispid(100), 'propput'], HRESULT, 'Style',
              ( ['in'], POINTER(VARIANT), 'prop' )),
    COMMETHOD([dispid(101), 'propget'], HRESULT, 'Alignment',
              ( ['out', 'retval'], POINTER(WdParagraphAlignment), 'prop' )),
    COMMETHOD([dispid(101), 'propput'], HRESULT, 'Alignment',
              ( ['in'], WdParagraphAlignment, 'prop' )),
    COMMETHOD([dispid(102), 'propget'], HRESULT, 'KeepTogether',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(102), 'propput'], HRESULT, 'KeepTogether',
              ( ['in'], c_int, 'prop' )),
    COMMETHOD([dispid(103), 'propget'], HRESULT, 'KeepWithNext',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(103), 'propput'], HRESULT, 'KeepWithNext',
              ( ['in'], c_int, 'prop' )),
    COMMETHOD([dispid(104), 'propget'], HRESULT, 'PageBreakBefore',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(104), 'propput'], HRESULT, 'PageBreakBefore',
              ( ['in'], c_int, 'prop' )),
    COMMETHOD([dispid(105), 'propget'], HRESULT, 'NoLineNumber',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(105), 'propput'], HRESULT, 'NoLineNumber',
              ( ['in'], c_int, 'prop' )),
    COMMETHOD([dispid(106), 'propget'], HRESULT, 'RightIndent',
              ( ['out', 'retval'], POINTER(c_float), 'prop' )),
    COMMETHOD([dispid(106), 'propput'], HRESULT, 'RightIndent',
              ( ['in'], c_float, 'prop' )),
    COMMETHOD([dispid(107), 'propget'], HRESULT, 'LeftIndent',
              ( ['out', 'retval'], POINTER(c_float), 'prop' )),
    COMMETHOD([dispid(107), 'propput'], HRESULT, 'LeftIndent',
              ( ['in'], c_float, 'prop' )),
    COMMETHOD([dispid(108), 'propget'], HRESULT, 'FirstLineIndent',
              ( ['out', 'retval'], POINTER(c_float), 'prop' )),
    COMMETHOD([dispid(108), 'propput'], HRESULT, 'FirstLineIndent',
              ( ['in'], c_float, 'prop' )),
    COMMETHOD([dispid(109), 'propget'], HRESULT, 'LineSpacing',
              ( ['out', 'retval'], POINTER(c_float), 'prop' )),
    COMMETHOD([dispid(109), 'propput'], HRESULT, 'LineSpacing',
              ( ['in'], c_float, 'prop' )),
    COMMETHOD([dispid(110), 'propget'], HRESULT, 'LineSpacingRule',
              ( ['out', 'retval'], POINTER(WdLineSpacing), 'prop' )),
    COMMETHOD([dispid(110), 'propput'], HRESULT, 'LineSpacingRule',
              ( ['in'], WdLineSpacing, 'prop' )),
    COMMETHOD([dispid(111), 'propget'], HRESULT, 'SpaceBefore',
              ( ['out', 'retval'], POINTER(c_float), 'prop' )),
    COMMETHOD([dispid(111), 'propput'], HRESULT, 'SpaceBefore',
              ( ['in'], c_float, 'prop' )),
    COMMETHOD([dispid(112), 'propget'], HRESULT, 'SpaceAfter',
              ( ['out', 'retval'], POINTER(c_float), 'prop' )),
    COMMETHOD([dispid(112), 'propput'], HRESULT, 'SpaceAfter',
              ( ['in'], c_float, 'prop' )),
    COMMETHOD([dispid(113), 'propget'], HRESULT, 'Hyphenation',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(113), 'propput'], HRESULT, 'Hyphenation',
              ( ['in'], c_int, 'prop' )),
    COMMETHOD([dispid(114), 'propget'], HRESULT, 'WidowControl',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(114), 'propput'], HRESULT, 'WidowControl',
              ( ['in'], c_int, 'prop' )),
    COMMETHOD([dispid(116), 'propget'], HRESULT, 'Shading',
              ( ['out', 'retval'], POINTER(POINTER(Shading)), 'prop' )),
    COMMETHOD([dispid(117), 'propget'], HRESULT, 'FarEastLineBreakControl',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(117), 'propput'], HRESULT, 'FarEastLineBreakControl',
              ( ['in'], c_int, 'prop' )),
    COMMETHOD([dispid(118), 'propget'], HRESULT, 'WordWrap',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(118), 'propput'], HRESULT, 'WordWrap',
              ( ['in'], c_int, 'prop' )),
    COMMETHOD([dispid(119), 'propget'], HRESULT, 'HangingPunctuation',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(119), 'propput'], HRESULT, 'HangingPunctuation',
              ( ['in'], c_int, 'prop' )),
    COMMETHOD([dispid(120), 'propget'], HRESULT, 'HalfWidthPunctuationOnTopOfLine',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(120), 'propput'], HRESULT, 'HalfWidthPunctuationOnTopOfLine',
              ( ['in'], c_int, 'prop' )),
    COMMETHOD([dispid(121), 'propget'], HRESULT, 'AddSpaceBetweenFarEastAndAlpha',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(121), 'propput'], HRESULT, 'AddSpaceBetweenFarEastAndAlpha',
              ( ['in'], c_int, 'prop' )),
    COMMETHOD([dispid(122), 'propget'], HRESULT, 'AddSpaceBetweenFarEastAndDigit',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(122), 'propput'], HRESULT, 'AddSpaceBetweenFarEastAndDigit',
              ( ['in'], c_int, 'prop' )),
    COMMETHOD([dispid(123), 'propget'], HRESULT, 'BaseLineAlignment',
              ( ['out', 'retval'], POINTER(WdBaselineAlignment), 'prop' )),
    COMMETHOD([dispid(123), 'propput'], HRESULT, 'BaseLineAlignment',
              ( ['in'], WdBaselineAlignment, 'prop' )),
    COMMETHOD([dispid(124), 'propget'], HRESULT, 'AutoAdjustRightIndent',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(124), 'propput'], HRESULT, 'AutoAdjustRightIndent',
              ( ['in'], c_int, 'prop' )),
    COMMETHOD([dispid(125), 'propget'], HRESULT, 'DisableLineHeightGrid',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(125), 'propput'], HRESULT, 'DisableLineHeightGrid',
              ( ['in'], c_int, 'prop' )),
    COMMETHOD([dispid(202), 'propget'], HRESULT, 'OutlineLevel',
              ( ['out', 'retval'], POINTER(WdOutlineLevel), 'prop' )),
    COMMETHOD([dispid(202), 'propput'], HRESULT, 'OutlineLevel',
              ( ['in'], WdOutlineLevel, 'prop' )),
    COMMETHOD([dispid(0)], HRESULT, 'Item',
              ( ['in'], c_int, 'Index' ),
              ( ['out', 'retval'], POINTER(POINTER(Paragraph)), 'prop' )),
    COMMETHOD([dispid(5)], HRESULT, 'Add',
              ( ['in', 'optional'], POINTER(VARIANT), 'Range' ),
              ( ['out', 'retval'], POINTER(POINTER(Paragraph)), 'prop' )),
    COMMETHOD([dispid(301)], HRESULT, 'CloseUp'),
    COMMETHOD([dispid(302)], HRESULT, 'OpenUp'),
    COMMETHOD([dispid(303)], HRESULT, 'OpenOrCloseUp'),
    COMMETHOD([dispid(304)], HRESULT, 'TabHangingIndent',
              ( ['in'], c_short, 'Count' )),
    COMMETHOD([dispid(306)], HRESULT, 'TabIndent',
              ( ['in'], c_short, 'Count' )),
    COMMETHOD([dispid(312)], HRESULT, 'Reset'),
    COMMETHOD([dispid(313)], HRESULT, 'Space1'),
    COMMETHOD([dispid(314)], HRESULT, 'Space15'),
    COMMETHOD([dispid(315)], HRESULT, 'Space2'),
    COMMETHOD([dispid(320)], HRESULT, 'IndentCharWidth',
              ( ['in'], c_short, 'Count' )),
    COMMETHOD([dispid(322)], HRESULT, 'IndentFirstLineCharWidth',
              ( ['in'], c_short, 'Count' )),
    COMMETHOD([dispid(324)], HRESULT, 'OutlinePromote'),
    COMMETHOD([dispid(325)], HRESULT, 'OutlineDemote'),
    COMMETHOD([dispid(326)], HRESULT, 'OutlineDemoteToBody'),
    COMMETHOD([dispid(333)], HRESULT, 'Indent'),
    COMMETHOD([dispid(334)], HRESULT, 'Outdent'),
    COMMETHOD([dispid(126), 'propget'], HRESULT, 'CharacterUnitRightIndent',
              ( ['out', 'retval'], POINTER(c_float), 'prop' )),
    COMMETHOD([dispid(126), 'propput'], HRESULT, 'CharacterUnitRightIndent',
              ( ['in'], c_float, 'prop' )),
    COMMETHOD([dispid(127), 'propget'], HRESULT, 'CharacterUnitLeftIndent',
              ( ['out', 'retval'], POINTER(c_float), 'prop' )),
    COMMETHOD([dispid(127), 'propput'], HRESULT, 'CharacterUnitLeftIndent',
              ( ['in'], c_float, 'prop' )),
    COMMETHOD([dispid(128), 'propget'], HRESULT, 'CharacterUnitFirstLineIndent',
              ( ['out', 'retval'], POINTER(c_float), 'prop' )),
    COMMETHOD([dispid(128), 'propput'], HRESULT, 'CharacterUnitFirstLineIndent',
              ( ['in'], c_float, 'prop' )),
    COMMETHOD([dispid(129), 'propget'], HRESULT, 'LineUnitBefore',
              ( ['out', 'retval'], POINTER(c_float), 'prop' )),
    COMMETHOD([dispid(129), 'propput'], HRESULT, 'LineUnitBefore',
              ( ['in'], c_float, 'prop' )),
    COMMETHOD([dispid(130), 'propget'], HRESULT, 'LineUnitAfter',
              ( ['out', 'retval'], POINTER(c_float), 'prop' )),
    COMMETHOD([dispid(130), 'propput'], HRESULT, 'LineUnitAfter',
              ( ['in'], c_float, 'prop' )),
    COMMETHOD([dispid(131), 'propget'], HRESULT, 'ReadingOrder',
              ( ['out', 'retval'], POINTER(WdReadingOrder), 'prop' )),
    COMMETHOD([dispid(131), 'propput'], HRESULT, 'ReadingOrder',
              ( ['in'], WdReadingOrder, 'prop' )),
    COMMETHOD([dispid(132), 'propget'], HRESULT, 'SpaceBeforeAuto',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(132), 'propput'], HRESULT, 'SpaceBeforeAuto',
              ( ['in'], c_int, 'prop' )),
    COMMETHOD([dispid(133), 'propget'], HRESULT, 'SpaceAfterAuto',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(133), 'propput'], HRESULT, 'SpaceAfterAuto',
              ( ['in'], c_int, 'prop' )),
    COMMETHOD([dispid(335)], HRESULT, 'IncreaseSpacing'),
    COMMETHOD([dispid(336)], HRESULT, 'DecreaseSpacing'),
]
################################################################
## code template for Paragraphs implementation
##class Paragraphs_Impl(object):
##    @property
##    def _NewEnum(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Count(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def First(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Last(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Creator(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return prop
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    Format = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    TabStops = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    Borders = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    Style = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    Alignment = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    KeepTogether = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    KeepWithNext = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    PageBreakBefore = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    NoLineNumber = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    RightIndent = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    LeftIndent = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    FirstLineIndent = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    LineSpacing = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    LineSpacingRule = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    SpaceBefore = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    SpaceAfter = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    Hyphenation = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    WidowControl = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Shading(self):
##        '-no docstring-'
##        #return prop
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    FarEastLineBreakControl = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    WordWrap = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    HangingPunctuation = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    HalfWidthPunctuationOnTopOfLine = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    AddSpaceBetweenFarEastAndAlpha = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    AddSpaceBetweenFarEastAndDigit = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    BaseLineAlignment = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    AutoAdjustRightIndent = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    DisableLineHeightGrid = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    OutlineLevel = property(_get, _set, doc = _set.__doc__)
##
##    def Item(self, Index):
##        '-no docstring-'
##        #return prop
##
##    def Add(self, Range):
##        '-no docstring-'
##        #return prop
##
##    def CloseUp(self):
##        '-no docstring-'
##        #return 
##
##    def OpenUp(self):
##        '-no docstring-'
##        #return 
##
##    def OpenOrCloseUp(self):
##        '-no docstring-'
##        #return 
##
##    def TabHangingIndent(self, Count):
##        '-no docstring-'
##        #return 
##
##    def TabIndent(self, Count):
##        '-no docstring-'
##        #return 
##
##    def Reset(self):
##        '-no docstring-'
##        #return 
##
##    def Space1(self):
##        '-no docstring-'
##        #return 
##
##    def Space15(self):
##        '-no docstring-'
##        #return 
##
##    def Space2(self):
##        '-no docstring-'
##        #return 
##
##    def IndentCharWidth(self, Count):
##        '-no docstring-'
##        #return 
##
##    def IndentFirstLineCharWidth(self, Count):
##        '-no docstring-'
##        #return 
##
##    def OutlinePromote(self):
##        '-no docstring-'
##        #return 
##
##    def OutlineDemote(self):
##        '-no docstring-'
##        #return 
##
##    def OutlineDemoteToBody(self):
##        '-no docstring-'
##        #return 
##
##    def Indent(self):
##        '-no docstring-'
##        #return 
##
##    def Outdent(self):
##        '-no docstring-'
##        #return 
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    CharacterUnitRightIndent = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    CharacterUnitLeftIndent = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    CharacterUnitFirstLineIndent = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    LineUnitBefore = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    LineUnitAfter = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    ReadingOrder = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    SpaceBeforeAuto = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    SpaceAfterAuto = property(_get, _set, doc = _set.__doc__)
##
##    def IncreaseSpacing(self):
##        '-no docstring-'
##        #return 
##
##    def DecreaseSpacing(self):
##        '-no docstring-'
##        #return 
##


# values for enumeration 'WdPageNumberAlignment'
wdAlignPageNumberLeft = 0
wdAlignPageNumberCenter = 1
wdAlignPageNumberRight = 2
wdAlignPageNumberInside = 3
wdAlignPageNumberOutside = 4
WdPageNumberAlignment = c_int # enum
Model3DFormat._methods_ = [
    COMMETHOD([dispid(1000), 'propget'], HRESULT, 'Application',
              ( ['out', 'retval'], POINTER(POINTER(Application)), 'prop' )),
    COMMETHOD([dispid(1001), 'propget'], HRESULT, 'Creator',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(1), 'propget'], HRESULT, 'Parent',
              ( ['out', 'retval'], POINTER(POINTER(IDispatch)), 'prop' )),
    COMMETHOD([dispid(100), 'propget'], HRESULT, 'AutoFit',
              ( ['out', 'retval'], POINTER(comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoTriState), 'prop' )),
    COMMETHOD([dispid(100), 'propput'], HRESULT, 'AutoFit',
              ( ['in'], comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoTriState, 'prop' )),
    COMMETHOD([dispid(101), 'propget'], HRESULT, 'RotationX',
              ( ['out', 'retval'], POINTER(c_float), 'prop' )),
    COMMETHOD([dispid(101), 'propput'], HRESULT, 'RotationX',
              ( ['in'], c_float, 'prop' )),
    COMMETHOD([dispid(102), 'propget'], HRESULT, 'RotationY',
              ( ['out', 'retval'], POINTER(c_float), 'prop' )),
    COMMETHOD([dispid(102), 'propput'], HRESULT, 'RotationY',
              ( ['in'], c_float, 'prop' )),
    COMMETHOD([dispid(103), 'propget'], HRESULT, 'RotationZ',
              ( ['out', 'retval'], POINTER(c_float), 'prop' )),
    COMMETHOD([dispid(103), 'propput'], HRESULT, 'RotationZ',
              ( ['in'], c_float, 'prop' )),
    COMMETHOD([dispid(104), 'propget'], HRESULT, 'FieldOfView',
              ( ['out', 'retval'], POINTER(c_float), 'prop' )),
    COMMETHOD([dispid(104), 'propput'], HRESULT, 'FieldOfView',
              ( ['in'], c_float, 'prop' )),
    COMMETHOD([dispid(105), 'propget'], HRESULT, 'CameraPositionX',
              ( ['out', 'retval'], POINTER(c_float), 'prop' )),
    COMMETHOD([dispid(105), 'propput'], HRESULT, 'CameraPositionX',
              ( ['in'], c_float, 'prop' )),
    COMMETHOD([dispid(106), 'propget'], HRESULT, 'CameraPositionY',
              ( ['out', 'retval'], POINTER(c_float), 'prop' )),
    COMMETHOD([dispid(106), 'propput'], HRESULT, 'CameraPositionY',
              ( ['in'], c_float, 'prop' )),
    COMMETHOD([dispid(107), 'propget'], HRESULT, 'CameraPositionZ',
              ( ['out', 'retval'], POINTER(c_float), 'prop' )),
    COMMETHOD([dispid(107), 'propput'], HRESULT, 'CameraPositionZ',
              ( ['in'], c_float, 'prop' )),
    COMMETHOD([dispid(108), 'propget'], HRESULT, 'LookAtPointX',
              ( ['out', 'retval'], POINTER(c_float), 'prop' )),
    COMMETHOD([dispid(108), 'propput'], HRESULT, 'LookAtPointX',
              ( ['in'], c_float, 'prop' )),
    COMMETHOD([dispid(109), 'propget'], HRESULT, 'LookAtPointY',
              ( ['out', 'retval'], POINTER(c_float), 'prop' )),
    COMMETHOD([dispid(109), 'propput'], HRESULT, 'LookAtPointY',
              ( ['in'], c_float, 'prop' )),
    COMMETHOD([dispid(110), 'propget'], HRESULT, 'LookAtPointZ',
              ( ['out', 'retval'], POINTER(c_float), 'prop' )),
    COMMETHOD([dispid(110), 'propput'], HRESULT, 'LookAtPointZ',
              ( ['in'], c_float, 'prop' )),
    COMMETHOD([dispid(111)], HRESULT, 'ResetModel',
              ( ['in', 'optional'], VARIANT_BOOL, 'ResetSize', False )),
    COMMETHOD([dispid(112)], HRESULT, 'IncrementRotationX',
              ( ['in'], c_float, 'Increment' )),
    COMMETHOD([dispid(113)], HRESULT, 'IncrementRotationY',
              ( ['in'], c_float, 'Increment' )),
    COMMETHOD([dispid(114)], HRESULT, 'IncrementRotationZ',
              ( ['in'], c_float, 'Increment' )),
]
################################################################
## code template for Model3DFormat implementation
##class Model3DFormat_Impl(object):
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Creator(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return prop
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    AutoFit = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    RotationX = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    RotationY = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    RotationZ = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    FieldOfView = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    CameraPositionX = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    CameraPositionY = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    CameraPositionZ = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    LookAtPointX = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    LookAtPointY = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    LookAtPointZ = property(_get, _set, doc = _set.__doc__)
##
##    def ResetModel(self, ResetSize):
##        '-no docstring-'
##        #return 
##
##    def IncrementRotationX(self, Increment):
##        '-no docstring-'
##        #return 
##
##    def IncrementRotationY(self, Increment):
##        '-no docstring-'
##        #return 
##
##    def IncrementRotationZ(self, Increment):
##        '-no docstring-'
##        #return 
##

class Field(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{0002092F-0000-0000-C000-000000000046}')
    _idlflags_ = ['dual', 'nonextensible', 'oleautomation']
Fields._methods_ = [
    COMMETHOD([dispid(1000), 'propget'], HRESULT, 'Application',
              ( ['out', 'retval'], POINTER(POINTER(Application)), 'prop' )),
    COMMETHOD([dispid(1001), 'propget'], HRESULT, 'Creator',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(1002), 'propget'], HRESULT, 'Parent',
              ( ['out', 'retval'], POINTER(POINTER(IDispatch)), 'prop' )),
    COMMETHOD([dispid(1), 'propget'], HRESULT, 'Count',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(2), 'propget'], HRESULT, 'Locked',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(2), 'propput'], HRESULT, 'Locked',
              ( ['in'], c_int, 'prop' )),
    COMMETHOD([dispid(-4), 'nonbrowsable', 'propget'], HRESULT, '_NewEnum',
              ( ['out', 'retval'], POINTER(POINTER(IUnknown)), 'prop' )),
    COMMETHOD([dispid(0)], HRESULT, 'Item',
              ( ['in'], c_int, 'Index' ),
              ( ['out', 'retval'], POINTER(POINTER(Field)), 'prop' )),
    COMMETHOD([dispid(100)], HRESULT, 'ToggleShowCodes'),
    COMMETHOD([dispid(101)], HRESULT, 'Update',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(102)], HRESULT, 'Unlink'),
    COMMETHOD([dispid(104)], HRESULT, 'UpdateSource'),
    COMMETHOD([dispid(105)], HRESULT, 'Add',
              ( ['in'], POINTER(Range), 'Range' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'Type' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'Text' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'PreserveFormatting' ),
              ( ['out', 'retval'], POINTER(POINTER(Field)), 'prop' )),
]
################################################################
## code template for Fields implementation
##class Fields_Impl(object):
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Creator(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Count(self):
##        '-no docstring-'
##        #return prop
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    Locked = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def _NewEnum(self):
##        '-no docstring-'
##        #return prop
##
##    def Item(self, Index):
##        '-no docstring-'
##        #return prop
##
##    def ToggleShowCodes(self):
##        '-no docstring-'
##        #return 
##
##    def Update(self):
##        '-no docstring-'
##        #return prop
##
##    def Unlink(self):
##        '-no docstring-'
##        #return 
##
##    def UpdateSource(self):
##        '-no docstring-'
##        #return 
##
##    def Add(self, Range, Type, Text, PreserveFormatting):
##        '-no docstring-'
##        #return prop
##


# values for enumeration 'WdArrangeStyle'
wdTiled = 0
wdIcons = 1
WdArrangeStyle = c_int # enum

# values for enumeration 'XlBorderWeight'
xlHairline = 1
xlMedium = -4138
xlThick = 4
xlThin = 2
XlBorderWeight = c_int # enum
class LinkFormat(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{00020931-0000-0000-C000-000000000046}')
    _idlflags_ = ['dual', 'nonextensible', 'oleautomation']
Shape._methods_ = [
    COMMETHOD([dispid(8000), 'propget'], HRESULT, 'Application',
              ( ['out', 'retval'], POINTER(POINTER(Application)), 'prop' )),
    COMMETHOD([dispid(8001), 'propget'], HRESULT, 'Creator',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(1), 'propget'], HRESULT, 'Parent',
              ( ['out', 'retval'], POINTER(POINTER(IDispatch)), 'prop' )),
    COMMETHOD([dispid(100), 'propget'], HRESULT, 'Adjustments',
              ( ['out', 'retval'], POINTER(POINTER(Adjustments)), 'prop' )),
    COMMETHOD([dispid(101), 'propget'], HRESULT, 'AutoShapeType',
              ( ['out', 'retval'], POINTER(comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoAutoShapeType), 'prop' )),
    COMMETHOD([dispid(101), 'propput'], HRESULT, 'AutoShapeType',
              ( ['in'], comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoAutoShapeType, 'prop' )),
    COMMETHOD([dispid(103), 'propget'], HRESULT, 'Callout',
              ( ['out', 'retval'], POINTER(POINTER(CalloutFormat)), 'prop' )),
    COMMETHOD([dispid(104), 'hidden', 'propget'], HRESULT, 'ConnectionSiteCount',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(105), 'hidden', 'propget'], HRESULT, 'Connector',
              ( ['out', 'retval'], POINTER(comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoTriState), 'prop' )),
    COMMETHOD([dispid(106), 'hidden', 'propget'], HRESULT, 'ConnectorFormat',
              ( ['out', 'retval'], POINTER(POINTER(ConnectorFormat)), 'prop' )),
    COMMETHOD([dispid(107), 'propget'], HRESULT, 'Fill',
              ( ['out', 'retval'], POINTER(POINTER(FillFormat)), 'prop' )),
    COMMETHOD([dispid(108), 'propget'], HRESULT, 'GroupItems',
              ( ['out', 'retval'], POINTER(POINTER(GroupShapes)), 'prop' )),
    COMMETHOD([dispid(109), 'propget'], HRESULT, 'Height',
              ( ['out', 'retval'], POINTER(c_float), 'prop' )),
    COMMETHOD([dispid(109), 'propput'], HRESULT, 'Height',
              ( ['in'], c_float, 'prop' )),
    COMMETHOD([dispid(110), 'propget'], HRESULT, 'HorizontalFlip',
              ( ['out', 'retval'], POINTER(comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoTriState), 'prop' )),
    COMMETHOD([dispid(111), 'propget'], HRESULT, 'Left',
              ( ['out', 'retval'], POINTER(c_float), 'prop' )),
    COMMETHOD([dispid(111), 'propput'], HRESULT, 'Left',
              ( ['in'], c_float, 'prop' )),
    COMMETHOD([dispid(112), 'propget'], HRESULT, 'Line',
              ( ['out', 'retval'], POINTER(POINTER(LineFormat)), 'prop' )),
    COMMETHOD([dispid(113), 'propget'], HRESULT, 'LockAspectRatio',
              ( ['out', 'retval'], POINTER(comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoTriState), 'prop' )),
    COMMETHOD([dispid(113), 'propput'], HRESULT, 'LockAspectRatio',
              ( ['in'], comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoTriState, 'prop' )),
    COMMETHOD([dispid(115), 'propget'], HRESULT, 'Name',
              ( ['out', 'retval'], POINTER(BSTR), 'prop' )),
    COMMETHOD([dispid(115), 'propput'], HRESULT, 'Name',
              ( ['in'], BSTR, 'prop' )),
    COMMETHOD([dispid(116), 'propget'], HRESULT, 'Nodes',
              ( ['out', 'retval'], POINTER(POINTER(ShapeNodes)), 'prop' )),
    COMMETHOD([dispid(117), 'propget'], HRESULT, 'Rotation',
              ( ['out', 'retval'], POINTER(c_float), 'prop' )),
    COMMETHOD([dispid(117), 'propput'], HRESULT, 'Rotation',
              ( ['in'], c_float, 'prop' )),
    COMMETHOD([dispid(118), 'propget'], HRESULT, 'PictureFormat',
              ( ['out', 'retval'], POINTER(POINTER(PictureFormat)), 'prop' )),
    COMMETHOD([dispid(119), 'propget'], HRESULT, 'Shadow',
              ( ['out', 'retval'], POINTER(POINTER(ShadowFormat)), 'prop' )),
    COMMETHOD([dispid(120), 'propget'], HRESULT, 'TextEffect',
              ( ['out', 'retval'], POINTER(POINTER(TextEffectFormat)), 'prop' )),
    COMMETHOD([dispid(121), 'propget'], HRESULT, 'TextFrame',
              ( ['out', 'retval'], POINTER(POINTER(TextFrame)), 'prop' )),
    COMMETHOD([dispid(122), 'propget'], HRESULT, 'ThreeD',
              ( ['out', 'retval'], POINTER(POINTER(ThreeDFormat)), 'prop' )),
    COMMETHOD([dispid(123), 'propget'], HRESULT, 'Top',
              ( ['out', 'retval'], POINTER(c_float), 'prop' )),
    COMMETHOD([dispid(123), 'propput'], HRESULT, 'Top',
              ( ['in'], c_float, 'prop' )),
    COMMETHOD([dispid(124), 'propget'], HRESULT, 'Type',
              ( ['out', 'retval'], POINTER(comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoShapeType), 'prop' )),
    COMMETHOD([dispid(125), 'propget'], HRESULT, 'VerticalFlip',
              ( ['out', 'retval'], POINTER(comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoTriState), 'prop' )),
    COMMETHOD([dispid(126), 'propget'], HRESULT, 'Vertices',
              ( ['out', 'retval'], POINTER(VARIANT), 'prop' )),
    COMMETHOD([dispid(127), 'propget'], HRESULT, 'Visible',
              ( ['out', 'retval'], POINTER(comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoTriState), 'prop' )),
    COMMETHOD([dispid(127), 'propput'], HRESULT, 'Visible',
              ( ['in'], comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoTriState, 'prop' )),
    COMMETHOD([dispid(128), 'propget'], HRESULT, 'Width',
              ( ['out', 'retval'], POINTER(c_float), 'prop' )),
    COMMETHOD([dispid(128), 'propput'], HRESULT, 'Width',
              ( ['in'], c_float, 'prop' )),
    COMMETHOD([dispid(129), 'propget'], HRESULT, 'ZOrderPosition',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(1001), 'propget'], HRESULT, 'Hyperlink',
              ( ['out', 'retval'], POINTER(POINTER(Hyperlink)), 'prop' )),
    COMMETHOD([dispid(300), 'propget'], HRESULT, 'RelativeHorizontalPosition',
              ( ['out', 'retval'], POINTER(WdRelativeHorizontalPosition), 'prop' )),
    COMMETHOD([dispid(300), 'propput'], HRESULT, 'RelativeHorizontalPosition',
              ( ['in'], WdRelativeHorizontalPosition, 'prop' )),
    COMMETHOD([dispid(301), 'propget'], HRESULT, 'RelativeVerticalPosition',
              ( ['out', 'retval'], POINTER(WdRelativeVerticalPosition), 'prop' )),
    COMMETHOD([dispid(301), 'propput'], HRESULT, 'RelativeVerticalPosition',
              ( ['in'], WdRelativeVerticalPosition, 'prop' )),
    COMMETHOD([dispid(302), 'propget'], HRESULT, 'LockAnchor',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(302), 'propput'], HRESULT, 'LockAnchor',
              ( ['in'], c_int, 'prop' )),
    COMMETHOD([dispid(303), 'propget'], HRESULT, 'WrapFormat',
              ( ['out', 'retval'], POINTER(POINTER(WrapFormat)), 'prop' )),
    COMMETHOD([dispid(500), 'propget'], HRESULT, 'OLEFormat',
              ( ['out', 'retval'], POINTER(POINTER(OLEFormat)), 'prop' )),
    COMMETHOD([dispid(501), 'propget'], HRESULT, 'Anchor',
              ( ['out', 'retval'], POINTER(POINTER(Range)), 'prop' )),
    COMMETHOD([dispid(502), 'propget'], HRESULT, 'LinkFormat',
              ( ['out', 'retval'], POINTER(POINTER(LinkFormat)), 'prop' )),
    COMMETHOD([dispid(10)], HRESULT, 'Apply'),
    COMMETHOD([dispid(11)], HRESULT, 'Delete'),
    COMMETHOD([dispid(12)], HRESULT, 'Duplicate',
              ( ['out', 'retval'], POINTER(POINTER(Shape)), 'prop' )),
    COMMETHOD([dispid(13)], HRESULT, 'Flip',
              ( ['in'], comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoFlipCmd, 'FlipCmd' )),
    COMMETHOD([dispid(14)], HRESULT, 'IncrementLeft',
              ( ['in'], c_float, 'Increment' )),
    COMMETHOD([dispid(15)], HRESULT, 'IncrementRotation',
              ( ['in'], c_float, 'Increment' )),
    COMMETHOD([dispid(16)], HRESULT, 'IncrementTop',
              ( ['in'], c_float, 'Increment' )),
    COMMETHOD([dispid(17)], HRESULT, 'PickUp'),
    COMMETHOD([dispid(18), 'hidden'], HRESULT, 'RerouteConnections'),
    COMMETHOD([dispid(19)], HRESULT, 'ScaleHeight',
              ( ['in'], c_float, 'Factor' ),
              ( ['in'], comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoTriState, 'RelativeToOriginalSize' ),
              ( ['in', 'optional'], comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoScaleFrom, 'Scale', 0 )),
    COMMETHOD([dispid(20)], HRESULT, 'ScaleWidth',
              ( ['in'], c_float, 'Factor' ),
              ( ['in'], comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoTriState, 'RelativeToOriginalSize' ),
              ( ['in', 'optional'], comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoScaleFrom, 'Scale', 0 )),
    COMMETHOD([dispid(21)], HRESULT, 'Select',
              ( ['in', 'optional'], POINTER(VARIANT), 'Replace' )),
    COMMETHOD([dispid(22)], HRESULT, 'SetShapesDefaultProperties'),
    COMMETHOD([dispid(23)], HRESULT, 'Ungroup',
              ( ['out', 'retval'], POINTER(POINTER(ShapeRange)), 'prop' )),
    COMMETHOD([dispid(24)], HRESULT, 'ZOrder',
              ( ['in'], comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoZOrderCmd, 'ZOrderCmd' )),
    COMMETHOD([dispid(25)], HRESULT, 'ConvertToInlineShape',
              ( ['out', 'retval'], POINTER(POINTER(InlineShape)), 'prop' )),
    COMMETHOD([dispid(29), 'hidden'], HRESULT, 'ConvertToFrame',
              ( ['out', 'retval'], POINTER(POINTER(Frame)), 'prop' )),
    COMMETHOD([dispid(50), 'hidden'], HRESULT, 'Activate'),
    COMMETHOD([dispid(131), 'propget'], HRESULT, 'AlternativeText',
              ( ['out', 'retval'], POINTER(BSTR), 'prop' )),
    COMMETHOD([dispid(131), 'propput'], HRESULT, 'AlternativeText',
              ( ['in'], BSTR, 'prop' )),
    COMMETHOD([dispid(503), 'propget'], HRESULT, 'Script',
              ( ['out', 'retval'], POINTER(POINTER(comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.Script)), 'prop' )),
    COMMETHOD([dispid(132), 'hidden', 'propget'], HRESULT, 'HasDiagram',
              ( ['out', 'retval'], POINTER(comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoTriState), 'prop' )),
    COMMETHOD([dispid(133), 'hidden', 'propget'], HRESULT, 'Diagram',
              ( ['out', 'retval'], POINTER(POINTER(comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.IMsoDiagram)), 'prop' )),
    COMMETHOD([dispid(134), 'hidden', 'propget'], HRESULT, 'HasDiagramNode',
              ( ['out', 'retval'], POINTER(comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoTriState), 'prop' )),
    COMMETHOD([dispid(135), 'hidden', 'propget'], HRESULT, 'DiagramNode',
              ( ['out', 'retval'], POINTER(POINTER(DiagramNode)), 'prop' )),
    COMMETHOD([dispid(136), 'propget'], HRESULT, 'Child',
              ( ['out', 'retval'], POINTER(comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoTriState), 'prop' )),
    COMMETHOD([dispid(137), 'propget'], HRESULT, 'ParentGroup',
              ( ['out', 'retval'], POINTER(POINTER(Shape)), 'prop' )),
    COMMETHOD([dispid(138), 'propget'], HRESULT, 'CanvasItems',
              ( ['out', 'retval'], POINTER(POINTER(CanvasShapes)), 'prop' )),
    COMMETHOD([dispid(139), 'propget'], HRESULT, 'ID',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(140)], HRESULT, 'CanvasCropLeft',
              ( ['in'], c_float, 'Increment' )),
    COMMETHOD([dispid(141)], HRESULT, 'CanvasCropTop',
              ( ['in'], c_float, 'Increment' )),
    COMMETHOD([dispid(142)], HRESULT, 'CanvasCropRight',
              ( ['in'], c_float, 'Increment' )),
    COMMETHOD([dispid(143)], HRESULT, 'CanvasCropBottom',
              ( ['in'], c_float, 'Increment' )),
    COMMETHOD([dispid(144), 'hidden', 'propput'], HRESULT, 'RTF',
              ( ['in'], BSTR, 'rhs' )),
    COMMETHOD([dispid(145), 'propget'], HRESULT, 'LayoutInCell',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(145), 'propput'], HRESULT, 'LayoutInCell',
              ( ['in'], c_int, 'prop' )),
    COMMETHOD([dispid(148), 'propget'], HRESULT, 'HasChart',
              ( ['out', 'retval'], POINTER(comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoTriState), 'prop' )),
    COMMETHOD([dispid(149), 'propget'], HRESULT, 'Chart',
              ( ['out', 'retval'], POINTER(POINTER(Chart)), 'prop' )),
    COMMETHOD([dispid(200), 'propget'], HRESULT, 'LeftRelative',
              ( ['out', 'retval'], POINTER(c_float), 'prop' )),
    COMMETHOD([dispid(200), 'propput'], HRESULT, 'LeftRelative',
              ( ['in'], c_float, 'prop' )),
    COMMETHOD([dispid(201), 'propget'], HRESULT, 'TopRelative',
              ( ['out', 'retval'], POINTER(c_float), 'prop' )),
    COMMETHOD([dispid(201), 'propput'], HRESULT, 'TopRelative',
              ( ['in'], c_float, 'prop' )),
    COMMETHOD([dispid(202), 'propget'], HRESULT, 'WidthRelative',
              ( ['out', 'retval'], POINTER(c_float), 'prop' )),
    COMMETHOD([dispid(202), 'propput'], HRESULT, 'WidthRelative',
              ( ['in'], c_float, 'prop' )),
    COMMETHOD([dispid(203), 'propget'], HRESULT, 'HeightRelative',
              ( ['out', 'retval'], POINTER(c_float), 'prop' )),
    COMMETHOD([dispid(203), 'propput'], HRESULT, 'HeightRelative',
              ( ['in'], c_float, 'prop' )),
    COMMETHOD([dispid(204), 'propget'], HRESULT, 'RelativeHorizontalSize',
              ( ['out', 'retval'], POINTER(WdRelativeHorizontalSize), 'prop' )),
    COMMETHOD([dispid(204), 'propput'], HRESULT, 'RelativeHorizontalSize',
              ( ['in'], WdRelativeHorizontalSize, 'prop' )),
    COMMETHOD([dispid(205), 'propget'], HRESULT, 'RelativeVerticalSize',
              ( ['out', 'retval'], POINTER(WdRelativeVerticalSize), 'prop' )),
    COMMETHOD([dispid(205), 'propput'], HRESULT, 'RelativeVerticalSize',
              ( ['in'], WdRelativeVerticalSize, 'prop' )),
    COMMETHOD([dispid(152), 'propget'], HRESULT, 'SoftEdge',
              ( ['out', 'retval'], POINTER(POINTER(SoftEdgeFormat)), 'prop' )),
    COMMETHOD([dispid(153), 'propget'], HRESULT, 'Glow',
              ( ['out', 'retval'], POINTER(POINTER(GlowFormat)), 'prop' )),
    COMMETHOD([dispid(154), 'propget'], HRESULT, 'Reflection',
              ( ['out', 'retval'], POINTER(POINTER(ReflectionFormat)), 'prop' )),
    COMMETHOD([dispid(155), 'propget'], HRESULT, 'TextFrame2',
              ( ['out', 'retval'], POINTER(POINTER(comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.TextFrame2)), 'prop' )),
    COMMETHOD([dispid(206), 'propget'], HRESULT, 'HasSmartArt',
              ( ['out', 'retval'], POINTER(comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoTriState), 'prop' )),
    COMMETHOD([dispid(156), 'propget'], HRESULT, 'SmartArt',
              ( ['out', 'retval'], POINTER(POINTER(comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.SmartArt)), 'prop' )),
    COMMETHOD([dispid(150), 'propget'], HRESULT, 'ShapeStyle',
              ( ['out', 'retval'], POINTER(comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoShapeStyleIndex), 'prop' )),
    COMMETHOD([dispid(150), 'propput'], HRESULT, 'ShapeStyle',
              ( ['in'], comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoShapeStyleIndex, 'prop' )),
    COMMETHOD([dispid(151), 'propget'], HRESULT, 'BackgroundStyle',
              ( ['out', 'retval'], POINTER(comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoBackgroundStyleIndex), 'prop' )),
    COMMETHOD([dispid(151), 'propput'], HRESULT, 'BackgroundStyle',
              ( ['in'], comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoBackgroundStyleIndex, 'prop' )),
    COMMETHOD([dispid(158), 'propget'], HRESULT, 'Title',
              ( ['out', 'retval'], POINTER(BSTR), 'prop' )),
    COMMETHOD([dispid(158), 'propput'], HRESULT, 'Title',
              ( ['in'], BSTR, 'prop' )),
    COMMETHOD([dispid(207), 'hidden', 'propget'], HRESULT, 'AnchorID',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(208), 'hidden', 'propget'], HRESULT, 'EditID',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(209), 'propget'], HRESULT, 'GraphicStyle',
              ( ['out', 'retval'], POINTER(comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoGraphicStyleIndex), 'prop' )),
    COMMETHOD([dispid(209), 'propput'], HRESULT, 'GraphicStyle',
              ( ['in'], comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoGraphicStyleIndex, 'prop' )),
    COMMETHOD([dispid(210), 'propget'], HRESULT, 'Model3D',
              ( ['out', 'retval'], POINTER(POINTER(Model3DFormat)), 'prop' )),
    COMMETHOD([dispid(211), 'propget'], HRESULT, 'Decorative',
              ( ['out', 'retval'], POINTER(comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoTriState), 'prop' )),
    COMMETHOD([dispid(211), 'propput'], HRESULT, 'Decorative',
              ( ['in'], comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoTriState, 'prop' )),
]
################################################################
## code template for Shape implementation
##class Shape_Impl(object):
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Creator(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Adjustments(self):
##        '-no docstring-'
##        #return prop
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    AutoShapeType = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Callout(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def ConnectionSiteCount(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Connector(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def ConnectorFormat(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Fill(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def GroupItems(self):
##        '-no docstring-'
##        #return prop
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    Height = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def HorizontalFlip(self):
##        '-no docstring-'
##        #return prop
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    Left = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Line(self):
##        '-no docstring-'
##        #return prop
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    LockAspectRatio = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    Name = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Nodes(self):
##        '-no docstring-'
##        #return prop
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    Rotation = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def PictureFormat(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Shadow(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def TextEffect(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def TextFrame(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def ThreeD(self):
##        '-no docstring-'
##        #return prop
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    Top = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Type(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def VerticalFlip(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Vertices(self):
##        '-no docstring-'
##        #return prop
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    Visible = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    Width = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def ZOrderPosition(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Hyperlink(self):
##        '-no docstring-'
##        #return prop
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    RelativeHorizontalPosition = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    RelativeVerticalPosition = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    LockAnchor = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def WrapFormat(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def OLEFormat(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Anchor(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def LinkFormat(self):
##        '-no docstring-'
##        #return prop
##
##    def Apply(self):
##        '-no docstring-'
##        #return 
##
##    def Delete(self):
##        '-no docstring-'
##        #return 
##
##    def Duplicate(self):
##        '-no docstring-'
##        #return prop
##
##    def Flip(self, FlipCmd):
##        '-no docstring-'
##        #return 
##
##    def IncrementLeft(self, Increment):
##        '-no docstring-'
##        #return 
##
##    def IncrementRotation(self, Increment):
##        '-no docstring-'
##        #return 
##
##    def IncrementTop(self, Increment):
##        '-no docstring-'
##        #return 
##
##    def PickUp(self):
##        '-no docstring-'
##        #return 
##
##    def RerouteConnections(self):
##        '-no docstring-'
##        #return 
##
##    def ScaleHeight(self, Factor, RelativeToOriginalSize, Scale):
##        '-no docstring-'
##        #return 
##
##    def ScaleWidth(self, Factor, RelativeToOriginalSize, Scale):
##        '-no docstring-'
##        #return 
##
##    def Select(self, Replace):
##        '-no docstring-'
##        #return 
##
##    def SetShapesDefaultProperties(self):
##        '-no docstring-'
##        #return 
##
##    def Ungroup(self):
##        '-no docstring-'
##        #return prop
##
##    def ZOrder(self, ZOrderCmd):
##        '-no docstring-'
##        #return 
##
##    def ConvertToInlineShape(self):
##        '-no docstring-'
##        #return prop
##
##    def ConvertToFrame(self):
##        '-no docstring-'
##        #return prop
##
##    def Activate(self):
##        '-no docstring-'
##        #return 
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    AlternativeText = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Script(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def HasDiagram(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Diagram(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def HasDiagramNode(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def DiagramNode(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Child(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def ParentGroup(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def CanvasItems(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def ID(self):
##        '-no docstring-'
##        #return prop
##
##    def CanvasCropLeft(self, Increment):
##        '-no docstring-'
##        #return 
##
##    def CanvasCropTop(self, Increment):
##        '-no docstring-'
##        #return 
##
##    def CanvasCropRight(self, Increment):
##        '-no docstring-'
##        #return 
##
##    def CanvasCropBottom(self, Increment):
##        '-no docstring-'
##        #return 
##
##    def _set(self, rhs):
##        '-no docstring-'
##    RTF = property(fset = _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    LayoutInCell = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def HasChart(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Chart(self):
##        '-no docstring-'
##        #return prop
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    LeftRelative = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    TopRelative = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    WidthRelative = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    HeightRelative = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    RelativeHorizontalSize = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    RelativeVerticalSize = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def SoftEdge(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Glow(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Reflection(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def TextFrame2(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def HasSmartArt(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def SmartArt(self):
##        '-no docstring-'
##        #return prop
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    ShapeStyle = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    BackgroundStyle = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    Title = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def AnchorID(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def EditID(self):
##        '-no docstring-'
##        #return prop
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    GraphicStyle = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Model3D(self):
##        '-no docstring-'
##        #return prop
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    Decorative = property(_get, _set, doc = _set.__doc__)
##


# values for enumeration 'WdFrameSizeRule'
wdFrameAuto = 0
wdFrameAtLeast = 1
wdFrameExact = 2
WdFrameSizeRule = c_int # enum
Frame._methods_ = [
    COMMETHOD([dispid(1000), 'propget'], HRESULT, 'Application',
              ( ['out', 'retval'], POINTER(POINTER(Application)), 'prop' )),
    COMMETHOD([dispid(1001), 'propget'], HRESULT, 'Creator',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(1002), 'propget'], HRESULT, 'Parent',
              ( ['out', 'retval'], POINTER(POINTER(IDispatch)), 'prop' )),
    COMMETHOD([dispid(1), 'propget'], HRESULT, 'HeightRule',
              ( ['out', 'retval'], POINTER(WdFrameSizeRule), 'prop' )),
    COMMETHOD([dispid(1), 'propput'], HRESULT, 'HeightRule',
              ( ['in'], WdFrameSizeRule, 'prop' )),
    COMMETHOD([dispid(2), 'propget'], HRESULT, 'WidthRule',
              ( ['out', 'retval'], POINTER(WdFrameSizeRule), 'prop' )),
    COMMETHOD([dispid(2), 'propput'], HRESULT, 'WidthRule',
              ( ['in'], WdFrameSizeRule, 'prop' )),
    COMMETHOD([dispid(3), 'propget'], HRESULT, 'HorizontalDistanceFromText',
              ( ['out', 'retval'], POINTER(c_float), 'prop' )),
    COMMETHOD([dispid(3), 'propput'], HRESULT, 'HorizontalDistanceFromText',
              ( ['in'], c_float, 'prop' )),
    COMMETHOD([dispid(4), 'propget'], HRESULT, 'Height',
              ( ['out', 'retval'], POINTER(c_float), 'prop' )),
    COMMETHOD([dispid(4), 'propput'], HRESULT, 'Height',
              ( ['in'], c_float, 'prop' )),
    COMMETHOD([dispid(5), 'propget'], HRESULT, 'HorizontalPosition',
              ( ['out', 'retval'], POINTER(c_float), 'prop' )),
    COMMETHOD([dispid(5), 'propput'], HRESULT, 'HorizontalPosition',
              ( ['in'], c_float, 'prop' )),
    COMMETHOD([dispid(6), 'propget'], HRESULT, 'LockAnchor',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'prop' )),
    COMMETHOD([dispid(6), 'propput'], HRESULT, 'LockAnchor',
              ( ['in'], VARIANT_BOOL, 'prop' )),
    COMMETHOD([dispid(7), 'propget'], HRESULT, 'RelativeHorizontalPosition',
              ( ['out', 'retval'], POINTER(WdRelativeHorizontalPosition), 'prop' )),
    COMMETHOD([dispid(7), 'propput'], HRESULT, 'RelativeHorizontalPosition',
              ( ['in'], WdRelativeHorizontalPosition, 'prop' )),
    COMMETHOD([dispid(8), 'propget'], HRESULT, 'RelativeVerticalPosition',
              ( ['out', 'retval'], POINTER(WdRelativeVerticalPosition), 'prop' )),
    COMMETHOD([dispid(8), 'propput'], HRESULT, 'RelativeVerticalPosition',
              ( ['in'], WdRelativeVerticalPosition, 'prop' )),
    COMMETHOD([dispid(9), 'propget'], HRESULT, 'VerticalDistanceFromText',
              ( ['out', 'retval'], POINTER(c_float), 'prop' )),
    COMMETHOD([dispid(9), 'propput'], HRESULT, 'VerticalDistanceFromText',
              ( ['in'], c_float, 'prop' )),
    COMMETHOD([dispid(10), 'propget'], HRESULT, 'VerticalPosition',
              ( ['out', 'retval'], POINTER(c_float), 'prop' )),
    COMMETHOD([dispid(10), 'propput'], HRESULT, 'VerticalPosition',
              ( ['in'], c_float, 'prop' )),
    COMMETHOD([dispid(11), 'propget'], HRESULT, 'Width',
              ( ['out', 'retval'], POINTER(c_float), 'prop' )),
    COMMETHOD([dispid(11), 'propput'], HRESULT, 'Width',
              ( ['in'], c_float, 'prop' )),
    COMMETHOD([dispid(12), 'propget'], HRESULT, 'TextWrap',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'prop' )),
    COMMETHOD([dispid(12), 'propput'], HRESULT, 'TextWrap',
              ( ['in'], VARIANT_BOOL, 'prop' )),
    COMMETHOD([dispid(13), 'propget'], HRESULT, 'Shading',
              ( ['out', 'retval'], POINTER(POINTER(Shading)), 'prop' )),
    COMMETHOD([dispid(1100), 'propget'], HRESULT, 'Borders',
              ( ['out', 'retval'], POINTER(POINTER(Borders)), 'prop' )),
    COMMETHOD([dispid(1100), 'propput'], HRESULT, 'Borders',
              ( ['in'], POINTER(Borders), 'prop' )),
    COMMETHOD([dispid(15), 'propget'], HRESULT, 'Range',
              ( ['out', 'retval'], POINTER(POINTER(Range)), 'prop' )),
    COMMETHOD([dispid(100)], HRESULT, 'Delete'),
    COMMETHOD([dispid(65535)], HRESULT, 'Select'),
    COMMETHOD([dispid(101)], HRESULT, 'Copy'),
    COMMETHOD([dispid(102)], HRESULT, 'Cut'),
]
################################################################
## code template for Frame implementation
##class Frame_Impl(object):
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Creator(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return prop
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    HeightRule = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    WidthRule = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    HorizontalDistanceFromText = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    Height = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    HorizontalPosition = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    LockAnchor = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    RelativeHorizontalPosition = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    RelativeVerticalPosition = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    VerticalDistanceFromText = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    VerticalPosition = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    Width = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    TextWrap = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Shading(self):
##        '-no docstring-'
##        #return prop
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    Borders = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Range(self):
##        '-no docstring-'
##        #return prop
##
##    def Delete(self):
##        '-no docstring-'
##        #return 
##
##    def Select(self):
##        '-no docstring-'
##        #return 
##
##    def Copy(self):
##        '-no docstring-'
##        #return 
##
##    def Cut(self):
##        '-no docstring-'
##        #return 
##

class Footnote(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{0002093F-0000-0000-C000-000000000046}')
    _idlflags_ = ['dual', 'nonextensible', 'oleautomation']
Footnote._methods_ = [
    COMMETHOD([dispid(1000), 'propget'], HRESULT, 'Application',
              ( ['out', 'retval'], POINTER(POINTER(Application)), 'prop' )),
    COMMETHOD([dispid(1001), 'propget'], HRESULT, 'Creator',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(1002), 'propget'], HRESULT, 'Parent',
              ( ['out', 'retval'], POINTER(POINTER(IDispatch)), 'prop' )),
    COMMETHOD([dispid(4), 'propget'], HRESULT, 'Range',
              ( ['out', 'retval'], POINTER(POINTER(Range)), 'prop' )),
    COMMETHOD([dispid(5), 'propget'], HRESULT, 'Reference',
              ( ['out', 'retval'], POINTER(POINTER(Range)), 'prop' )),
    COMMETHOD([dispid(6), 'propget'], HRESULT, 'Index',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(10)], HRESULT, 'Delete'),
]
################################################################
## code template for Footnote implementation
##class Footnote_Impl(object):
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Creator(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Range(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Reference(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Index(self):
##        '-no docstring-'
##        #return prop
##
##    def Delete(self):
##        '-no docstring-'
##        #return 
##

class TableOfContents(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{00020913-0000-0000-C000-000000000046}')
    _idlflags_ = ['dual', 'nonextensible', 'oleautomation']
TablesOfContents._methods_ = [
    COMMETHOD([dispid(1000), 'propget'], HRESULT, 'Application',
              ( ['out', 'retval'], POINTER(POINTER(Application)), 'prop' )),
    COMMETHOD([dispid(1001), 'propget'], HRESULT, 'Creator',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(1002), 'propget'], HRESULT, 'Parent',
              ( ['out', 'retval'], POINTER(POINTER(IDispatch)), 'prop' )),
    COMMETHOD([dispid(-4), 'nonbrowsable', 'propget'], HRESULT, '_NewEnum',
              ( ['out', 'retval'], POINTER(POINTER(IUnknown)), 'prop' )),
    COMMETHOD([dispid(1), 'propget'], HRESULT, 'Count',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(2), 'propget'], HRESULT, 'Format',
              ( ['out', 'retval'], POINTER(WdTocFormat), 'prop' )),
    COMMETHOD([dispid(2), 'propput'], HRESULT, 'Format',
              ( ['in'], WdTocFormat, 'prop' )),
    COMMETHOD([dispid(0)], HRESULT, 'Item',
              ( ['in'], c_int, 'Index' ),
              ( ['out', 'retval'], POINTER(POINTER(TableOfContents)), 'prop' )),
    COMMETHOD([dispid(100), 'hidden'], HRESULT, 'AddOld',
              ( ['in'], POINTER(Range), 'Range' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'UseHeadingStyles' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'UpperHeadingLevel' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'LowerHeadingLevel' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'UseFields' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'TableID' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'RightAlignPageNumbers' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'IncludePageNumbers' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'AddedStyles' ),
              ( ['out', 'retval'], POINTER(POINTER(TableOfContents)), 'prop' )),
    COMMETHOD([dispid(101)], HRESULT, 'MarkEntry',
              ( ['in'], POINTER(Range), 'Range' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'Entry' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'EntryAutoText' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'TableID' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'Level' ),
              ( ['out', 'retval'], POINTER(POINTER(Field)), 'prop' )),
    COMMETHOD([dispid(102), 'hidden'], HRESULT, 'Add2000',
              ( ['in'], POINTER(Range), 'Range' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'UseHeadingStyles' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'UpperHeadingLevel' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'LowerHeadingLevel' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'UseFields' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'TableID' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'RightAlignPageNumbers' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'IncludePageNumbers' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'AddedStyles' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'UseHyperlinks' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'HidePageNumbersInWeb' ),
              ( ['out', 'retval'], POINTER(POINTER(TableOfContents)), 'prop' )),
    COMMETHOD([dispid(103)], HRESULT, 'Add',
              ( ['in'], POINTER(Range), 'Range' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'UseHeadingStyles' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'UpperHeadingLevel' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'LowerHeadingLevel' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'UseFields' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'TableID' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'RightAlignPageNumbers' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'IncludePageNumbers' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'AddedStyles' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'UseHyperlinks' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'HidePageNumbersInWeb' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'UseOutlineLevels' ),
              ( ['out', 'retval'], POINTER(POINTER(TableOfContents)), 'prop' )),
]
################################################################
## code template for TablesOfContents implementation
##class TablesOfContents_Impl(object):
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Creator(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def _NewEnum(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Count(self):
##        '-no docstring-'
##        #return prop
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    Format = property(_get, _set, doc = _set.__doc__)
##
##    def Item(self, Index):
##        '-no docstring-'
##        #return prop
##
##    def AddOld(self, Range, UseHeadingStyles, UpperHeadingLevel, LowerHeadingLevel, UseFields, TableID, RightAlignPageNumbers, IncludePageNumbers, AddedStyles):
##        '-no docstring-'
##        #return prop
##
##    def MarkEntry(self, Range, Entry, EntryAutoText, TableID, Level):
##        '-no docstring-'
##        #return prop
##
##    def Add2000(self, Range, UseHeadingStyles, UpperHeadingLevel, LowerHeadingLevel, UseFields, TableID, RightAlignPageNumbers, IncludePageNumbers, AddedStyles, UseHyperlinks, HidePageNumbersInWeb):
##        '-no docstring-'
##        #return prop
##
##    def Add(self, Range, UseHeadingStyles, UpperHeadingLevel, LowerHeadingLevel, UseFields, TableID, RightAlignPageNumbers, IncludePageNumbers, AddedStyles, UseHyperlinks, HidePageNumbersInWeb, UseOutlineLevels):
##        '-no docstring-'
##        #return prop
##


# values for enumeration 'WdToaFormat'
wdTOATemplate = 0
wdTOAClassic = 1
wdTOADistinctive = 2
wdTOAFormal = 3
wdTOASimple = 4
WdToaFormat = c_int # enum
class TableOfAuthorities(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{00020911-0000-0000-C000-000000000046}')
    _idlflags_ = ['dual', 'nonextensible', 'oleautomation']
TablesOfAuthorities._methods_ = [
    COMMETHOD([dispid(1000), 'propget'], HRESULT, 'Application',
              ( ['out', 'retval'], POINTER(POINTER(Application)), 'prop' )),
    COMMETHOD([dispid(1001), 'propget'], HRESULT, 'Creator',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(1002), 'propget'], HRESULT, 'Parent',
              ( ['out', 'retval'], POINTER(POINTER(IDispatch)), 'prop' )),
    COMMETHOD([dispid(-4), 'nonbrowsable', 'propget'], HRESULT, '_NewEnum',
              ( ['out', 'retval'], POINTER(POINTER(IUnknown)), 'prop' )),
    COMMETHOD([dispid(1), 'propget'], HRESULT, 'Count',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(2), 'propget'], HRESULT, 'Format',
              ( ['out', 'retval'], POINTER(WdToaFormat), 'prop' )),
    COMMETHOD([dispid(2), 'propput'], HRESULT, 'Format',
              ( ['in'], WdToaFormat, 'prop' )),
    COMMETHOD([dispid(0)], HRESULT, 'Item',
              ( ['in'], c_int, 'Index' ),
              ( ['out', 'retval'], POINTER(POINTER(TableOfAuthorities)), 'prop' )),
    COMMETHOD([dispid(100)], HRESULT, 'Add',
              ( ['in'], POINTER(Range), 'Range' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'Category' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'Bookmark' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'Passim' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'KeepEntryFormatting' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'Separator' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'IncludeSequenceName' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'EntrySeparator' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'PageRangeSeparator' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'IncludeCategoryHeader' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'PageNumberSeparator' ),
              ( ['out', 'retval'], POINTER(POINTER(TableOfAuthorities)), 'prop' )),
    COMMETHOD([dispid(103)], HRESULT, 'NextCitation',
              ( ['in'], BSTR, 'ShortCitation' )),
    COMMETHOD([dispid(101)], HRESULT, 'MarkCitation',
              ( ['in'], POINTER(Range), 'Range' ),
              ( ['in'], BSTR, 'ShortCitation' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'LongCitation' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'LongCitationAutoText' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'Category' ),
              ( ['out', 'retval'], POINTER(POINTER(Field)), 'prop' )),
    COMMETHOD([dispid(102)], HRESULT, 'MarkAllCitations',
              ( ['in'], BSTR, 'ShortCitation' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'LongCitation' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'LongCitationAutoText' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'Category' )),
]
################################################################
## code template for TablesOfAuthorities implementation
##class TablesOfAuthorities_Impl(object):
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Creator(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def _NewEnum(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Count(self):
##        '-no docstring-'
##        #return prop
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    Format = property(_get, _set, doc = _set.__doc__)
##
##    def Item(self, Index):
##        '-no docstring-'
##        #return prop
##
##    def Add(self, Range, Category, Bookmark, Passim, KeepEntryFormatting, Separator, IncludeSequenceName, EntrySeparator, PageRangeSeparator, IncludeCategoryHeader, PageNumberSeparator):
##        '-no docstring-'
##        #return prop
##
##    def NextCitation(self, ShortCitation):
##        '-no docstring-'
##        #return 
##
##    def MarkCitation(self, Range, ShortCitation, LongCitation, LongCitationAutoText, Category):
##        '-no docstring-'
##        #return prop
##
##    def MarkAllCitations(self, ShortCitation, LongCitation, LongCitationAutoText, Category):
##        '-no docstring-'
##        #return 
##


# values for enumeration 'XlChartItem'
xlDataLabel = 0
xlChartArea = 2
xlSeries = 3
xlChartTitle = 4
xlWalls = 5
xlCorners = 6
xlDataTable = 7
xlTrendline = 8
xlErrorBars = 9
xlXErrorBars = 10
xlYErrorBars = 11
xlLegendEntry = 12
xlLegendKey = 13
xlShape = 14
xlMajorGridlines = 15
xlMinorGridlines = 16
xlAxisTitle = 17
xlUpBars = 18
xlPlotArea = 19
xlDownBars = 20
xlAxis = 21
xlSeriesLines = 22
xlFloor = 23
xlLegend = 24
xlHiLoLines = 25
xlDropLines = 26
xlRadarAxisLabels = 27
xlNothing = 28
xlLeaderLines = 29
xlDisplayUnitLabel = 30
xlPivotChartFieldButton = 31
xlPivotChartDropZone = 32
XlChartItem = c_int # enum

# values for enumeration 'WdMoveToTextMark'
wdMoveToTextMarkNone = 0
wdMoveToTextMarkBold = 1
wdMoveToTextMarkItalic = 2
wdMoveToTextMarkUnderline = 3
wdMoveToTextMarkDoubleUnderline = 4
wdMoveToTextMarkColorOnly = 5
wdMoveToTextMarkStrikeThrough = 6
wdMoveToTextMarkDoubleStrikeThrough = 7
WdMoveToTextMark = c_int # enum
Field._methods_ = [
    COMMETHOD([dispid(1000), 'propget'], HRESULT, 'Application',
              ( ['out', 'retval'], POINTER(POINTER(Application)), 'prop' )),
    COMMETHOD([dispid(1001), 'propget'], HRESULT, 'Creator',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(1002), 'propget'], HRESULT, 'Parent',
              ( ['out', 'retval'], POINTER(POINTER(IDispatch)), 'prop' )),
    COMMETHOD([dispid(0), 'propget'], HRESULT, 'Code',
              ( ['out', 'retval'], POINTER(POINTER(Range)), 'prop' )),
    COMMETHOD([dispid(0), 'propput'], HRESULT, 'Code',
              ( ['in'], POINTER(Range), 'prop' )),
    COMMETHOD([dispid(1), 'propget'], HRESULT, 'Type',
              ( ['out', 'retval'], POINTER(WdFieldType), 'prop' )),
    COMMETHOD([dispid(2), 'propget'], HRESULT, 'Locked',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'prop' )),
    COMMETHOD([dispid(2), 'propput'], HRESULT, 'Locked',
              ( ['in'], VARIANT_BOOL, 'prop' )),
    COMMETHOD([dispid(3), 'propget'], HRESULT, 'Kind',
              ( ['out', 'retval'], POINTER(WdFieldKind), 'prop' )),
    COMMETHOD([dispid(4), 'propget'], HRESULT, 'Result',
              ( ['out', 'retval'], POINTER(POINTER(Range)), 'prop' )),
    COMMETHOD([dispid(4), 'propput'], HRESULT, 'Result',
              ( ['in'], POINTER(Range), 'prop' )),
    COMMETHOD([dispid(5), 'propget'], HRESULT, 'Data',
              ( ['out', 'retval'], POINTER(BSTR), 'prop' )),
    COMMETHOD([dispid(5), 'propput'], HRESULT, 'Data',
              ( ['in'], BSTR, 'prop' )),
    COMMETHOD([dispid(6), 'propget'], HRESULT, 'Next',
              ( ['out', 'retval'], POINTER(POINTER(Field)), 'prop' )),
    COMMETHOD([dispid(7), 'propget'], HRESULT, 'Previous',
              ( ['out', 'retval'], POINTER(POINTER(Field)), 'prop' )),
    COMMETHOD([dispid(8), 'propget'], HRESULT, 'Index',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(9), 'propget'], HRESULT, 'ShowCodes',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'prop' )),
    COMMETHOD([dispid(9), 'propput'], HRESULT, 'ShowCodes',
              ( ['in'], VARIANT_BOOL, 'prop' )),
    COMMETHOD([dispid(10), 'propget'], HRESULT, 'LinkFormat',
              ( ['out', 'retval'], POINTER(POINTER(LinkFormat)), 'prop' )),
    COMMETHOD([dispid(11), 'propget'], HRESULT, 'OLEFormat',
              ( ['out', 'retval'], POINTER(POINTER(OLEFormat)), 'prop' )),
    COMMETHOD([dispid(12), 'propget'], HRESULT, 'InlineShape',
              ( ['out', 'retval'], POINTER(POINTER(InlineShape)), 'prop' )),
    COMMETHOD([dispid(65535)], HRESULT, 'Select'),
    COMMETHOD([dispid(101)], HRESULT, 'Update',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'prop' )),
    COMMETHOD([dispid(102)], HRESULT, 'Unlink'),
    COMMETHOD([dispid(103)], HRESULT, 'UpdateSource'),
    COMMETHOD([dispid(104)], HRESULT, 'DoClick'),
    COMMETHOD([dispid(105)], HRESULT, 'Copy'),
    COMMETHOD([dispid(106)], HRESULT, 'Cut'),
    COMMETHOD([dispid(107)], HRESULT, 'Delete'),
]
################################################################
## code template for Field implementation
##class Field_Impl(object):
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Creator(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return prop
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    Code = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Type(self):
##        '-no docstring-'
##        #return prop
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    Locked = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Kind(self):
##        '-no docstring-'
##        #return prop
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    Result = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    Data = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Next(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Previous(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Index(self):
##        '-no docstring-'
##        #return prop
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    ShowCodes = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def LinkFormat(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def OLEFormat(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def InlineShape(self):
##        '-no docstring-'
##        #return prop
##
##    def Select(self):
##        '-no docstring-'
##        #return 
##
##    def Update(self):
##        '-no docstring-'
##        #return prop
##
##    def Unlink(self):
##        '-no docstring-'
##        #return 
##
##    def UpdateSource(self):
##        '-no docstring-'
##        #return 
##
##    def DoClick(self):
##        '-no docstring-'
##        #return 
##
##    def Copy(self):
##        '-no docstring-'
##        #return 
##
##    def Cut(self):
##        '-no docstring-'
##        #return 
##
##    def Delete(self):
##        '-no docstring-'
##        #return 
##

ListEntry._methods_ = [
    COMMETHOD([dispid(1000), 'propget'], HRESULT, 'Application',
              ( ['out', 'retval'], POINTER(POINTER(Application)), 'prop' )),
    COMMETHOD([dispid(1001), 'propget'], HRESULT, 'Creator',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(1002), 'propget'], HRESULT, 'Parent',
              ( ['out', 'retval'], POINTER(POINTER(IDispatch)), 'prop' )),
    COMMETHOD([dispid(1), 'propget'], HRESULT, 'Index',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(2), 'propget'], HRESULT, 'Name',
              ( ['out', 'retval'], POINTER(BSTR), 'prop' )),
    COMMETHOD([dispid(2), 'propput'], HRESULT, 'Name',
              ( ['in'], BSTR, 'prop' )),
    COMMETHOD([dispid(11)], HRESULT, 'Delete'),
]
################################################################
## code template for ListEntry implementation
##class ListEntry_Impl(object):
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Creator(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Index(self):
##        '-no docstring-'
##        #return prop
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    Name = property(_get, _set, doc = _set.__doc__)
##
##    def Delete(self):
##        '-no docstring-'
##        #return 
##

Editor._methods_ = [
    COMMETHOD([dispid(100), 'propget'], HRESULT, 'ID',
              ( ['out', 'retval'], POINTER(BSTR), 'prop' )),
    COMMETHOD([dispid(101), 'propget'], HRESULT, 'Name',
              ( ['out', 'retval'], POINTER(BSTR), 'prop' )),
    COMMETHOD([dispid(102), 'propget'], HRESULT, 'Range',
              ( ['out', 'retval'], POINTER(POINTER(Range)), 'prop' )),
    COMMETHOD([dispid(103), 'propget'], HRESULT, 'NextRange',
              ( ['out', 'retval'], POINTER(POINTER(Range)), 'prop' )),
    COMMETHOD([dispid(1000), 'propget'], HRESULT, 'Application',
              ( ['out', 'retval'], POINTER(POINTER(Application)), 'prop' )),
    COMMETHOD([dispid(1001), 'propget'], HRESULT, 'Creator',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(1002), 'propget'], HRESULT, 'Parent',
              ( ['out', 'retval'], POINTER(POINTER(IDispatch)), 'prop' )),
    COMMETHOD([dispid(500)], HRESULT, 'Delete'),
    COMMETHOD([dispid(501)], HRESULT, 'DeleteAll'),
    COMMETHOD([dispid(502)], HRESULT, 'SelectAll'),
]
################################################################
## code template for Editor implementation
##class Editor_Impl(object):
##    @property
##    def ID(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Name(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Range(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def NextRange(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Creator(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return prop
##
##    def Delete(self):
##        '-no docstring-'
##        #return 
##
##    def DeleteAll(self):
##        '-no docstring-'
##        #return 
##
##    def SelectAll(self):
##        '-no docstring-'
##        #return 
##


# values for enumeration 'WdTextOrientationHID'
emptyenum = 0
WdTextOrientationHID = c_int # enum
HangulHanjaConversionDictionaries._methods_ = [
    COMMETHOD([dispid(1000), 'propget'], HRESULT, 'Application',
              ( ['out', 'retval'], POINTER(POINTER(Application)), 'prop' )),
    COMMETHOD([dispid(1001), 'propget'], HRESULT, 'Creator',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(1002), 'propget'], HRESULT, 'Parent',
              ( ['out', 'retval'], POINTER(POINTER(IDispatch)), 'prop' )),
    COMMETHOD([dispid(-4), 'nonbrowsable', 'propget'], HRESULT, '_NewEnum',
              ( ['out', 'retval'], POINTER(POINTER(IUnknown)), 'prop' )),
    COMMETHOD([dispid(1), 'propget'], HRESULT, 'Count',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(2), 'propget'], HRESULT, 'Maximum',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(3), 'propget'], HRESULT, 'ActiveCustomDictionary',
              ( ['out', 'retval'], POINTER(POINTER(Dictionary)), 'prop' )),
    COMMETHOD([dispid(3), 'propput'], HRESULT, 'ActiveCustomDictionary',
              ( ['in'], POINTER(Dictionary), 'prop' )),
    COMMETHOD([dispid(4), 'hidden', 'propget'], HRESULT, 'BuiltinDictionary',
              ( ['out', 'retval'], POINTER(POINTER(Dictionary)), 'prop' )),
    COMMETHOD([dispid(0)], HRESULT, 'Item',
              ( ['in'], POINTER(VARIANT), 'Index' ),
              ( ['out', 'retval'], POINTER(POINTER(Dictionary)), 'prop' )),
    COMMETHOD([dispid(101)], HRESULT, 'Add',
              ( ['in'], BSTR, 'FileName' ),
              ( ['out', 'retval'], POINTER(POINTER(Dictionary)), 'prop' )),
    COMMETHOD([dispid(102)], HRESULT, 'ClearAll'),
]
################################################################
## code template for HangulHanjaConversionDictionaries implementation
##class HangulHanjaConversionDictionaries_Impl(object):
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Creator(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def _NewEnum(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Count(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Maximum(self):
##        '-no docstring-'
##        #return prop
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    ActiveCustomDictionary = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def BuiltinDictionary(self):
##        '-no docstring-'
##        #return prop
##
##    def Item(self, Index):
##        '-no docstring-'
##        #return prop
##
##    def Add(self, FileName):
##        '-no docstring-'
##        #return prop
##
##    def ClearAll(self):
##        '-no docstring-'
##        #return 
##

Dictionary._methods_ = [
    COMMETHOD([dispid(1000), 'propget'], HRESULT, 'Application',
              ( ['out', 'retval'], POINTER(POINTER(Application)), 'prop' )),
    COMMETHOD([dispid(1001), 'propget'], HRESULT, 'Creator',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(1002), 'propget'], HRESULT, 'Parent',
              ( ['out', 'retval'], POINTER(POINTER(IDispatch)), 'prop' )),
    COMMETHOD([dispid(0), 'propget'], HRESULT, 'Name',
              ( ['out', 'retval'], POINTER(BSTR), 'prop' )),
    COMMETHOD([dispid(1), 'propget'], HRESULT, 'Path',
              ( ['out', 'retval'], POINTER(BSTR), 'prop' )),
    COMMETHOD([dispid(2), 'propget'], HRESULT, 'LanguageID',
              ( ['out', 'retval'], POINTER(WdLanguageID), 'prop' )),
    COMMETHOD([dispid(2), 'propput'], HRESULT, 'LanguageID',
              ( ['in'], WdLanguageID, 'prop' )),
    COMMETHOD([dispid(3), 'propget'], HRESULT, 'ReadOnly',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'prop' )),
    COMMETHOD([dispid(4), 'propget'], HRESULT, 'Type',
              ( ['out', 'retval'], POINTER(WdDictionaryType), 'prop' )),
    COMMETHOD([dispid(5), 'propget'], HRESULT, 'LanguageSpecific',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'prop' )),
    COMMETHOD([dispid(5), 'propput'], HRESULT, 'LanguageSpecific',
              ( ['in'], VARIANT_BOOL, 'prop' )),
    COMMETHOD([dispid(101)], HRESULT, 'Delete'),
]
################################################################
## code template for Dictionary implementation
##class Dictionary_Impl(object):
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Creator(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Name(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Path(self):
##        '-no docstring-'
##        #return prop
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    LanguageID = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def ReadOnly(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Type(self):
##        '-no docstring-'
##        #return prop
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    LanguageSpecific = property(_get, _set, doc = _set.__doc__)
##
##    def Delete(self):
##        '-no docstring-'
##        #return 
##

ApplicationEvents4._disp_methods_ = [
    DISPMETHOD([dispid(1), 'restricted', 'hidden'], None, 'Startup'),
    DISPMETHOD([dispid(2)], None, 'Quit'),
    DISPMETHOD([dispid(3)], None, 'DocumentChange'),
    DISPMETHOD([dispid(4)], None, 'DocumentOpen',
               ( ['in'], POINTER(Document), 'Doc' )),
    DISPMETHOD([dispid(6)], None, 'DocumentBeforeClose',
               ( ['in'], POINTER(Document), 'Doc' ),
               ( ['in', 'out'], POINTER(VARIANT_BOOL), 'Cancel' )),
    DISPMETHOD([dispid(7)], None, 'DocumentBeforePrint',
               ( ['in'], POINTER(Document), 'Doc' ),
               ( ['in', 'out'], POINTER(VARIANT_BOOL), 'Cancel' )),
    DISPMETHOD([dispid(8)], None, 'DocumentBeforeSave',
               ( ['in'], POINTER(Document), 'Doc' ),
               ( ['in'], POINTER(VARIANT_BOOL), 'SaveAsUI' ),
               ( ['in', 'out'], POINTER(VARIANT_BOOL), 'Cancel' )),
    DISPMETHOD([dispid(9)], None, 'NewDocument',
               ( ['in'], POINTER(Document), 'Doc' )),
    DISPMETHOD([dispid(10)], None, 'WindowActivate',
               ( ['in'], POINTER(Document), 'Doc' ),
               ( ['in'], POINTER(Window), 'Wn' )),
    DISPMETHOD([dispid(11)], None, 'WindowDeactivate',
               ( ['in'], POINTER(Document), 'Doc' ),
               ( ['in'], POINTER(Window), 'Wn' )),
    DISPMETHOD([dispid(12)], None, 'WindowSelectionChange',
               ( ['in'], POINTER(Selection), 'Sel' )),
    DISPMETHOD([dispid(13)], None, 'WindowBeforeRightClick',
               ( ['in'], POINTER(Selection), 'Sel' ),
               ( ['in', 'out'], POINTER(VARIANT_BOOL), 'Cancel' )),
    DISPMETHOD([dispid(14)], None, 'WindowBeforeDoubleClick',
               ( ['in'], POINTER(Selection), 'Sel' ),
               ( ['in', 'out'], POINTER(VARIANT_BOOL), 'Cancel' )),
    DISPMETHOD([dispid(15)], None, 'EPostagePropertyDialog',
               ( ['in'], POINTER(Document), 'Doc' )),
    DISPMETHOD([dispid(16)], None, 'EPostageInsert',
               ( ['in'], POINTER(Document), 'Doc' )),
    DISPMETHOD([dispid(17)], None, 'MailMergeAfterMerge',
               ( ['in'], POINTER(Document), 'Doc' ),
               ( ['in'], POINTER(Document), 'DocResult' )),
    DISPMETHOD([dispid(18)], None, 'MailMergeAfterRecordMerge',
               ( ['in'], POINTER(Document), 'Doc' )),
    DISPMETHOD([dispid(19)], None, 'MailMergeBeforeMerge',
               ( ['in'], POINTER(Document), 'Doc' ),
               ( ['in'], c_int, 'StartRecord' ),
               ( ['in'], c_int, 'EndRecord' ),
               ( ['in', 'out'], POINTER(VARIANT_BOOL), 'Cancel' )),
    DISPMETHOD([dispid(20)], None, 'MailMergeBeforeRecordMerge',
               ( ['in'], POINTER(Document), 'Doc' ),
               ( ['in', 'out'], POINTER(VARIANT_BOOL), 'Cancel' )),
    DISPMETHOD([dispid(21)], None, 'MailMergeDataSourceLoad',
               ( ['in'], POINTER(Document), 'Doc' )),
    DISPMETHOD([dispid(22)], None, 'MailMergeDataSourceValidate',
               ( ['in'], POINTER(Document), 'Doc' ),
               ( ['in'], POINTER(VARIANT_BOOL), 'Handled' )),
    DISPMETHOD([dispid(23)], None, 'MailMergeWizardSendToCustom',
               ( ['in'], POINTER(Document), 'Doc' )),
    DISPMETHOD([dispid(24)], None, 'MailMergeWizardStateChange',
               ( ['in'], POINTER(Document), 'Doc' ),
               ( ['in'], POINTER(c_int), 'FromState' ),
               ( ['in'], POINTER(c_int), 'ToState' ),
               ( ['in'], POINTER(VARIANT_BOOL), 'Handled' )),
    DISPMETHOD([dispid(25)], None, 'WindowSize',
               ( ['in'], POINTER(Document), 'Doc' ),
               ( ['in'], POINTER(Window), 'Wn' )),
    DISPMETHOD([dispid(26)], None, 'XMLSelectionChange',
               ( ['in'], POINTER(Selection), 'Sel' ),
               ( ['in'], POINTER(XMLNode), 'OldXMLNode' ),
               ( ['in'], POINTER(XMLNode), 'NewXMLNode' ),
               ( ['in'], POINTER(c_int), 'Reason' )),
    DISPMETHOD([dispid(27)], None, 'XMLValidationError',
               ( ['in'], POINTER(XMLNode), 'XMLNode' )),
    DISPMETHOD([dispid(28)], None, 'DocumentSync',
               ( ['in'], POINTER(Document), 'Doc' ),
               ( ['in'], comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoSyncEventType, 'SyncEventType' )),
    DISPMETHOD([dispid(29)], None, 'EPostageInsertEx',
               ( ['in'], POINTER(Document), 'Doc' ),
               ( ['in'], c_int, 'cpDeliveryAddrStart' ),
               ( ['in'], c_int, 'cpDeliveryAddrEnd' ),
               ( ['in'], c_int, 'cpReturnAddrStart' ),
               ( ['in'], c_int, 'cpReturnAddrEnd' ),
               ( ['in'], c_int, 'xaWidth' ),
               ( ['in'], c_int, 'yaHeight' ),
               ( ['in'], BSTR, 'bstrPrinterName' ),
               ( ['in'], BSTR, 'bstrPaperFeed' ),
               ( ['in'], VARIANT_BOOL, 'fPrint' ),
               ( ['in', 'out'], POINTER(VARIANT_BOOL), 'fCancel' )),
    DISPMETHOD([dispid(30)], None, 'MailMergeDataSourceValidate2',
               ( ['in'], POINTER(Document), 'Doc' ),
               ( ['in', 'out'], POINTER(VARIANT_BOOL), 'Handled' )),
    DISPMETHOD([dispid(31)], None, 'ProtectedViewWindowOpen',
               ( ['in'], POINTER(ProtectedViewWindow), 'PvWindow' )),
    DISPMETHOD([dispid(32)], None, 'ProtectedViewWindowBeforeEdit',
               ( ['in'], POINTER(ProtectedViewWindow), 'PvWindow' ),
               ( ['in', 'out'], POINTER(VARIANT_BOOL), 'Cancel' )),
    DISPMETHOD([dispid(33)], None, 'ProtectedViewWindowBeforeClose',
               ( ['in'], POINTER(ProtectedViewWindow), 'PvWindow' ),
               ( ['in'], c_int, 'CloseReason' ),
               ( ['in', 'out'], POINTER(VARIANT_BOOL), 'Cancel' )),
    DISPMETHOD([dispid(34)], None, 'ProtectedViewWindowSize',
               ( ['in'], POINTER(ProtectedViewWindow), 'PvWindow' )),
    DISPMETHOD([dispid(35)], None, 'ProtectedViewWindowActivate',
               ( ['in'], POINTER(ProtectedViewWindow), 'PvWindow' )),
    DISPMETHOD([dispid(36)], None, 'ProtectedViewWindowDeactivate',
               ( ['in'], POINTER(ProtectedViewWindow), 'PvWindow' )),
]

# values for enumeration 'XlPieSliceIndex'
xlOuterCounterClockwisePoint = 1
xlOuterCenterPoint = 2
xlOuterClockwisePoint = 3
xlMidClockwiseRadiusPoint = 4
xlCenterPoint = 5
xlMidCounterClockwiseRadiusPoint = 6
xlInnerClockwisePoint = 7
xlInnerCenterPoint = 8
xlInnerCounterClockwisePoint = 9
XlPieSliceIndex = c_int # enum

# values for enumeration 'WdAutoVersions'
wdAutoVersionOff = 0
wdAutoVersionOnClose = 1
WdAutoVersions = c_int # enum

# values for enumeration 'XlPieSliceLocation'
xlHorizontalCoordinate = 1
xlVerticalCoordinate = 2
XlPieSliceLocation = c_int # enum

# values for enumeration 'WdTofFormat'
wdTOFTemplate = 0
wdTOFClassic = 1
wdTOFDistinctive = 2
wdTOFCentered = 3
wdTOFFormal = 4
wdTOFSimple = 5
WdTofFormat = c_int # enum
Floor._methods_ = [
    COMMETHOD([dispid(110), 'propget'], HRESULT, 'Name',
              ( ['out', 'retval'], POINTER(BSTR), 'prop' )),
    COMMETHOD([dispid(235)], HRESULT, 'Select',
              ( ['out', 'retval'], POINTER(VARIANT), 'prop' )),
    COMMETHOD([dispid(150), 'propget'], HRESULT, 'Parent',
              ( ['out', 'retval'], POINTER(POINTER(IDispatch)), 'prop' )),
    COMMETHOD([dispid(128), 'hidden', 'propget'], HRESULT, 'Border',
              ( ['out', 'retval'], POINTER(POINTER(ChartBorder)), 'prop' )),
    COMMETHOD([dispid(112)], HRESULT, 'ClearFormats',
              ( ['out', 'retval'], POINTER(VARIANT), 'prop' )),
    COMMETHOD([dispid(129), 'hidden', 'propget'], HRESULT, 'Interior',
              ( ['out', 'retval'], POINTER(POINTER(Interior)), 'prop' )),
    COMMETHOD([dispid(1663), 'hidden', 'propget'], HRESULT, 'Fill',
              ( ['out', 'retval'], POINTER(POINTER(ChartFillFormat)), 'prop' )),
    COMMETHOD([dispid(161), 'propget'], HRESULT, 'PictureType',
              ( ['out', 'retval'], POINTER(VARIANT), 'prop' )),
    COMMETHOD([dispid(161), 'propput'], HRESULT, 'PictureType',
              ( ['in'], VARIANT, 'prop' )),
    COMMETHOD([dispid(211)], HRESULT, 'Paste'),
    COMMETHOD([dispid(2419), 'propget'], HRESULT, 'Thickness',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(2419), 'propput'], HRESULT, 'Thickness',
              ( ['in'], c_int, 'prop' )),
    COMMETHOD([dispid(1610743820), 'propget'], HRESULT, 'Format',
              ( ['out', 'retval'], POINTER(POINTER(ChartFormat)), 'prop' )),
    COMMETHOD([dispid(148), 'propget'], HRESULT, 'Application',
              ( ['out', 'retval'], POINTER(POINTER(IDispatch)), 'prop' )),
    COMMETHOD([dispid(149), 'propget'], HRESULT, 'Creator',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
]
################################################################
## code template for Floor implementation
##class Floor_Impl(object):
##    @property
##    def Name(self):
##        '-no docstring-'
##        #return prop
##
##    def Select(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Border(self):
##        '-no docstring-'
##        #return prop
##
##    def ClearFormats(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Interior(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Fill(self):
##        '-no docstring-'
##        #return prop
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    PictureType = property(_get, _set, doc = _set.__doc__)
##
##    def Paste(self):
##        '-no docstring-'
##        #return 
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    Thickness = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Format(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Creator(self):
##        '-no docstring-'
##        #return prop
##

ChartData._methods_ = [
    COMMETHOD([dispid(1610743808), 'propget'], HRESULT, 'Workbook',
              ( ['out', 'retval'], POINTER(POINTER(IDispatch)), 'prop' )),
    COMMETHOD([dispid(1610743809)], HRESULT, 'Activate'),
    COMMETHOD([dispid(1610743810), 'propget'], HRESULT, 'IsLinked',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'prop' )),
    COMMETHOD([dispid(1610743811)], HRESULT, 'BreakLink'),
    COMMETHOD([dispid(1610743812)], HRESULT, 'ActivateChartDataWindow'),
]
################################################################
## code template for ChartData implementation
##class ChartData_Impl(object):
##    @property
##    def Workbook(self):
##        '-no docstring-'
##        #return prop
##
##    def Activate(self):
##        '-no docstring-'
##        #return 
##
##    @property
##    def IsLinked(self):
##        '-no docstring-'
##        #return prop
##
##    def BreakLink(self):
##        '-no docstring-'
##        #return 
##
##    def ActivateChartDataWindow(self):
##        '-no docstring-'
##        #return 
##


# values for enumeration 'WdSmartTagControlType'
wdControlSmartTag = 1
wdControlLink = 2
wdControlHelp = 3
wdControlHelpURL = 4
wdControlSeparator = 5
wdControlButton = 6
wdControlLabel = 7
wdControlImage = 8
wdControlCheckbox = 9
wdControlTextbox = 10
wdControlListbox = 11
wdControlCombo = 12
wdControlActiveX = 13
wdControlDocumentFragment = 14
wdControlDocumentFragmentURL = 15
wdControlRadioGroup = 16
WdSmartTagControlType = c_int # enum
SmartTagAction._methods_ = [
    COMMETHOD([dispid(0), 'hidden', 'propget'], HRESULT, 'Name',
              ( ['out', 'retval'], POINTER(BSTR), 'prop' )),
    COMMETHOD([dispid(1000), 'hidden', 'propget'], HRESULT, 'Application',
              ( ['out', 'retval'], POINTER(POINTER(Application)), 'prop' )),
    COMMETHOD([dispid(1001), 'hidden', 'propget'], HRESULT, 'Creator',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(1002), 'hidden', 'propget'], HRESULT, 'Parent',
              ( ['out', 'retval'], POINTER(POINTER(IDispatch)), 'prop' )),
    COMMETHOD([dispid(1003), 'hidden'], HRESULT, 'Execute'),
    COMMETHOD([dispid(1004), 'hidden', 'propget'], HRESULT, 'Type',
              ( ['out', 'retval'], POINTER(WdSmartTagControlType), 'prop' )),
    COMMETHOD([dispid(1005), 'hidden', 'propget'], HRESULT, 'PresentInPane',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'prop' )),
    COMMETHOD([dispid(1006), 'hidden', 'propget'], HRESULT, 'ExpandHelp',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'prop' )),
    COMMETHOD([dispid(1006), 'hidden', 'propput'], HRESULT, 'ExpandHelp',
              ( ['in'], VARIANT_BOOL, 'prop' )),
    COMMETHOD([dispid(1007), 'hidden', 'propget'], HRESULT, 'CheckboxState',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'prop' )),
    COMMETHOD([dispid(1007), 'hidden', 'propput'], HRESULT, 'CheckboxState',
              ( ['in'], VARIANT_BOOL, 'prop' )),
    COMMETHOD([dispid(1008), 'hidden', 'propget'], HRESULT, 'TextboxText',
              ( ['out', 'retval'], POINTER(BSTR), 'prop' )),
    COMMETHOD([dispid(1008), 'hidden', 'propput'], HRESULT, 'TextboxText',
              ( ['in'], BSTR, 'prop' )),
    COMMETHOD([dispid(1009), 'hidden', 'propget'], HRESULT, 'ListSelection',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(1009), 'hidden', 'propput'], HRESULT, 'ListSelection',
              ( ['in'], c_int, 'prop' )),
    COMMETHOD([dispid(1010), 'hidden', 'propget'], HRESULT, 'RadioGroupSelection',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(1010), 'hidden', 'propput'], HRESULT, 'RadioGroupSelection',
              ( ['in'], c_int, 'prop' )),
    COMMETHOD([dispid(1011), 'hidden', 'propget'], HRESULT, 'ExpandDocumentFragment',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'prop' )),
    COMMETHOD([dispid(1011), 'hidden', 'propput'], HRESULT, 'ExpandDocumentFragment',
              ( ['in'], VARIANT_BOOL, 'prop' )),
    COMMETHOD([dispid(1012), 'hidden', 'propget'], HRESULT, 'ActiveXControl',
              ( ['out', 'retval'], POINTER(POINTER(IDispatch)), 'prop' )),
]
################################################################
## code template for SmartTagAction implementation
##class SmartTagAction_Impl(object):
##    @property
##    def Name(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Creator(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return prop
##
##    def Execute(self):
##        '-no docstring-'
##        #return 
##
##    @property
##    def Type(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def PresentInPane(self):
##        '-no docstring-'
##        #return prop
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    ExpandHelp = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    CheckboxState = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    TextboxText = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    ListSelection = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    RadioGroupSelection = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    ExpandDocumentFragment = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def ActiveXControl(self):
##        '-no docstring-'
##        #return prop
##

ListTemplates._methods_ = [
    COMMETHOD([dispid(-4), 'nonbrowsable', 'propget'], HRESULT, '_NewEnum',
              ( ['out', 'retval'], POINTER(POINTER(IUnknown)), 'prop' )),
    COMMETHOD([dispid(2), 'propget'], HRESULT, 'Count',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(1000), 'propget'], HRESULT, 'Application',
              ( ['out', 'retval'], POINTER(POINTER(Application)), 'prop' )),
    COMMETHOD([dispid(1001), 'propget'], HRESULT, 'Creator',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(1002), 'propget'], HRESULT, 'Parent',
              ( ['out', 'retval'], POINTER(POINTER(IDispatch)), 'prop' )),
    COMMETHOD([dispid(0)], HRESULT, 'Item',
              ( ['in'], POINTER(VARIANT), 'Index' ),
              ( ['out', 'retval'], POINTER(POINTER(ListTemplate)), 'prop' )),
    COMMETHOD([dispid(100)], HRESULT, 'Add',
              ( ['in', 'optional'], POINTER(VARIANT), 'OutlineNumbered' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'Name' ),
              ( ['out', 'retval'], POINTER(POINTER(ListTemplate)), 'prop' )),
]
################################################################
## code template for ListTemplates implementation
##class ListTemplates_Impl(object):
##    @property
##    def _NewEnum(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Count(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Creator(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return prop
##
##    def Item(self, Index):
##        '-no docstring-'
##        #return prop
##
##    def Add(self, OutlineNumbered, Name):
##        '-no docstring-'
##        #return prop
##


# values for enumeration 'WdSelectionFlags'
wdSelStartActive = 1
wdSelAtEOL = 2
wdSelOvertype = 4
wdSelActive = 8
wdSelReplace = 16
WdSelectionFlags = c_int # enum

# values for enumeration 'XlRgbColor'
xlAliceBlue = 16775408
xlAntiqueWhite = 14150650
xlAqua = 16776960
xlAquamarine = 13959039
xlAzure = 16777200
xlBeige = 14480885
xlBisque = 12903679
xlBlack = 0
xlBlanchedAlmond = 13495295
xlBlue = 16711680
xlBlueViolet = 14822282
xlBrown = 2763429
xlBurlyWood = 8894686
xlCadetBlue = 10526303
xlChartreuse = 65407
xlCoral = 5275647
xlCornflowerBlue = 15570276
xlCornsilk = 14481663
xlCrimson = 3937500
xlDarkBlue = 9109504
xlDarkCyan = 9145088
xlDarkGoldenrod = 755384
xlDarkGreen = 25600
xlDarkGray = 11119017
xlDarkGrey = 11119017
xlDarkKhaki = 7059389
xlDarkMagenta = 9109643
xlDarkOliveGreen = 3107669
xlDarkOrange = 36095
xlDarkOrchid = 13382297
xlDarkRed = 139
xlDarkSalmon = 8034025
xlDarkSeaGreen = 9419919
xlDarkSlateBlue = 9125192
xlDarkSlateGray = 5197615
xlDarkSlateGrey = 5197615
xlDarkTurquoise = 13749760
xlDarkViolet = 13828244
xlDeepPink = 9639167
xlDeepSkyBlue = 16760576
xlDimGray = 6908265
xlDimGrey = 6908265
xlDodgerBlue = 16748574
xlFireBrick = 2237106
xlFloralWhite = 15792895
xlForestGreen = 2263842
xlFuchsia = 16711935
xlGainsboro = 14474460
xlGhostWhite = 16775416
xlGold = 55295
xlGoldenrod = 2139610
xlGray = 8421504
xlGreen = 32768
xlGrey = 8421504
xlGreenYellow = 3145645
xlHoneydew = 15794160
xlHotPink = 11823615
xlIndianRed = 6053069
xlIndigo = 8519755
xlIvory = 15794175
xlKhaki = 9234160
xlLavender = 16443110
xlLavenderBlush = 16118015
xlLawnGreen = 64636
xlLemonChiffon = 13499135
xlLightBlue = 15128749
xlLightCoral = 8421616
xlLightCyan = 9145088
xlLightGoldenrodYellow = 13826810
xlLightGray = 13882323
xlLightGreen = 9498256
xlLightGrey = 13882323
xlLightPink = 12695295
xlLightSalmon = 8036607
xlLightSeaGreen = 11186720
xlLightSkyBlue = 16436871
xlLightSlateGray = 10061943
xlLightSlateGrey = 10061943
xlLightSteelBlue = 14599344
xlLightYellow = 14745599
xlLime = 65280
xlLimeGreen = 3329330
xlLinen = 15134970
xlMaroon = 128
xlMediumAquamarine = 11206502
xlMediumBlue = 13434880
xlMediumOrchid = 13850042
xlMediumPurple = 14381203
xlMediumSeaGreen = 7451452
xlMediumSlateBlue = 15624315
xlMediumSpringGreen = 10156544
xlMediumTurquoise = 13422920
xlMediumVioletRed = 8721863
xlMidnightBlue = 7346457
xlMintCream = 16449525
xlMistyRose = 14804223
xlMoccasin = 11920639
xlNavajoWhite = 11394815
xlNavy = 8388608
xlNavyBlue = 8388608
xlOldLace = 15136253
xlOlive = 32896
xlOliveDrab = 2330219
xlOrange = 42495
xlOrangeRed = 17919
xlOrchid = 14053594
xlPaleGoldenrod = 7071982
xlPaleGreen = 10025880
xlPaleTurquoise = 15658671
xlPaleVioletRed = 9662683
xlPapayaWhip = 14020607
xlPeachPuff = 12180223
xlPeru = 4163021
xlPink = 13353215
xlPlum = 14524637
xlPowderBlue = 15130800
xlPurple = 8388736
xlRed = 255
xlRosyBrown = 9408444
xlRoyalBlue = 14772545
xlSalmon = 7504122
xlSandyBrown = 6333684
xlSeaGreen = 5737262
xlSeashell = 15660543
xlSienna = 2970272
xlSilver = 12632256
xlSkyBlue = 15453831
xlSlateBlue = 13458026
xlSlateGray = 9470064
xlSlateGrey = 9470064
xlSnow = 16448255
xlSpringGreen = 8388352
xlSteelBlue = 11829830
xlTan = 9221330
xlTeal = 8421376
xlThistle = 14204888
xlTomato = 4678655
xlTurquoise = 13688896
xlYellow = 65535
xlYellowGreen = 3329434
xlViolet = 15631086
xlWheat = 11788021
xlWhite = 16777215
xlWhiteSmoke = 16119285
XlRgbColor = c_int # enum

# values for enumeration 'XlPivotFieldOrientation'
xlColumnField = 2
xlDataField = 4
xlHidden = 0
xlPageField = 3
xlRowField = 1
XlPivotFieldOrientation = c_int # enum
class OMathFunctions(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{497142A4-16FD-42C6-BC58-15D89345FC21}')
    _idlflags_ = ['dual', 'nonextensible', 'oleautomation']

# values for enumeration 'WdOMathFunctionType'
wdOMathFunctionAcc = 1
wdOMathFunctionBar = 2
wdOMathFunctionBox = 3
wdOMathFunctionBorderBox = 4
wdOMathFunctionDelim = 5
wdOMathFunctionEqArray = 6
wdOMathFunctionFrac = 7
wdOMathFunctionFunc = 8
wdOMathFunctionGroupChar = 9
wdOMathFunctionLimLow = 10
wdOMathFunctionLimUpp = 11
wdOMathFunctionMat = 12
wdOMathFunctionNary = 13
wdOMathFunctionPhantom = 14
wdOMathFunctionScrPre = 15
wdOMathFunctionRad = 16
wdOMathFunctionScrSub = 17
wdOMathFunctionScrSubSup = 18
wdOMathFunctionScrSup = 19
wdOMathFunctionText = 20
wdOMathFunctionNormalText = 21
wdOMathFunctionLiteralText = 22
WdOMathFunctionType = c_int # enum
OMathFunctions._methods_ = [
    COMMETHOD([dispid(-4), 'nonbrowsable', 'propget'], HRESULT, '_NewEnum',
              ( ['out', 'retval'], POINTER(POINTER(IUnknown)), 'prop' )),
    COMMETHOD([dispid(100), 'propget'], HRESULT, 'Application',
              ( ['out', 'retval'], POINTER(POINTER(Application)), 'prop' )),
    COMMETHOD([dispid(101), 'propget'], HRESULT, 'Creator',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(102), 'propget'], HRESULT, 'Parent',
              ( ['out', 'retval'], POINTER(POINTER(IDispatch)), 'prop' )),
    COMMETHOD([dispid(103), 'propget'], HRESULT, 'Count',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(0)], HRESULT, 'Item',
              ( ['in'], c_int, 'Index' ),
              ( ['out', 'retval'], POINTER(POINTER(OMathFunction)), 'prop' )),
    COMMETHOD([dispid(104)], HRESULT, 'Add',
              ( ['in'], POINTER(Range), 'Range' ),
              ( ['in'], WdOMathFunctionType, 'Type' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'NumArgs' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'NumCols' ),
              ( ['out', 'retval'], POINTER(POINTER(OMathFunction)), 'prop' )),
]
################################################################
## code template for OMathFunctions implementation
##class OMathFunctions_Impl(object):
##    @property
##    def _NewEnum(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Creator(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Count(self):
##        '-no docstring-'
##        #return prop
##
##    def Item(self, Index):
##        '-no docstring-'
##        #return prop
##
##    def Add(self, Range, Type, NumArgs, NumCols):
##        '-no docstring-'
##        #return prop
##

Broadcast._methods_ = [
    COMMETHOD([dispid(1000), 'propget'], HRESULT, 'Application',
              ( ['out', 'retval'], POINTER(POINTER(Application)), 'prop' )),
    COMMETHOD([dispid(1002), 'propget'], HRESULT, 'Parent',
              ( ['out', 'retval'], POINTER(POINTER(IDispatch)), 'prop' )),
    COMMETHOD([dispid(1), 'propget'], HRESULT, 'AttendeeUrl',
              ( ['out', 'retval'], POINTER(BSTR), 'prop' )),
    COMMETHOD([dispid(2), 'propget'], HRESULT, 'State',
              ( ['out', 'retval'], POINTER(comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoBroadcastState), 'prop' )),
    COMMETHOD([dispid(3), 'propget'], HRESULT, 'Capabilities',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(4), 'propget'], HRESULT, 'PresenterServiceUrl',
              ( ['out', 'retval'], POINTER(BSTR), 'prop' )),
    COMMETHOD([dispid(5), 'propget'], HRESULT, 'SessionID',
              ( ['out', 'retval'], POINTER(BSTR), 'prop' )),
    COMMETHOD([dispid(101)], HRESULT, 'Start',
              ( ['in'], BSTR, 'serverUrl' )),
    COMMETHOD([dispid(102)], HRESULT, 'Pause'),
    COMMETHOD([dispid(103)], HRESULT, 'Resume'),
    COMMETHOD([dispid(104)], HRESULT, 'End'),
    COMMETHOD([dispid(105)], HRESULT, 'AddMeetingNotes',
              ( ['in'], BSTR, 'notesUrl' ),
              ( ['in'], BSTR, 'notesWacUrl' )),
]
################################################################
## code template for Broadcast implementation
##class Broadcast_Impl(object):
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def AttendeeUrl(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def State(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Capabilities(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def PresenterServiceUrl(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def SessionID(self):
##        '-no docstring-'
##        #return prop
##
##    def Start(self, serverUrl):
##        '-no docstring-'
##        #return 
##
##    def Pause(self):
##        '-no docstring-'
##        #return 
##
##    def Resume(self):
##        '-no docstring-'
##        #return 
##
##    def End(self):
##        '-no docstring-'
##        #return 
##
##    def AddMeetingNotes(self, notesUrl, notesWacUrl):
##        '-no docstring-'
##        #return 
##


# values for enumeration 'WdBrowseTarget'
wdBrowsePage = 1
wdBrowseSection = 2
wdBrowseComment = 3
wdBrowseFootnote = 4
wdBrowseEndnote = 5
wdBrowseField = 6
wdBrowseTable = 7
wdBrowseGraphic = 8
wdBrowseHeading = 9
wdBrowseEdit = 10
wdBrowseFind = 11
wdBrowseGoTo = 12
WdBrowseTarget = c_int # enum

# values for enumeration 'WdListGalleryType'
wdBulletGallery = 1
wdNumberGallery = 2
wdOutlineNumberGallery = 3
WdListGalleryType = c_int # enum
class BuildingBlocks(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{C6D50987-25D7-408A-BFF2-90BF86A24E93}')
    _idlflags_ = ['dual', 'nonextensible', 'oleautomation']
class BuildingBlockType(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{817F99FA-CCC4-4971-8E9D-1238F735AAFF}')
    _idlflags_ = ['dual', 'nonextensible', 'oleautomation']
Category._methods_ = [
    COMMETHOD([dispid(1000), 'propget'], HRESULT, 'Application',
              ( ['out', 'retval'], POINTER(POINTER(Application)), 'prop' )),
    COMMETHOD([dispid(1001), 'propget'], HRESULT, 'Creator',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(1002), 'propget'], HRESULT, 'Parent',
              ( ['out', 'retval'], POINTER(POINTER(IDispatch)), 'prop' )),
    COMMETHOD([dispid(1), 'propget'], HRESULT, 'Index',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(2), 'propget'], HRESULT, 'Name',
              ( ['out', 'retval'], POINTER(BSTR), 'prop' )),
    COMMETHOD([dispid(3), 'propget'], HRESULT, 'BuildingBlocks',
              ( ['out', 'retval'], POINTER(POINTER(BuildingBlocks)), 'prop' )),
    COMMETHOD([dispid(4), 'propget'], HRESULT, 'Type',
              ( ['out', 'retval'], POINTER(POINTER(BuildingBlockType)), 'prop' )),
]
################################################################
## code template for Category implementation
##class Category_Impl(object):
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Creator(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Index(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Name(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def BuildingBlocks(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Type(self):
##        '-no docstring-'
##        #return prop
##


# values for enumeration 'WdMoveFromTextMark'
wdMoveFromTextMarkHidden = 0
wdMoveFromTextMarkDoubleStrikeThrough = 1
wdMoveFromTextMarkStrikeThrough = 2
wdMoveFromTextMarkCaret = 3
wdMoveFromTextMarkPound = 4
wdMoveFromTextMarkNone = 5
wdMoveFromTextMarkBold = 6
wdMoveFromTextMarkItalic = 7
wdMoveFromTextMarkUnderline = 8
wdMoveFromTextMarkDoubleUnderline = 9
wdMoveFromTextMarkColorOnly = 10
WdMoveFromTextMark = c_int # enum
ReadabilityStatistic._methods_ = [
    COMMETHOD([dispid(1000), 'propget'], HRESULT, 'Application',
              ( ['out', 'retval'], POINTER(POINTER(Application)), 'prop' )),
    COMMETHOD([dispid(1001), 'propget'], HRESULT, 'Creator',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(1002), 'propget'], HRESULT, 'Parent',
              ( ['out', 'retval'], POINTER(POINTER(IDispatch)), 'prop' )),
    COMMETHOD([dispid(0), 'propget'], HRESULT, 'Name',
              ( ['out', 'retval'], POINTER(BSTR), 'prop' )),
    COMMETHOD([dispid(1), 'propget'], HRESULT, 'Value',
              ( ['out', 'retval'], POINTER(c_float), 'prop' )),
]
################################################################
## code template for ReadabilityStatistic implementation
##class ReadabilityStatistic_Impl(object):
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Creator(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Name(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Value(self):
##        '-no docstring-'
##        #return prop
##


# values for enumeration 'WdListNumberStyle'
wdListNumberStyleArabic = 0
wdListNumberStyleUppercaseRoman = 1
wdListNumberStyleLowercaseRoman = 2
wdListNumberStyleUppercaseLetter = 3
wdListNumberStyleLowercaseLetter = 4
wdListNumberStyleOrdinal = 5
wdListNumberStyleCardinalText = 6
wdListNumberStyleOrdinalText = 7
wdListNumberStyleKanji = 10
wdListNumberStyleKanjiDigit = 11
wdListNumberStyleAiueoHalfWidth = 12
wdListNumberStyleIrohaHalfWidth = 13
wdListNumberStyleArabicFullWidth = 14
wdListNumberStyleKanjiTraditional = 16
wdListNumberStyleKanjiTraditional2 = 17
wdListNumberStyleNumberInCircle = 18
wdListNumberStyleAiueo = 20
wdListNumberStyleIroha = 21
wdListNumberStyleArabicLZ = 22
wdListNumberStyleBullet = 23
wdListNumberStyleGanada = 24
wdListNumberStyleChosung = 25
wdListNumberStyleGBNum1 = 26
wdListNumberStyleGBNum2 = 27
wdListNumberStyleGBNum3 = 28
wdListNumberStyleGBNum4 = 29
wdListNumberStyleZodiac1 = 30
wdListNumberStyleZodiac2 = 31
wdListNumberStyleZodiac3 = 32
wdListNumberStyleTradChinNum1 = 33
wdListNumberStyleTradChinNum2 = 34
wdListNumberStyleTradChinNum3 = 35
wdListNumberStyleTradChinNum4 = 36
wdListNumberStyleSimpChinNum1 = 37
wdListNumberStyleSimpChinNum2 = 38
wdListNumberStyleSimpChinNum3 = 39
wdListNumberStyleSimpChinNum4 = 40
wdListNumberStyleHanjaRead = 41
wdListNumberStyleHanjaReadDigit = 42
wdListNumberStyleHangul = 43
wdListNumberStyleHanja = 44
wdListNumberStyleHebrew1 = 45
wdListNumberStyleArabic1 = 46
wdListNumberStyleHebrew2 = 47
wdListNumberStyleArabic2 = 48
wdListNumberStyleHindiLetter1 = 49
wdListNumberStyleHindiLetter2 = 50
wdListNumberStyleHindiArabic = 51
wdListNumberStyleHindiCardinalText = 52
wdListNumberStyleThaiLetter = 53
wdListNumberStyleThaiArabic = 54
wdListNumberStyleThaiCardinalText = 55
wdListNumberStyleVietCardinalText = 56
wdListNumberStyleLowercaseRussian = 58
wdListNumberStyleUppercaseRussian = 59
wdListNumberStyleLowercaseGreek = 60
wdListNumberStyleUppercaseGreek = 61
wdListNumberStyleArabicLZ2 = 62
wdListNumberStyleArabicLZ3 = 63
wdListNumberStyleArabicLZ4 = 64
wdListNumberStyleLowercaseTurkish = 65
wdListNumberStyleUppercaseTurkish = 66
wdListNumberStyleLowercaseBulgarian = 67
wdListNumberStyleUppercaseBulgarian = 68
wdListNumberStylePictureBullet = 249
wdListNumberStyleLegal = 253
wdListNumberStyleLegalLZ = 254
wdListNumberStyleNone = 255
WdListNumberStyle = c_int # enum
Paragraph._methods_ = [
    COMMETHOD([dispid(0), 'propget'], HRESULT, 'Range',
              ( ['out', 'retval'], POINTER(POINTER(Range)), 'prop' )),
    COMMETHOD([dispid(1000), 'propget'], HRESULT, 'Application',
              ( ['out', 'retval'], POINTER(POINTER(Application)), 'prop' )),
    COMMETHOD([dispid(1001), 'propget'], HRESULT, 'Creator',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(1002), 'propget'], HRESULT, 'Parent',
              ( ['out', 'retval'], POINTER(POINTER(IDispatch)), 'prop' )),
    COMMETHOD([dispid(1102), 'propget'], HRESULT, 'Format',
              ( ['out', 'retval'], POINTER(POINTER(ParagraphFormat)), 'prop' )),
    COMMETHOD([dispid(1102), 'propput'], HRESULT, 'Format',
              ( ['in'], POINTER(ParagraphFormat), 'prop' )),
    COMMETHOD([dispid(1103), 'propget'], HRESULT, 'TabStops',
              ( ['out', 'retval'], POINTER(POINTER(TabStops)), 'prop' )),
    COMMETHOD([dispid(1103), 'propput'], HRESULT, 'TabStops',
              ( ['in'], POINTER(TabStops), 'prop' )),
    COMMETHOD([dispid(1100), 'propget'], HRESULT, 'Borders',
              ( ['out', 'retval'], POINTER(POINTER(Borders)), 'prop' )),
    COMMETHOD([dispid(1100), 'propput'], HRESULT, 'Borders',
              ( ['in'], POINTER(Borders), 'prop' )),
    COMMETHOD([dispid(13), 'propget'], HRESULT, 'DropCap',
              ( ['out', 'retval'], POINTER(POINTER(DropCap)), 'prop' )),
    COMMETHOD([dispid(100), 'propget'], HRESULT, 'Style',
              ( ['out', 'retval'], POINTER(VARIANT), 'prop' )),
    COMMETHOD([dispid(100), 'propput'], HRESULT, 'Style',
              ( ['in'], POINTER(VARIANT), 'prop' )),
    COMMETHOD([dispid(101), 'propget'], HRESULT, 'Alignment',
              ( ['out', 'retval'], POINTER(WdParagraphAlignment), 'prop' )),
    COMMETHOD([dispid(101), 'propput'], HRESULT, 'Alignment',
              ( ['in'], WdParagraphAlignment, 'prop' )),
    COMMETHOD([dispid(102), 'propget'], HRESULT, 'KeepTogether',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(102), 'propput'], HRESULT, 'KeepTogether',
              ( ['in'], c_int, 'prop' )),
    COMMETHOD([dispid(103), 'propget'], HRESULT, 'KeepWithNext',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(103), 'propput'], HRESULT, 'KeepWithNext',
              ( ['in'], c_int, 'prop' )),
    COMMETHOD([dispid(104), 'propget'], HRESULT, 'PageBreakBefore',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(104), 'propput'], HRESULT, 'PageBreakBefore',
              ( ['in'], c_int, 'prop' )),
    COMMETHOD([dispid(105), 'propget'], HRESULT, 'NoLineNumber',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(105), 'propput'], HRESULT, 'NoLineNumber',
              ( ['in'], c_int, 'prop' )),
    COMMETHOD([dispid(106), 'propget'], HRESULT, 'RightIndent',
              ( ['out', 'retval'], POINTER(c_float), 'prop' )),
    COMMETHOD([dispid(106), 'propput'], HRESULT, 'RightIndent',
              ( ['in'], c_float, 'prop' )),
    COMMETHOD([dispid(107), 'propget'], HRESULT, 'LeftIndent',
              ( ['out', 'retval'], POINTER(c_float), 'prop' )),
    COMMETHOD([dispid(107), 'propput'], HRESULT, 'LeftIndent',
              ( ['in'], c_float, 'prop' )),
    COMMETHOD([dispid(108), 'propget'], HRESULT, 'FirstLineIndent',
              ( ['out', 'retval'], POINTER(c_float), 'prop' )),
    COMMETHOD([dispid(108), 'propput'], HRESULT, 'FirstLineIndent',
              ( ['in'], c_float, 'prop' )),
    COMMETHOD([dispid(109), 'propget'], HRESULT, 'LineSpacing',
              ( ['out', 'retval'], POINTER(c_float), 'prop' )),
    COMMETHOD([dispid(109), 'propput'], HRESULT, 'LineSpacing',
              ( ['in'], c_float, 'prop' )),
    COMMETHOD([dispid(110), 'propget'], HRESULT, 'LineSpacingRule',
              ( ['out', 'retval'], POINTER(WdLineSpacing), 'prop' )),
    COMMETHOD([dispid(110), 'propput'], HRESULT, 'LineSpacingRule',
              ( ['in'], WdLineSpacing, 'prop' )),
    COMMETHOD([dispid(111), 'propget'], HRESULT, 'SpaceBefore',
              ( ['out', 'retval'], POINTER(c_float), 'prop' )),
    COMMETHOD([dispid(111), 'propput'], HRESULT, 'SpaceBefore',
              ( ['in'], c_float, 'prop' )),
    COMMETHOD([dispid(112), 'propget'], HRESULT, 'SpaceAfter',
              ( ['out', 'retval'], POINTER(c_float), 'prop' )),
    COMMETHOD([dispid(112), 'propput'], HRESULT, 'SpaceAfter',
              ( ['in'], c_float, 'prop' )),
    COMMETHOD([dispid(113), 'propget'], HRESULT, 'Hyphenation',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(113), 'propput'], HRESULT, 'Hyphenation',
              ( ['in'], c_int, 'prop' )),
    COMMETHOD([dispid(114), 'propget'], HRESULT, 'WidowControl',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(114), 'propput'], HRESULT, 'WidowControl',
              ( ['in'], c_int, 'prop' )),
    COMMETHOD([dispid(116), 'propget'], HRESULT, 'Shading',
              ( ['out', 'retval'], POINTER(POINTER(Shading)), 'prop' )),
    COMMETHOD([dispid(117), 'propget'], HRESULT, 'FarEastLineBreakControl',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(117), 'propput'], HRESULT, 'FarEastLineBreakControl',
              ( ['in'], c_int, 'prop' )),
    COMMETHOD([dispid(118), 'propget'], HRESULT, 'WordWrap',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(118), 'propput'], HRESULT, 'WordWrap',
              ( ['in'], c_int, 'prop' )),
    COMMETHOD([dispid(119), 'propget'], HRESULT, 'HangingPunctuation',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(119), 'propput'], HRESULT, 'HangingPunctuation',
              ( ['in'], c_int, 'prop' )),
    COMMETHOD([dispid(120), 'propget'], HRESULT, 'HalfWidthPunctuationOnTopOfLine',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(120), 'propput'], HRESULT, 'HalfWidthPunctuationOnTopOfLine',
              ( ['in'], c_int, 'prop' )),
    COMMETHOD([dispid(121), 'propget'], HRESULT, 'AddSpaceBetweenFarEastAndAlpha',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(121), 'propput'], HRESULT, 'AddSpaceBetweenFarEastAndAlpha',
              ( ['in'], c_int, 'prop' )),
    COMMETHOD([dispid(122), 'propget'], HRESULT, 'AddSpaceBetweenFarEastAndDigit',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(122), 'propput'], HRESULT, 'AddSpaceBetweenFarEastAndDigit',
              ( ['in'], c_int, 'prop' )),
    COMMETHOD([dispid(123), 'propget'], HRESULT, 'BaseLineAlignment',
              ( ['out', 'retval'], POINTER(WdBaselineAlignment), 'prop' )),
    COMMETHOD([dispid(123), 'propput'], HRESULT, 'BaseLineAlignment',
              ( ['in'], WdBaselineAlignment, 'prop' )),
    COMMETHOD([dispid(124), 'propget'], HRESULT, 'AutoAdjustRightIndent',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(124), 'propput'], HRESULT, 'AutoAdjustRightIndent',
              ( ['in'], c_int, 'prop' )),
    COMMETHOD([dispid(125), 'propget'], HRESULT, 'DisableLineHeightGrid',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(125), 'propput'], HRESULT, 'DisableLineHeightGrid',
              ( ['in'], c_int, 'prop' )),
    COMMETHOD([dispid(202), 'propget'], HRESULT, 'OutlineLevel',
              ( ['out', 'retval'], POINTER(WdOutlineLevel), 'prop' )),
    COMMETHOD([dispid(202), 'propput'], HRESULT, 'OutlineLevel',
              ( ['in'], WdOutlineLevel, 'prop' )),
    COMMETHOD([dispid(301)], HRESULT, 'CloseUp'),
    COMMETHOD([dispid(302)], HRESULT, 'OpenUp'),
    COMMETHOD([dispid(303)], HRESULT, 'OpenOrCloseUp'),
    COMMETHOD([dispid(304)], HRESULT, 'TabHangingIndent',
              ( ['in'], c_short, 'Count' )),
    COMMETHOD([dispid(306)], HRESULT, 'TabIndent',
              ( ['in'], c_short, 'Count' )),
    COMMETHOD([dispid(312)], HRESULT, 'Reset'),
    COMMETHOD([dispid(313)], HRESULT, 'Space1'),
    COMMETHOD([dispid(314)], HRESULT, 'Space15'),
    COMMETHOD([dispid(315)], HRESULT, 'Space2'),
    COMMETHOD([dispid(320)], HRESULT, 'IndentCharWidth',
              ( ['in'], c_short, 'Count' )),
    COMMETHOD([dispid(322)], HRESULT, 'IndentFirstLineCharWidth',
              ( ['in'], c_short, 'Count' )),
    COMMETHOD([dispid(324)], HRESULT, 'Next',
              ( ['in', 'optional'], POINTER(VARIANT), 'Count' ),
              ( ['out', 'retval'], POINTER(POINTER(Paragraph)), 'prop' )),
    COMMETHOD([dispid(325)], HRESULT, 'Previous',
              ( ['in', 'optional'], POINTER(VARIANT), 'Count' ),
              ( ['out', 'retval'], POINTER(POINTER(Paragraph)), 'prop' )),
    COMMETHOD([dispid(326)], HRESULT, 'OutlinePromote'),
    COMMETHOD([dispid(327)], HRESULT, 'OutlineDemote'),
    COMMETHOD([dispid(328)], HRESULT, 'OutlineDemoteToBody'),
    COMMETHOD([dispid(333)], HRESULT, 'Indent'),
    COMMETHOD([dispid(334)], HRESULT, 'Outdent'),
    COMMETHOD([dispid(126), 'propget'], HRESULT, 'CharacterUnitRightIndent',
              ( ['out', 'retval'], POINTER(c_float), 'prop' )),
    COMMETHOD([dispid(126), 'propput'], HRESULT, 'CharacterUnitRightIndent',
              ( ['in'], c_float, 'prop' )),
    COMMETHOD([dispid(127), 'propget'], HRESULT, 'CharacterUnitLeftIndent',
              ( ['out', 'retval'], POINTER(c_float), 'prop' )),
    COMMETHOD([dispid(127), 'propput'], HRESULT, 'CharacterUnitLeftIndent',
              ( ['in'], c_float, 'prop' )),
    COMMETHOD([dispid(128), 'propget'], HRESULT, 'CharacterUnitFirstLineIndent',
              ( ['out', 'retval'], POINTER(c_float), 'prop' )),
    COMMETHOD([dispid(128), 'propput'], HRESULT, 'CharacterUnitFirstLineIndent',
              ( ['in'], c_float, 'prop' )),
    COMMETHOD([dispid(129), 'propget'], HRESULT, 'LineUnitBefore',
              ( ['out', 'retval'], POINTER(c_float), 'prop' )),
    COMMETHOD([dispid(129), 'propput'], HRESULT, 'LineUnitBefore',
              ( ['in'], c_float, 'prop' )),
    COMMETHOD([dispid(130), 'propget'], HRESULT, 'LineUnitAfter',
              ( ['out', 'retval'], POINTER(c_float), 'prop' )),
    COMMETHOD([dispid(130), 'propput'], HRESULT, 'LineUnitAfter',
              ( ['in'], c_float, 'prop' )),
    COMMETHOD([dispid(203), 'propget'], HRESULT, 'ReadingOrder',
              ( ['out', 'retval'], POINTER(WdReadingOrder), 'prop' )),
    COMMETHOD([dispid(203), 'propput'], HRESULT, 'ReadingOrder',
              ( ['in'], WdReadingOrder, 'prop' )),
    COMMETHOD([dispid(204), 'propget'], HRESULT, 'ID',
              ( ['out', 'retval'], POINTER(BSTR), 'prop' )),
    COMMETHOD([dispid(204), 'propput'], HRESULT, 'ID',
              ( ['in'], BSTR, 'prop' )),
    COMMETHOD([dispid(132), 'propget'], HRESULT, 'SpaceBeforeAuto',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(132), 'propput'], HRESULT, 'SpaceBeforeAuto',
              ( ['in'], c_int, 'prop' )),
    COMMETHOD([dispid(133), 'propget'], HRESULT, 'SpaceAfterAuto',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(133), 'propput'], HRESULT, 'SpaceAfterAuto',
              ( ['in'], c_int, 'prop' )),
    COMMETHOD([dispid(134), 'propget'], HRESULT, 'IsStyleSeparator',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'prop' )),
    COMMETHOD([dispid(335)], HRESULT, 'SelectNumber'),
    COMMETHOD([dispid(336)], HRESULT, 'ListAdvanceTo',
              ( ['in', 'optional'], c_short, 'Level1', 0 ),
              ( ['in', 'optional'], c_short, 'Level2', 0 ),
              ( ['in', 'optional'], c_short, 'Level3', 0 ),
              ( ['in', 'optional'], c_short, 'Level4', 0 ),
              ( ['in', 'optional'], c_short, 'Level5', 0 ),
              ( ['in', 'optional'], c_short, 'Level6', 0 ),
              ( ['in', 'optional'], c_short, 'Level7', 0 ),
              ( ['in', 'optional'], c_short, 'Level8', 0 ),
              ( ['in', 'optional'], c_short, 'Level9', 0 )),
    COMMETHOD([dispid(337)], HRESULT, 'ResetAdvanceTo'),
    COMMETHOD([dispid(338)], HRESULT, 'SeparateList'),
    COMMETHOD([dispid(339)], HRESULT, 'JoinList'),
    COMMETHOD([dispid(135), 'propget'], HRESULT, 'MirrorIndents',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(135), 'propput'], HRESULT, 'MirrorIndents',
              ( ['in'], c_int, 'prop' )),
    COMMETHOD([dispid(136), 'propget'], HRESULT, 'TextboxTightWrap',
              ( ['out', 'retval'], POINTER(WdTextboxTightWrap), 'prop' )),
    COMMETHOD([dispid(136), 'propput'], HRESULT, 'TextboxTightWrap',
              ( ['in'], WdTextboxTightWrap, 'prop' )),
    COMMETHOD([dispid(137), 'propget'], HRESULT, 'ListNumberOriginal',
              ( ['in'], c_short, 'Level' ),
              ( ['out', 'retval'], POINTER(c_short), 'prop' )),
    COMMETHOD([dispid(138), 'hidden', 'propget'], HRESULT, 'ParaID',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(140), 'hidden', 'propget'], HRESULT, 'TextID',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(1203), 'propget'], HRESULT, 'CollapsedState',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'prop' )),
    COMMETHOD([dispid(1203), 'propput'], HRESULT, 'CollapsedState',
              ( ['in'], VARIANT_BOOL, 'prop' )),
    COMMETHOD([dispid(1204), 'propget'], HRESULT, 'CollapseHeadingByDefault',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'prop' )),
    COMMETHOD([dispid(1204), 'propput'], HRESULT, 'CollapseHeadingByDefault',
              ( ['in'], VARIANT_BOOL, 'prop' )),
]
################################################################
## code template for Paragraph implementation
##class Paragraph_Impl(object):
##    @property
##    def Range(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Creator(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return prop
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    Format = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    TabStops = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    Borders = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def DropCap(self):
##        '-no docstring-'
##        #return prop
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    Style = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    Alignment = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    KeepTogether = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    KeepWithNext = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    PageBreakBefore = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    NoLineNumber = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    RightIndent = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    LeftIndent = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    FirstLineIndent = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    LineSpacing = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    LineSpacingRule = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    SpaceBefore = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    SpaceAfter = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    Hyphenation = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    WidowControl = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Shading(self):
##        '-no docstring-'
##        #return prop
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    FarEastLineBreakControl = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    WordWrap = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    HangingPunctuation = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    HalfWidthPunctuationOnTopOfLine = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    AddSpaceBetweenFarEastAndAlpha = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    AddSpaceBetweenFarEastAndDigit = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    BaseLineAlignment = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    AutoAdjustRightIndent = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    DisableLineHeightGrid = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    OutlineLevel = property(_get, _set, doc = _set.__doc__)
##
##    def CloseUp(self):
##        '-no docstring-'
##        #return 
##
##    def OpenUp(self):
##        '-no docstring-'
##        #return 
##
##    def OpenOrCloseUp(self):
##        '-no docstring-'
##        #return 
##
##    def TabHangingIndent(self, Count):
##        '-no docstring-'
##        #return 
##
##    def TabIndent(self, Count):
##        '-no docstring-'
##        #return 
##
##    def Reset(self):
##        '-no docstring-'
##        #return 
##
##    def Space1(self):
##        '-no docstring-'
##        #return 
##
##    def Space15(self):
##        '-no docstring-'
##        #return 
##
##    def Space2(self):
##        '-no docstring-'
##        #return 
##
##    def IndentCharWidth(self, Count):
##        '-no docstring-'
##        #return 
##
##    def IndentFirstLineCharWidth(self, Count):
##        '-no docstring-'
##        #return 
##
##    def Next(self, Count):
##        '-no docstring-'
##        #return prop
##
##    def Previous(self, Count):
##        '-no docstring-'
##        #return prop
##
##    def OutlinePromote(self):
##        '-no docstring-'
##        #return 
##
##    def OutlineDemote(self):
##        '-no docstring-'
##        #return 
##
##    def OutlineDemoteToBody(self):
##        '-no docstring-'
##        #return 
##
##    def Indent(self):
##        '-no docstring-'
##        #return 
##
##    def Outdent(self):
##        '-no docstring-'
##        #return 
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    CharacterUnitRightIndent = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    CharacterUnitLeftIndent = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    CharacterUnitFirstLineIndent = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    LineUnitBefore = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    LineUnitAfter = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    ReadingOrder = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    ID = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    SpaceBeforeAuto = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    SpaceAfterAuto = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def IsStyleSeparator(self):
##        '-no docstring-'
##        #return prop
##
##    def SelectNumber(self):
##        '-no docstring-'
##        #return 
##
##    def ListAdvanceTo(self, Level1, Level2, Level3, Level4, Level5, Level6, Level7, Level8, Level9):
##        '-no docstring-'
##        #return 
##
##    def ResetAdvanceTo(self):
##        '-no docstring-'
##        #return 
##
##    def SeparateList(self):
##        '-no docstring-'
##        #return 
##
##    def JoinList(self):
##        '-no docstring-'
##        #return 
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    MirrorIndents = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    TextboxTightWrap = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def ListNumberOriginal(self, Level):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def ParaID(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def TextID(self):
##        '-no docstring-'
##        #return prop
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    CollapsedState = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    CollapseHeadingByDefault = property(_get, _set, doc = _set.__doc__)
##

CustomProperty._methods_ = [
    COMMETHOD([dispid(1), 'propget'], HRESULT, 'Name',
              ( ['out', 'retval'], POINTER(BSTR), 'prop' )),
    COMMETHOD([dispid(0), 'propget'], HRESULT, 'Value',
              ( ['out', 'retval'], POINTER(BSTR), 'prop' )),
    COMMETHOD([dispid(0), 'propput'], HRESULT, 'Value',
              ( ['in'], BSTR, 'prop' )),
    COMMETHOD([dispid(1000), 'propget'], HRESULT, 'Application',
              ( ['out', 'retval'], POINTER(POINTER(Application)), 'prop' )),
    COMMETHOD([dispid(1001), 'propget'], HRESULT, 'Creator',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(1002), 'propget'], HRESULT, 'Parent',
              ( ['out', 'retval'], POINTER(POINTER(IDispatch)), 'prop' )),
    COMMETHOD([dispid(11)], HRESULT, 'Delete'),
]
################################################################
## code template for CustomProperty implementation
##class CustomProperty_Impl(object):
##    @property
##    def Name(self):
##        '-no docstring-'
##        #return prop
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    Value = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Creator(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return prop
##
##    def Delete(self):
##        '-no docstring-'
##        #return 
##

class Source(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{4A6AE865-199D-4EA3-9F6B-125BD9C40EDF}')
    _idlflags_ = ['dual', 'nonextensible', 'oleautomation']
Sources._methods_ = [
    COMMETHOD([dispid(-4), 'nonbrowsable', 'propget'], HRESULT, '_NewEnum',
              ( ['out', 'retval'], POINTER(POINTER(IUnknown)), 'prop' )),
    COMMETHOD([dispid(2), 'propget'], HRESULT, 'Count',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(1000), 'propget'], HRESULT, 'Application',
              ( ['out', 'retval'], POINTER(POINTER(Application)), 'prop' )),
    COMMETHOD([dispid(1001), 'propget'], HRESULT, 'Creator',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(1002), 'propget'], HRESULT, 'Parent',
              ( ['out', 'retval'], POINTER(POINTER(IDispatch)), 'prop' )),
    COMMETHOD([dispid(0)], HRESULT, 'Item',
              ( ['in'], c_int, 'Index' ),
              ( ['out', 'retval'], POINTER(POINTER(Source)), 'prop' )),
    COMMETHOD([dispid(107)], HRESULT, 'Add',
              ( ['in'], BSTR, 'Data' )),
]
################################################################
## code template for Sources implementation
##class Sources_Impl(object):
##    @property
##    def _NewEnum(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Count(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Creator(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return prop
##
##    def Item(self, Index):
##        '-no docstring-'
##        #return prop
##
##    def Add(self, Data):
##        '-no docstring-'
##        #return 
##

Adjustments._methods_ = [
    COMMETHOD([dispid(1000), 'propget'], HRESULT, 'Application',
              ( ['out', 'retval'], POINTER(POINTER(Application)), 'prop' )),
    COMMETHOD([dispid(1001), 'propget'], HRESULT, 'Creator',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(1), 'propget'], HRESULT, 'Parent',
              ( ['out', 'retval'], POINTER(POINTER(IDispatch)), 'prop' )),
    COMMETHOD([dispid(2), 'propget'], HRESULT, 'Count',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(0), 'propget'], HRESULT, 'Item',
              ( ['in'], c_int, 'Index' ),
              ( ['out', 'retval'], POINTER(c_float), 'prop' )),
    COMMETHOD([dispid(0), 'propput'], HRESULT, 'Item',
              ( ['in'], c_int, 'Index' ),
              ( ['in'], c_float, 'prop' )),
]
################################################################
## code template for Adjustments implementation
##class Adjustments_Impl(object):
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Creator(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Count(self):
##        '-no docstring-'
##        #return prop
##
##    def _get(self, Index):
##        '-no docstring-'
##        #return prop
##    def _set(self, Index, prop):
##        '-no docstring-'
##    Item = property(_get, _set, doc = _set.__doc__)
##

class Page(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{352840A9-AF7D-4CA4-87FC-21C68FDAB3E4}')
    _idlflags_ = ['dual', 'nonextensible', 'oleautomation']
Pages._methods_ = [
    COMMETHOD([dispid(-4), 'nonbrowsable', 'propget'], HRESULT, '_NewEnum',
              ( ['out', 'retval'], POINTER(POINTER(IUnknown)), 'prop' )),
    COMMETHOD([dispid(2), 'propget'], HRESULT, 'Count',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(1000), 'propget'], HRESULT, 'Application',
              ( ['out', 'retval'], POINTER(POINTER(Application)), 'prop' )),
    COMMETHOD([dispid(1001), 'propget'], HRESULT, 'Creator',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(1002), 'propget'], HRESULT, 'Parent',
              ( ['out', 'retval'], POINTER(POINTER(IDispatch)), 'prop' )),
    COMMETHOD([dispid(0)], HRESULT, 'Item',
              ( ['in'], c_int, 'Index' ),
              ( ['out', 'retval'], POINTER(POINTER(Page)), 'prop' )),
]
################################################################
## code template for Pages implementation
##class Pages_Impl(object):
##    @property
##    def _NewEnum(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Count(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Creator(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return prop
##
##    def Item(self, Index):
##        '-no docstring-'
##        #return prop
##


# values for enumeration 'WdCompareDestination'
wdCompareDestinationOriginal = 0
wdCompareDestinationRevised = 1
wdCompareDestinationNew = 2
WdCompareDestination = c_int # enum
class OMathBar(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{F08B45F1-8F23-4156-9D63-1820C0ED229A}')
    _idlflags_ = ['dual', 'nonextensible', 'oleautomation']
OMathBar._methods_ = [
    COMMETHOD([dispid(100), 'propget'], HRESULT, 'Application',
              ( ['out', 'retval'], POINTER(POINTER(Application)), 'prop' )),
    COMMETHOD([dispid(101), 'propget'], HRESULT, 'Creator',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(102), 'propget'], HRESULT, 'Parent',
              ( ['out', 'retval'], POINTER(POINTER(IDispatch)), 'prop' )),
    COMMETHOD([dispid(103), 'propget'], HRESULT, 'E',
              ( ['out', 'retval'], POINTER(POINTER(OMath)), 'prop' )),
    COMMETHOD([dispid(104), 'propget'], HRESULT, 'BarTop',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'prop' )),
    COMMETHOD([dispid(104), 'propput'], HRESULT, 'BarTop',
              ( ['in'], VARIANT_BOOL, 'prop' )),
]
################################################################
## code template for OMathBar implementation
##class OMathBar_Impl(object):
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Creator(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def E(self):
##        '-no docstring-'
##        #return prop
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    BarTop = property(_get, _set, doc = _set.__doc__)
##

class ListLevel(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{0002098D-0000-0000-C000-000000000046}')
    _idlflags_ = ['dual', 'nonextensible', 'oleautomation']
ListLevels._methods_ = [
    COMMETHOD([dispid(-4), 'nonbrowsable', 'propget'], HRESULT, '_NewEnum',
              ( ['out', 'retval'], POINTER(POINTER(IUnknown)), 'prop' )),
    COMMETHOD([dispid(2), 'propget'], HRESULT, 'Count',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(1000), 'propget'], HRESULT, 'Application',
              ( ['out', 'retval'], POINTER(POINTER(Application)), 'prop' )),
    COMMETHOD([dispid(1001), 'propget'], HRESULT, 'Creator',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(1002), 'propget'], HRESULT, 'Parent',
              ( ['out', 'retval'], POINTER(POINTER(IDispatch)), 'prop' )),
    COMMETHOD([dispid(0)], HRESULT, 'Item',
              ( ['in'], c_int, 'Index' ),
              ( ['out', 'retval'], POINTER(POINTER(ListLevel)), 'prop' )),
]
################################################################
## code template for ListLevels implementation
##class ListLevels_Impl(object):
##    @property
##    def _NewEnum(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Count(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Creator(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return prop
##
##    def Item(self, Index):
##        '-no docstring-'
##        #return prop
##

Hyperlinks._methods_ = [
    COMMETHOD([dispid(1000), 'propget'], HRESULT, 'Application',
              ( ['out', 'retval'], POINTER(POINTER(Application)), 'prop' )),
    COMMETHOD([dispid(1001), 'propget'], HRESULT, 'Creator',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(1002), 'propget'], HRESULT, 'Parent',
              ( ['out', 'retval'], POINTER(POINTER(IDispatch)), 'prop' )),
    COMMETHOD([dispid(1), 'propget'], HRESULT, 'Count',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(-4), 'nonbrowsable', 'propget'], HRESULT, '_NewEnum',
              ( ['out', 'retval'], POINTER(POINTER(IUnknown)), 'prop' )),
    COMMETHOD([dispid(0)], HRESULT, 'Item',
              ( ['in'], POINTER(VARIANT), 'Index' ),
              ( ['out', 'retval'], POINTER(POINTER(Hyperlink)), 'prop' )),
    COMMETHOD([dispid(100), 'hidden'], HRESULT, '_Add',
              ( ['in'], POINTER(IDispatch), 'Anchor' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'Address' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'SubAddress' ),
              ( ['out', 'retval'], POINTER(POINTER(Hyperlink)), 'prop' )),
    COMMETHOD([dispid(101)], HRESULT, 'Add',
              ( ['in'], POINTER(IDispatch), 'Anchor' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'Address' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'SubAddress' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'ScreenTip' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'TextToDisplay' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'Target' ),
              ( ['out', 'retval'], POINTER(POINTER(Hyperlink)), 'prop' )),
]
################################################################
## code template for Hyperlinks implementation
##class Hyperlinks_Impl(object):
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Creator(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Count(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def _NewEnum(self):
##        '-no docstring-'
##        #return prop
##
##    def Item(self, Index):
##        '-no docstring-'
##        #return prop
##
##    def _Add(self, Anchor, Address, SubAddress):
##        '-no docstring-'
##        #return prop
##
##    def Add(self, Anchor, Address, SubAddress, ScreenTip, TextToDisplay, Target):
##        '-no docstring-'
##        #return prop
##


# values for enumeration 'WdOrganizerObject'
wdOrganizerObjectStyles = 0
wdOrganizerObjectAutoText = 1
wdOrganizerObjectCommandBars = 2
wdOrganizerObjectProjectItems = 3
WdOrganizerObject = c_int # enum
class TwoInitialCapsExceptions(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{00020944-0000-0000-C000-000000000046}')
    _idlflags_ = ['dual', 'nonextensible', 'oleautomation']
class TwoInitialCapsException(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{00020943-0000-0000-C000-000000000046}')
    _idlflags_ = ['dual', 'nonextensible', 'oleautomation']
TwoInitialCapsExceptions._methods_ = [
    COMMETHOD([dispid(1000), 'propget'], HRESULT, 'Application',
              ( ['out', 'retval'], POINTER(POINTER(Application)), 'prop' )),
    COMMETHOD([dispid(1001), 'propget'], HRESULT, 'Creator',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(1002), 'propget'], HRESULT, 'Parent',
              ( ['out', 'retval'], POINTER(POINTER(IDispatch)), 'prop' )),
    COMMETHOD([dispid(-4), 'nonbrowsable', 'propget'], HRESULT, '_NewEnum',
              ( ['out', 'retval'], POINTER(POINTER(IUnknown)), 'prop' )),
    COMMETHOD([dispid(1), 'propget'], HRESULT, 'Count',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(0)], HRESULT, 'Item',
              ( ['in'], POINTER(VARIANT), 'Index' ),
              ( ['out', 'retval'], POINTER(POINTER(TwoInitialCapsException)), 'prop' )),
    COMMETHOD([dispid(101)], HRESULT, 'Add',
              ( ['in'], BSTR, 'Name' ),
              ( ['out', 'retval'], POINTER(POINTER(TwoInitialCapsException)), 'prop' )),
]
################################################################
## code template for TwoInitialCapsExceptions implementation
##class TwoInitialCapsExceptions_Impl(object):
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Creator(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def _NewEnum(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Count(self):
##        '-no docstring-'
##        #return prop
##
##    def Item(self, Index):
##        '-no docstring-'
##        #return prop
##
##    def Add(self, Name):
##        '-no docstring-'
##        #return prop
##

TableOfAuthoritiesCategory._methods_ = [
    COMMETHOD([dispid(1000), 'propget'], HRESULT, 'Application',
              ( ['out', 'retval'], POINTER(POINTER(Application)), 'prop' )),
    COMMETHOD([dispid(1001), 'propget'], HRESULT, 'Creator',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(1002), 'propget'], HRESULT, 'Parent',
              ( ['out', 'retval'], POINTER(POINTER(IDispatch)), 'prop' )),
    COMMETHOD([dispid(0), 'propget'], HRESULT, 'Name',
              ( ['out', 'retval'], POINTER(BSTR), 'prop' )),
    COMMETHOD([dispid(0), 'propput'], HRESULT, 'Name',
              ( ['in'], BSTR, 'prop' )),
    COMMETHOD([dispid(1), 'propget'], HRESULT, 'Index',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
]
################################################################
## code template for TableOfAuthoritiesCategory implementation
##class TableOfAuthoritiesCategory_Impl(object):
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Creator(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return prop
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    Name = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Index(self):
##        '-no docstring-'
##        #return prop
##


# values for enumeration 'WdFindMatch'
wdMatchParagraphMark = 65551
wdMatchTabCharacter = 9
wdMatchCommentMark = 5
wdMatchAnyCharacter = 65599
wdMatchAnyDigit = 65567
wdMatchAnyLetter = 65583
wdMatchCaretCharacter = 11
wdMatchColumnBreak = 14
wdMatchEmDash = 8212
wdMatchEnDash = 8211
wdMatchEndnoteMark = 65555
wdMatchField = 19
wdMatchFootnoteMark = 65554
wdMatchGraphic = 1
wdMatchManualLineBreak = 65551
wdMatchManualPageBreak = 65564
wdMatchNonbreakingHyphen = 30
wdMatchNonbreakingSpace = 160
wdMatchOptionalHyphen = 31
wdMatchSectionBreak = 65580
wdMatchWhiteSpace = 65655
WdFindMatch = c_int # enum

# values for enumeration 'XlSizeRepresents'
xlSizeIsWidth = 2
xlSizeIsArea = 1
XlSizeRepresents = c_int # enum

# values for enumeration 'WdFindWrap'
wdFindStop = 0
wdFindContinue = 1
wdFindAsk = 2
WdFindWrap = c_int # enum
Find._methods_ = [
    COMMETHOD([dispid(1000), 'propget'], HRESULT, 'Application',
              ( ['out', 'retval'], POINTER(POINTER(Application)), 'prop' )),
    COMMETHOD([dispid(1001), 'propget'], HRESULT, 'Creator',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(1002), 'propget'], HRESULT, 'Parent',
              ( ['out', 'retval'], POINTER(POINTER(IDispatch)), 'prop' )),
    COMMETHOD([dispid(10), 'propget'], HRESULT, 'Forward',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'prop' )),
    COMMETHOD([dispid(10), 'propput'], HRESULT, 'Forward',
              ( ['in'], VARIANT_BOOL, 'prop' )),
    COMMETHOD([dispid(11), 'propget'], HRESULT, 'Font',
              ( ['out', 'retval'], POINTER(POINTER(Font)), 'prop' )),
    COMMETHOD([dispid(11), 'propput'], HRESULT, 'Font',
              ( ['in'], POINTER(Font), 'prop' )),
    COMMETHOD([dispid(12), 'propget'], HRESULT, 'Found',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'prop' )),
    COMMETHOD([dispid(13), 'propget'], HRESULT, 'MatchAllWordForms',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'prop' )),
    COMMETHOD([dispid(13), 'propput'], HRESULT, 'MatchAllWordForms',
              ( ['in'], VARIANT_BOOL, 'prop' )),
    COMMETHOD([dispid(14), 'propget'], HRESULT, 'MatchCase',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'prop' )),
    COMMETHOD([dispid(14), 'propput'], HRESULT, 'MatchCase',
              ( ['in'], VARIANT_BOOL, 'prop' )),
    COMMETHOD([dispid(15), 'propget'], HRESULT, 'MatchWildcards',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'prop' )),
    COMMETHOD([dispid(15), 'propput'], HRESULT, 'MatchWildcards',
              ( ['in'], VARIANT_BOOL, 'prop' )),
    COMMETHOD([dispid(16), 'propget'], HRESULT, 'MatchSoundsLike',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'prop' )),
    COMMETHOD([dispid(16), 'propput'], HRESULT, 'MatchSoundsLike',
              ( ['in'], VARIANT_BOOL, 'prop' )),
    COMMETHOD([dispid(17), 'propget'], HRESULT, 'MatchWholeWord',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'prop' )),
    COMMETHOD([dispid(17), 'propput'], HRESULT, 'MatchWholeWord',
              ( ['in'], VARIANT_BOOL, 'prop' )),
    COMMETHOD([dispid(40), 'propget'], HRESULT, 'MatchFuzzy',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'prop' )),
    COMMETHOD([dispid(40), 'propput'], HRESULT, 'MatchFuzzy',
              ( ['in'], VARIANT_BOOL, 'prop' )),
    COMMETHOD([dispid(41), 'propget'], HRESULT, 'MatchByte',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'prop' )),
    COMMETHOD([dispid(41), 'propput'], HRESULT, 'MatchByte',
              ( ['in'], VARIANT_BOOL, 'prop' )),
    COMMETHOD([dispid(18), 'propget'], HRESULT, 'ParagraphFormat',
              ( ['out', 'retval'], POINTER(POINTER(ParagraphFormat)), 'prop' )),
    COMMETHOD([dispid(18), 'propput'], HRESULT, 'ParagraphFormat',
              ( ['in'], POINTER(ParagraphFormat), 'prop' )),
    COMMETHOD([dispid(19), 'propget'], HRESULT, 'Style',
              ( ['out', 'retval'], POINTER(VARIANT), 'prop' )),
    COMMETHOD([dispid(19), 'propput'], HRESULT, 'Style',
              ( ['in'], POINTER(VARIANT), 'prop' )),
    COMMETHOD([dispid(22), 'propget'], HRESULT, 'Text',
              ( ['out', 'retval'], POINTER(BSTR), 'prop' )),
    COMMETHOD([dispid(22), 'propput'], HRESULT, 'Text',
              ( ['in'], BSTR, 'prop' )),
    COMMETHOD([dispid(23), 'propget'], HRESULT, 'LanguageID',
              ( ['out', 'retval'], POINTER(WdLanguageID), 'prop' )),
    COMMETHOD([dispid(23), 'propput'], HRESULT, 'LanguageID',
              ( ['in'], WdLanguageID, 'prop' )),
    COMMETHOD([dispid(24), 'propget'], HRESULT, 'Highlight',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(24), 'propput'], HRESULT, 'Highlight',
              ( ['in'], c_int, 'prop' )),
    COMMETHOD([dispid(25), 'propget'], HRESULT, 'Replacement',
              ( ['out', 'retval'], POINTER(POINTER(Replacement)), 'prop' )),
    COMMETHOD([dispid(26), 'propget'], HRESULT, 'Frame',
              ( ['out', 'retval'], POINTER(POINTER(Frame)), 'prop' )),
    COMMETHOD([dispid(27), 'propget'], HRESULT, 'Wrap',
              ( ['out', 'retval'], POINTER(WdFindWrap), 'prop' )),
    COMMETHOD([dispid(27), 'propput'], HRESULT, 'Wrap',
              ( ['in'], WdFindWrap, 'prop' )),
    COMMETHOD([dispid(28), 'propget'], HRESULT, 'Format',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'prop' )),
    COMMETHOD([dispid(28), 'propput'], HRESULT, 'Format',
              ( ['in'], VARIANT_BOOL, 'prop' )),
    COMMETHOD([dispid(29), 'propget'], HRESULT, 'LanguageIDFarEast',
              ( ['out', 'retval'], POINTER(WdLanguageID), 'prop' )),
    COMMETHOD([dispid(29), 'propput'], HRESULT, 'LanguageIDFarEast',
              ( ['in'], WdLanguageID, 'prop' )),
    COMMETHOD([dispid(60), 'propget'], HRESULT, 'LanguageIDOther',
              ( ['out', 'retval'], POINTER(WdLanguageID), 'prop' )),
    COMMETHOD([dispid(60), 'propput'], HRESULT, 'LanguageIDOther',
              ( ['in'], WdLanguageID, 'prop' )),
    COMMETHOD([dispid(61), 'propget'], HRESULT, 'CorrectHangulEndings',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'prop' )),
    COMMETHOD([dispid(61), 'propput'], HRESULT, 'CorrectHangulEndings',
              ( ['in'], VARIANT_BOOL, 'prop' )),
    COMMETHOD([dispid(30), 'hidden'], HRESULT, 'ExecuteOld',
              ( ['in', 'optional'], POINTER(VARIANT), 'FindText' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'MatchCase' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'MatchWholeWord' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'MatchWildcards' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'MatchSoundsLike' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'MatchAllWordForms' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'Forward' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'Wrap' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'Format' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'ReplaceWith' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'Replace' ),
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'prop' )),
    COMMETHOD([dispid(31)], HRESULT, 'ClearFormatting'),
    COMMETHOD([dispid(32)], HRESULT, 'SetAllFuzzyOptions'),
    COMMETHOD([dispid(33)], HRESULT, 'ClearAllFuzzyOptions'),
    COMMETHOD([dispid(444)], HRESULT, 'Execute',
              ( ['in', 'optional'], POINTER(VARIANT), 'FindText' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'MatchCase' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'MatchWholeWord' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'MatchWildcards' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'MatchSoundsLike' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'MatchAllWordForms' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'Forward' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'Wrap' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'Format' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'ReplaceWith' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'Replace' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'MatchKashida' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'MatchDiacritics' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'MatchAlefHamza' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'MatchControl' ),
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'prop' )),
    COMMETHOD([dispid(34), 'propget'], HRESULT, 'NoProofing',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(34), 'propput'], HRESULT, 'NoProofing',
              ( ['in'], c_int, 'prop' )),
    COMMETHOD([dispid(100), 'propget'], HRESULT, 'MatchKashida',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'prop' )),
    COMMETHOD([dispid(100), 'propput'], HRESULT, 'MatchKashida',
              ( ['in'], VARIANT_BOOL, 'prop' )),
    COMMETHOD([dispid(101), 'propget'], HRESULT, 'MatchDiacritics',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'prop' )),
    COMMETHOD([dispid(101), 'propput'], HRESULT, 'MatchDiacritics',
              ( ['in'], VARIANT_BOOL, 'prop' )),
    COMMETHOD([dispid(102), 'propget'], HRESULT, 'MatchAlefHamza',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'prop' )),
    COMMETHOD([dispid(102), 'propput'], HRESULT, 'MatchAlefHamza',
              ( ['in'], VARIANT_BOOL, 'prop' )),
    COMMETHOD([dispid(103), 'propget'], HRESULT, 'MatchControl',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'prop' )),
    COMMETHOD([dispid(103), 'propput'], HRESULT, 'MatchControl',
              ( ['in'], VARIANT_BOOL, 'prop' )),
    COMMETHOD([dispid(104), 'propget'], HRESULT, 'MatchPhrase',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'prop' )),
    COMMETHOD([dispid(104), 'propput'], HRESULT, 'MatchPhrase',
              ( ['in'], VARIANT_BOOL, 'prop' )),
    COMMETHOD([dispid(105), 'propget'], HRESULT, 'MatchPrefix',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'prop' )),
    COMMETHOD([dispid(105), 'propput'], HRESULT, 'MatchPrefix',
              ( ['in'], VARIANT_BOOL, 'prop' )),
    COMMETHOD([dispid(106), 'propget'], HRESULT, 'MatchSuffix',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'prop' )),
    COMMETHOD([dispid(106), 'propput'], HRESULT, 'MatchSuffix',
              ( ['in'], VARIANT_BOOL, 'prop' )),
    COMMETHOD([dispid(107), 'propget'], HRESULT, 'IgnoreSpace',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'prop' )),
    COMMETHOD([dispid(107), 'propput'], HRESULT, 'IgnoreSpace',
              ( ['in'], VARIANT_BOOL, 'prop' )),
    COMMETHOD([dispid(108), 'propget'], HRESULT, 'IgnorePunct',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'prop' )),
    COMMETHOD([dispid(108), 'propput'], HRESULT, 'IgnorePunct',
              ( ['in'], VARIANT_BOOL, 'prop' )),
    COMMETHOD([dispid(445)], HRESULT, 'HitHighlight',
              ( ['in'], POINTER(VARIANT), 'FindText' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'HighlightColor' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'TextColor' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'MatchCase' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'MatchWholeWord' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'MatchPrefix' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'MatchSuffix' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'MatchPhrase' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'MatchWildcards' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'MatchSoundsLike' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'MatchAllWordForms' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'MatchByte' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'MatchFuzzy' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'MatchKashida' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'MatchDiacritics' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'MatchAlefHamza' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'MatchControl' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'IgnoreSpace' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'IgnorePunct' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'HanjaPhoneticHangul' ),
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'prop' )),
    COMMETHOD([dispid(446)], HRESULT, 'ClearHitHighlight',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'prop' )),
    COMMETHOD([dispid(447)], HRESULT, 'Execute2007',
              ( ['in', 'optional'], POINTER(VARIANT), 'FindText' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'MatchCase' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'MatchWholeWord' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'MatchWildcards' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'MatchSoundsLike' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'MatchAllWordForms' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'Forward' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'Wrap' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'Format' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'ReplaceWith' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'Replace' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'MatchKashida' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'MatchDiacritics' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'MatchAlefHamza' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'MatchControl' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'MatchPrefix' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'MatchSuffix' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'MatchPhrase' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'IgnoreSpace' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'IgnorePunct' ),
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'prop' )),
    COMMETHOD([dispid(109), 'propget'], HRESULT, 'HanjaPhoneticHangul',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'prop' )),
    COMMETHOD([dispid(109), 'propput'], HRESULT, 'HanjaPhoneticHangul',
              ( ['in'], VARIANT_BOOL, 'prop' )),
]
################################################################
## code template for Find implementation
##class Find_Impl(object):
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Creator(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return prop
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    Forward = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    Font = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Found(self):
##        '-no docstring-'
##        #return prop
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    MatchAllWordForms = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    MatchCase = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    MatchWildcards = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    MatchSoundsLike = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    MatchWholeWord = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    MatchFuzzy = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    MatchByte = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    ParagraphFormat = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    Style = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    Text = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    LanguageID = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    Highlight = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Replacement(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Frame(self):
##        '-no docstring-'
##        #return prop
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    Wrap = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    Format = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    LanguageIDFarEast = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    LanguageIDOther = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    CorrectHangulEndings = property(_get, _set, doc = _set.__doc__)
##
##    def ExecuteOld(self, FindText, MatchCase, MatchWholeWord, MatchWildcards, MatchSoundsLike, MatchAllWordForms, Forward, Wrap, Format, ReplaceWith, Replace):
##        '-no docstring-'
##        #return prop
##
##    def ClearFormatting(self):
##        '-no docstring-'
##        #return 
##
##    def SetAllFuzzyOptions(self):
##        '-no docstring-'
##        #return 
##
##    def ClearAllFuzzyOptions(self):
##        '-no docstring-'
##        #return 
##
##    def Execute(self, FindText, MatchCase, MatchWholeWord, MatchWildcards, MatchSoundsLike, MatchAllWordForms, Forward, Wrap, Format, ReplaceWith, Replace, MatchKashida, MatchDiacritics, MatchAlefHamza, MatchControl):
##        '-no docstring-'
##        #return prop
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    NoProofing = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    MatchKashida = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    MatchDiacritics = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    MatchAlefHamza = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    MatchControl = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    MatchPhrase = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    MatchPrefix = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    MatchSuffix = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    IgnoreSpace = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    IgnorePunct = property(_get, _set, doc = _set.__doc__)
##
##    def HitHighlight(self, FindText, HighlightColor, TextColor, MatchCase, MatchWholeWord, MatchPrefix, MatchSuffix, MatchPhrase, MatchWildcards, MatchSoundsLike, MatchAllWordForms, MatchByte, MatchFuzzy, MatchKashida, MatchDiacritics, MatchAlefHamza, MatchControl, IgnoreSpace, IgnorePunct, HanjaPhoneticHangul):
##        '-no docstring-'
##        #return prop
##
##    def ClearHitHighlight(self):
##        '-no docstring-'
##        #return prop
##
##    def Execute2007(self, FindText, MatchCase, MatchWholeWord, MatchWildcards, MatchSoundsLike, MatchAllWordForms, Forward, Wrap, Format, ReplaceWith, Replace, MatchKashida, MatchDiacritics, MatchAlefHamza, MatchControl, MatchPrefix, MatchSuffix, MatchPhrase, IgnoreSpace, IgnorePunct):
##        '-no docstring-'
##        #return prop
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    HanjaPhoneticHangul = property(_get, _set, doc = _set.__doc__)
##

AutoCorrectEntry._methods_ = [
    COMMETHOD([dispid(1000), 'propget'], HRESULT, 'Application',
              ( ['out', 'retval'], POINTER(POINTER(Application)), 'prop' )),
    COMMETHOD([dispid(1001), 'propget'], HRESULT, 'Creator',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(1002), 'propget'], HRESULT, 'Parent',
              ( ['out', 'retval'], POINTER(POINTER(IDispatch)), 'prop' )),
    COMMETHOD([dispid(1), 'propget'], HRESULT, 'Index',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(2), 'propget'], HRESULT, 'Name',
              ( ['out', 'retval'], POINTER(BSTR), 'prop' )),
    COMMETHOD([dispid(2), 'propput'], HRESULT, 'Name',
              ( ['in'], BSTR, 'prop' )),
    COMMETHOD([dispid(3), 'propget'], HRESULT, 'Value',
              ( ['out', 'retval'], POINTER(BSTR), 'prop' )),
    COMMETHOD([dispid(3), 'propput'], HRESULT, 'Value',
              ( ['in'], BSTR, 'prop' )),
    COMMETHOD([dispid(4), 'propget'], HRESULT, 'RichText',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'prop' )),
    COMMETHOD([dispid(101)], HRESULT, 'Delete'),
    COMMETHOD([dispid(102)], HRESULT, 'Apply',
              ( ['in'], POINTER(Range), 'Range' )),
]
################################################################
## code template for AutoCorrectEntry implementation
##class AutoCorrectEntry_Impl(object):
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Creator(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Index(self):
##        '-no docstring-'
##        #return prop
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    Name = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    Value = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def RichText(self):
##        '-no docstring-'
##        #return prop
##
##    def Delete(self):
##        '-no docstring-'
##        #return 
##
##    def Apply(self, Range):
##        '-no docstring-'
##        #return 
##

class XMLChildNodeSuggestion(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{A87E00E9-3AC3-4B53-ABE3-7379653D0E82}')
    _idlflags_ = ['dual', 'nonextensible', 'oleautomation']
XMLChildNodeSuggestions._methods_ = [
    COMMETHOD([dispid(-4), 'hidden', 'nonbrowsable', 'propget'], HRESULT, '_NewEnum',
              ( ['out', 'retval'], POINTER(POINTER(IUnknown)), 'prop' )),
    COMMETHOD([dispid(2), 'hidden', 'propget'], HRESULT, 'Count',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(1000), 'hidden', 'propget'], HRESULT, 'Application',
              ( ['out', 'retval'], POINTER(POINTER(Application)), 'prop' )),
    COMMETHOD([dispid(1001), 'hidden', 'propget'], HRESULT, 'Creator',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(1002), 'hidden', 'propget'], HRESULT, 'Parent',
              ( ['out', 'retval'], POINTER(POINTER(IDispatch)), 'prop' )),
    COMMETHOD([dispid(0), 'hidden'], HRESULT, 'Item',
              ( ['in'], POINTER(VARIANT), 'Index' ),
              ( ['out', 'retval'], POINTER(POINTER(XMLChildNodeSuggestion)), 'prop' )),
]
################################################################
## code template for XMLChildNodeSuggestions implementation
##class XMLChildNodeSuggestions_Impl(object):
##    @property
##    def _NewEnum(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Count(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Creator(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return prop
##
##    def Item(self, Index):
##        '-no docstring-'
##        #return prop
##

AddIn._methods_ = [
    COMMETHOD([dispid(1000), 'propget'], HRESULT, 'Application',
              ( ['out', 'retval'], POINTER(POINTER(Application)), 'prop' )),
    COMMETHOD([dispid(1001), 'propget'], HRESULT, 'Creator',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(1002), 'propget'], HRESULT, 'Parent',
              ( ['out', 'retval'], POINTER(POINTER(IDispatch)), 'prop' )),
    COMMETHOD([dispid(0), 'propget'], HRESULT, 'Name',
              ( ['out', 'retval'], POINTER(BSTR), 'prop' )),
    COMMETHOD([dispid(1), 'propget'], HRESULT, 'Index',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(3), 'propget'], HRESULT, 'Path',
              ( ['out', 'retval'], POINTER(BSTR), 'prop' )),
    COMMETHOD([dispid(4), 'propget'], HRESULT, 'Installed',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'prop' )),
    COMMETHOD([dispid(4), 'propput'], HRESULT, 'Installed',
              ( ['in'], VARIANT_BOOL, 'prop' )),
    COMMETHOD([dispid(5), 'propget'], HRESULT, 'Compiled',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'prop' )),
    COMMETHOD([dispid(6), 'propget'], HRESULT, 'Autoload',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'prop' )),
    COMMETHOD([dispid(101)], HRESULT, 'Delete'),
]
################################################################
## code template for AddIn implementation
##class AddIn_Impl(object):
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Creator(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Name(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Index(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Path(self):
##        '-no docstring-'
##        #return prop
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    Installed = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Compiled(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Autoload(self):
##        '-no docstring-'
##        #return prop
##
##    def Delete(self):
##        '-no docstring-'
##        #return 
##

class HeadersFooters(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{00020984-0000-0000-C000-000000000046}')
    _idlflags_ = ['dual', 'nonextensible', 'oleautomation']

# values for enumeration 'WdHeaderFooterIndex'
wdHeaderFooterPrimary = 1
wdHeaderFooterFirstPage = 2
wdHeaderFooterEvenPages = 3
WdHeaderFooterIndex = c_int # enum
class HeaderFooter(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{00020985-0000-0000-C000-000000000046}')
    _idlflags_ = ['dual', 'nonextensible', 'oleautomation']
HeadersFooters._methods_ = [
    COMMETHOD([dispid(1000), 'propget'], HRESULT, 'Application',
              ( ['out', 'retval'], POINTER(POINTER(Application)), 'prop' )),
    COMMETHOD([dispid(1001), 'propget'], HRESULT, 'Creator',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(1002), 'propget'], HRESULT, 'Parent',
              ( ['out', 'retval'], POINTER(POINTER(IDispatch)), 'prop' )),
    COMMETHOD([dispid(-4), 'nonbrowsable', 'propget'], HRESULT, '_NewEnum',
              ( ['out', 'retval'], POINTER(POINTER(IUnknown)), 'prop' )),
    COMMETHOD([dispid(1), 'propget'], HRESULT, 'Count',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(0)], HRESULT, 'Item',
              ( ['in'], WdHeaderFooterIndex, 'Index' ),
              ( ['out', 'retval'], POINTER(POINTER(HeaderFooter)), 'prop' )),
]
################################################################
## code template for HeadersFooters implementation
##class HeadersFooters_Impl(object):
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Creator(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def _NewEnum(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Count(self):
##        '-no docstring-'
##        #return prop
##
##    def Item(self, Index):
##        '-no docstring-'
##        #return prop
##


# values for enumeration 'WdHebSpellStart'
wdFullScript = 0
wdPartialScript = 1
wdMixedScript = 2
wdMixedAuthorizedScript = 3
WdHebSpellStart = c_int # enum

# values for enumeration 'WdCharacterCaseHID'
emptyenum = 0
WdCharacterCaseHID = c_int # enum

# values for enumeration 'WdMeasurementUnits'
wdInches = 0
wdCentimeters = 1
wdMillimeters = 2
wdPoints = 3
wdPicas = 4
WdMeasurementUnits = c_int # enum
class List(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{00020992-0000-0000-C000-000000000046}')
    _idlflags_ = ['dual', 'nonextensible', 'oleautomation']

# values for enumeration 'WdListType'
wdListNoNumbering = 0
wdListListNumOnly = 1
wdListBullet = 2
wdListSimpleNumbering = 3
wdListOutlineNumbering = 4
wdListMixedNumbering = 5
wdListPictureBullet = 6
WdListType = c_int # enum
ListFormat._methods_ = [
    COMMETHOD([dispid(68), 'propget'], HRESULT, 'ListLevelNumber',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(68), 'propput'], HRESULT, 'ListLevelNumber',
              ( ['in'], c_int, 'prop' )),
    COMMETHOD([dispid(69), 'propget'], HRESULT, 'List',
              ( ['out', 'retval'], POINTER(POINTER(List)), 'prop' )),
    COMMETHOD([dispid(70), 'propget'], HRESULT, 'ListTemplate',
              ( ['out', 'retval'], POINTER(POINTER(ListTemplate)), 'prop' )),
    COMMETHOD([dispid(71), 'propget'], HRESULT, 'ListValue',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(72), 'propget'], HRESULT, 'SingleList',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'prop' )),
    COMMETHOD([dispid(73), 'propget'], HRESULT, 'SingleListTemplate',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'prop' )),
    COMMETHOD([dispid(74), 'propget'], HRESULT, 'ListType',
              ( ['out', 'retval'], POINTER(WdListType), 'prop' )),
    COMMETHOD([dispid(75), 'propget'], HRESULT, 'ListString',
              ( ['out', 'retval'], POINTER(BSTR), 'prop' )),
    COMMETHOD([dispid(1000), 'propget'], HRESULT, 'Application',
              ( ['out', 'retval'], POINTER(POINTER(Application)), 'prop' )),
    COMMETHOD([dispid(1001), 'propget'], HRESULT, 'Creator',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(1002), 'propget'], HRESULT, 'Parent',
              ( ['out', 'retval'], POINTER(POINTER(IDispatch)), 'prop' )),
    COMMETHOD([dispid(184)], HRESULT, 'CanContinuePreviousList',
              ( ['in'], POINTER(ListTemplate), 'ListTemplate' ),
              ( ['out', 'retval'], POINTER(WdContinue), 'prop' )),
    COMMETHOD([dispid(185)], HRESULT, 'RemoveNumbers',
              ( ['in', 'optional'], POINTER(VARIANT), 'NumberType' )),
    COMMETHOD([dispid(186)], HRESULT, 'ConvertNumbersToText',
              ( ['in', 'optional'], POINTER(VARIANT), 'NumberType' )),
    COMMETHOD([dispid(187)], HRESULT, 'CountNumberedItems',
              ( ['in', 'optional'], POINTER(VARIANT), 'NumberType' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'Level' ),
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(188), 'hidden'], HRESULT, 'ApplyBulletDefaultOld'),
    COMMETHOD([dispid(189), 'hidden'], HRESULT, 'ApplyNumberDefaultOld'),
    COMMETHOD([dispid(190), 'hidden'], HRESULT, 'ApplyOutlineNumberDefaultOld'),
    COMMETHOD([dispid(191), 'hidden'], HRESULT, 'ApplyListTemplateOld',
              ( ['in'], POINTER(ListTemplate), 'ListTemplate' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'ContinuePreviousList' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'ApplyTo' )),
    COMMETHOD([dispid(210)], HRESULT, 'ListOutdent'),
    COMMETHOD([dispid(211)], HRESULT, 'ListIndent'),
    COMMETHOD([dispid(212)], HRESULT, 'ApplyBulletDefault',
              ( ['in', 'optional'], POINTER(VARIANT), 'DefaultListBehavior' )),
    COMMETHOD([dispid(213)], HRESULT, 'ApplyNumberDefault',
              ( ['in', 'optional'], POINTER(VARIANT), 'DefaultListBehavior' )),
    COMMETHOD([dispid(214)], HRESULT, 'ApplyOutlineNumberDefault',
              ( ['in', 'optional'], POINTER(VARIANT), 'DefaultListBehavior' )),
    COMMETHOD([dispid(215)], HRESULT, 'ApplyListTemplate',
              ( ['in'], POINTER(ListTemplate), 'ListTemplate' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'ContinuePreviousList' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'ApplyTo' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'DefaultListBehavior' )),
    COMMETHOD([dispid(76), 'propget'], HRESULT, 'ListPictureBullet',
              ( ['out', 'retval'], POINTER(POINTER(InlineShape)), 'prop' )),
    COMMETHOD([dispid(216)], HRESULT, 'ApplyListTemplateWithLevel',
              ( ['in'], POINTER(ListTemplate), 'ListTemplate' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'ContinuePreviousList' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'ApplyTo' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'DefaultListBehavior' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'ApplyLevel' )),
]
################################################################
## code template for ListFormat implementation
##class ListFormat_Impl(object):
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    ListLevelNumber = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def List(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def ListTemplate(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def ListValue(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def SingleList(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def SingleListTemplate(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def ListType(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def ListString(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Creator(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return prop
##
##    def CanContinuePreviousList(self, ListTemplate):
##        '-no docstring-'
##        #return prop
##
##    def RemoveNumbers(self, NumberType):
##        '-no docstring-'
##        #return 
##
##    def ConvertNumbersToText(self, NumberType):
##        '-no docstring-'
##        #return 
##
##    def CountNumberedItems(self, NumberType, Level):
##        '-no docstring-'
##        #return prop
##
##    def ApplyBulletDefaultOld(self):
##        '-no docstring-'
##        #return 
##
##    def ApplyNumberDefaultOld(self):
##        '-no docstring-'
##        #return 
##
##    def ApplyOutlineNumberDefaultOld(self):
##        '-no docstring-'
##        #return 
##
##    def ApplyListTemplateOld(self, ListTemplate, ContinuePreviousList, ApplyTo):
##        '-no docstring-'
##        #return 
##
##    def ListOutdent(self):
##        '-no docstring-'
##        #return 
##
##    def ListIndent(self):
##        '-no docstring-'
##        #return 
##
##    def ApplyBulletDefault(self, DefaultListBehavior):
##        '-no docstring-'
##        #return 
##
##    def ApplyNumberDefault(self, DefaultListBehavior):
##        '-no docstring-'
##        #return 
##
##    def ApplyOutlineNumberDefault(self, DefaultListBehavior):
##        '-no docstring-'
##        #return 
##
##    def ApplyListTemplate(self, ListTemplate, ContinuePreviousList, ApplyTo, DefaultListBehavior):
##        '-no docstring-'
##        #return 
##
##    @property
##    def ListPictureBullet(self):
##        '-no docstring-'
##        #return prop
##
##    def ApplyListTemplateWithLevel(self, ListTemplate, ContinuePreviousList, ApplyTo, DefaultListBehavior, ApplyLevel):
##        '-no docstring-'
##        #return 
##

EndnoteOptions._methods_ = [
    COMMETHOD([dispid(1000), 'propget'], HRESULT, 'Application',
              ( ['out', 'retval'], POINTER(POINTER(Application)), 'prop' )),
    COMMETHOD([dispid(1001), 'propget'], HRESULT, 'Creator',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(1002), 'propget'], HRESULT, 'Parent',
              ( ['out', 'retval'], POINTER(POINTER(IDispatch)), 'prop' )),
    COMMETHOD([dispid(100), 'propget'], HRESULT, 'Location',
              ( ['out', 'retval'], POINTER(WdEndnoteLocation), 'prop' )),
    COMMETHOD([dispid(100), 'propput'], HRESULT, 'Location',
              ( ['in'], WdEndnoteLocation, 'prop' )),
    COMMETHOD([dispid(101), 'propget'], HRESULT, 'NumberStyle',
              ( ['out', 'retval'], POINTER(WdNoteNumberStyle), 'prop' )),
    COMMETHOD([dispid(101), 'propput'], HRESULT, 'NumberStyle',
              ( ['in'], WdNoteNumberStyle, 'prop' )),
    COMMETHOD([dispid(102), 'propget'], HRESULT, 'StartingNumber',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(102), 'propput'], HRESULT, 'StartingNumber',
              ( ['in'], c_int, 'prop' )),
    COMMETHOD([dispid(103), 'propget'], HRESULT, 'NumberingRule',
              ( ['out', 'retval'], POINTER(WdNumberingRule), 'prop' )),
    COMMETHOD([dispid(103), 'propput'], HRESULT, 'NumberingRule',
              ( ['in'], WdNumberingRule, 'prop' )),
]
################################################################
## code template for EndnoteOptions implementation
##class EndnoteOptions_Impl(object):
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Creator(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return prop
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    Location = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    NumberStyle = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    StartingNumber = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    NumberingRule = property(_get, _set, doc = _set.__doc__)
##


# values for enumeration 'WdDocumentViewDirection'
wdDocumentViewRtl = 0
wdDocumentViewLtr = 1
WdDocumentViewDirection = c_int # enum
ApplicationEvents3._disp_methods_ = [
    DISPMETHOD([dispid(1), 'restricted', 'hidden'], None, 'Startup'),
    DISPMETHOD([dispid(2)], None, 'Quit'),
    DISPMETHOD([dispid(3)], None, 'DocumentChange'),
    DISPMETHOD([dispid(4)], None, 'DocumentOpen',
               ( ['in'], POINTER(Document), 'Doc' )),
    DISPMETHOD([dispid(6)], None, 'DocumentBeforeClose',
               ( ['in'], POINTER(Document), 'Doc' ),
               ( ['in'], POINTER(VARIANT_BOOL), 'Cancel' )),
    DISPMETHOD([dispid(7)], None, 'DocumentBeforePrint',
               ( ['in'], POINTER(Document), 'Doc' ),
               ( ['in'], POINTER(VARIANT_BOOL), 'Cancel' )),
    DISPMETHOD([dispid(8)], None, 'DocumentBeforeSave',
               ( ['in'], POINTER(Document), 'Doc' ),
               ( ['in'], POINTER(VARIANT_BOOL), 'SaveAsUI' ),
               ( ['in'], POINTER(VARIANT_BOOL), 'Cancel' )),
    DISPMETHOD([dispid(9)], None, 'NewDocument',
               ( ['in'], POINTER(Document), 'Doc' )),
    DISPMETHOD([dispid(10)], None, 'WindowActivate',
               ( ['in'], POINTER(Document), 'Doc' ),
               ( ['in'], POINTER(Window), 'Wn' )),
    DISPMETHOD([dispid(11)], None, 'WindowDeactivate',
               ( ['in'], POINTER(Document), 'Doc' ),
               ( ['in'], POINTER(Window), 'Wn' )),
    DISPMETHOD([dispid(12)], None, 'WindowSelectionChange',
               ( ['in'], POINTER(Selection), 'Sel' )),
    DISPMETHOD([dispid(13)], None, 'WindowBeforeRightClick',
               ( ['in'], POINTER(Selection), 'Sel' ),
               ( ['in'], POINTER(VARIANT_BOOL), 'Cancel' )),
    DISPMETHOD([dispid(14)], None, 'WindowBeforeDoubleClick',
               ( ['in'], POINTER(Selection), 'Sel' ),
               ( ['in'], POINTER(VARIANT_BOOL), 'Cancel' )),
    DISPMETHOD([dispid(15)], None, 'EPostagePropertyDialog',
               ( ['in'], POINTER(Document), 'Doc' )),
    DISPMETHOD([dispid(16)], None, 'EPostageInsert',
               ( ['in'], POINTER(Document), 'Doc' )),
    DISPMETHOD([dispid(17)], None, 'MailMergeAfterMerge',
               ( ['in'], POINTER(Document), 'Doc' ),
               ( ['in'], POINTER(Document), 'DocResult' )),
    DISPMETHOD([dispid(18)], None, 'MailMergeAfterRecordMerge',
               ( ['in'], POINTER(Document), 'Doc' )),
    DISPMETHOD([dispid(19)], None, 'MailMergeBeforeMerge',
               ( ['in'], POINTER(Document), 'Doc' ),
               ( ['in'], c_int, 'StartRecord' ),
               ( ['in'], c_int, 'EndRecord' ),
               ( ['in'], POINTER(VARIANT_BOOL), 'Cancel' )),
    DISPMETHOD([dispid(20)], None, 'MailMergeBeforeRecordMerge',
               ( ['in'], POINTER(Document), 'Doc' ),
               ( ['in'], POINTER(VARIANT_BOOL), 'Cancel' )),
    DISPMETHOD([dispid(21)], None, 'MailMergeDataSourceLoad',
               ( ['in'], POINTER(Document), 'Doc' )),
    DISPMETHOD([dispid(22)], None, 'MailMergeDataSourceValidate',
               ( ['in'], POINTER(Document), 'Doc' ),
               ( ['in'], POINTER(VARIANT_BOOL), 'Handled' )),
    DISPMETHOD([dispid(23)], None, 'MailMergeWizardSendToCustom',
               ( ['in'], POINTER(Document), 'Doc' )),
    DISPMETHOD([dispid(24)], None, 'MailMergeWizardStateChange',
               ( ['in'], POINTER(Document), 'Doc' ),
               ( ['in'], POINTER(c_int), 'FromState' ),
               ( ['in'], POINTER(c_int), 'ToState' ),
               ( ['in'], POINTER(VARIANT_BOOL), 'Handled' )),
    DISPMETHOD([dispid(25)], None, 'WindowSize',
               ( ['in'], POINTER(Document), 'Doc' ),
               ( ['in'], POINTER(Window), 'Wn' )),
]

# values for enumeration 'WdNoteNumberStyleHID'
emptyenum = 0
WdNoteNumberStyleHID = c_int # enum
CanvasShapes._methods_ = [
    COMMETHOD([dispid(8000), 'propget'], HRESULT, 'Application',
              ( ['out', 'retval'], POINTER(POINTER(Application)), 'prop' )),
    COMMETHOD([dispid(8001), 'propget'], HRESULT, 'Creator',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(1), 'propget'], HRESULT, 'Parent',
              ( ['out', 'retval'], POINTER(POINTER(IDispatch)), 'prop' )),
    COMMETHOD([dispid(2), 'propget'], HRESULT, 'Count',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(-4), 'nonbrowsable', 'propget'], HRESULT, '_NewEnum',
              ( ['out', 'retval'], POINTER(POINTER(IUnknown)), 'prop' )),
    COMMETHOD([dispid(0)], HRESULT, 'Item',
              ( ['in'], POINTER(VARIANT), 'Index' ),
              ( ['out', 'retval'], POINTER(POINTER(Shape)), 'prop' )),
    COMMETHOD([dispid(10)], HRESULT, 'AddCallout',
              ( ['in'], comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoCalloutType, 'Type' ),
              ( ['in'], c_float, 'Left' ),
              ( ['in'], c_float, 'Top' ),
              ( ['in'], c_float, 'Width' ),
              ( ['in'], c_float, 'Height' ),
              ( ['out', 'retval'], POINTER(POINTER(Shape)), 'prop' )),
    COMMETHOD([dispid(11)], HRESULT, 'AddConnector',
              ( ['in'], comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoConnectorType, 'Type' ),
              ( ['in'], c_float, 'BeginX' ),
              ( ['in'], c_float, 'BeginY' ),
              ( ['in'], c_float, 'EndX' ),
              ( ['in'], c_float, 'EndY' ),
              ( ['out', 'retval'], POINTER(POINTER(Shape)), 'prop' )),
    COMMETHOD([dispid(12)], HRESULT, 'AddCurve',
              ( ['in'], POINTER(VARIANT), 'SafeArrayOfPoints' ),
              ( ['out', 'retval'], POINTER(POINTER(Shape)), 'prop' )),
    COMMETHOD([dispid(13)], HRESULT, 'AddLabel',
              ( ['in'], comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoTextOrientation, 'Orientation' ),
              ( ['in'], c_float, 'Left' ),
              ( ['in'], c_float, 'Top' ),
              ( ['in'], c_float, 'Width' ),
              ( ['in'], c_float, 'Height' ),
              ( ['out', 'retval'], POINTER(POINTER(Shape)), 'prop' )),
    COMMETHOD([dispid(14)], HRESULT, 'AddLine',
              ( ['in'], c_float, 'BeginX' ),
              ( ['in'], c_float, 'BeginY' ),
              ( ['in'], c_float, 'EndX' ),
              ( ['in'], c_float, 'EndY' ),
              ( ['out', 'retval'], POINTER(POINTER(Shape)), 'prop' )),
    COMMETHOD([dispid(15)], HRESULT, 'AddPicture',
              ( ['in'], BSTR, 'FileName' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'LinkToFile' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'SaveWithDocument' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'Left' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'Top' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'Width' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'Height' ),
              ( ['out', 'retval'], POINTER(POINTER(Shape)), 'prop' )),
    COMMETHOD([dispid(16)], HRESULT, 'AddPolyline',
              ( ['in'], POINTER(VARIANT), 'SafeArrayOfPoints' ),
              ( ['out', 'retval'], POINTER(POINTER(Shape)), 'prop' )),
    COMMETHOD([dispid(17)], HRESULT, 'AddShape',
              ( ['in'], c_int, 'Type' ),
              ( ['in'], c_float, 'Left' ),
              ( ['in'], c_float, 'Top' ),
              ( ['in'], c_float, 'Width' ),
              ( ['in'], c_float, 'Height' ),
              ( ['out', 'retval'], POINTER(POINTER(Shape)), 'prop' )),
    COMMETHOD([dispid(18)], HRESULT, 'AddTextEffect',
              ( ['in'], comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoPresetTextEffect, 'PresetTextEffect' ),
              ( ['in'], BSTR, 'Text' ),
              ( ['in'], BSTR, 'FontName' ),
              ( ['in'], c_float, 'FontSize' ),
              ( ['in'], comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoTriState, 'FontBold' ),
              ( ['in'], comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoTriState, 'FontItalic' ),
              ( ['in'], c_float, 'Left' ),
              ( ['in'], c_float, 'Top' ),
              ( ['out', 'retval'], POINTER(POINTER(Shape)), 'prop' )),
    COMMETHOD([dispid(19)], HRESULT, 'AddTextbox',
              ( ['in'], comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoTextOrientation, 'Orientation' ),
              ( ['in'], c_float, 'Left' ),
              ( ['in'], c_float, 'Top' ),
              ( ['in'], c_float, 'Width' ),
              ( ['in'], c_float, 'Height' ),
              ( ['out', 'retval'], POINTER(POINTER(Shape)), 'prop' )),
    COMMETHOD([dispid(20)], HRESULT, 'BuildFreeform',
              ( ['in'], comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoEditingType, 'EditingType' ),
              ( ['in'], c_float, 'X1' ),
              ( ['in'], c_float, 'Y1' ),
              ( ['out', 'retval'], POINTER(POINTER(FreeformBuilder)), 'prop' )),
    COMMETHOD([dispid(21)], HRESULT, 'Range',
              ( ['in'], POINTER(VARIANT), 'Index' ),
              ( ['out', 'retval'], POINTER(POINTER(ShapeRange)), 'prop' )),
    COMMETHOD([dispid(22)], HRESULT, 'SelectAll'),
]
################################################################
## code template for CanvasShapes implementation
##class CanvasShapes_Impl(object):
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Creator(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Count(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def _NewEnum(self):
##        '-no docstring-'
##        #return prop
##
##    def Item(self, Index):
##        '-no docstring-'
##        #return prop
##
##    def AddCallout(self, Type, Left, Top, Width, Height):
##        '-no docstring-'
##        #return prop
##
##    def AddConnector(self, Type, BeginX, BeginY, EndX, EndY):
##        '-no docstring-'
##        #return prop
##
##    def AddCurve(self, SafeArrayOfPoints):
##        '-no docstring-'
##        #return prop
##
##    def AddLabel(self, Orientation, Left, Top, Width, Height):
##        '-no docstring-'
##        #return prop
##
##    def AddLine(self, BeginX, BeginY, EndX, EndY):
##        '-no docstring-'
##        #return prop
##
##    def AddPicture(self, FileName, LinkToFile, SaveWithDocument, Left, Top, Width, Height):
##        '-no docstring-'
##        #return prop
##
##    def AddPolyline(self, SafeArrayOfPoints):
##        '-no docstring-'
##        #return prop
##
##    def AddShape(self, Type, Left, Top, Width, Height):
##        '-no docstring-'
##        #return prop
##
##    def AddTextEffect(self, PresetTextEffect, Text, FontName, FontSize, FontBold, FontItalic, Left, Top):
##        '-no docstring-'
##        #return prop
##
##    def AddTextbox(self, Orientation, Left, Top, Width, Height):
##        '-no docstring-'
##        #return prop
##
##    def BuildFreeform(self, EditingType, X1, Y1):
##        '-no docstring-'
##        #return prop
##
##    def Range(self, Index):
##        '-no docstring-'
##        #return prop
##
##    def SelectAll(self):
##        '-no docstring-'
##        #return 
##

HangulAndAlphabetException._methods_ = [
    COMMETHOD([dispid(1000), 'propget'], HRESULT, 'Application',
              ( ['out', 'retval'], POINTER(POINTER(Application)), 'prop' )),
    COMMETHOD([dispid(1001), 'propget'], HRESULT, 'Creator',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(1002), 'propget'], HRESULT, 'Parent',
              ( ['out', 'retval'], POINTER(POINTER(IDispatch)), 'prop' )),
    COMMETHOD([dispid(1), 'propget'], HRESULT, 'Index',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(2), 'propget'], HRESULT, 'Name',
              ( ['out', 'retval'], POINTER(BSTR), 'prop' )),
    COMMETHOD([dispid(101)], HRESULT, 'Delete'),
]
################################################################
## code template for HangulAndAlphabetException implementation
##class HangulAndAlphabetException_Impl(object):
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Creator(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Index(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Name(self):
##        '-no docstring-'
##        #return prop
##
##    def Delete(self):
##        '-no docstring-'
##        #return 
##


# values for enumeration 'WdCaptionNumberStyleHID'
emptyenum = 0
WdCaptionNumberStyleHID = c_int # enum
Footnotes._methods_ = [
    COMMETHOD([dispid(-4), 'nonbrowsable', 'propget'], HRESULT, '_NewEnum',
              ( ['out', 'retval'], POINTER(POINTER(IUnknown)), 'prop' )),
    COMMETHOD([dispid(2), 'propget'], HRESULT, 'Count',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(1000), 'propget'], HRESULT, 'Application',
              ( ['out', 'retval'], POINTER(POINTER(Application)), 'prop' )),
    COMMETHOD([dispid(1001), 'propget'], HRESULT, 'Creator',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(1002), 'propget'], HRESULT, 'Parent',
              ( ['out', 'retval'], POINTER(POINTER(IDispatch)), 'prop' )),
    COMMETHOD([dispid(100), 'propget'], HRESULT, 'Location',
              ( ['out', 'retval'], POINTER(WdFootnoteLocation), 'prop' )),
    COMMETHOD([dispid(100), 'propput'], HRESULT, 'Location',
              ( ['in'], WdFootnoteLocation, 'prop' )),
    COMMETHOD([dispid(101), 'propget'], HRESULT, 'NumberStyle',
              ( ['out', 'retval'], POINTER(WdNoteNumberStyle), 'prop' )),
    COMMETHOD([dispid(101), 'propput'], HRESULT, 'NumberStyle',
              ( ['in'], WdNoteNumberStyle, 'prop' )),
    COMMETHOD([dispid(102), 'propget'], HRESULT, 'StartingNumber',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(102), 'propput'], HRESULT, 'StartingNumber',
              ( ['in'], c_int, 'prop' )),
    COMMETHOD([dispid(103), 'propget'], HRESULT, 'NumberingRule',
              ( ['out', 'retval'], POINTER(WdNumberingRule), 'prop' )),
    COMMETHOD([dispid(103), 'propput'], HRESULT, 'NumberingRule',
              ( ['in'], WdNumberingRule, 'prop' )),
    COMMETHOD([dispid(104), 'propget'], HRESULT, 'Separator',
              ( ['out', 'retval'], POINTER(POINTER(Range)), 'prop' )),
    COMMETHOD([dispid(105), 'propget'], HRESULT, 'ContinuationSeparator',
              ( ['out', 'retval'], POINTER(POINTER(Range)), 'prop' )),
    COMMETHOD([dispid(106), 'propget'], HRESULT, 'ContinuationNotice',
              ( ['out', 'retval'], POINTER(POINTER(Range)), 'prop' )),
    COMMETHOD([dispid(0)], HRESULT, 'Item',
              ( ['in'], c_int, 'Index' ),
              ( ['out', 'retval'], POINTER(POINTER(Footnote)), 'prop' )),
    COMMETHOD([dispid(4)], HRESULT, 'Add',
              ( ['in'], POINTER(Range), 'Range' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'Reference' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'Text' ),
              ( ['out', 'retval'], POINTER(POINTER(Footnote)), 'prop' )),
    COMMETHOD([dispid(5)], HRESULT, 'Convert'),
    COMMETHOD([dispid(6)], HRESULT, 'SwapWithEndnotes'),
    COMMETHOD([dispid(7)], HRESULT, 'ResetSeparator'),
    COMMETHOD([dispid(8)], HRESULT, 'ResetContinuationSeparator'),
    COMMETHOD([dispid(9)], HRESULT, 'ResetContinuationNotice'),
]
################################################################
## code template for Footnotes implementation
##class Footnotes_Impl(object):
##    @property
##    def _NewEnum(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Count(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Creator(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return prop
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    Location = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    NumberStyle = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    StartingNumber = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    NumberingRule = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Separator(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def ContinuationSeparator(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def ContinuationNotice(self):
##        '-no docstring-'
##        #return prop
##
##    def Item(self, Index):
##        '-no docstring-'
##        #return prop
##
##    def Add(self, Range, Reference, Text):
##        '-no docstring-'
##        #return prop
##
##    def Convert(self):
##        '-no docstring-'
##        #return 
##
##    def SwapWithEndnotes(self):
##        '-no docstring-'
##        #return 
##
##    def ResetSeparator(self):
##        '-no docstring-'
##        #return 
##
##    def ResetContinuationSeparator(self):
##        '-no docstring-'
##        #return 
##
##    def ResetContinuationNotice(self):
##        '-no docstring-'
##        #return 
##

class DataLabels(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{D8252C5E-EB9F-4D74-AA72-C178B128FAC4}')
    _idlflags_ = ['dual', 'nonextensible', 'oleautomation']
DataLabels._methods_ = [
    COMMETHOD([dispid(150), 'propget'], HRESULT, 'Parent',
              ( ['out', 'retval'], POINTER(POINTER(IDispatch)), 'prop' )),
    COMMETHOD([dispid(110), 'propget'], HRESULT, 'Name',
              ( ['out', 'retval'], POINTER(BSTR), 'prop' )),
    COMMETHOD([dispid(235)], HRESULT, 'Select',
              ( ['out', 'retval'], POINTER(VARIANT), 'prop' )),
    COMMETHOD([dispid(128), 'hidden', 'propget'], HRESULT, 'Border',
              ( ['out', 'retval'], POINTER(POINTER(ChartBorder)), 'prop' )),
    COMMETHOD([dispid(117)], HRESULT, 'Delete',
              ( ['out', 'retval'], POINTER(VARIANT), 'prop' )),
    COMMETHOD([dispid(129), 'hidden', 'propget'], HRESULT, 'Interior',
              ( ['out', 'retval'], POINTER(POINTER(Interior)), 'prop' )),
    COMMETHOD([dispid(1663), 'hidden', 'propget'], HRESULT, 'Fill',
              ( ['out', 'retval'], POINTER(POINTER(ChartFillFormat)), 'prop' )),
    COMMETHOD([dispid(146), 'hidden', 'propget'], HRESULT, 'Font',
              ( ['out', 'retval'], POINTER(POINTER(ChartFont)), 'prop' )),
    COMMETHOD([dispid(136), 'propget'], HRESULT, 'HorizontalAlignment',
              ( ['out', 'retval'], POINTER(VARIANT), 'prop' )),
    COMMETHOD([dispid(136), 'propput'], HRESULT, 'HorizontalAlignment',
              ( ['in'], VARIANT, 'prop' )),
    COMMETHOD([dispid(134), 'propget'], HRESULT, 'Orientation',
              ( ['out', 'retval'], POINTER(VARIANT), 'prop' )),
    COMMETHOD([dispid(134), 'propput'], HRESULT, 'Orientation',
              ( ['in'], VARIANT, 'prop' )),
    COMMETHOD([dispid(103), 'propget'], HRESULT, 'Shadow',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'prop' )),
    COMMETHOD([dispid(103), 'propput'], HRESULT, 'Shadow',
              ( ['in'], VARIANT_BOOL, 'prop' )),
    COMMETHOD([dispid(137), 'propget'], HRESULT, 'VerticalAlignment',
              ( ['out', 'retval'], POINTER(VARIANT), 'prop' )),
    COMMETHOD([dispid(137), 'propput'], HRESULT, 'VerticalAlignment',
              ( ['in'], VARIANT, 'prop' )),
    COMMETHOD([dispid(975), 'propget'], HRESULT, 'ReadingOrder',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(975), 'propput'], HRESULT, 'ReadingOrder',
              ( ['in'], c_int, 'prop' )),
    COMMETHOD([dispid(1525), 'hidden', 'propget'], HRESULT, 'AutoScaleFont',
              ( ['out', 'retval'], POINTER(VARIANT), 'prop' )),
    COMMETHOD([dispid(1525), 'hidden', 'propput'], HRESULT, 'AutoScaleFont',
              ( ['in'], VARIANT, 'prop' )),
    COMMETHOD([dispid(135), 'propget'], HRESULT, 'AutoText',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'prop' )),
    COMMETHOD([dispid(135), 'propput'], HRESULT, 'AutoText',
              ( ['in'], VARIANT_BOOL, 'prop' )),
    COMMETHOD([dispid(193), 'propget'], HRESULT, 'NumberFormat',
              ( ['out', 'retval'], POINTER(BSTR), 'prop' )),
    COMMETHOD([dispid(193), 'propput'], HRESULT, 'NumberFormat',
              ( ['in'], BSTR, 'prop' )),
    COMMETHOD([dispid(194), 'propget'], HRESULT, 'NumberFormatLinked',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'prop' )),
    COMMETHOD([dispid(194), 'propput'], HRESULT, 'NumberFormatLinked',
              ( ['in'], VARIANT_BOOL, 'prop' )),
    COMMETHOD([dispid(1097), 'propget'], HRESULT, 'NumberFormatLocal',
              ( ['out', 'retval'], POINTER(VARIANT), 'prop' )),
    COMMETHOD([dispid(1097), 'propput'], HRESULT, 'NumberFormatLocal',
              ( ['in'], VARIANT, 'prop' )),
    COMMETHOD([dispid(171), 'propget'], HRESULT, 'ShowLegendKey',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'prop' )),
    COMMETHOD([dispid(171), 'propput'], HRESULT, 'ShowLegendKey',
              ( ['in'], VARIANT_BOOL, 'prop' )),
    COMMETHOD([dispid(108), 'hidden', 'propget'], HRESULT, 'Type',
              ( ['out', 'retval'], POINTER(VARIANT), 'prop' )),
    COMMETHOD([dispid(108), 'hidden', 'propput'], HRESULT, 'Type',
              ( ['in'], VARIANT, 'prop' )),
    COMMETHOD([dispid(133), 'propget'], HRESULT, 'Position',
              ( ['out', 'retval'], POINTER(XlDataLabelPosition), 'prop' )),
    COMMETHOD([dispid(133), 'propput'], HRESULT, 'Position',
              ( ['in'], XlDataLabelPosition, 'prop' )),
    COMMETHOD([dispid(2022), 'propget'], HRESULT, 'ShowSeriesName',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'prop' )),
    COMMETHOD([dispid(2022), 'propput'], HRESULT, 'ShowSeriesName',
              ( ['in'], VARIANT_BOOL, 'prop' )),
    COMMETHOD([dispid(2023), 'propget'], HRESULT, 'ShowCategoryName',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'prop' )),
    COMMETHOD([dispid(2023), 'propput'], HRESULT, 'ShowCategoryName',
              ( ['in'], VARIANT_BOOL, 'prop' )),
    COMMETHOD([dispid(2024), 'propget'], HRESULT, 'ShowValue',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'prop' )),
    COMMETHOD([dispid(2024), 'propput'], HRESULT, 'ShowValue',
              ( ['in'], VARIANT_BOOL, 'prop' )),
    COMMETHOD([dispid(2025), 'propget'], HRESULT, 'ShowPercentage',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'prop' )),
    COMMETHOD([dispid(2025), 'propput'], HRESULT, 'ShowPercentage',
              ( ['in'], VARIANT_BOOL, 'prop' )),
    COMMETHOD([dispid(2026), 'propget'], HRESULT, 'ShowBubbleSize',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'prop' )),
    COMMETHOD([dispid(2026), 'propput'], HRESULT, 'ShowBubbleSize',
              ( ['in'], VARIANT_BOOL, 'prop' )),
    COMMETHOD([dispid(2027), 'propget'], HRESULT, 'Separator',
              ( ['out', 'retval'], POINTER(VARIANT), 'prop' )),
    COMMETHOD([dispid(2027), 'propput'], HRESULT, 'Separator',
              ( ['in'], VARIANT, 'prop' )),
    COMMETHOD([dispid(118), 'propget'], HRESULT, 'Count',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(0)], HRESULT, 'Item',
              ( ['in'], VARIANT, 'Index' ),
              ( ['out', 'retval'], POINTER(POINTER(DataLabel)), 'prop' )),
    COMMETHOD([dispid(-4), 'nonbrowsable'], HRESULT, '_NewEnum',
              ( ['out', 'retval'], POINTER(POINTER(IUnknown)), 'prop' )),
    COMMETHOD([dispid(1610743858), 'propget'], HRESULT, 'Format',
              ( ['out', 'retval'], POINTER(POINTER(ChartFormat)), 'prop' )),
    COMMETHOD([dispid(148), 'propget'], HRESULT, 'Application',
              ( ['out', 'retval'], POINTER(POINTER(IDispatch)), 'prop' )),
    COMMETHOD([dispid(149), 'propget'], HRESULT, 'Creator',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(1610743861), 'nonbrowsable'], HRESULT, '_Default',
              ( ['in'], VARIANT, 'Index' ),
              ( ['out', 'retval'], POINTER(POINTER(DataLabel)), 'prop' )),
    COMMETHOD([dispid(2028)], HRESULT, 'Propagate',
              ( ['in'], VARIANT, 'Index' )),
    COMMETHOD([dispid(2029), 'propget'], HRESULT, 'ShowRange',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'prop' )),
    COMMETHOD([dispid(2029), 'propput'], HRESULT, 'ShowRange',
              ( ['in'], VARIANT_BOOL, 'prop' )),
    COMMETHOD([dispid(253)], HRESULT, 'SetProperty',
              ( ['in'], BSTR, 'ID' ),
              ( ['in'], VARIANT, 'Value' )),
    COMMETHOD([dispid(254)], HRESULT, 'GetProperty',
              ( ['in'], BSTR, 'ID' ),
              ( ['out', 'retval'], POINTER(VARIANT), 'prop' )),
]
################################################################
## code template for DataLabels implementation
##class DataLabels_Impl(object):
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Name(self):
##        '-no docstring-'
##        #return prop
##
##    def Select(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Border(self):
##        '-no docstring-'
##        #return prop
##
##    def Delete(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Interior(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Fill(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Font(self):
##        '-no docstring-'
##        #return prop
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    HorizontalAlignment = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    Orientation = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    Shadow = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    VerticalAlignment = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    ReadingOrder = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    AutoScaleFont = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    AutoText = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    NumberFormat = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    NumberFormatLinked = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    NumberFormatLocal = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    ShowLegendKey = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    Type = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    Position = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    ShowSeriesName = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    ShowCategoryName = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    ShowValue = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    ShowPercentage = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    ShowBubbleSize = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    Separator = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Count(self):
##        '-no docstring-'
##        #return prop
##
##    def Item(self, Index):
##        '-no docstring-'
##        #return prop
##
##    def _NewEnum(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Format(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Creator(self):
##        '-no docstring-'
##        #return prop
##
##    def _Default(self, Index):
##        '-no docstring-'
##        #return prop
##
##    def Propagate(self, Index):
##        '-no docstring-'
##        #return 
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    ShowRange = property(_get, _set, doc = _set.__doc__)
##
##    def SetProperty(self, ID, Value):
##        '-no docstring-'
##        #return 
##
##    def GetProperty(self, ID):
##        '-no docstring-'
##        #return prop
##


# values for enumeration 'WdCustomLabelPageSize'
wdCustomLabelLetter = 0
wdCustomLabelLetterLS = 1
wdCustomLabelA4 = 2
wdCustomLabelA4LS = 3
wdCustomLabelA5 = 4
wdCustomLabelA5LS = 5
wdCustomLabelB5 = 6
wdCustomLabelMini = 7
wdCustomLabelFanfold = 8
wdCustomLabelVertHalfSheet = 9
wdCustomLabelVertHalfSheetLS = 10
wdCustomLabelHigaki = 11
wdCustomLabelHigakiLS = 12
wdCustomLabelB4JIS = 13
WdCustomLabelPageSize = c_int # enum
Revision._methods_ = [
    COMMETHOD([dispid(1000), 'propget'], HRESULT, 'Application',
              ( ['out', 'retval'], POINTER(POINTER(Application)), 'prop' )),
    COMMETHOD([dispid(1001), 'propget'], HRESULT, 'Creator',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(1002), 'propget'], HRESULT, 'Parent',
              ( ['out', 'retval'], POINTER(POINTER(IDispatch)), 'prop' )),
    COMMETHOD([dispid(1), 'propget'], HRESULT, 'Author',
              ( ['out', 'retval'], POINTER(BSTR), 'prop' )),
    COMMETHOD([dispid(2), 'propget'], HRESULT, 'Date',
              ( ['out', 'retval'], POINTER(c_double), 'prop' )),
    COMMETHOD([dispid(3), 'propget'], HRESULT, 'Range',
              ( ['out', 'retval'], POINTER(POINTER(Range)), 'prop' )),
    COMMETHOD([dispid(4), 'propget'], HRESULT, 'Type',
              ( ['out', 'retval'], POINTER(WdRevisionType), 'prop' )),
    COMMETHOD([dispid(5), 'propget'], HRESULT, 'Index',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(101)], HRESULT, 'Accept'),
    COMMETHOD([dispid(102)], HRESULT, 'Reject'),
    COMMETHOD([dispid(8), 'propget'], HRESULT, 'Style',
              ( ['out', 'retval'], POINTER(POINTER(Style)), 'prop' )),
    COMMETHOD([dispid(9), 'propget'], HRESULT, 'FormatDescription',
              ( ['out', 'retval'], POINTER(BSTR), 'prop' )),
    COMMETHOD([dispid(10), 'propget'], HRESULT, 'MovedRange',
              ( ['out', 'retval'], POINTER(POINTER(Range)), 'prop' )),
    COMMETHOD([dispid(11), 'propget'], HRESULT, 'Cells',
              ( ['out', 'retval'], POINTER(POINTER(Cells)), 'prop' )),
]
################################################################
## code template for Revision implementation
##class Revision_Impl(object):
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Creator(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Author(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Date(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Range(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Type(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Index(self):
##        '-no docstring-'
##        #return prop
##
##    def Accept(self):
##        '-no docstring-'
##        #return 
##
##    def Reject(self):
##        '-no docstring-'
##        #return 
##
##    @property
##    def Style(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def FormatDescription(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def MovedRange(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Cells(self):
##        '-no docstring-'
##        #return prop
##

ProtectedViewWindows._methods_ = [
    COMMETHOD([dispid(1000), 'propget'], HRESULT, 'Application',
              ( ['out', 'retval'], POINTER(POINTER(Application)), 'prop' )),
    COMMETHOD([dispid(1001), 'propget'], HRESULT, 'Creator',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(1002), 'propget'], HRESULT, 'Parent',
              ( ['out', 'retval'], POINTER(POINTER(IDispatch)), 'prop' )),
    COMMETHOD([dispid(-4), 'nonbrowsable', 'propget'], HRESULT, '_NewEnum',
              ( ['out', 'retval'], POINTER(POINTER(IUnknown)), 'prop' )),
    COMMETHOD([dispid(1), 'propget'], HRESULT, 'Count',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(0)], HRESULT, 'Item',
              ( ['in'], POINTER(VARIANT), 'Index' ),
              ( ['out', 'retval'], POINTER(POINTER(ProtectedViewWindow)), 'prop' )),
    COMMETHOD([dispid(2)], HRESULT, 'Open',
              ( ['in'], POINTER(VARIANT), 'FileName' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'AddToRecentFiles' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'PasswordDocument' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'Visible' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'OpenAndRepair' ),
              ( ['out', 'retval'], POINTER(POINTER(ProtectedViewWindow)), 'prop' )),
]
################################################################
## code template for ProtectedViewWindows implementation
##class ProtectedViewWindows_Impl(object):
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Creator(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def _NewEnum(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Count(self):
##        '-no docstring-'
##        #return prop
##
##    def Item(self, Index):
##        '-no docstring-'
##        #return prop
##
##    def Open(self, FileName, AddToRecentFiles, PasswordDocument, Visible, OpenAndRepair):
##        '-no docstring-'
##        #return prop
##

ApplicationEvents._disp_methods_ = [
    DISPMETHOD([dispid(1), 'restricted', 'hidden'], None, 'Startup'),
    DISPMETHOD([dispid(2)], None, 'Quit'),
    DISPMETHOD([dispid(3)], None, 'DocumentChange'),
]
class TextColumn(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{00020974-0000-0000-C000-000000000046}')
    _idlflags_ = ['dual', 'nonextensible', 'oleautomation']

# values for enumeration 'WdFlowDirection'
wdFlowLtr = 0
wdFlowRtl = 1
WdFlowDirection = c_int # enum
TextColumns._methods_ = [
    COMMETHOD([dispid(-4), 'nonbrowsable', 'propget'], HRESULT, '_NewEnum',
              ( ['out', 'retval'], POINTER(POINTER(IUnknown)), 'prop' )),
    COMMETHOD([dispid(2), 'propget'], HRESULT, 'Count',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(1000), 'propget'], HRESULT, 'Application',
              ( ['out', 'retval'], POINTER(POINTER(Application)), 'prop' )),
    COMMETHOD([dispid(1001), 'propget'], HRESULT, 'Creator',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(1002), 'propget'], HRESULT, 'Parent',
              ( ['out', 'retval'], POINTER(POINTER(IDispatch)), 'prop' )),
    COMMETHOD([dispid(100), 'propget'], HRESULT, 'EvenlySpaced',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(100), 'propput'], HRESULT, 'EvenlySpaced',
              ( ['in'], c_int, 'prop' )),
    COMMETHOD([dispid(101), 'propget'], HRESULT, 'LineBetween',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(101), 'propput'], HRESULT, 'LineBetween',
              ( ['in'], c_int, 'prop' )),
    COMMETHOD([dispid(102), 'propget'], HRESULT, 'Width',
              ( ['out', 'retval'], POINTER(c_float), 'prop' )),
    COMMETHOD([dispid(102), 'propput'], HRESULT, 'Width',
              ( ['in'], c_float, 'prop' )),
    COMMETHOD([dispid(103), 'propget'], HRESULT, 'Spacing',
              ( ['out', 'retval'], POINTER(c_float), 'prop' )),
    COMMETHOD([dispid(103), 'propput'], HRESULT, 'Spacing',
              ( ['in'], c_float, 'prop' )),
    COMMETHOD([dispid(0)], HRESULT, 'Item',
              ( ['in'], c_int, 'Index' ),
              ( ['out', 'retval'], POINTER(POINTER(TextColumn)), 'prop' )),
    COMMETHOD([dispid(201)], HRESULT, 'Add',
              ( ['in', 'optional'], POINTER(VARIANT), 'Width' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'Spacing' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'EvenlySpaced' ),
              ( ['out', 'retval'], POINTER(POINTER(TextColumn)), 'prop' )),
    COMMETHOD([dispid(202)], HRESULT, 'SetCount',
              ( ['in'], c_int, 'NumColumns' )),
    COMMETHOD([dispid(104), 'propget'], HRESULT, 'FlowDirection',
              ( ['out', 'retval'], POINTER(WdFlowDirection), 'prop' )),
    COMMETHOD([dispid(104), 'propput'], HRESULT, 'FlowDirection',
              ( ['in'], WdFlowDirection, 'prop' )),
]
################################################################
## code template for TextColumns implementation
##class TextColumns_Impl(object):
##    @property
##    def _NewEnum(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Count(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Creator(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return prop
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    EvenlySpaced = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    LineBetween = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    Width = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    Spacing = property(_get, _set, doc = _set.__doc__)
##
##    def Item(self, Index):
##        '-no docstring-'
##        #return prop
##
##    def Add(self, Width, Spacing, EvenlySpaced):
##        '-no docstring-'
##        #return prop
##
##    def SetCount(self, NumColumns):
##        '-no docstring-'
##        #return 
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    FlowDirection = property(_get, _set, doc = _set.__doc__)
##

CoAuthUpdate._methods_ = [
    COMMETHOD([dispid(1000), 'propget'], HRESULT, 'Application',
              ( ['out', 'retval'], POINTER(POINTER(Application)), 'prop' )),
    COMMETHOD([dispid(1001), 'propget'], HRESULT, 'Creator',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(1002), 'propget'], HRESULT, 'Parent',
              ( ['out', 'retval'], POINTER(POINTER(IDispatch)), 'prop' )),
    COMMETHOD([dispid(1), 'propget'], HRESULT, 'Range',
              ( ['out', 'retval'], POINTER(POINTER(Range)), 'prop' )),
]
################################################################
## code template for CoAuthUpdate implementation
##class CoAuthUpdate_Impl(object):
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Creator(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Range(self):
##        '-no docstring-'
##        #return prop
##

Versions._methods_ = [
    COMMETHOD([dispid(1000), 'propget'], HRESULT, 'Application',
              ( ['out', 'retval'], POINTER(POINTER(Application)), 'prop' )),
    COMMETHOD([dispid(1001), 'propget'], HRESULT, 'Creator',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(1002), 'propget'], HRESULT, 'Parent',
              ( ['out', 'retval'], POINTER(POINTER(IDispatch)), 'prop' )),
    COMMETHOD([dispid(-4), 'nonbrowsable', 'propget'], HRESULT, '_NewEnum',
              ( ['out', 'retval'], POINTER(POINTER(IUnknown)), 'prop' )),
    COMMETHOD([dispid(2), 'propget'], HRESULT, 'Count',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(3), 'propget'], HRESULT, 'AutoVersion',
              ( ['out', 'retval'], POINTER(WdAutoVersions), 'prop' )),
    COMMETHOD([dispid(3), 'propput'], HRESULT, 'AutoVersion',
              ( ['in'], WdAutoVersions, 'prop' )),
    COMMETHOD([dispid(0)], HRESULT, 'Item',
              ( ['in'], c_int, 'Index' ),
              ( ['out', 'retval'], POINTER(POINTER(Version)), 'prop' )),
    COMMETHOD([dispid(11)], HRESULT, 'Save',
              ( ['in', 'optional'], POINTER(VARIANT), 'Comment' )),
]
################################################################
## code template for Versions implementation
##class Versions_Impl(object):
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Creator(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def _NewEnum(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Count(self):
##        '-no docstring-'
##        #return prop
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    AutoVersion = property(_get, _set, doc = _set.__doc__)
##
##    def Item(self, Index):
##        '-no docstring-'
##        #return prop
##
##    def Save(self, Comment):
##        '-no docstring-'
##        #return 
##

Dialog._methods_ = [
    COMMETHOD([dispid(32003), 'propget'], HRESULT, 'Application',
              ( ['out', 'retval'], POINTER(POINTER(Application)), 'prop' )),
    COMMETHOD([dispid(32004), 'propget'], HRESULT, 'Creator',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(32005), 'propget'], HRESULT, 'Parent',
              ( ['out', 'retval'], POINTER(POINTER(IDispatch)), 'prop' )),
    COMMETHOD([dispid(32002), 'propget'], HRESULT, 'DefaultTab',
              ( ['out', 'retval'], POINTER(WdWordDialogTab), 'prop' )),
    COMMETHOD([dispid(32002), 'propput'], HRESULT, 'DefaultTab',
              ( ['in'], WdWordDialogTab, 'prop' )),
    COMMETHOD([dispid(0), 'propget'], HRESULT, 'Type',
              ( ['out', 'retval'], POINTER(WdWordDialog), 'prop' )),
    COMMETHOD([dispid(336)], HRESULT, 'Show',
              ( ['in', 'optional'], POINTER(VARIANT), 'TimeOut' ),
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(338)], HRESULT, 'Display',
              ( ['in', 'optional'], POINTER(VARIANT), 'TimeOut' ),
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(32001)], HRESULT, 'Execute'),
    COMMETHOD([dispid(302)], HRESULT, 'Update'),
    COMMETHOD([dispid(32006), 'propget'], HRESULT, 'CommandName',
              ( ['out', 'retval'], POINTER(BSTR), 'prop' )),
    COMMETHOD([dispid(32007), 'propget'], HRESULT, 'CommandBarId',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
]
################################################################
## code template for Dialog implementation
##class Dialog_Impl(object):
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Creator(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return prop
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    DefaultTab = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Type(self):
##        '-no docstring-'
##        #return prop
##
##    def Show(self, TimeOut):
##        '-no docstring-'
##        #return prop
##
##    def Display(self, TimeOut):
##        '-no docstring-'
##        #return prop
##
##    def Execute(self):
##        '-no docstring-'
##        #return 
##
##    def Update(self):
##        '-no docstring-'
##        #return 
##
##    @property
##    def CommandName(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def CommandBarId(self):
##        '-no docstring-'
##        #return prop
##

SmartTagRecognizers._methods_ = [
    COMMETHOD([dispid(-4), 'hidden', 'nonbrowsable', 'propget'], HRESULT, '_NewEnum',
              ( ['out', 'retval'], POINTER(POINTER(IUnknown)), 'prop' )),
    COMMETHOD([dispid(2), 'hidden', 'propget'], HRESULT, 'Count',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(1000), 'hidden', 'propget'], HRESULT, 'Application',
              ( ['out', 'retval'], POINTER(POINTER(Application)), 'prop' )),
    COMMETHOD([dispid(1001), 'hidden', 'propget'], HRESULT, 'Creator',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(1002), 'hidden', 'propget'], HRESULT, 'Parent',
              ( ['out', 'retval'], POINTER(POINTER(IDispatch)), 'prop' )),
    COMMETHOD([dispid(0), 'hidden'], HRESULT, 'Item',
              ( ['in'], POINTER(VARIANT), 'Index' ),
              ( ['out', 'retval'], POINTER(POINTER(SmartTagRecognizer)), 'prop' )),
    COMMETHOD([dispid(1003), 'hidden'], HRESULT, 'ReloadRecognizers'),
]
################################################################
## code template for SmartTagRecognizers implementation
##class SmartTagRecognizers_Impl(object):
##    @property
##    def _NewEnum(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Count(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Creator(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return prop
##
##    def Item(self, Index):
##        '-no docstring-'
##        #return prop
##
##    def ReloadRecognizers(self):
##        '-no docstring-'
##        #return 
##

class ListGallery(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{00020994-0000-0000-C000-000000000046}')
    _idlflags_ = ['dual', 'nonextensible', 'oleautomation']
ListGallery._methods_ = [
    COMMETHOD([dispid(1), 'propget'], HRESULT, 'ListTemplates',
              ( ['out', 'retval'], POINTER(POINTER(ListTemplates)), 'prop' )),
    COMMETHOD([dispid(1000), 'propget'], HRESULT, 'Application',
              ( ['out', 'retval'], POINTER(POINTER(Application)), 'prop' )),
    COMMETHOD([dispid(1001), 'propget'], HRESULT, 'Creator',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(1002), 'propget'], HRESULT, 'Parent',
              ( ['out', 'retval'], POINTER(POINTER(IDispatch)), 'prop' )),
    COMMETHOD([dispid(101), 'propget'], HRESULT, 'Modified',
              ( ['in'], c_int, 'Index' ),
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'prop' )),
    COMMETHOD([dispid(100)], HRESULT, 'Reset',
              ( ['in'], c_int, 'Index' )),
]
################################################################
## code template for ListGallery implementation
##class ListGallery_Impl(object):
##    @property
##    def ListTemplates(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Creator(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Modified(self, Index):
##        '-no docstring-'
##        #return prop
##
##    def Reset(self, Index):
##        '-no docstring-'
##        #return 
##

ReflectionFormat._methods_ = [
    COMMETHOD([dispid(1), 'propget'], HRESULT, 'Type',
              ( ['out', 'retval'], POINTER(comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoReflectionType), 'prop' )),
    COMMETHOD([dispid(1), 'propput'], HRESULT, 'Type',
              ( ['in'], comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoReflectionType, 'prop' )),
    COMMETHOD([dispid(1000), 'propget'], HRESULT, 'Application',
              ( ['out', 'retval'], POINTER(POINTER(Application)), 'prop' )),
    COMMETHOD([dispid(1001), 'propget'], HRESULT, 'Creator',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(1002), 'propget'], HRESULT, 'Parent',
              ( ['out', 'retval'], POINTER(POINTER(IDispatch)), 'prop' )),
    COMMETHOD([dispid(2), 'propget'], HRESULT, 'Transparency',
              ( ['out', 'retval'], POINTER(c_float), 'prop' )),
    COMMETHOD([dispid(2), 'propput'], HRESULT, 'Transparency',
              ( ['in'], c_float, 'prop' )),
    COMMETHOD([dispid(3), 'propget'], HRESULT, 'Size',
              ( ['out', 'retval'], POINTER(c_float), 'prop' )),
    COMMETHOD([dispid(3), 'propput'], HRESULT, 'Size',
              ( ['in'], c_float, 'prop' )),
    COMMETHOD([dispid(4), 'propget'], HRESULT, 'Offset',
              ( ['out', 'retval'], POINTER(c_float), 'prop' )),
    COMMETHOD([dispid(4), 'propput'], HRESULT, 'Offset',
              ( ['in'], c_float, 'prop' )),
    COMMETHOD([dispid(5), 'propget'], HRESULT, 'Blur',
              ( ['out', 'retval'], POINTER(c_float), 'prop' )),
    COMMETHOD([dispid(5), 'propput'], HRESULT, 'Blur',
              ( ['in'], c_float, 'prop' )),
]
################################################################
## code template for ReflectionFormat implementation
##class ReflectionFormat_Impl(object):
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    Type = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Creator(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return prop
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    Transparency = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    Size = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    Offset = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    Blur = property(_get, _set, doc = _set.__doc__)
##

ChartFont._methods_ = [
    COMMETHOD([dispid(1610743808), 'propget'], HRESULT, 'Background',
              ( ['out', 'retval'], POINTER(VARIANT), 'prop' )),
    COMMETHOD([dispid(1610743808), 'propput'], HRESULT, 'Background',
              ( ['in'], VARIANT, 'prop' )),
    COMMETHOD([dispid(1610743810), 'propget'], HRESULT, 'Bold',
              ( ['out', 'retval'], POINTER(VARIANT), 'prop' )),
    COMMETHOD([dispid(1610743810), 'propput'], HRESULT, 'Bold',
              ( ['in'], VARIANT, 'prop' )),
    COMMETHOD([dispid(1610743812), 'propget'], HRESULT, 'Color',
              ( ['out', 'retval'], POINTER(VARIANT), 'prop' )),
    COMMETHOD([dispid(1610743812), 'propput'], HRESULT, 'Color',
              ( ['in'], VARIANT, 'prop' )),
    COMMETHOD([dispid(1610743814), 'propget'], HRESULT, 'ColorIndex',
              ( ['out', 'retval'], POINTER(VARIANT), 'prop' )),
    COMMETHOD([dispid(1610743814), 'propput'], HRESULT, 'ColorIndex',
              ( ['in'], VARIANT, 'prop' )),
    COMMETHOD([dispid(1610743816), 'propget'], HRESULT, 'FontStyle',
              ( ['out', 'retval'], POINTER(VARIANT), 'prop' )),
    COMMETHOD([dispid(1610743816), 'propput'], HRESULT, 'FontStyle',
              ( ['in'], VARIANT, 'prop' )),
    COMMETHOD([dispid(1610743818), 'propget'], HRESULT, 'Italic',
              ( ['out', 'retval'], POINTER(VARIANT), 'prop' )),
    COMMETHOD([dispid(1610743818), 'propput'], HRESULT, 'Italic',
              ( ['in'], VARIANT, 'prop' )),
    COMMETHOD([dispid(1610743820), 'propget'], HRESULT, 'Name',
              ( ['out', 'retval'], POINTER(VARIANT), 'prop' )),
    COMMETHOD([dispid(1610743820), 'propput'], HRESULT, 'Name',
              ( ['in'], VARIANT, 'prop' )),
    COMMETHOD([dispid(1610743822), 'hidden', 'propget'], HRESULT, 'OutlineFont',
              ( ['out', 'retval'], POINTER(VARIANT), 'prop' )),
    COMMETHOD([dispid(1610743822), 'hidden', 'propput'], HRESULT, 'OutlineFont',
              ( ['in'], VARIANT, 'prop' )),
    COMMETHOD([dispid(1610743824), 'hidden', 'propget'], HRESULT, 'Shadow',
              ( ['out', 'retval'], POINTER(VARIANT), 'prop' )),
    COMMETHOD([dispid(1610743824), 'hidden', 'propput'], HRESULT, 'Shadow',
              ( ['in'], VARIANT, 'prop' )),
    COMMETHOD([dispid(1610743826), 'propget'], HRESULT, 'Size',
              ( ['out', 'retval'], POINTER(VARIANT), 'prop' )),
    COMMETHOD([dispid(1610743826), 'propput'], HRESULT, 'Size',
              ( ['in'], VARIANT, 'prop' )),
    COMMETHOD([dispid(1610743828), 'propget'], HRESULT, 'StrikeThrough',
              ( ['out', 'retval'], POINTER(VARIANT), 'prop' )),
    COMMETHOD([dispid(1610743828), 'propput'], HRESULT, 'StrikeThrough',
              ( ['in'], VARIANT, 'prop' )),
    COMMETHOD([dispid(1610743830), 'propget'], HRESULT, 'Subscript',
              ( ['out', 'retval'], POINTER(VARIANT), 'prop' )),
    COMMETHOD([dispid(1610743830), 'propput'], HRESULT, 'Subscript',
              ( ['in'], VARIANT, 'prop' )),
    COMMETHOD([dispid(1610743832), 'propget'], HRESULT, 'Superscript',
              ( ['out', 'retval'], POINTER(VARIANT), 'prop' )),
    COMMETHOD([dispid(1610743832), 'propput'], HRESULT, 'Superscript',
              ( ['in'], VARIANT, 'prop' )),
    COMMETHOD([dispid(1610743834), 'propget'], HRESULT, 'Underline',
              ( ['out', 'retval'], POINTER(VARIANT), 'prop' )),
    COMMETHOD([dispid(1610743834), 'propput'], HRESULT, 'Underline',
              ( ['in'], VARIANT, 'prop' )),
    COMMETHOD([dispid(148), 'propget'], HRESULT, 'Application',
              ( ['out', 'retval'], POINTER(POINTER(IDispatch)), 'prop' )),
    COMMETHOD([dispid(149), 'propget'], HRESULT, 'Creator',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(150), 'propget'], HRESULT, 'Parent',
              ( ['out', 'retval'], POINTER(POINTER(IDispatch)), 'prop' )),
]
################################################################
## code template for ChartFont implementation
##class ChartFont_Impl(object):
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    Background = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    Bold = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    Color = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    ColorIndex = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    FontStyle = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    Italic = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    Name = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    OutlineFont = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    Shadow = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    Size = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    StrikeThrough = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    Subscript = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    Superscript = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    Underline = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Creator(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return prop
##

class OMathMat(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{3E061A7E-67AD-4EAA-BC1E-55057D5E596F}')
    _idlflags_ = ['dual', 'nonextensible', 'oleautomation']
class OMathMatRows(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{1B426348-607D-433C-9216-C5D2BF0EF31F}')
    _idlflags_ = ['dual', 'nonextensible', 'oleautomation']
class OMathMatCols(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{EFC71F9C-7F42-4CD4-A7A7-970D7A48CD27}')
    _idlflags_ = ['dual', 'nonextensible', 'oleautomation']
OMathMat._methods_ = [
    COMMETHOD([dispid(100), 'propget'], HRESULT, 'Application',
              ( ['out', 'retval'], POINTER(POINTER(Application)), 'prop' )),
    COMMETHOD([dispid(101), 'propget'], HRESULT, 'Creator',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(102), 'propget'], HRESULT, 'Parent',
              ( ['out', 'retval'], POINTER(POINTER(IDispatch)), 'prop' )),
    COMMETHOD([dispid(103), 'propget'], HRESULT, 'Rows',
              ( ['out', 'retval'], POINTER(POINTER(OMathMatRows)), 'prop' )),
    COMMETHOD([dispid(104), 'propget'], HRESULT, 'Cols',
              ( ['out', 'retval'], POINTER(POINTER(OMathMatCols)), 'prop' )),
    COMMETHOD([dispid(105), 'propget'], HRESULT, 'Cell',
              ( ['in'], c_int, 'Row' ),
              ( ['in'], c_int, 'Col' ),
              ( ['out', 'retval'], POINTER(POINTER(OMath)), 'prop' )),
    COMMETHOD([dispid(106), 'propget'], HRESULT, 'Align',
              ( ['out', 'retval'], POINTER(WdOMathVertAlignType), 'prop' )),
    COMMETHOD([dispid(106), 'propput'], HRESULT, 'Align',
              ( ['in'], WdOMathVertAlignType, 'prop' )),
    COMMETHOD([dispid(107), 'propget'], HRESULT, 'PlcHoldHidden',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'prop' )),
    COMMETHOD([dispid(107), 'propput'], HRESULT, 'PlcHoldHidden',
              ( ['in'], VARIANT_BOOL, 'prop' )),
    COMMETHOD([dispid(108), 'propget'], HRESULT, 'RowSpacingRule',
              ( ['out', 'retval'], POINTER(WdOMathSpacingRule), 'prop' )),
    COMMETHOD([dispid(108), 'propput'], HRESULT, 'RowSpacingRule',
              ( ['in'], WdOMathSpacingRule, 'prop' )),
    COMMETHOD([dispid(109), 'propget'], HRESULT, 'RowSpacing',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(109), 'propput'], HRESULT, 'RowSpacing',
              ( ['in'], c_int, 'prop' )),
    COMMETHOD([dispid(110), 'propget'], HRESULT, 'ColSpacing',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(110), 'propput'], HRESULT, 'ColSpacing',
              ( ['in'], c_int, 'prop' )),
    COMMETHOD([dispid(111), 'propget'], HRESULT, 'ColGapRule',
              ( ['out', 'retval'], POINTER(WdOMathSpacingRule), 'prop' )),
    COMMETHOD([dispid(111), 'propput'], HRESULT, 'ColGapRule',
              ( ['in'], WdOMathSpacingRule, 'prop' )),
    COMMETHOD([dispid(112), 'propget'], HRESULT, 'ColGap',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(112), 'propput'], HRESULT, 'ColGap',
              ( ['in'], c_int, 'prop' )),
]
################################################################
## code template for OMathMat implementation
##class OMathMat_Impl(object):
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Creator(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Rows(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Cols(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Cell(self, Row, Col):
##        '-no docstring-'
##        #return prop
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    Align = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    PlcHoldHidden = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    RowSpacingRule = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    RowSpacing = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    ColSpacing = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    ColGapRule = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    ColGap = property(_get, _set, doc = _set.__doc__)
##

class OMathMatCol(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{CAE36175-3818-4C60-BCBF-0645D51EB33B}')
    _idlflags_ = ['dual', 'nonextensible', 'oleautomation']
OMathMatCols._methods_ = [
    COMMETHOD([dispid(-4), 'nonbrowsable', 'propget'], HRESULT, '_NewEnum',
              ( ['out', 'retval'], POINTER(POINTER(IUnknown)), 'prop' )),
    COMMETHOD([dispid(100), 'propget'], HRESULT, 'Application',
              ( ['out', 'retval'], POINTER(POINTER(Application)), 'prop' )),
    COMMETHOD([dispid(101), 'propget'], HRESULT, 'Creator',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(102), 'propget'], HRESULT, 'Parent',
              ( ['out', 'retval'], POINTER(POINTER(IDispatch)), 'prop' )),
    COMMETHOD([dispid(103), 'propget'], HRESULT, 'Count',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(0)], HRESULT, 'Item',
              ( ['in'], c_int, 'Index' ),
              ( ['out', 'retval'], POINTER(POINTER(OMathMatCol)), 'prop' )),
    COMMETHOD([dispid(200)], HRESULT, 'Add',
              ( ['in', 'optional'], POINTER(VARIANT), 'BeforeCol' ),
              ( ['out', 'retval'], POINTER(POINTER(OMathMatCol)), 'prop' )),
]
################################################################
## code template for OMathMatCols implementation
##class OMathMatCols_Impl(object):
##    @property
##    def _NewEnum(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Creator(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Count(self):
##        '-no docstring-'
##        #return prop
##
##    def Item(self, Index):
##        '-no docstring-'
##        #return prop
##
##    def Add(self, BeforeCol):
##        '-no docstring-'
##        #return prop
##

Templates._methods_ = [
    COMMETHOD([dispid(1000), 'propget'], HRESULT, 'Application',
              ( ['out', 'retval'], POINTER(POINTER(Application)), 'prop' )),
    COMMETHOD([dispid(1001), 'propget'], HRESULT, 'Creator',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(1002), 'propget'], HRESULT, 'Parent',
              ( ['out', 'retval'], POINTER(POINTER(IDispatch)), 'prop' )),
    COMMETHOD([dispid(1), 'propget'], HRESULT, 'Count',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(-4), 'nonbrowsable', 'propget'], HRESULT, '_NewEnum',
              ( ['out', 'retval'], POINTER(POINTER(IUnknown)), 'prop' )),
    COMMETHOD([dispid(0)], HRESULT, 'Item',
              ( ['in'], POINTER(VARIANT), 'Index' ),
              ( ['out', 'retval'], POINTER(POINTER(Template)), 'prop' )),
    COMMETHOD([dispid(100)], HRESULT, 'LoadBuildingBlocks'),
]
################################################################
## code template for Templates implementation
##class Templates_Impl(object):
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Creator(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Count(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def _NewEnum(self):
##        '-no docstring-'
##        #return prop
##
##    def Item(self, Index):
##        '-no docstring-'
##        #return prop
##
##    def LoadBuildingBlocks(self):
##        '-no docstring-'
##        #return 
##

FontNames._methods_ = [
    COMMETHOD([dispid(-4), 'nonbrowsable', 'propget'], HRESULT, '_NewEnum',
              ( ['out', 'retval'], POINTER(POINTER(IUnknown)), 'prop' )),
    COMMETHOD([dispid(2), 'propget'], HRESULT, 'Count',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(1000), 'propget'], HRESULT, 'Application',
              ( ['out', 'retval'], POINTER(POINTER(Application)), 'prop' )),
    COMMETHOD([dispid(1001), 'propget'], HRESULT, 'Creator',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(1002), 'propget'], HRESULT, 'Parent',
              ( ['out', 'retval'], POINTER(POINTER(IDispatch)), 'prop' )),
    COMMETHOD([dispid(0)], HRESULT, 'Item',
              ( ['in'], c_int, 'Index' ),
              ( ['out', 'retval'], POINTER(BSTR), 'prop' )),
]
################################################################
## code template for FontNames implementation
##class FontNames_Impl(object):
##    @property
##    def _NewEnum(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Count(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Creator(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return prop
##
##    def Item(self, Index):
##        '-no docstring-'
##        #return prop
##

class HorizontalLineFormat(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{000209DE-0000-0000-C000-000000000046}')
    _idlflags_ = ['dual', 'nonextensible', 'oleautomation']
InlineShape._methods_ = [
    COMMETHOD([dispid(1000), 'propget'], HRESULT, 'Application',
              ( ['out', 'retval'], POINTER(POINTER(Application)), 'prop' )),
    COMMETHOD([dispid(1001), 'propget'], HRESULT, 'Creator',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(1002), 'propget'], HRESULT, 'Parent',
              ( ['out', 'retval'], POINTER(POINTER(IDispatch)), 'prop' )),
    COMMETHOD([dispid(1100), 'propget'], HRESULT, 'Borders',
              ( ['out', 'retval'], POINTER(POINTER(Borders)), 'prop' )),
    COMMETHOD([dispid(1100), 'propput'], HRESULT, 'Borders',
              ( ['in'], POINTER(Borders), 'prop' )),
    COMMETHOD([dispid(2), 'propget'], HRESULT, 'Range',
              ( ['out', 'retval'], POINTER(POINTER(Range)), 'prop' )),
    COMMETHOD([dispid(3), 'propget'], HRESULT, 'LinkFormat',
              ( ['out', 'retval'], POINTER(POINTER(LinkFormat)), 'prop' )),
    COMMETHOD([dispid(4), 'propget'], HRESULT, 'Field',
              ( ['out', 'retval'], POINTER(POINTER(Field)), 'prop' )),
    COMMETHOD([dispid(5), 'propget'], HRESULT, 'OLEFormat',
              ( ['out', 'retval'], POINTER(POINTER(OLEFormat)), 'prop' )),
    COMMETHOD([dispid(6), 'propget'], HRESULT, 'Type',
              ( ['out', 'retval'], POINTER(WdInlineShapeType), 'prop' )),
    COMMETHOD([dispid(7), 'propget'], HRESULT, 'Hyperlink',
              ( ['out', 'retval'], POINTER(POINTER(Hyperlink)), 'prop' )),
    COMMETHOD([dispid(8), 'propget'], HRESULT, 'Height',
              ( ['out', 'retval'], POINTER(c_float), 'prop' )),
    COMMETHOD([dispid(8), 'propput'], HRESULT, 'Height',
              ( ['in'], c_float, 'prop' )),
    COMMETHOD([dispid(9), 'propget'], HRESULT, 'Width',
              ( ['out', 'retval'], POINTER(c_float), 'prop' )),
    COMMETHOD([dispid(9), 'propput'], HRESULT, 'Width',
              ( ['in'], c_float, 'prop' )),
    COMMETHOD([dispid(10), 'propget'], HRESULT, 'ScaleHeight',
              ( ['out', 'retval'], POINTER(c_float), 'prop' )),
    COMMETHOD([dispid(10), 'propput'], HRESULT, 'ScaleHeight',
              ( ['in'], c_float, 'prop' )),
    COMMETHOD([dispid(11), 'propget'], HRESULT, 'ScaleWidth',
              ( ['out', 'retval'], POINTER(c_float), 'prop' )),
    COMMETHOD([dispid(11), 'propput'], HRESULT, 'ScaleWidth',
              ( ['in'], c_float, 'prop' )),
    COMMETHOD([dispid(12), 'propget'], HRESULT, 'LockAspectRatio',
              ( ['out', 'retval'], POINTER(comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoTriState), 'prop' )),
    COMMETHOD([dispid(12), 'propput'], HRESULT, 'LockAspectRatio',
              ( ['in'], comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoTriState, 'prop' )),
    COMMETHOD([dispid(112), 'propget'], HRESULT, 'Line',
              ( ['out', 'retval'], POINTER(POINTER(LineFormat)), 'prop' )),
    COMMETHOD([dispid(107), 'propget'], HRESULT, 'Fill',
              ( ['out', 'retval'], POINTER(POINTER(FillFormat)), 'prop' )),
    COMMETHOD([dispid(118), 'propget'], HRESULT, 'PictureFormat',
              ( ['out', 'retval'], POINTER(POINTER(PictureFormat)), 'prop' )),
    COMMETHOD([dispid(118), 'propput'], HRESULT, 'PictureFormat',
              ( ['in'], POINTER(PictureFormat), 'prop' )),
    COMMETHOD([dispid(100), 'hidden'], HRESULT, 'Activate'),
    COMMETHOD([dispid(101)], HRESULT, 'Reset'),
    COMMETHOD([dispid(102)], HRESULT, 'Delete'),
    COMMETHOD([dispid(65535)], HRESULT, 'Select'),
    COMMETHOD([dispid(104)], HRESULT, 'ConvertToShape',
              ( ['out', 'retval'], POINTER(POINTER(Shape)), 'prop' )),
    COMMETHOD([dispid(119), 'propget'], HRESULT, 'HorizontalLineFormat',
              ( ['out', 'retval'], POINTER(POINTER(HorizontalLineFormat)), 'prop' )),
    COMMETHOD([dispid(122), 'propget'], HRESULT, 'Script',
              ( ['out', 'retval'], POINTER(POINTER(comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.Script)), 'prop' )),
    COMMETHOD([dispid(130), 'hidden', 'propget'], HRESULT, 'OWSAnchor',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(120), 'propget'], HRESULT, 'TextEffect',
              ( ['out', 'retval'], POINTER(POINTER(TextEffectFormat)), 'prop' )),
    COMMETHOD([dispid(120), 'propput'], HRESULT, 'TextEffect',
              ( ['in'], POINTER(TextEffectFormat), 'prop' )),
    COMMETHOD([dispid(131), 'propget'], HRESULT, 'AlternativeText',
              ( ['out', 'retval'], POINTER(BSTR), 'prop' )),
    COMMETHOD([dispid(131), 'propput'], HRESULT, 'AlternativeText',
              ( ['in'], BSTR, 'prop' )),
    COMMETHOD([dispid(132), 'propget'], HRESULT, 'IsPictureBullet',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'prop' )),
    COMMETHOD([dispid(133), 'propget'], HRESULT, 'GroupItems',
              ( ['out', 'retval'], POINTER(POINTER(GroupShapes)), 'prop' )),
    COMMETHOD([dispid(148), 'propget'], HRESULT, 'HasChart',
              ( ['out', 'retval'], POINTER(comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoTriState), 'prop' )),
    COMMETHOD([dispid(149), 'propget'], HRESULT, 'Chart',
              ( ['out', 'retval'], POINTER(POINTER(Chart)), 'prop' )),
    COMMETHOD([dispid(152), 'propget'], HRESULT, 'SoftEdge',
              ( ['out', 'retval'], POINTER(POINTER(SoftEdgeFormat)), 'prop' )),
    COMMETHOD([dispid(153), 'propget'], HRESULT, 'Glow',
              ( ['out', 'retval'], POINTER(POINTER(GlowFormat)), 'prop' )),
    COMMETHOD([dispid(154), 'propget'], HRESULT, 'Reflection',
              ( ['out', 'retval'], POINTER(POINTER(ReflectionFormat)), 'prop' )),
    COMMETHOD([dispid(1101), 'propget'], HRESULT, 'Shadow',
              ( ['out', 'retval'], POINTER(POINTER(ShadowFormat)), 'prop' )),
    COMMETHOD([dispid(155), 'propget'], HRESULT, 'HasSmartArt',
              ( ['out', 'retval'], POINTER(comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoTriState), 'prop' )),
    COMMETHOD([dispid(156), 'propget'], HRESULT, 'SmartArt',
              ( ['out', 'retval'], POINTER(POINTER(comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.SmartArt)), 'prop' )),
    COMMETHOD([dispid(158), 'propget'], HRESULT, 'Title',
              ( ['out', 'retval'], POINTER(BSTR), 'prop' )),
    COMMETHOD([dispid(158), 'propput'], HRESULT, 'Title',
              ( ['in'], BSTR, 'prop' )),
    COMMETHOD([dispid(207), 'hidden', 'propget'], HRESULT, 'AnchorID',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(208), 'hidden', 'propget'], HRESULT, 'EditID',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(209), 'propget'], HRESULT, 'GraphicStyle',
              ( ['out', 'retval'], POINTER(comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoGraphicStyleIndex), 'prop' )),
    COMMETHOD([dispid(209), 'propput'], HRESULT, 'GraphicStyle',
              ( ['in'], comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoGraphicStyleIndex, 'prop' )),
    COMMETHOD([dispid(210), 'propget'], HRESULT, 'Model3D',
              ( ['out', 'retval'], POINTER(POINTER(Model3DFormat)), 'prop' )),
    COMMETHOD([dispid(162), 'propget'], HRESULT, 'Decorative',
              ( ['out', 'retval'], POINTER(comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoTriState), 'prop' )),
    COMMETHOD([dispid(162), 'propput'], HRESULT, 'Decorative',
              ( ['in'], comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoTriState, 'prop' )),
]
################################################################
## code template for InlineShape implementation
##class InlineShape_Impl(object):
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Creator(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return prop
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    Borders = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Range(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def LinkFormat(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Field(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def OLEFormat(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Type(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Hyperlink(self):
##        '-no docstring-'
##        #return prop
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    Height = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    Width = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    ScaleHeight = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    ScaleWidth = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    LockAspectRatio = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Line(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Fill(self):
##        '-no docstring-'
##        #return prop
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    PictureFormat = property(_get, _set, doc = _set.__doc__)
##
##    def Activate(self):
##        '-no docstring-'
##        #return 
##
##    def Reset(self):
##        '-no docstring-'
##        #return 
##
##    def Delete(self):
##        '-no docstring-'
##        #return 
##
##    def Select(self):
##        '-no docstring-'
##        #return 
##
##    def ConvertToShape(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def HorizontalLineFormat(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Script(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def OWSAnchor(self):
##        '-no docstring-'
##        #return prop
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    TextEffect = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    AlternativeText = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def IsPictureBullet(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def GroupItems(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def HasChart(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Chart(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def SoftEdge(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Glow(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Reflection(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Shadow(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def HasSmartArt(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def SmartArt(self):
##        '-no docstring-'
##        #return prop
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    Title = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def AnchorID(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def EditID(self):
##        '-no docstring-'
##        #return prop
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    GraphicStyle = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Model3D(self):
##        '-no docstring-'
##        #return prop
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    Decorative = property(_get, _set, doc = _set.__doc__)
##

class OMathBox(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{842C37FE-C76F-4B2B-9B60-C408CB5E838E}')
    _idlflags_ = ['dual', 'nonextensible', 'oleautomation']
class OMathDelim(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{C94688A6-A2A7-4133-A26D-726CD569D5F3}')
    _idlflags_ = ['dual', 'nonextensible', 'oleautomation']
class OMathFrac(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{50209974-BA32-4A03-8FA6-BAC56CC056FD}')
    _idlflags_ = ['dual', 'nonextensible', 'oleautomation']
class OMathNary(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{CEBD4184-4E6D-4FC6-A42D-2142B1B76AF5}')
    _idlflags_ = ['dual', 'nonextensible', 'oleautomation']
class OMathScrPre(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{AFAF0C0E-8603-40F6-8FD1-42726CAC21E3}')
    _idlflags_ = ['dual', 'nonextensible', 'oleautomation']
class OMathScrSubSup(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{DC489AD4-23C4-4F4B-990F-45A51C7C0C4F}')
    _idlflags_ = ['dual', 'nonextensible', 'oleautomation']
class OMathScrSup(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{D0A95726-678A-4B9D-8103-1E2B86735AE7}')
    _idlflags_ = ['dual', 'nonextensible', 'oleautomation']
OMathFunction._methods_ = [
    COMMETHOD([dispid(0), 'propget'], HRESULT, 'Type',
              ( ['out', 'retval'], POINTER(WdOMathFunctionType), 'prop' )),
    COMMETHOD([dispid(100), 'propget'], HRESULT, 'Application',
              ( ['out', 'retval'], POINTER(POINTER(Application)), 'prop' )),
    COMMETHOD([dispid(101), 'propget'], HRESULT, 'Creator',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(102), 'propget'], HRESULT, 'Parent',
              ( ['out', 'retval'], POINTER(POINTER(IDispatch)), 'prop' )),
    COMMETHOD([dispid(103), 'propget'], HRESULT, 'Range',
              ( ['out', 'retval'], POINTER(POINTER(Range)), 'prop' )),
    COMMETHOD([dispid(104), 'propget'], HRESULT, 'Args',
              ( ['out', 'retval'], POINTER(POINTER(OMathArgs)), 'prop' )),
    COMMETHOD([dispid(105), 'propget'], HRESULT, 'Acc',
              ( ['out', 'retval'], POINTER(POINTER(OMathAcc)), 'prop' )),
    COMMETHOD([dispid(106), 'propget'], HRESULT, 'Bar',
              ( ['out', 'retval'], POINTER(POINTER(OMathBar)), 'prop' )),
    COMMETHOD([dispid(107), 'propget'], HRESULT, 'Box',
              ( ['out', 'retval'], POINTER(POINTER(OMathBox)), 'prop' )),
    COMMETHOD([dispid(108), 'propget'], HRESULT, 'BorderBox',
              ( ['out', 'retval'], POINTER(POINTER(OMathBorderBox)), 'prop' )),
    COMMETHOD([dispid(109), 'propget'], HRESULT, 'Delim',
              ( ['out', 'retval'], POINTER(POINTER(OMathDelim)), 'prop' )),
    COMMETHOD([dispid(110), 'propget'], HRESULT, 'EqArray',
              ( ['out', 'retval'], POINTER(POINTER(OMathEqArray)), 'prop' )),
    COMMETHOD([dispid(111), 'propget'], HRESULT, 'Frac',
              ( ['out', 'retval'], POINTER(POINTER(OMathFrac)), 'prop' )),
    COMMETHOD([dispid(112), 'propget'], HRESULT, 'Func',
              ( ['out', 'retval'], POINTER(POINTER(OMathFunc)), 'prop' )),
    COMMETHOD([dispid(113), 'propget'], HRESULT, 'GroupChar',
              ( ['out', 'retval'], POINTER(POINTER(OMathGroupChar)), 'prop' )),
    COMMETHOD([dispid(114), 'propget'], HRESULT, 'LimLow',
              ( ['out', 'retval'], POINTER(POINTER(OMathLimLow)), 'prop' )),
    COMMETHOD([dispid(115), 'propget'], HRESULT, 'LimUpp',
              ( ['out', 'retval'], POINTER(POINTER(OMathLimUpp)), 'prop' )),
    COMMETHOD([dispid(116), 'propget'], HRESULT, 'Mat',
              ( ['out', 'retval'], POINTER(POINTER(OMathMat)), 'prop' )),
    COMMETHOD([dispid(117), 'propget'], HRESULT, 'Nary',
              ( ['out', 'retval'], POINTER(POINTER(OMathNary)), 'prop' )),
    COMMETHOD([dispid(118), 'propget'], HRESULT, 'Phantom',
              ( ['out', 'retval'], POINTER(POINTER(OMathPhantom)), 'prop' )),
    COMMETHOD([dispid(119), 'propget'], HRESULT, 'ScrPre',
              ( ['out', 'retval'], POINTER(POINTER(OMathScrPre)), 'prop' )),
    COMMETHOD([dispid(120), 'propget'], HRESULT, 'Rad',
              ( ['out', 'retval'], POINTER(POINTER(OMathRad)), 'prop' )),
    COMMETHOD([dispid(121), 'propget'], HRESULT, 'ScrSub',
              ( ['out', 'retval'], POINTER(POINTER(OMathScrSub)), 'prop' )),
    COMMETHOD([dispid(122), 'propget'], HRESULT, 'ScrSubSup',
              ( ['out', 'retval'], POINTER(POINTER(OMathScrSubSup)), 'prop' )),
    COMMETHOD([dispid(123), 'propget'], HRESULT, 'ScrSup',
              ( ['out', 'retval'], POINTER(POINTER(OMathScrSup)), 'prop' )),
    COMMETHOD([dispid(125), 'propget'], HRESULT, 'OMath',
              ( ['out', 'retval'], POINTER(POINTER(OMath)), 'prop' )),
    COMMETHOD([dispid(201)], HRESULT, 'Remove',
              ( ['out', 'retval'], POINTER(POINTER(OMathFunction)), 'prop' )),
]
################################################################
## code template for OMathFunction implementation
##class OMathFunction_Impl(object):
##    @property
##    def Type(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Creator(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Range(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Args(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Acc(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Bar(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Box(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def BorderBox(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Delim(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def EqArray(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Frac(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Func(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def GroupChar(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def LimLow(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def LimUpp(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Mat(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Nary(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Phantom(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def ScrPre(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Rad(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def ScrSub(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def ScrSubSup(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def ScrSup(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def OMath(self):
##        '-no docstring-'
##        #return prop
##
##    def Remove(self):
##        '-no docstring-'
##        #return prop
##

Rows._methods_ = [
    COMMETHOD([dispid(-4), 'nonbrowsable', 'propget'], HRESULT, '_NewEnum',
              ( ['out', 'retval'], POINTER(POINTER(IUnknown)), 'prop' )),
    COMMETHOD([dispid(2), 'propget'], HRESULT, 'Count',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(3), 'propget'], HRESULT, 'AllowBreakAcrossPages',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(3), 'propput'], HRESULT, 'AllowBreakAcrossPages',
              ( ['in'], c_int, 'prop' )),
    COMMETHOD([dispid(4), 'propget'], HRESULT, 'Alignment',
              ( ['out', 'retval'], POINTER(WdRowAlignment), 'prop' )),
    COMMETHOD([dispid(4), 'propput'], HRESULT, 'Alignment',
              ( ['in'], WdRowAlignment, 'prop' )),
    COMMETHOD([dispid(5), 'propget'], HRESULT, 'HeadingFormat',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(5), 'propput'], HRESULT, 'HeadingFormat',
              ( ['in'], c_int, 'prop' )),
    COMMETHOD([dispid(6), 'propget'], HRESULT, 'SpaceBetweenColumns',
              ( ['out', 'retval'], POINTER(c_float), 'prop' )),
    COMMETHOD([dispid(6), 'propput'], HRESULT, 'SpaceBetweenColumns',
              ( ['in'], c_float, 'prop' )),
    COMMETHOD([dispid(7), 'propget'], HRESULT, 'Height',
              ( ['out', 'retval'], POINTER(c_float), 'prop' )),
    COMMETHOD([dispid(7), 'propput'], HRESULT, 'Height',
              ( ['in'], c_float, 'prop' )),
    COMMETHOD([dispid(8), 'propget'], HRESULT, 'HeightRule',
              ( ['out', 'retval'], POINTER(WdRowHeightRule), 'prop' )),
    COMMETHOD([dispid(8), 'propput'], HRESULT, 'HeightRule',
              ( ['in'], WdRowHeightRule, 'prop' )),
    COMMETHOD([dispid(9), 'propget'], HRESULT, 'LeftIndent',
              ( ['out', 'retval'], POINTER(c_float), 'prop' )),
    COMMETHOD([dispid(9), 'propput'], HRESULT, 'LeftIndent',
              ( ['in'], c_float, 'prop' )),
    COMMETHOD([dispid(10), 'propget'], HRESULT, 'First',
              ( ['out', 'retval'], POINTER(POINTER(Row)), 'prop' )),
    COMMETHOD([dispid(11), 'propget'], HRESULT, 'Last',
              ( ['out', 'retval'], POINTER(POINTER(Row)), 'prop' )),
    COMMETHOD([dispid(1000), 'propget'], HRESULT, 'Application',
              ( ['out', 'retval'], POINTER(POINTER(Application)), 'prop' )),
    COMMETHOD([dispid(1001), 'propget'], HRESULT, 'Creator',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(1002), 'propget'], HRESULT, 'Parent',
              ( ['out', 'retval'], POINTER(POINTER(IDispatch)), 'prop' )),
    COMMETHOD([dispid(1100), 'propget'], HRESULT, 'Borders',
              ( ['out', 'retval'], POINTER(POINTER(Borders)), 'prop' )),
    COMMETHOD([dispid(1100), 'propput'], HRESULT, 'Borders',
              ( ['in'], POINTER(Borders), 'prop' )),
    COMMETHOD([dispid(102), 'propget'], HRESULT, 'Shading',
              ( ['out', 'retval'], POINTER(POINTER(Shading)), 'prop' )),
    COMMETHOD([dispid(0)], HRESULT, 'Item',
              ( ['in'], c_int, 'Index' ),
              ( ['out', 'retval'], POINTER(POINTER(Row)), 'prop' )),
    COMMETHOD([dispid(100)], HRESULT, 'Add',
              ( ['in', 'optional'], POINTER(VARIANT), 'BeforeRow' ),
              ( ['out', 'retval'], POINTER(POINTER(Row)), 'prop' )),
    COMMETHOD([dispid(199)], HRESULT, 'Select'),
    COMMETHOD([dispid(200)], HRESULT, 'Delete'),
    COMMETHOD([dispid(202)], HRESULT, 'SetLeftIndent',
              ( ['in'], c_float, 'LeftIndent' ),
              ( ['in'], WdRulerStyle, 'RulerStyle' )),
    COMMETHOD([dispid(203)], HRESULT, 'SetHeight',
              ( ['in'], c_float, 'RowHeight' ),
              ( ['in'], WdRowHeightRule, 'HeightRule' )),
    COMMETHOD([dispid(16), 'hidden'], HRESULT, 'ConvertToTextOld',
              ( ['in', 'optional'], POINTER(VARIANT), 'Separator' ),
              ( ['out', 'retval'], POINTER(POINTER(Range)), 'prop' )),
    COMMETHOD([dispid(206)], HRESULT, 'DistributeHeight'),
    COMMETHOD([dispid(210)], HRESULT, 'ConvertToText',
              ( ['in', 'optional'], POINTER(VARIANT), 'Separator' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'NestedTables' ),
              ( ['out', 'retval'], POINTER(POINTER(Range)), 'prop' )),
    COMMETHOD([dispid(12), 'propget'], HRESULT, 'WrapAroundText',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(12), 'propput'], HRESULT, 'WrapAroundText',
              ( ['in'], c_int, 'prop' )),
    COMMETHOD([dispid(13), 'propget'], HRESULT, 'DistanceTop',
              ( ['out', 'retval'], POINTER(c_float), 'prop' )),
    COMMETHOD([dispid(13), 'propput'], HRESULT, 'DistanceTop',
              ( ['in'], c_float, 'prop' )),
    COMMETHOD([dispid(14), 'propget'], HRESULT, 'DistanceBottom',
              ( ['out', 'retval'], POINTER(c_float), 'prop' )),
    COMMETHOD([dispid(14), 'propput'], HRESULT, 'DistanceBottom',
              ( ['in'], c_float, 'prop' )),
    COMMETHOD([dispid(20), 'propget'], HRESULT, 'DistanceLeft',
              ( ['out', 'retval'], POINTER(c_float), 'prop' )),
    COMMETHOD([dispid(20), 'propput'], HRESULT, 'DistanceLeft',
              ( ['in'], c_float, 'prop' )),
    COMMETHOD([dispid(21), 'propget'], HRESULT, 'DistanceRight',
              ( ['out', 'retval'], POINTER(c_float), 'prop' )),
    COMMETHOD([dispid(21), 'propput'], HRESULT, 'DistanceRight',
              ( ['in'], c_float, 'prop' )),
    COMMETHOD([dispid(15), 'propget'], HRESULT, 'HorizontalPosition',
              ( ['out', 'retval'], POINTER(c_float), 'prop' )),
    COMMETHOD([dispid(15), 'propput'], HRESULT, 'HorizontalPosition',
              ( ['in'], c_float, 'prop' )),
    COMMETHOD([dispid(17), 'propget'], HRESULT, 'VerticalPosition',
              ( ['out', 'retval'], POINTER(c_float), 'prop' )),
    COMMETHOD([dispid(17), 'propput'], HRESULT, 'VerticalPosition',
              ( ['in'], c_float, 'prop' )),
    COMMETHOD([dispid(18), 'propget'], HRESULT, 'RelativeHorizontalPosition',
              ( ['out', 'retval'], POINTER(WdRelativeHorizontalPosition), 'prop' )),
    COMMETHOD([dispid(18), 'propput'], HRESULT, 'RelativeHorizontalPosition',
              ( ['in'], WdRelativeHorizontalPosition, 'prop' )),
    COMMETHOD([dispid(19), 'propget'], HRESULT, 'RelativeVerticalPosition',
              ( ['out', 'retval'], POINTER(WdRelativeVerticalPosition), 'prop' )),
    COMMETHOD([dispid(19), 'propput'], HRESULT, 'RelativeVerticalPosition',
              ( ['in'], WdRelativeVerticalPosition, 'prop' )),
    COMMETHOD([dispid(22), 'propget'], HRESULT, 'AllowOverlap',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(22), 'propput'], HRESULT, 'AllowOverlap',
              ( ['in'], c_int, 'prop' )),
    COMMETHOD([dispid(103), 'propget'], HRESULT, 'NestingLevel',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(104), 'propget'], HRESULT, 'TableDirection',
              ( ['out', 'retval'], POINTER(WdTableDirection), 'prop' )),
    COMMETHOD([dispid(104), 'propput'], HRESULT, 'TableDirection',
              ( ['in'], WdTableDirection, 'prop' )),
]
################################################################
## code template for Rows implementation
##class Rows_Impl(object):
##    @property
##    def _NewEnum(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Count(self):
##        '-no docstring-'
##        #return prop
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    AllowBreakAcrossPages = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    Alignment = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    HeadingFormat = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    SpaceBetweenColumns = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    Height = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    HeightRule = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    LeftIndent = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def First(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Last(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Creator(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return prop
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    Borders = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Shading(self):
##        '-no docstring-'
##        #return prop
##
##    def Item(self, Index):
##        '-no docstring-'
##        #return prop
##
##    def Add(self, BeforeRow):
##        '-no docstring-'
##        #return prop
##
##    def Select(self):
##        '-no docstring-'
##        #return 
##
##    def Delete(self):
##        '-no docstring-'
##        #return 
##
##    def SetLeftIndent(self, LeftIndent, RulerStyle):
##        '-no docstring-'
##        #return 
##
##    def SetHeight(self, RowHeight, HeightRule):
##        '-no docstring-'
##        #return 
##
##    def ConvertToTextOld(self, Separator):
##        '-no docstring-'
##        #return prop
##
##    def DistributeHeight(self):
##        '-no docstring-'
##        #return 
##
##    def ConvertToText(self, Separator, NestedTables):
##        '-no docstring-'
##        #return prop
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    WrapAroundText = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    DistanceTop = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    DistanceBottom = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    DistanceLeft = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    DistanceRight = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    HorizontalPosition = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    VerticalPosition = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    RelativeHorizontalPosition = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    RelativeVerticalPosition = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    AllowOverlap = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def NestingLevel(self):
##        '-no docstring-'
##        #return prop
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    TableDirection = property(_get, _set, doc = _set.__doc__)
##

Comments._methods_ = [
    COMMETHOD([dispid(-4), 'nonbrowsable', 'propget'], HRESULT, '_NewEnum',
              ( ['out', 'retval'], POINTER(POINTER(IUnknown)), 'prop' )),
    COMMETHOD([dispid(2), 'propget'], HRESULT, 'Count',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(1000), 'propget'], HRESULT, 'Application',
              ( ['out', 'retval'], POINTER(POINTER(Application)), 'prop' )),
    COMMETHOD([dispid(1001), 'propget'], HRESULT, 'Creator',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(1002), 'propget'], HRESULT, 'Parent',
              ( ['out', 'retval'], POINTER(POINTER(IDispatch)), 'prop' )),
    COMMETHOD([dispid(1003), 'propget'], HRESULT, 'ShowBy',
              ( ['out', 'retval'], POINTER(BSTR), 'prop' )),
    COMMETHOD([dispid(1003), 'propput'], HRESULT, 'ShowBy',
              ( ['in'], BSTR, 'prop' )),
    COMMETHOD([dispid(0)], HRESULT, 'Item',
              ( ['in'], c_int, 'Index' ),
              ( ['out', 'retval'], POINTER(POINTER(Comment)), 'prop' )),
    COMMETHOD([dispid(4)], HRESULT, 'Add',
              ( ['in'], POINTER(Range), 'Range' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'Text' ),
              ( ['out', 'retval'], POINTER(POINTER(Comment)), 'prop' )),
]
################################################################
## code template for Comments implementation
##class Comments_Impl(object):
##    @property
##    def _NewEnum(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Count(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Creator(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return prop
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    ShowBy = property(_get, _set, doc = _set.__doc__)
##
##    def Item(self, Index):
##        '-no docstring-'
##        #return prop
##
##    def Add(self, Range, Text):
##        '-no docstring-'
##        #return prop
##

ApplicationEvents2._disp_methods_ = [
    DISPMETHOD([dispid(1), 'restricted', 'hidden'], None, 'Startup'),
    DISPMETHOD([dispid(2)], None, 'Quit'),
    DISPMETHOD([dispid(3)], None, 'DocumentChange'),
    DISPMETHOD([dispid(4)], None, 'DocumentOpen',
               ( ['in'], POINTER(Document), 'Doc' )),
    DISPMETHOD([dispid(6)], None, 'DocumentBeforeClose',
               ( ['in'], POINTER(Document), 'Doc' ),
               ( ['in'], POINTER(VARIANT_BOOL), 'Cancel' )),
    DISPMETHOD([dispid(7)], None, 'DocumentBeforePrint',
               ( ['in'], POINTER(Document), 'Doc' ),
               ( ['in'], POINTER(VARIANT_BOOL), 'Cancel' )),
    DISPMETHOD([dispid(8)], None, 'DocumentBeforeSave',
               ( ['in'], POINTER(Document), 'Doc' ),
               ( ['in'], POINTER(VARIANT_BOOL), 'SaveAsUI' ),
               ( ['in'], POINTER(VARIANT_BOOL), 'Cancel' )),
    DISPMETHOD([dispid(9)], None, 'NewDocument',
               ( ['in'], POINTER(Document), 'Doc' )),
    DISPMETHOD([dispid(10)], None, 'WindowActivate',
               ( ['in'], POINTER(Document), 'Doc' ),
               ( ['in'], POINTER(Window), 'Wn' )),
    DISPMETHOD([dispid(11)], None, 'WindowDeactivate',
               ( ['in'], POINTER(Document), 'Doc' ),
               ( ['in'], POINTER(Window), 'Wn' )),
    DISPMETHOD([dispid(12)], None, 'WindowSelectionChange',
               ( ['in'], POINTER(Selection), 'Sel' )),
    DISPMETHOD([dispid(13)], None, 'WindowBeforeRightClick',
               ( ['in'], POINTER(Selection), 'Sel' ),
               ( ['in'], POINTER(VARIANT_BOOL), 'Cancel' )),
    DISPMETHOD([dispid(14)], None, 'WindowBeforeDoubleClick',
               ( ['in'], POINTER(Selection), 'Sel' ),
               ( ['in'], POINTER(VARIANT_BOOL), 'Cancel' )),
]
class Points(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{C1A870A0-850E-4D38-98A7-741CB8C3BCA4}')
    _idlflags_ = ['dual', 'nonextensible', 'oleautomation']
class Point(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{8A342FA0-5831-4B5E-82E1-003D0A0C635D}')
    _idlflags_ = ['dual', 'nonextensible', 'oleautomation']
Points._methods_ = [
    COMMETHOD([dispid(150), 'propget'], HRESULT, 'Parent',
              ( ['out', 'retval'], POINTER(POINTER(IDispatch)), 'prop' )),
    COMMETHOD([dispid(118), 'propget'], HRESULT, 'Count',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(0)], HRESULT, 'Item',
              ( ['in'], c_int, 'Index' ),
              ( ['out', 'retval'], POINTER(POINTER(Point)), 'prop' )),
    COMMETHOD([dispid(-4), 'nonbrowsable'], HRESULT, '_NewEnum',
              ( ['out', 'retval'], POINTER(POINTER(IUnknown)), 'prop' )),
    COMMETHOD([dispid(148), 'propget'], HRESULT, 'Application',
              ( ['out', 'retval'], POINTER(POINTER(IDispatch)), 'prop' )),
    COMMETHOD([dispid(149), 'propget'], HRESULT, 'Creator',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(1610743814), 'nonbrowsable'], HRESULT, '_Default',
              ( ['in'], c_int, 'Index' ),
              ( ['out', 'retval'], POINTER(POINTER(Point)), 'prop' )),
]
################################################################
## code template for Points implementation
##class Points_Impl(object):
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Count(self):
##        '-no docstring-'
##        #return prop
##
##    def Item(self, Index):
##        '-no docstring-'
##        #return prop
##
##    def _NewEnum(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Creator(self):
##        '-no docstring-'
##        #return prop
##
##    def _Default(self, Index):
##        '-no docstring-'
##        #return prop
##

Cells._methods_ = [
    COMMETHOD([dispid(-4), 'nonbrowsable', 'propget'], HRESULT, '_NewEnum',
              ( ['out', 'retval'], POINTER(POINTER(IUnknown)), 'prop' )),
    COMMETHOD([dispid(2), 'propget'], HRESULT, 'Count',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(1000), 'propget'], HRESULT, 'Application',
              ( ['out', 'retval'], POINTER(POINTER(Application)), 'prop' )),
    COMMETHOD([dispid(1001), 'propget'], HRESULT, 'Creator',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(1002), 'propget'], HRESULT, 'Parent',
              ( ['out', 'retval'], POINTER(POINTER(IDispatch)), 'prop' )),
    COMMETHOD([dispid(6), 'propget'], HRESULT, 'Width',
              ( ['out', 'retval'], POINTER(c_float), 'prop' )),
    COMMETHOD([dispid(6), 'propput'], HRESULT, 'Width',
              ( ['in'], c_float, 'prop' )),
    COMMETHOD([dispid(7), 'propget'], HRESULT, 'Height',
              ( ['out', 'retval'], POINTER(c_float), 'prop' )),
    COMMETHOD([dispid(7), 'propput'], HRESULT, 'Height',
              ( ['in'], c_float, 'prop' )),
    COMMETHOD([dispid(8), 'propget'], HRESULT, 'HeightRule',
              ( ['out', 'retval'], POINTER(WdRowHeightRule), 'prop' )),
    COMMETHOD([dispid(8), 'propput'], HRESULT, 'HeightRule',
              ( ['in'], WdRowHeightRule, 'prop' )),
    COMMETHOD([dispid(1104), 'propget'], HRESULT, 'VerticalAlignment',
              ( ['out', 'retval'], POINTER(WdCellVerticalAlignment), 'prop' )),
    COMMETHOD([dispid(1104), 'propput'], HRESULT, 'VerticalAlignment',
              ( ['in'], WdCellVerticalAlignment, 'prop' )),
    COMMETHOD([dispid(1100), 'propget'], HRESULT, 'Borders',
              ( ['out', 'retval'], POINTER(POINTER(Borders)), 'prop' )),
    COMMETHOD([dispid(1100), 'propput'], HRESULT, 'Borders',
              ( ['in'], POINTER(Borders), 'prop' )),
    COMMETHOD([dispid(101), 'propget'], HRESULT, 'Shading',
              ( ['out', 'retval'], POINTER(POINTER(Shading)), 'prop' )),
    COMMETHOD([dispid(0)], HRESULT, 'Item',
              ( ['in'], c_int, 'Index' ),
              ( ['out', 'retval'], POINTER(POINTER(Cell)), 'prop' )),
    COMMETHOD([dispid(4)], HRESULT, 'Add',
              ( ['in', 'optional'], POINTER(VARIANT), 'BeforeCell' ),
              ( ['out', 'retval'], POINTER(POINTER(Cell)), 'prop' )),
    COMMETHOD([dispid(200)], HRESULT, 'Delete',
              ( ['in', 'optional'], POINTER(VARIANT), 'ShiftCells' )),
    COMMETHOD([dispid(202)], HRESULT, 'SetWidth',
              ( ['in'], c_float, 'ColumnWidth' ),
              ( ['in'], WdRulerStyle, 'RulerStyle' )),
    COMMETHOD([dispid(203)], HRESULT, 'SetHeight',
              ( ['in'], POINTER(VARIANT), 'RowHeight' ),
              ( ['in'], WdRowHeightRule, 'HeightRule' )),
    COMMETHOD([dispid(204)], HRESULT, 'Merge'),
    COMMETHOD([dispid(205)], HRESULT, 'Split',
              ( ['in', 'optional'], POINTER(VARIANT), 'NumRows' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'NumColumns' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'MergeBeforeSplit' )),
    COMMETHOD([dispid(206)], HRESULT, 'DistributeHeight'),
    COMMETHOD([dispid(207)], HRESULT, 'DistributeWidth'),
    COMMETHOD([dispid(208)], HRESULT, 'AutoFit'),
    COMMETHOD([dispid(102), 'propget'], HRESULT, 'NestingLevel',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(103), 'propget'], HRESULT, 'PreferredWidth',
              ( ['out', 'retval'], POINTER(c_float), 'prop' )),
    COMMETHOD([dispid(103), 'propput'], HRESULT, 'PreferredWidth',
              ( ['in'], c_float, 'prop' )),
    COMMETHOD([dispid(104), 'propget'], HRESULT, 'PreferredWidthType',
              ( ['out', 'retval'], POINTER(WdPreferredWidthType), 'prop' )),
    COMMETHOD([dispid(104), 'propput'], HRESULT, 'PreferredWidthType',
              ( ['in'], WdPreferredWidthType, 'prop' )),
]
################################################################
## code template for Cells implementation
##class Cells_Impl(object):
##    @property
##    def _NewEnum(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Count(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Creator(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return prop
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    Width = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    Height = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    HeightRule = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    VerticalAlignment = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    Borders = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Shading(self):
##        '-no docstring-'
##        #return prop
##
##    def Item(self, Index):
##        '-no docstring-'
##        #return prop
##
##    def Add(self, BeforeCell):
##        '-no docstring-'
##        #return prop
##
##    def Delete(self, ShiftCells):
##        '-no docstring-'
##        #return 
##
##    def SetWidth(self, ColumnWidth, RulerStyle):
##        '-no docstring-'
##        #return 
##
##    def SetHeight(self, RowHeight, HeightRule):
##        '-no docstring-'
##        #return 
##
##    def Merge(self):
##        '-no docstring-'
##        #return 
##
##    def Split(self, NumRows, NumColumns, MergeBeforeSplit):
##        '-no docstring-'
##        #return 
##
##    def DistributeHeight(self):
##        '-no docstring-'
##        #return 
##
##    def DistributeWidth(self):
##        '-no docstring-'
##        #return 
##
##    def AutoFit(self):
##        '-no docstring-'
##        #return 
##
##    @property
##    def NestingLevel(self):
##        '-no docstring-'
##        #return prop
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    PreferredWidth = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    PreferredWidthType = property(_get, _set, doc = _set.__doc__)
##

Research._methods_ = [
    COMMETHOD([dispid(1000), 'propget'], HRESULT, 'Application',
              ( ['out', 'retval'], POINTER(POINTER(Application)), 'prop' )),
    COMMETHOD([dispid(1001), 'propget'], HRESULT, 'Creator',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(1002), 'propget'], HRESULT, 'Parent',
              ( ['out', 'retval'], POINTER(POINTER(IDispatch)), 'prop' )),
    COMMETHOD([dispid(500)], HRESULT, 'Query',
              ( ['in'], BSTR, 'ServiceID' ),
              ( ['in', 'optional'], BSTR, 'QueryString' ),
              ( ['in', 'optional'], WdLanguageID, 'QueryLanguage', 0 ),
              ( ['in', 'optional'], VARIANT_BOOL, 'UseSelection', False ),
              ( ['in', 'optional'], VARIANT_BOOL, 'LaunchQuery', True ),
              ( ['out', 'retval'], POINTER(VARIANT), 'prop' )),
    COMMETHOD([dispid(501)], HRESULT, 'SetLanguagePair',
              ( ['in'], WdLanguageID, 'LanguageFrom' ),
              ( ['in'], WdLanguageID, 'LanguageTo' ),
              ( ['out', 'retval'], POINTER(VARIANT), 'prop' )),
    COMMETHOD([dispid(502)], HRESULT, 'IsResearchService',
              ( ['in'], BSTR, 'ServiceID' ),
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'prop' )),
    COMMETHOD([dispid(1003), 'propget'], HRESULT, 'FavoriteService',
              ( ['out', 'retval'], POINTER(BSTR), 'prop' )),
    COMMETHOD([dispid(1003), 'propput'], HRESULT, 'FavoriteService',
              ( ['in'], BSTR, 'prop' )),
]
################################################################
## code template for Research implementation
##class Research_Impl(object):
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Creator(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return prop
##
##    def Query(self, ServiceID, QueryString, QueryLanguage, UseSelection, LaunchQuery):
##        '-no docstring-'
##        #return prop
##
##    def SetLanguagePair(self, LanguageFrom, LanguageTo):
##        '-no docstring-'
##        #return prop
##
##    def IsResearchService(self, ServiceID):
##        '-no docstring-'
##        #return prop
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    FavoriteService = property(_get, _set, doc = _set.__doc__)
##


# values for enumeration 'WdNumberType'
wdNumberParagraph = 1
wdNumberListNum = 2
wdNumberAllNumbers = 3
WdNumberType = c_int # enum
CustomLabel._methods_ = [
    COMMETHOD([dispid(1000), 'propget'], HRESULT, 'Application',
              ( ['out', 'retval'], POINTER(POINTER(Application)), 'prop' )),
    COMMETHOD([dispid(1001), 'propget'], HRESULT, 'Creator',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(1002), 'propget'], HRESULT, 'Parent',
              ( ['out', 'retval'], POINTER(POINTER(IDispatch)), 'prop' )),
    COMMETHOD([dispid(1), 'propget'], HRESULT, 'Index',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(2), 'propget'], HRESULT, 'Name',
              ( ['out', 'retval'], POINTER(BSTR), 'prop' )),
    COMMETHOD([dispid(2), 'propput'], HRESULT, 'Name',
              ( ['in'], BSTR, 'prop' )),
    COMMETHOD([dispid(3), 'propget'], HRESULT, 'TopMargin',
              ( ['out', 'retval'], POINTER(c_float), 'prop' )),
    COMMETHOD([dispid(3), 'propput'], HRESULT, 'TopMargin',
              ( ['in'], c_float, 'prop' )),
    COMMETHOD([dispid(4), 'propget'], HRESULT, 'SideMargin',
              ( ['out', 'retval'], POINTER(c_float), 'prop' )),
    COMMETHOD([dispid(4), 'propput'], HRESULT, 'SideMargin',
              ( ['in'], c_float, 'prop' )),
    COMMETHOD([dispid(5), 'propget'], HRESULT, 'Height',
              ( ['out', 'retval'], POINTER(c_float), 'prop' )),
    COMMETHOD([dispid(5), 'propput'], HRESULT, 'Height',
              ( ['in'], c_float, 'prop' )),
    COMMETHOD([dispid(6), 'propget'], HRESULT, 'Width',
              ( ['out', 'retval'], POINTER(c_float), 'prop' )),
    COMMETHOD([dispid(6), 'propput'], HRESULT, 'Width',
              ( ['in'], c_float, 'prop' )),
    COMMETHOD([dispid(7), 'propget'], HRESULT, 'VerticalPitch',
              ( ['out', 'retval'], POINTER(c_float), 'prop' )),
    COMMETHOD([dispid(7), 'propput'], HRESULT, 'VerticalPitch',
              ( ['in'], c_float, 'prop' )),
    COMMETHOD([dispid(8), 'propget'], HRESULT, 'HorizontalPitch',
              ( ['out', 'retval'], POINTER(c_float), 'prop' )),
    COMMETHOD([dispid(8), 'propput'], HRESULT, 'HorizontalPitch',
              ( ['in'], c_float, 'prop' )),
    COMMETHOD([dispid(9), 'propget'], HRESULT, 'NumberAcross',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(9), 'propput'], HRESULT, 'NumberAcross',
              ( ['in'], c_int, 'prop' )),
    COMMETHOD([dispid(10), 'propget'], HRESULT, 'NumberDown',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(10), 'propput'], HRESULT, 'NumberDown',
              ( ['in'], c_int, 'prop' )),
    COMMETHOD([dispid(11), 'propget'], HRESULT, 'DotMatrix',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'prop' )),
    COMMETHOD([dispid(12), 'propget'], HRESULT, 'PageSize',
              ( ['out', 'retval'], POINTER(WdCustomLabelPageSize), 'prop' )),
    COMMETHOD([dispid(12), 'propput'], HRESULT, 'PageSize',
              ( ['in'], WdCustomLabelPageSize, 'prop' )),
    COMMETHOD([dispid(13), 'propget'], HRESULT, 'Valid',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'prop' )),
    COMMETHOD([dispid(101)], HRESULT, 'Delete'),
]
################################################################
## code template for CustomLabel implementation
##class CustomLabel_Impl(object):
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Creator(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Index(self):
##        '-no docstring-'
##        #return prop
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    Name = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    TopMargin = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    SideMargin = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    Height = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    Width = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    VerticalPitch = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    HorizontalPitch = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    NumberAcross = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    NumberDown = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def DotMatrix(self):
##        '-no docstring-'
##        #return prop
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    PageSize = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Valid(self):
##        '-no docstring-'
##        #return prop
##
##    def Delete(self):
##        '-no docstring-'
##        #return 
##

class MailMergeFieldName(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{0002091B-0000-0000-C000-000000000046}')
    _idlflags_ = ['dual', 'nonextensible', 'oleautomation']
MailMergeFieldName._methods_ = [
    COMMETHOD([dispid(1000), 'propget'], HRESULT, 'Application',
              ( ['out', 'retval'], POINTER(POINTER(Application)), 'prop' )),
    COMMETHOD([dispid(1001), 'propget'], HRESULT, 'Creator',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(1002), 'propget'], HRESULT, 'Parent',
              ( ['out', 'retval'], POINTER(POINTER(IDispatch)), 'prop' )),
    COMMETHOD([dispid(0), 'propget'], HRESULT, 'Name',
              ( ['out', 'retval'], POINTER(BSTR), 'prop' )),
    COMMETHOD([dispid(1), 'propget'], HRESULT, 'Index',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
]
################################################################
## code template for MailMergeFieldName implementation
##class MailMergeFieldName_Impl(object):
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Creator(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Name(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Index(self):
##        '-no docstring-'
##        #return prop
##

ChartFillFormat._methods_ = [
    COMMETHOD([dispid(1610743808)], HRESULT, 'OneColorGradient',
              ( ['in'], comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoGradientStyle, 'Style' ),
              ( ['in'], c_int, 'Variant' ),
              ( ['in'], c_float, 'Degree' )),
    COMMETHOD([dispid(1610743809)], HRESULT, 'TwoColorGradient',
              ( ['in'], comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoGradientStyle, 'Style' ),
              ( ['in'], c_int, 'Variant' )),
    COMMETHOD([dispid(1610743810)], HRESULT, 'PresetTextured',
              ( ['in'], comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoPresetTexture, 'PresetTexture' )),
    COMMETHOD([dispid(1610743811)], HRESULT, 'Solid'),
    COMMETHOD([dispid(1610743812)], HRESULT, 'Patterned',
              ( ['in'], comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoPatternType, 'Pattern' )),
    COMMETHOD([dispid(1610743813)], HRESULT, 'UserPicture',
              ( ['in', 'optional'], VARIANT, 'PictureFile' ),
              ( ['in', 'optional'], VARIANT, 'PictureFormat' ),
              ( ['in', 'optional'], VARIANT, 'PictureStackUnit' ),
              ( ['in', 'optional'], VARIANT, 'PicturePlacement' )),
    COMMETHOD([dispid(1610743814)], HRESULT, 'UserTextured',
              ( ['in'], BSTR, 'TextureFile' )),
    COMMETHOD([dispid(1610743815)], HRESULT, 'PresetGradient',
              ( ['in'], comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoGradientStyle, 'Style' ),
              ( ['in'], c_int, 'Variant' ),
              ( ['in'], comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoPresetGradientType, 'PresetGradientType' )),
    COMMETHOD([dispid(1610743816), 'propget'], HRESULT, 'BackColor',
              ( ['out', 'retval'], POINTER(POINTER(ChartColorFormat)), 'prop' )),
    COMMETHOD([dispid(1610743817), 'propget'], HRESULT, 'ForeColor',
              ( ['out', 'retval'], POINTER(POINTER(ChartColorFormat)), 'prop' )),
    COMMETHOD([dispid(1610743818), 'propget'], HRESULT, 'GradientColorType',
              ( ['out', 'retval'], POINTER(comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoGradientColorType), 'prop' )),
    COMMETHOD([dispid(1610743819), 'propget'], HRESULT, 'GradientDegree',
              ( ['out', 'retval'], POINTER(c_float), 'prop' )),
    COMMETHOD([dispid(1610743820), 'propget'], HRESULT, 'GradientStyle',
              ( ['out', 'retval'], POINTER(comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoGradientStyle), 'prop' )),
    COMMETHOD([dispid(1610743821), 'propget'], HRESULT, 'GradientVariant',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(1610743822), 'propget'], HRESULT, 'Pattern',
              ( ['out', 'retval'], POINTER(comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoPatternType), 'prop' )),
    COMMETHOD([dispid(1610743823), 'propget'], HRESULT, 'PresetGradientType',
              ( ['out', 'retval'], POINTER(comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoPresetGradientType), 'prop' )),
    COMMETHOD([dispid(1610743824), 'propget'], HRESULT, 'PresetTexture',
              ( ['out', 'retval'], POINTER(comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoPresetTexture), 'prop' )),
    COMMETHOD([dispid(1610743825), 'propget'], HRESULT, 'TextureName',
              ( ['out', 'retval'], POINTER(BSTR), 'prop' )),
    COMMETHOD([dispid(1610743826), 'propget'], HRESULT, 'TextureType',
              ( ['out', 'retval'], POINTER(comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoTextureType), 'prop' )),
    COMMETHOD([dispid(1610743827), 'propget'], HRESULT, 'Type',
              ( ['out', 'retval'], POINTER(comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoFillType), 'prop' )),
    COMMETHOD([dispid(1610743828), 'propget'], HRESULT, 'Visible',
              ( ['out', 'retval'], POINTER(comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoTriState), 'prop' )),
    COMMETHOD([dispid(1610743828), 'propput'], HRESULT, 'Visible',
              ( ['in'], comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoTriState, 'prop' )),
    COMMETHOD([dispid(148), 'propget'], HRESULT, 'Application',
              ( ['out', 'retval'], POINTER(POINTER(IDispatch)), 'prop' )),
    COMMETHOD([dispid(149), 'propget'], HRESULT, 'Creator',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(150), 'propget'], HRESULT, 'Parent',
              ( ['out', 'retval'], POINTER(POINTER(IDispatch)), 'prop' )),
]
################################################################
## code template for ChartFillFormat implementation
##class ChartFillFormat_Impl(object):
##    def OneColorGradient(self, Style, Variant, Degree):
##        '-no docstring-'
##        #return 
##
##    def TwoColorGradient(self, Style, Variant):
##        '-no docstring-'
##        #return 
##
##    def PresetTextured(self, PresetTexture):
##        '-no docstring-'
##        #return 
##
##    def Solid(self):
##        '-no docstring-'
##        #return 
##
##    def Patterned(self, Pattern):
##        '-no docstring-'
##        #return 
##
##    def UserPicture(self, PictureFile, PictureFormat, PictureStackUnit, PicturePlacement):
##        '-no docstring-'
##        #return 
##
##    def UserTextured(self, TextureFile):
##        '-no docstring-'
##        #return 
##
##    def PresetGradient(self, Style, Variant, PresetGradientType):
##        '-no docstring-'
##        #return 
##
##    @property
##    def BackColor(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def ForeColor(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def GradientColorType(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def GradientDegree(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def GradientStyle(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def GradientVariant(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Pattern(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def PresetGradientType(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def PresetTexture(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def TextureName(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def TextureType(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Type(self):
##        '-no docstring-'
##        #return prop
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    Visible = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Creator(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return prop
##

ListLevel._methods_ = [
    COMMETHOD([dispid(1), 'propget'], HRESULT, 'Index',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(2), 'propget'], HRESULT, 'NumberFormat',
              ( ['out', 'retval'], POINTER(BSTR), 'prop' )),
    COMMETHOD([dispid(2), 'propput'], HRESULT, 'NumberFormat',
              ( ['in'], BSTR, 'prop' )),
    COMMETHOD([dispid(3), 'propget'], HRESULT, 'TrailingCharacter',
              ( ['out', 'retval'], POINTER(WdTrailingCharacter), 'prop' )),
    COMMETHOD([dispid(3), 'propput'], HRESULT, 'TrailingCharacter',
              ( ['in'], WdTrailingCharacter, 'prop' )),
    COMMETHOD([dispid(4), 'propget'], HRESULT, 'NumberStyle',
              ( ['out', 'retval'], POINTER(WdListNumberStyle), 'prop' )),
    COMMETHOD([dispid(4), 'propput'], HRESULT, 'NumberStyle',
              ( ['in'], WdListNumberStyle, 'prop' )),
    COMMETHOD([dispid(5), 'propget'], HRESULT, 'NumberPosition',
              ( ['out', 'retval'], POINTER(c_float), 'prop' )),
    COMMETHOD([dispid(5), 'propput'], HRESULT, 'NumberPosition',
              ( ['in'], c_float, 'prop' )),
    COMMETHOD([dispid(6), 'propget'], HRESULT, 'Alignment',
              ( ['out', 'retval'], POINTER(WdListLevelAlignment), 'prop' )),
    COMMETHOD([dispid(6), 'propput'], HRESULT, 'Alignment',
              ( ['in'], WdListLevelAlignment, 'prop' )),
    COMMETHOD([dispid(7), 'propget'], HRESULT, 'TextPosition',
              ( ['out', 'retval'], POINTER(c_float), 'prop' )),
    COMMETHOD([dispid(7), 'propput'], HRESULT, 'TextPosition',
              ( ['in'], c_float, 'prop' )),
    COMMETHOD([dispid(8), 'propget'], HRESULT, 'TabPosition',
              ( ['out', 'retval'], POINTER(c_float), 'prop' )),
    COMMETHOD([dispid(8), 'propput'], HRESULT, 'TabPosition',
              ( ['in'], c_float, 'prop' )),
    COMMETHOD([dispid(9), 'hidden', 'propget'], HRESULT, 'ResetOnHigherOld',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'prop' )),
    COMMETHOD([dispid(9), 'hidden', 'propput'], HRESULT, 'ResetOnHigherOld',
              ( ['in'], VARIANT_BOOL, 'prop' )),
    COMMETHOD([dispid(10), 'propget'], HRESULT, 'StartAt',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(10), 'propput'], HRESULT, 'StartAt',
              ( ['in'], c_int, 'prop' )),
    COMMETHOD([dispid(11), 'propget'], HRESULT, 'LinkedStyle',
              ( ['out', 'retval'], POINTER(BSTR), 'prop' )),
    COMMETHOD([dispid(11), 'propput'], HRESULT, 'LinkedStyle',
              ( ['in'], BSTR, 'prop' )),
    COMMETHOD([dispid(12), 'propget'], HRESULT, 'Font',
              ( ['out', 'retval'], POINTER(POINTER(Font)), 'prop' )),
    COMMETHOD([dispid(12), 'propput'], HRESULT, 'Font',
              ( ['in'], POINTER(Font), 'prop' )),
    COMMETHOD([dispid(1000), 'propget'], HRESULT, 'Application',
              ( ['out', 'retval'], POINTER(POINTER(Application)), 'prop' )),
    COMMETHOD([dispid(1001), 'propget'], HRESULT, 'Creator',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(1002), 'propget'], HRESULT, 'Parent',
              ( ['out', 'retval'], POINTER(POINTER(IDispatch)), 'prop' )),
    COMMETHOD([dispid(13), 'propget'], HRESULT, 'ResetOnHigher',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(13), 'propput'], HRESULT, 'ResetOnHigher',
              ( ['in'], c_int, 'prop' )),
    COMMETHOD([dispid(14), 'propget'], HRESULT, 'PictureBullet',
              ( ['out', 'retval'], POINTER(POINTER(InlineShape)), 'prop' )),
    COMMETHOD([dispid(0)], HRESULT, 'ApplyPictureBullet',
              ( ['in'], BSTR, 'FileName' ),
              ( ['out', 'retval'], POINTER(POINTER(InlineShape)), 'prop' )),
]
################################################################
## code template for ListLevel implementation
##class ListLevel_Impl(object):
##    @property
##    def Index(self):
##        '-no docstring-'
##        #return prop
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    NumberFormat = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    TrailingCharacter = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    NumberStyle = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    NumberPosition = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    Alignment = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    TextPosition = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    TabPosition = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    ResetOnHigherOld = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    StartAt = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    LinkedStyle = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    Font = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Creator(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return prop
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    ResetOnHigher = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def PictureBullet(self):
##        '-no docstring-'
##        #return prop
##
##    def ApplyPictureBullet(self, FileName):
##        '-no docstring-'
##        #return prop
##

XSLTransform._methods_ = [
    COMMETHOD([dispid(1000), 'propget'], HRESULT, 'Application',
              ( ['out', 'retval'], POINTER(POINTER(Application)), 'prop' )),
    COMMETHOD([dispid(1001), 'propget'], HRESULT, 'Creator',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(1002), 'propget'], HRESULT, 'Parent',
              ( ['out', 'retval'], POINTER(POINTER(IDispatch)), 'prop' )),
    COMMETHOD([dispid(2), 'propget'], HRESULT, 'Alias',
              ( ['in', 'optional'], VARIANT_BOOL, 'AllUsers', False ),
              ( ['out', 'retval'], POINTER(BSTR), 'prop' )),
    COMMETHOD([dispid(2), 'propput'], HRESULT, 'Alias',
              ( ['in', 'optional'], VARIANT_BOOL, 'AllUsers', False ),
              ( ['in'], BSTR, 'prop' )),
    COMMETHOD([dispid(3), 'propget'], HRESULT, 'Location',
              ( ['in', 'optional'], VARIANT_BOOL, 'AllUsers', False ),
              ( ['out', 'retval'], POINTER(BSTR), 'prop' )),
    COMMETHOD([dispid(3), 'propput'], HRESULT, 'Location',
              ( ['in', 'optional'], VARIANT_BOOL, 'AllUsers', False ),
              ( ['in'], BSTR, 'prop' )),
    COMMETHOD([dispid(101)], HRESULT, 'Delete'),
    COMMETHOD([dispid(102), 'propget'], HRESULT, 'ID',
              ( ['out', 'retval'], POINTER(BSTR), 'prop' )),
]
################################################################
## code template for XSLTransform implementation
##class XSLTransform_Impl(object):
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Creator(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return prop
##
##    def _get(self, AllUsers):
##        '-no docstring-'
##        #return prop
##    def _set(self, AllUsers, prop):
##        '-no docstring-'
##    Alias = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self, AllUsers):
##        '-no docstring-'
##        #return prop
##    def _set(self, AllUsers, prop):
##        '-no docstring-'
##    Location = property(_get, _set, doc = _set.__doc__)
##
##    def Delete(self):
##        '-no docstring-'
##        #return 
##
##    @property
##    def ID(self):
##        '-no docstring-'
##        #return prop
##

AutoCaptions._methods_ = [
    COMMETHOD([dispid(1000), 'propget'], HRESULT, 'Application',
              ( ['out', 'retval'], POINTER(POINTER(Application)), 'prop' )),
    COMMETHOD([dispid(1001), 'propget'], HRESULT, 'Creator',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(1002), 'propget'], HRESULT, 'Parent',
              ( ['out', 'retval'], POINTER(POINTER(IDispatch)), 'prop' )),
    COMMETHOD([dispid(-4), 'nonbrowsable', 'propget'], HRESULT, '_NewEnum',
              ( ['out', 'retval'], POINTER(POINTER(IUnknown)), 'prop' )),
    COMMETHOD([dispid(1), 'propget'], HRESULT, 'Count',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(0)], HRESULT, 'Item',
              ( ['in'], POINTER(VARIANT), 'Index' ),
              ( ['out', 'retval'], POINTER(POINTER(AutoCaption)), 'prop' )),
    COMMETHOD([dispid(100)], HRESULT, 'CancelAutoInsert'),
]
################################################################
## code template for AutoCaptions implementation
##class AutoCaptions_Impl(object):
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Creator(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def _NewEnum(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Count(self):
##        '-no docstring-'
##        #return prop
##
##    def Item(self, Index):
##        '-no docstring-'
##        #return prop
##
##    def CancelAutoInsert(self):
##        '-no docstring-'
##        #return 
##

class DefaultWebOptions(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{000209E3-0000-0000-C000-000000000046}')
    _idlflags_ = ['dual', 'nonextensible', 'oleautomation']

# values for enumeration 'WdBrowserLevel'
wdBrowserLevelV4 = 0
wdBrowserLevelMicrosoftInternetExplorer5 = 1
wdBrowserLevelMicrosoftInternetExplorer6 = 2
WdBrowserLevel = c_int # enum
DefaultWebOptions._methods_ = [
    COMMETHOD([dispid(1000), 'propget'], HRESULT, 'Application',
              ( ['out', 'retval'], POINTER(POINTER(Application)), 'prop' )),
    COMMETHOD([dispid(1001), 'propget'], HRESULT, 'Creator',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(1002), 'propget'], HRESULT, 'Parent',
              ( ['out', 'retval'], POINTER(POINTER(IDispatch)), 'prop' )),
    COMMETHOD([dispid(1), 'propget'], HRESULT, 'OptimizeForBrowser',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'prop' )),
    COMMETHOD([dispid(1), 'propput'], HRESULT, 'OptimizeForBrowser',
              ( ['in'], VARIANT_BOOL, 'prop' )),
    COMMETHOD([dispid(2), 'propget'], HRESULT, 'BrowserLevel',
              ( ['out', 'retval'], POINTER(WdBrowserLevel), 'prop' )),
    COMMETHOD([dispid(2), 'propput'], HRESULT, 'BrowserLevel',
              ( ['in'], WdBrowserLevel, 'prop' )),
    COMMETHOD([dispid(3), 'propget'], HRESULT, 'RelyOnCSS',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'prop' )),
    COMMETHOD([dispid(3), 'propput'], HRESULT, 'RelyOnCSS',
              ( ['in'], VARIANT_BOOL, 'prop' )),
    COMMETHOD([dispid(4), 'propget'], HRESULT, 'OrganizeInFolder',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'prop' )),
    COMMETHOD([dispid(4), 'propput'], HRESULT, 'OrganizeInFolder',
              ( ['in'], VARIANT_BOOL, 'prop' )),
    COMMETHOD([dispid(5), 'propget'], HRESULT, 'UpdateLinksOnSave',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'prop' )),
    COMMETHOD([dispid(5), 'propput'], HRESULT, 'UpdateLinksOnSave',
              ( ['in'], VARIANT_BOOL, 'prop' )),
    COMMETHOD([dispid(6), 'propget'], HRESULT, 'UseLongFileNames',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'prop' )),
    COMMETHOD([dispid(6), 'propput'], HRESULT, 'UseLongFileNames',
              ( ['in'], VARIANT_BOOL, 'prop' )),
    COMMETHOD([dispid(7), 'propget'], HRESULT, 'CheckIfOfficeIsHTMLEditor',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'prop' )),
    COMMETHOD([dispid(7), 'propput'], HRESULT, 'CheckIfOfficeIsHTMLEditor',
              ( ['in'], VARIANT_BOOL, 'prop' )),
    COMMETHOD([dispid(8), 'propget'], HRESULT, 'CheckIfWordIsDefaultHTMLEditor',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'prop' )),
    COMMETHOD([dispid(8), 'propput'], HRESULT, 'CheckIfWordIsDefaultHTMLEditor',
              ( ['in'], VARIANT_BOOL, 'prop' )),
    COMMETHOD([dispid(9), 'propget'], HRESULT, 'RelyOnVML',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'prop' )),
    COMMETHOD([dispid(9), 'propput'], HRESULT, 'RelyOnVML',
              ( ['in'], VARIANT_BOOL, 'prop' )),
    COMMETHOD([dispid(10), 'propget'], HRESULT, 'AllowPNG',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'prop' )),
    COMMETHOD([dispid(10), 'propput'], HRESULT, 'AllowPNG',
              ( ['in'], VARIANT_BOOL, 'prop' )),
    COMMETHOD([dispid(11), 'propget'], HRESULT, 'ScreenSize',
              ( ['out', 'retval'], POINTER(comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoScreenSize), 'prop' )),
    COMMETHOD([dispid(11), 'propput'], HRESULT, 'ScreenSize',
              ( ['in'], comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoScreenSize, 'prop' )),
    COMMETHOD([dispid(12), 'propget'], HRESULT, 'PixelsPerInch',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(12), 'propput'], HRESULT, 'PixelsPerInch',
              ( ['in'], c_int, 'prop' )),
    COMMETHOD([dispid(13), 'propget'], HRESULT, 'Encoding',
              ( ['out', 'retval'], POINTER(comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoEncoding), 'prop' )),
    COMMETHOD([dispid(13), 'propput'], HRESULT, 'Encoding',
              ( ['in'], comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoEncoding, 'prop' )),
    COMMETHOD([dispid(14), 'propget'], HRESULT, 'AlwaysSaveInDefaultEncoding',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'prop' )),
    COMMETHOD([dispid(14), 'propput'], HRESULT, 'AlwaysSaveInDefaultEncoding',
              ( ['in'], VARIANT_BOOL, 'prop' )),
    COMMETHOD([dispid(15), 'propget'], HRESULT, 'Fonts',
              ( ['out', 'retval'], POINTER(POINTER(comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.WebPageFonts)), 'prop' )),
    COMMETHOD([dispid(16), 'propget'], HRESULT, 'FolderSuffix',
              ( ['out', 'retval'], POINTER(BSTR), 'prop' )),
    COMMETHOD([dispid(17), 'propget'], HRESULT, 'TargetBrowser',
              ( ['out', 'retval'], POINTER(comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoTargetBrowser), 'prop' )),
    COMMETHOD([dispid(17), 'propput'], HRESULT, 'TargetBrowser',
              ( ['in'], comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoTargetBrowser, 'prop' )),
    COMMETHOD([dispid(18), 'propget'], HRESULT, 'SaveNewWebPagesAsWebArchives',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'prop' )),
    COMMETHOD([dispid(18), 'propput'], HRESULT, 'SaveNewWebPagesAsWebArchives',
              ( ['in'], VARIANT_BOOL, 'prop' )),
]
################################################################
## code template for DefaultWebOptions implementation
##class DefaultWebOptions_Impl(object):
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Creator(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return prop
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    OptimizeForBrowser = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    BrowserLevel = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    RelyOnCSS = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    OrganizeInFolder = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    UpdateLinksOnSave = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    UseLongFileNames = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    CheckIfOfficeIsHTMLEditor = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    CheckIfWordIsDefaultHTMLEditor = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    RelyOnVML = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    AllowPNG = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    ScreenSize = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    PixelsPerInch = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    Encoding = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    AlwaysSaveInDefaultEncoding = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Fonts(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def FolderSuffix(self):
##        '-no docstring-'
##        #return prop
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    TargetBrowser = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    SaveNewWebPagesAsWebArchives = property(_get, _set, doc = _set.__doc__)
##

Source._methods_ = [
    COMMETHOD([dispid(100), 'propget'], HRESULT, 'Application',
              ( ['out', 'retval'], POINTER(POINTER(Application)), 'prop' )),
    COMMETHOD([dispid(101), 'propget'], HRESULT, 'Creator',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(102), 'propget'], HRESULT, 'Parent',
              ( ['out', 'retval'], POINTER(POINTER(IDispatch)), 'prop' )),
    COMMETHOD([dispid(103), 'propget'], HRESULT, 'Tag',
              ( ['out', 'retval'], POINTER(BSTR), 'prop' )),
    COMMETHOD([dispid(104), 'propget'], HRESULT, 'Field',
              ( ['in'], BSTR, 'Name' ),
              ( ['out', 'retval'], POINTER(BSTR), 'prop' )),
    COMMETHOD([dispid(104), 'propput'], HRESULT, 'Field',
              ( ['in'], BSTR, 'Name' ),
              ( ['in'], BSTR, 'prop' )),
    COMMETHOD([dispid(105), 'propget'], HRESULT, 'XML',
              ( ['out', 'retval'], POINTER(BSTR), 'prop' )),
    COMMETHOD([dispid(107), 'propget'], HRESULT, 'Cited',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'prop' )),
    COMMETHOD([dispid(106)], HRESULT, 'Delete'),
]
################################################################
## code template for Source implementation
##class Source_Impl(object):
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Creator(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Tag(self):
##        '-no docstring-'
##        #return prop
##
##    def _get(self, Name):
##        '-no docstring-'
##        #return prop
##    def _set(self, Name, prop):
##        '-no docstring-'
##    Field = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def XML(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Cited(self):
##        '-no docstring-'
##        #return prop
##
##    def Delete(self):
##        '-no docstring-'
##        #return 
##

DocumentEvents._disp_methods_ = [
    DISPMETHOD([dispid(4)], None, 'New'),
    DISPMETHOD([dispid(5)], None, 'Open'),
    DISPMETHOD([dispid(6)], None, 'Close'),
]
Tables._methods_ = [
    COMMETHOD([dispid(-4), 'nonbrowsable', 'propget'], HRESULT, '_NewEnum',
              ( ['out', 'retval'], POINTER(POINTER(IUnknown)), 'prop' )),
    COMMETHOD([dispid(2), 'propget'], HRESULT, 'Count',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(1000), 'propget'], HRESULT, 'Application',
              ( ['out', 'retval'], POINTER(POINTER(Application)), 'prop' )),
    COMMETHOD([dispid(1001), 'propget'], HRESULT, 'Creator',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(1002), 'propget'], HRESULT, 'Parent',
              ( ['out', 'retval'], POINTER(POINTER(IDispatch)), 'prop' )),
    COMMETHOD([dispid(0)], HRESULT, 'Item',
              ( ['in'], c_int, 'Index' ),
              ( ['out', 'retval'], POINTER(POINTER(Table)), 'prop' )),
    COMMETHOD([dispid(4), 'hidden'], HRESULT, 'AddOld',
              ( ['in'], POINTER(Range), 'Range' ),
              ( ['in'], c_int, 'NumRows' ),
              ( ['in'], c_int, 'NumColumns' ),
              ( ['out', 'retval'], POINTER(POINTER(Table)), 'prop' )),
    COMMETHOD([dispid(200)], HRESULT, 'Add',
              ( ['in'], POINTER(Range), 'Range' ),
              ( ['in'], c_int, 'NumRows' ),
              ( ['in'], c_int, 'NumColumns' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'DefaultTableBehavior' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'AutoFitBehavior' ),
              ( ['out', 'retval'], POINTER(POINTER(Table)), 'prop' )),
    COMMETHOD([dispid(100), 'propget'], HRESULT, 'NestingLevel',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
]
################################################################
## code template for Tables implementation
##class Tables_Impl(object):
##    @property
##    def _NewEnum(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Count(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Creator(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return prop
##
##    def Item(self, Index):
##        '-no docstring-'
##        #return prop
##
##    def AddOld(self, Range, NumRows, NumColumns):
##        '-no docstring-'
##        #return prop
##
##    def Add(self, Range, NumRows, NumColumns, DefaultTableBehavior, AutoFitBehavior):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def NestingLevel(self):
##        '-no docstring-'
##        #return prop
##


# values for enumeration 'WdPasteOptions'
wdKeepSourceFormatting = 0
wdMatchDestinationFormatting = 1
wdKeepTextOnly = 2
wdUseDestinationStyles = 3
WdPasteOptions = c_int # enum
BuildingBlock._methods_ = [
    COMMETHOD([dispid(1000), 'propget'], HRESULT, 'Application',
              ( ['out', 'retval'], POINTER(POINTER(Application)), 'prop' )),
    COMMETHOD([dispid(1001), 'propget'], HRESULT, 'Creator',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(1002), 'propget'], HRESULT, 'Parent',
              ( ['out', 'retval'], POINTER(POINTER(IDispatch)), 'prop' )),
    COMMETHOD([dispid(1), 'propget'], HRESULT, 'Index',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(2), 'propget'], HRESULT, 'Name',
              ( ['out', 'retval'], POINTER(BSTR), 'prop' )),
    COMMETHOD([dispid(2), 'propput'], HRESULT, 'Name',
              ( ['in'], BSTR, 'prop' )),
    COMMETHOD([dispid(3), 'propget'], HRESULT, 'Type',
              ( ['out', 'retval'], POINTER(POINTER(BuildingBlockType)), 'prop' )),
    COMMETHOD([dispid(4), 'propget'], HRESULT, 'Description',
              ( ['out', 'retval'], POINTER(BSTR), 'prop' )),
    COMMETHOD([dispid(4), 'propput'], HRESULT, 'Description',
              ( ['in'], BSTR, 'prop' )),
    COMMETHOD([dispid(5), 'propget'], HRESULT, 'ID',
              ( ['out', 'retval'], POINTER(BSTR), 'prop' )),
    COMMETHOD([dispid(6), 'propget'], HRESULT, 'Category',
              ( ['out', 'retval'], POINTER(POINTER(Category)), 'prop' )),
    COMMETHOD([dispid(0), 'propget'], HRESULT, 'Value',
              ( ['out', 'retval'], POINTER(BSTR), 'prop' )),
    COMMETHOD([dispid(0), 'propput'], HRESULT, 'Value',
              ( ['in'], BSTR, 'prop' )),
    COMMETHOD([dispid(7), 'propget'], HRESULT, 'InsertOptions',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(7), 'propput'], HRESULT, 'InsertOptions',
              ( ['in'], c_int, 'prop' )),
    COMMETHOD([dispid(101)], HRESULT, 'Delete'),
    COMMETHOD([dispid(102)], HRESULT, 'Insert',
              ( ['in'], POINTER(Range), 'Where' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'RichText' ),
              ( ['out', 'retval'], POINTER(POINTER(Range)), 'prop' )),
]
################################################################
## code template for BuildingBlock implementation
##class BuildingBlock_Impl(object):
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Creator(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Index(self):
##        '-no docstring-'
##        #return prop
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    Name = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Type(self):
##        '-no docstring-'
##        #return prop
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    Description = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def ID(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Category(self):
##        '-no docstring-'
##        #return prop
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    Value = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    InsertOptions = property(_get, _set, doc = _set.__doc__)
##
##    def Delete(self):
##        '-no docstring-'
##        #return 
##
##    def Insert(self, Where, RichText):
##        '-no docstring-'
##        #return prop
##

class Conflict(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{6215E4B1-545A-406E-9824-0A5B5AC8AD21}')
    _idlflags_ = ['dual', 'nonextensible', 'oleautomation']
Conflicts._methods_ = [
    COMMETHOD([dispid(1000), 'propget'], HRESULT, 'Application',
              ( ['out', 'retval'], POINTER(POINTER(Application)), 'prop' )),
    COMMETHOD([dispid(1001), 'propget'], HRESULT, 'Creator',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(1002), 'propget'], HRESULT, 'Parent',
              ( ['out', 'retval'], POINTER(POINTER(IDispatch)), 'prop' )),
    COMMETHOD([dispid(-4), 'nonbrowsable', 'propget'], HRESULT, '_NewEnum',
              ( ['out', 'retval'], POINTER(POINTER(IUnknown)), 'prop' )),
    COMMETHOD([dispid(5), 'propget'], HRESULT, 'Count',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(0)], HRESULT, 'Item',
              ( ['in'], c_int, 'Index' ),
              ( ['out', 'retval'], POINTER(POINTER(Conflict)), 'prop' )),
    COMMETHOD([dispid(101)], HRESULT, 'AcceptAll'),
    COMMETHOD([dispid(102)], HRESULT, 'RejectAll'),
]
################################################################
## code template for Conflicts implementation
##class Conflicts_Impl(object):
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Creator(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def _NewEnum(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Count(self):
##        '-no docstring-'
##        #return prop
##
##    def Item(self, Index):
##        '-no docstring-'
##        #return prop
##
##    def AcceptAll(self):
##        '-no docstring-'
##        #return 
##
##    def RejectAll(self):
##        '-no docstring-'
##        #return 
##

class TaskPanes(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{E6AAEC05-E543-4085-BA92-9BF7D2474F5C}')
    _idlflags_ = ['dual', 'nonextensible', 'oleautomation']
TaskPanes._methods_ = [
    COMMETHOD([dispid(-4), 'nonbrowsable', 'propget'], HRESULT, '_NewEnum',
              ( ['out', 'retval'], POINTER(POINTER(IUnknown)), 'prop' )),
    COMMETHOD([dispid(2), 'propget'], HRESULT, 'Count',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(1000), 'propget'], HRESULT, 'Application',
              ( ['out', 'retval'], POINTER(POINTER(Application)), 'prop' )),
    COMMETHOD([dispid(1001), 'propget'], HRESULT, 'Creator',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(1002), 'propget'], HRESULT, 'Parent',
              ( ['out', 'retval'], POINTER(POINTER(IDispatch)), 'prop' )),
    COMMETHOD([dispid(0)], HRESULT, 'Item',
              ( ['in'], WdTaskPanes, 'Index' ),
              ( ['out', 'retval'], POINTER(POINTER(TaskPane)), 'prop' )),
]
################################################################
## code template for TaskPanes implementation
##class TaskPanes_Impl(object):
##    @property
##    def _NewEnum(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Count(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Creator(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return prop
##
##    def Item(self, Index):
##        '-no docstring-'
##        #return prop
##

ConditionalStyle._methods_ = [
    COMMETHOD([dispid(1000), 'propget'], HRESULT, 'Application',
              ( ['out', 'retval'], POINTER(POINTER(Application)), 'prop' )),
    COMMETHOD([dispid(1001), 'propget'], HRESULT, 'Creator',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(100), 'propget'], HRESULT, 'Parent',
              ( ['out', 'retval'], POINTER(POINTER(IDispatch)), 'prop' )),
    COMMETHOD([dispid(1), 'propget'], HRESULT, 'Shading',
              ( ['out', 'retval'], POINTER(POINTER(Shading)), 'prop' )),
    COMMETHOD([dispid(2), 'propget'], HRESULT, 'Borders',
              ( ['out', 'retval'], POINTER(POINTER(Borders)), 'prop' )),
    COMMETHOD([dispid(2), 'propput'], HRESULT, 'Borders',
              ( ['in'], POINTER(Borders), 'prop' )),
    COMMETHOD([dispid(3), 'propget'], HRESULT, 'BottomPadding',
              ( ['out', 'retval'], POINTER(c_float), 'prop' )),
    COMMETHOD([dispid(3), 'propput'], HRESULT, 'BottomPadding',
              ( ['in'], c_float, 'prop' )),
    COMMETHOD([dispid(4), 'propget'], HRESULT, 'TopPadding',
              ( ['out', 'retval'], POINTER(c_float), 'prop' )),
    COMMETHOD([dispid(4), 'propput'], HRESULT, 'TopPadding',
              ( ['in'], c_float, 'prop' )),
    COMMETHOD([dispid(5), 'propget'], HRESULT, 'LeftPadding',
              ( ['out', 'retval'], POINTER(c_float), 'prop' )),
    COMMETHOD([dispid(5), 'propput'], HRESULT, 'LeftPadding',
              ( ['in'], c_float, 'prop' )),
    COMMETHOD([dispid(6), 'propget'], HRESULT, 'RightPadding',
              ( ['out', 'retval'], POINTER(c_float), 'prop' )),
    COMMETHOD([dispid(6), 'propput'], HRESULT, 'RightPadding',
              ( ['in'], c_float, 'prop' )),
    COMMETHOD([dispid(9), 'propget'], HRESULT, 'ParagraphFormat',
              ( ['out', 'retval'], POINTER(POINTER(ParagraphFormat)), 'prop' )),
    COMMETHOD([dispid(9), 'propput'], HRESULT, 'ParagraphFormat',
              ( ['in'], POINTER(ParagraphFormat), 'prop' )),
    COMMETHOD([dispid(10), 'propget'], HRESULT, 'Font',
              ( ['out', 'retval'], POINTER(POINTER(Font)), 'prop' )),
    COMMETHOD([dispid(10), 'propput'], HRESULT, 'Font',
              ( ['in'], POINTER(Font), 'prop' )),
]
################################################################
## code template for ConditionalStyle implementation
##class ConditionalStyle_Impl(object):
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Creator(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Shading(self):
##        '-no docstring-'
##        #return prop
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    Borders = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    BottomPadding = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    TopPadding = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    LeftPadding = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    RightPadding = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    ParagraphFormat = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    Font = property(_get, _set, doc = _set.__doc__)
##

HeadingStyle._methods_ = [
    COMMETHOD([dispid(1000), 'propget'], HRESULT, 'Application',
              ( ['out', 'retval'], POINTER(POINTER(Application)), 'prop' )),
    COMMETHOD([dispid(1001), 'propget'], HRESULT, 'Creator',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(1002), 'propget'], HRESULT, 'Parent',
              ( ['out', 'retval'], POINTER(POINTER(IDispatch)), 'prop' )),
    COMMETHOD([dispid(0), 'propget'], HRESULT, 'Style',
              ( ['out', 'retval'], POINTER(VARIANT), 'prop' )),
    COMMETHOD([dispid(0), 'propput'], HRESULT, 'Style',
              ( ['in'], POINTER(VARIANT), 'prop' )),
    COMMETHOD([dispid(2), 'propget'], HRESULT, 'Level',
              ( ['out', 'retval'], POINTER(c_short), 'prop' )),
    COMMETHOD([dispid(2), 'propput'], HRESULT, 'Level',
              ( ['in'], c_short, 'prop' )),
    COMMETHOD([dispid(100)], HRESULT, 'Delete'),
]
################################################################
## code template for HeadingStyle implementation
##class HeadingStyle_Impl(object):
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Creator(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return prop
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    Style = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    Level = property(_get, _set, doc = _set.__doc__)
##
##    def Delete(self):
##        '-no docstring-'
##        #return 
##

class MailMergeDataSource(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{0002091D-0000-0000-C000-000000000046}')
    _idlflags_ = ['dual', 'nonextensible', 'oleautomation']
class MailMergeFields(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{0002091F-0000-0000-C000-000000000046}')
    _idlflags_ = ['dual', 'nonextensible', 'oleautomation']
MailMerge._methods_ = [
    COMMETHOD([dispid(1000), 'propget'], HRESULT, 'Application',
              ( ['out', 'retval'], POINTER(POINTER(Application)), 'prop' )),
    COMMETHOD([dispid(1001), 'propget'], HRESULT, 'Creator',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(1002), 'propget'], HRESULT, 'Parent',
              ( ['out', 'retval'], POINTER(POINTER(IDispatch)), 'prop' )),
    COMMETHOD([dispid(1), 'propget'], HRESULT, 'MainDocumentType',
              ( ['out', 'retval'], POINTER(WdMailMergeMainDocType), 'prop' )),
    COMMETHOD([dispid(1), 'propput'], HRESULT, 'MainDocumentType',
              ( ['in'], WdMailMergeMainDocType, 'prop' )),
    COMMETHOD([dispid(2), 'propget'], HRESULT, 'State',
              ( ['out', 'retval'], POINTER(WdMailMergeState), 'prop' )),
    COMMETHOD([dispid(3), 'propget'], HRESULT, 'Destination',
              ( ['out', 'retval'], POINTER(WdMailMergeDestination), 'prop' )),
    COMMETHOD([dispid(3), 'propput'], HRESULT, 'Destination',
              ( ['in'], WdMailMergeDestination, 'prop' )),
    COMMETHOD([dispid(4), 'propget'], HRESULT, 'DataSource',
              ( ['out', 'retval'], POINTER(POINTER(MailMergeDataSource)), 'prop' )),
    COMMETHOD([dispid(5), 'propget'], HRESULT, 'Fields',
              ( ['out', 'retval'], POINTER(POINTER(MailMergeFields)), 'prop' )),
    COMMETHOD([dispid(6), 'propget'], HRESULT, 'ViewMailMergeFieldCodes',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(6), 'propput'], HRESULT, 'ViewMailMergeFieldCodes',
              ( ['in'], c_int, 'prop' )),
    COMMETHOD([dispid(7), 'propget'], HRESULT, 'SuppressBlankLines',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'prop' )),
    COMMETHOD([dispid(7), 'propput'], HRESULT, 'SuppressBlankLines',
              ( ['in'], VARIANT_BOOL, 'prop' )),
    COMMETHOD([dispid(8), 'propget'], HRESULT, 'MailAsAttachment',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'prop' )),
    COMMETHOD([dispid(8), 'propput'], HRESULT, 'MailAsAttachment',
              ( ['in'], VARIANT_BOOL, 'prop' )),
    COMMETHOD([dispid(9), 'propget'], HRESULT, 'MailAddressFieldName',
              ( ['out', 'retval'], POINTER(BSTR), 'prop' )),
    COMMETHOD([dispid(9), 'propput'], HRESULT, 'MailAddressFieldName',
              ( ['in'], BSTR, 'prop' )),
    COMMETHOD([dispid(10), 'propget'], HRESULT, 'MailSubject',
              ( ['out', 'retval'], POINTER(BSTR), 'prop' )),
    COMMETHOD([dispid(10), 'propput'], HRESULT, 'MailSubject',
              ( ['in'], BSTR, 'prop' )),
    COMMETHOD([dispid(101)], HRESULT, 'CreateDataSource',
              ( ['in', 'optional'], POINTER(VARIANT), 'Name' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'PasswordDocument' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'WritePasswordDocument' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'HeaderRecord' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'MSQuery' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'SQLStatement' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'SQLStatement1' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'Connection' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'LinkToSource' )),
    COMMETHOD([dispid(102)], HRESULT, 'CreateHeaderSource',
              ( ['in'], BSTR, 'Name' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'PasswordDocument' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'WritePasswordDocument' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'HeaderRecord' )),
    COMMETHOD([dispid(103), 'hidden'], HRESULT, 'OpenDataSource2000',
              ( ['in'], BSTR, 'Name' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'Format' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'ConfirmConversions' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'ReadOnly' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'LinkToSource' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'AddToRecentFiles' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'PasswordDocument' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'PasswordTemplate' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'Revert' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'WritePasswordDocument' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'WritePasswordTemplate' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'Connection' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'SQLStatement' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'SQLStatement1' )),
    COMMETHOD([dispid(104), 'hidden'], HRESULT, 'OpenHeaderSource2000',
              ( ['in'], BSTR, 'Name' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'Format' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'ConfirmConversions' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'ReadOnly' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'AddToRecentFiles' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'PasswordDocument' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'PasswordTemplate' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'Revert' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'WritePasswordDocument' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'WritePasswordTemplate' )),
    COMMETHOD([dispid(105)], HRESULT, 'Execute',
              ( ['in', 'optional'], POINTER(VARIANT), 'Pause' )),
    COMMETHOD([dispid(106)], HRESULT, 'Check'),
    COMMETHOD([dispid(107)], HRESULT, 'EditDataSource'),
    COMMETHOD([dispid(108)], HRESULT, 'EditHeaderSource'),
    COMMETHOD([dispid(109)], HRESULT, 'EditMainDocument'),
    COMMETHOD([dispid(111), 'hidden'], HRESULT, 'UseAddressBook',
              ( ['in'], BSTR, 'Type' )),
    COMMETHOD([dispid(11), 'propget'], HRESULT, 'HighlightMergeFields',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'prop' )),
    COMMETHOD([dispid(11), 'propput'], HRESULT, 'HighlightMergeFields',
              ( ['in'], VARIANT_BOOL, 'prop' )),
    COMMETHOD([dispid(12), 'propget'], HRESULT, 'MailFormat',
              ( ['out', 'retval'], POINTER(WdMailMergeMailFormat), 'prop' )),
    COMMETHOD([dispid(12), 'propput'], HRESULT, 'MailFormat',
              ( ['in'], WdMailMergeMailFormat, 'prop' )),
    COMMETHOD([dispid(13), 'propget'], HRESULT, 'ShowSendToCustom',
              ( ['out', 'retval'], POINTER(BSTR), 'prop' )),
    COMMETHOD([dispid(13), 'propput'], HRESULT, 'ShowSendToCustom',
              ( ['in'], BSTR, 'prop' )),
    COMMETHOD([dispid(14), 'propget'], HRESULT, 'WizardState',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(14), 'propput'], HRESULT, 'WizardState',
              ( ['in'], c_int, 'prop' )),
    COMMETHOD([dispid(112)], HRESULT, 'OpenDataSource',
              ( ['in'], BSTR, 'Name' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'Format' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'ConfirmConversions' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'ReadOnly' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'LinkToSource' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'AddToRecentFiles' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'PasswordDocument' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'PasswordTemplate' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'Revert' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'WritePasswordDocument' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'WritePasswordTemplate' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'Connection' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'SQLStatement' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'SQLStatement1' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'OpenExclusive' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'SubType' )),
    COMMETHOD([dispid(113)], HRESULT, 'OpenHeaderSource',
              ( ['in'], BSTR, 'Name' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'Format' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'ConfirmConversions' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'ReadOnly' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'AddToRecentFiles' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'PasswordDocument' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'PasswordTemplate' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'Revert' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'WritePasswordDocument' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'WritePasswordTemplate' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'OpenExclusive' )),
    COMMETHOD([dispid(114)], HRESULT, 'ShowWizard',
              ( ['in'], POINTER(VARIANT), 'InitialState' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'ShowDocumentStep' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'ShowTemplateStep' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'ShowDataStep' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'ShowWriteStep' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'ShowPreviewStep' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'ShowMergeStep' )),
]
################################################################
## code template for MailMerge implementation
##class MailMerge_Impl(object):
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Creator(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return prop
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    MainDocumentType = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def State(self):
##        '-no docstring-'
##        #return prop
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    Destination = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def DataSource(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Fields(self):
##        '-no docstring-'
##        #return prop
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    ViewMailMergeFieldCodes = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    SuppressBlankLines = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    MailAsAttachment = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    MailAddressFieldName = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    MailSubject = property(_get, _set, doc = _set.__doc__)
##
##    def CreateDataSource(self, Name, PasswordDocument, WritePasswordDocument, HeaderRecord, MSQuery, SQLStatement, SQLStatement1, Connection, LinkToSource):
##        '-no docstring-'
##        #return 
##
##    def CreateHeaderSource(self, Name, PasswordDocument, WritePasswordDocument, HeaderRecord):
##        '-no docstring-'
##        #return 
##
##    def OpenDataSource2000(self, Name, Format, ConfirmConversions, ReadOnly, LinkToSource, AddToRecentFiles, PasswordDocument, PasswordTemplate, Revert, WritePasswordDocument, WritePasswordTemplate, Connection, SQLStatement, SQLStatement1):
##        '-no docstring-'
##        #return 
##
##    def OpenHeaderSource2000(self, Name, Format, ConfirmConversions, ReadOnly, AddToRecentFiles, PasswordDocument, PasswordTemplate, Revert, WritePasswordDocument, WritePasswordTemplate):
##        '-no docstring-'
##        #return 
##
##    def Execute(self, Pause):
##        '-no docstring-'
##        #return 
##
##    def Check(self):
##        '-no docstring-'
##        #return 
##
##    def EditDataSource(self):
##        '-no docstring-'
##        #return 
##
##    def EditHeaderSource(self):
##        '-no docstring-'
##        #return 
##
##    def EditMainDocument(self):
##        '-no docstring-'
##        #return 
##
##    def UseAddressBook(self, Type):
##        '-no docstring-'
##        #return 
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    HighlightMergeFields = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    MailFormat = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    ShowSendToCustom = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    WizardState = property(_get, _set, doc = _set.__doc__)
##
##    def OpenDataSource(self, Name, Format, ConfirmConversions, ReadOnly, LinkToSource, AddToRecentFiles, PasswordDocument, PasswordTemplate, Revert, WritePasswordDocument, WritePasswordTemplate, Connection, SQLStatement, SQLStatement1, OpenExclusive, SubType):
##        '-no docstring-'
##        #return 
##
##    def OpenHeaderSource(self, Name, Format, ConfirmConversions, ReadOnly, AddToRecentFiles, PasswordDocument, PasswordTemplate, Revert, WritePasswordDocument, WritePasswordTemplate, OpenExclusive):
##        '-no docstring-'
##        #return 
##
##    def ShowWizard(self, InitialState, ShowDocumentStep, ShowTemplateStep, ShowDataStep, ShowWriteStep, ShowPreviewStep, ShowMergeStep):
##        '-no docstring-'
##        #return 
##

WebOptions._methods_ = [
    COMMETHOD([dispid(1000), 'propget'], HRESULT, 'Application',
              ( ['out', 'retval'], POINTER(POINTER(Application)), 'prop' )),
    COMMETHOD([dispid(1001), 'propget'], HRESULT, 'Creator',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(1002), 'propget'], HRESULT, 'Parent',
              ( ['out', 'retval'], POINTER(POINTER(IDispatch)), 'prop' )),
    COMMETHOD([dispid(1), 'propget'], HRESULT, 'OptimizeForBrowser',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'prop' )),
    COMMETHOD([dispid(1), 'propput'], HRESULT, 'OptimizeForBrowser',
              ( ['in'], VARIANT_BOOL, 'prop' )),
    COMMETHOD([dispid(2), 'propget'], HRESULT, 'BrowserLevel',
              ( ['out', 'retval'], POINTER(WdBrowserLevel), 'prop' )),
    COMMETHOD([dispid(2), 'propput'], HRESULT, 'BrowserLevel',
              ( ['in'], WdBrowserLevel, 'prop' )),
    COMMETHOD([dispid(3), 'propget'], HRESULT, 'RelyOnCSS',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'prop' )),
    COMMETHOD([dispid(3), 'propput'], HRESULT, 'RelyOnCSS',
              ( ['in'], VARIANT_BOOL, 'prop' )),
    COMMETHOD([dispid(4), 'propget'], HRESULT, 'OrganizeInFolder',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'prop' )),
    COMMETHOD([dispid(4), 'propput'], HRESULT, 'OrganizeInFolder',
              ( ['in'], VARIANT_BOOL, 'prop' )),
    COMMETHOD([dispid(5), 'propget'], HRESULT, 'UseLongFileNames',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'prop' )),
    COMMETHOD([dispid(5), 'propput'], HRESULT, 'UseLongFileNames',
              ( ['in'], VARIANT_BOOL, 'prop' )),
    COMMETHOD([dispid(6), 'propget'], HRESULT, 'RelyOnVML',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'prop' )),
    COMMETHOD([dispid(6), 'propput'], HRESULT, 'RelyOnVML',
              ( ['in'], VARIANT_BOOL, 'prop' )),
    COMMETHOD([dispid(7), 'propget'], HRESULT, 'AllowPNG',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'prop' )),
    COMMETHOD([dispid(7), 'propput'], HRESULT, 'AllowPNG',
              ( ['in'], VARIANT_BOOL, 'prop' )),
    COMMETHOD([dispid(8), 'propget'], HRESULT, 'ScreenSize',
              ( ['out', 'retval'], POINTER(comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoScreenSize), 'prop' )),
    COMMETHOD([dispid(8), 'propput'], HRESULT, 'ScreenSize',
              ( ['in'], comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoScreenSize, 'prop' )),
    COMMETHOD([dispid(9), 'propget'], HRESULT, 'PixelsPerInch',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(9), 'propput'], HRESULT, 'PixelsPerInch',
              ( ['in'], c_int, 'prop' )),
    COMMETHOD([dispid(10), 'propget'], HRESULT, 'Encoding',
              ( ['out', 'retval'], POINTER(comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoEncoding), 'prop' )),
    COMMETHOD([dispid(10), 'propput'], HRESULT, 'Encoding',
              ( ['in'], comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoEncoding, 'prop' )),
    COMMETHOD([dispid(11), 'propget'], HRESULT, 'FolderSuffix',
              ( ['out', 'retval'], POINTER(BSTR), 'prop' )),
    COMMETHOD([dispid(101)], HRESULT, 'UseDefaultFolderSuffix'),
    COMMETHOD([dispid(12), 'propget'], HRESULT, 'TargetBrowser',
              ( ['out', 'retval'], POINTER(comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoTargetBrowser), 'prop' )),
    COMMETHOD([dispid(12), 'propput'], HRESULT, 'TargetBrowser',
              ( ['in'], comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoTargetBrowser, 'prop' )),
]
################################################################
## code template for WebOptions implementation
##class WebOptions_Impl(object):
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Creator(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return prop
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    OptimizeForBrowser = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    BrowserLevel = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    RelyOnCSS = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    OrganizeInFolder = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    UseLongFileNames = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    RelyOnVML = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    AllowPNG = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    ScreenSize = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    PixelsPerInch = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    Encoding = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def FolderSuffix(self):
##        '-no docstring-'
##        #return prop
##
##    def UseDefaultFolderSuffix(self):
##        '-no docstring-'
##        #return 
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    TargetBrowser = property(_get, _set, doc = _set.__doc__)
##


# values for enumeration 'WdMailMergeComparison'
wdMergeIfEqual = 0
wdMergeIfNotEqual = 1
wdMergeIfLessThan = 2
wdMergeIfGreaterThan = 3
wdMergeIfLessThanOrEqual = 4
wdMergeIfGreaterThanOrEqual = 5
wdMergeIfIsBlank = 6
wdMergeIfIsNotBlank = 7
WdMailMergeComparison = c_int # enum
MailMergeFields._methods_ = [
    COMMETHOD([dispid(1000), 'propget'], HRESULT, 'Application',
              ( ['out', 'retval'], POINTER(POINTER(Application)), 'prop' )),
    COMMETHOD([dispid(1001), 'propget'], HRESULT, 'Creator',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(1002), 'propget'], HRESULT, 'Parent',
              ( ['out', 'retval'], POINTER(POINTER(IDispatch)), 'prop' )),
    COMMETHOD([dispid(-4), 'nonbrowsable', 'propget'], HRESULT, '_NewEnum',
              ( ['out', 'retval'], POINTER(POINTER(IUnknown)), 'prop' )),
    COMMETHOD([dispid(1), 'propget'], HRESULT, 'Count',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(0)], HRESULT, 'Item',
              ( ['in'], c_int, 'Index' ),
              ( ['out', 'retval'], POINTER(POINTER(MailMergeField)), 'prop' )),
    COMMETHOD([dispid(101)], HRESULT, 'Add',
              ( ['in'], POINTER(Range), 'Range' ),
              ( ['in'], BSTR, 'Name' ),
              ( ['out', 'retval'], POINTER(POINTER(MailMergeField)), 'prop' )),
    COMMETHOD([dispid(102)], HRESULT, 'AddAsk',
              ( ['in'], POINTER(Range), 'Range' ),
              ( ['in'], BSTR, 'Name' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'Prompt' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'DefaultAskText' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'AskOnce' ),
              ( ['out', 'retval'], POINTER(POINTER(MailMergeField)), 'prop' )),
    COMMETHOD([dispid(103)], HRESULT, 'AddFillIn',
              ( ['in'], POINTER(Range), 'Range' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'Prompt' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'DefaultFillInText' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'AskOnce' ),
              ( ['out', 'retval'], POINTER(POINTER(MailMergeField)), 'prop' )),
    COMMETHOD([dispid(104)], HRESULT, 'AddIf',
              ( ['in'], POINTER(Range), 'Range' ),
              ( ['in'], BSTR, 'MergeField' ),
              ( ['in'], WdMailMergeComparison, 'Comparison' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'CompareTo' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'TrueAutoText' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'TrueText' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'FalseAutoText' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'FalseText' ),
              ( ['out', 'retval'], POINTER(POINTER(MailMergeField)), 'prop' )),
    COMMETHOD([dispid(105)], HRESULT, 'AddMergeRec',
              ( ['in'], POINTER(Range), 'Range' ),
              ( ['out', 'retval'], POINTER(POINTER(MailMergeField)), 'prop' )),
    COMMETHOD([dispid(106)], HRESULT, 'AddMergeSeq',
              ( ['in'], POINTER(Range), 'Range' ),
              ( ['out', 'retval'], POINTER(POINTER(MailMergeField)), 'prop' )),
    COMMETHOD([dispid(107)], HRESULT, 'AddNext',
              ( ['in'], POINTER(Range), 'Range' ),
              ( ['out', 'retval'], POINTER(POINTER(MailMergeField)), 'prop' )),
    COMMETHOD([dispid(108)], HRESULT, 'AddNextIf',
              ( ['in'], POINTER(Range), 'Range' ),
              ( ['in'], BSTR, 'MergeField' ),
              ( ['in'], WdMailMergeComparison, 'Comparison' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'CompareTo' ),
              ( ['out', 'retval'], POINTER(POINTER(MailMergeField)), 'prop' )),
    COMMETHOD([dispid(109)], HRESULT, 'AddSet',
              ( ['in'], POINTER(Range), 'Range' ),
              ( ['in'], BSTR, 'Name' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'ValueText' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'ValueAutoText' ),
              ( ['out', 'retval'], POINTER(POINTER(MailMergeField)), 'prop' )),
    COMMETHOD([dispid(110)], HRESULT, 'AddSkipIf',
              ( ['in'], POINTER(Range), 'Range' ),
              ( ['in'], BSTR, 'MergeField' ),
              ( ['in'], WdMailMergeComparison, 'Comparison' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'CompareTo' ),
              ( ['out', 'retval'], POINTER(POINTER(MailMergeField)), 'prop' )),
]
################################################################
## code template for MailMergeFields implementation
##class MailMergeFields_Impl(object):
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Creator(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def _NewEnum(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Count(self):
##        '-no docstring-'
##        #return prop
##
##    def Item(self, Index):
##        '-no docstring-'
##        #return prop
##
##    def Add(self, Range, Name):
##        '-no docstring-'
##        #return prop
##
##    def AddAsk(self, Range, Name, Prompt, DefaultAskText, AskOnce):
##        '-no docstring-'
##        #return prop
##
##    def AddFillIn(self, Range, Prompt, DefaultFillInText, AskOnce):
##        '-no docstring-'
##        #return prop
##
##    def AddIf(self, Range, MergeField, Comparison, CompareTo, TrueAutoText, TrueText, FalseAutoText, FalseText):
##        '-no docstring-'
##        #return prop
##
##    def AddMergeRec(self, Range):
##        '-no docstring-'
##        #return prop
##
##    def AddMergeSeq(self, Range):
##        '-no docstring-'
##        #return prop
##
##    def AddNext(self, Range):
##        '-no docstring-'
##        #return prop
##
##    def AddNextIf(self, Range, MergeField, Comparison, CompareTo):
##        '-no docstring-'
##        #return prop
##
##    def AddSet(self, Range, Name, ValueText, ValueAutoText):
##        '-no docstring-'
##        #return prop
##
##    def AddSkipIf(self, Range, MergeField, Comparison, CompareTo):
##        '-no docstring-'
##        #return prop
##

CoAuthor._methods_ = [
    COMMETHOD([dispid(1000), 'propget'], HRESULT, 'Application',
              ( ['out', 'retval'], POINTER(POINTER(Application)), 'prop' )),
    COMMETHOD([dispid(1001), 'propget'], HRESULT, 'Creator',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(1002), 'propget'], HRESULT, 'Parent',
              ( ['out', 'retval'], POINTER(POINTER(IDispatch)), 'prop' )),
    COMMETHOD([dispid(1), 'propget'], HRESULT, 'ID',
              ( ['out', 'retval'], POINTER(BSTR), 'prop' )),
    COMMETHOD([dispid(0), 'propget'], HRESULT, 'Name',
              ( ['out', 'retval'], POINTER(BSTR), 'prop' )),
    COMMETHOD([dispid(3), 'propget'], HRESULT, 'IsMe',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'prop' )),
    COMMETHOD([dispid(4), 'propget'], HRESULT, 'Locks',
              ( ['out', 'retval'], POINTER(POINTER(CoAuthLocks)), 'prop' )),
    COMMETHOD([dispid(5), 'propget'], HRESULT, 'EmailAddress',
              ( ['out', 'retval'], POINTER(BSTR), 'prop' )),
]
################################################################
## code template for CoAuthor implementation
##class CoAuthor_Impl(object):
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Creator(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def ID(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Name(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def IsMe(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Locks(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def EmailAddress(self):
##        '-no docstring-'
##        #return prop
##

Corners._methods_ = [
    COMMETHOD([dispid(150), 'hidden', 'propget'], HRESULT, 'Parent',
              ( ['out', 'retval'], POINTER(POINTER(IDispatch)), 'prop' )),
    COMMETHOD([dispid(110), 'hidden', 'propget'], HRESULT, 'Name',
              ( ['out', 'retval'], POINTER(BSTR), 'prop' )),
    COMMETHOD([dispid(235), 'hidden'], HRESULT, 'Select',
              ( ['out', 'retval'], POINTER(VARIANT), 'prop' )),
    COMMETHOD([dispid(148), 'propget'], HRESULT, 'Application',
              ( ['out', 'retval'], POINTER(POINTER(IDispatch)), 'prop' )),
    COMMETHOD([dispid(149), 'propget'], HRESULT, 'Creator',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
]
################################################################
## code template for Corners implementation
##class Corners_Impl(object):
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Name(self):
##        '-no docstring-'
##        #return prop
##
##    def Select(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Creator(self):
##        '-no docstring-'
##        #return prop
##

OMathMatRows._methods_ = [
    COMMETHOD([dispid(-4), 'nonbrowsable', 'propget'], HRESULT, '_NewEnum',
              ( ['out', 'retval'], POINTER(POINTER(IUnknown)), 'prop' )),
    COMMETHOD([dispid(100), 'propget'], HRESULT, 'Application',
              ( ['out', 'retval'], POINTER(POINTER(Application)), 'prop' )),
    COMMETHOD([dispid(101), 'propget'], HRESULT, 'Creator',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(102), 'propget'], HRESULT, 'Parent',
              ( ['out', 'retval'], POINTER(POINTER(IDispatch)), 'prop' )),
    COMMETHOD([dispid(103), 'propget'], HRESULT, 'Count',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(0)], HRESULT, 'Item',
              ( ['in'], c_int, 'Index' ),
              ( ['out', 'retval'], POINTER(POINTER(OMathMatRow)), 'prop' )),
    COMMETHOD([dispid(200)], HRESULT, 'Add',
              ( ['in', 'optional'], POINTER(VARIANT), 'BeforeRow' ),
              ( ['out', 'retval'], POINTER(POINTER(OMathMatRow)), 'prop' )),
]
################################################################
## code template for OMathMatRows implementation
##class OMathMatRows_Impl(object):
##    @property
##    def _NewEnum(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Creator(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Count(self):
##        '-no docstring-'
##        #return prop
##
##    def Item(self, Index):
##        '-no docstring-'
##        #return prop
##
##    def Add(self, BeforeRow):
##        '-no docstring-'
##        #return prop
##

class MailMessage(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{000209BA-0000-0000-C000-000000000046}')
    _idlflags_ = ['dual', 'nonextensible', 'oleautomation']
MailMessage._methods_ = [
    COMMETHOD([dispid(1000), 'propget'], HRESULT, 'Application',
              ( ['out', 'retval'], POINTER(POINTER(Application)), 'prop' )),
    COMMETHOD([dispid(1001), 'propget'], HRESULT, 'Creator',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(1002), 'propget'], HRESULT, 'Parent',
              ( ['out', 'retval'], POINTER(POINTER(IDispatch)), 'prop' )),
    COMMETHOD([dispid(334)], HRESULT, 'CheckName'),
    COMMETHOD([dispid(335)], HRESULT, 'Delete'),
    COMMETHOD([dispid(336)], HRESULT, 'DisplayMoveDialog'),
    COMMETHOD([dispid(337)], HRESULT, 'DisplayProperties'),
    COMMETHOD([dispid(338)], HRESULT, 'DisplaySelectNamesDialog'),
    COMMETHOD([dispid(339)], HRESULT, 'Forward'),
    COMMETHOD([dispid(340)], HRESULT, 'GoToNext'),
    COMMETHOD([dispid(341)], HRESULT, 'GoToPrevious'),
    COMMETHOD([dispid(342)], HRESULT, 'Reply'),
    COMMETHOD([dispid(343)], HRESULT, 'ReplyAll'),
    COMMETHOD([dispid(344)], HRESULT, 'ToggleHeader'),
]
################################################################
## code template for MailMessage implementation
##class MailMessage_Impl(object):
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Creator(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return prop
##
##    def CheckName(self):
##        '-no docstring-'
##        #return 
##
##    def Delete(self):
##        '-no docstring-'
##        #return 
##
##    def DisplayMoveDialog(self):
##        '-no docstring-'
##        #return 
##
##    def DisplayProperties(self):
##        '-no docstring-'
##        #return 
##
##    def DisplaySelectNamesDialog(self):
##        '-no docstring-'
##        #return 
##
##    def Forward(self):
##        '-no docstring-'
##        #return 
##
##    def GoToNext(self):
##        '-no docstring-'
##        #return 
##
##    def GoToPrevious(self):
##        '-no docstring-'
##        #return 
##
##    def Reply(self):
##        '-no docstring-'
##        #return 
##
##    def ReplyAll(self):
##        '-no docstring-'
##        #return 
##
##    def ToggleHeader(self):
##        '-no docstring-'
##        #return 
##

DropDown._methods_ = [
    COMMETHOD([dispid(1000), 'propget'], HRESULT, 'Application',
              ( ['out', 'retval'], POINTER(POINTER(Application)), 'prop' )),
    COMMETHOD([dispid(1001), 'propget'], HRESULT, 'Creator',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(1002), 'propget'], HRESULT, 'Parent',
              ( ['out', 'retval'], POINTER(POINTER(IDispatch)), 'prop' )),
    COMMETHOD([dispid(0), 'propget'], HRESULT, 'Valid',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'prop' )),
    COMMETHOD([dispid(1), 'propget'], HRESULT, 'Default',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(1), 'propput'], HRESULT, 'Default',
              ( ['in'], c_int, 'prop' )),
    COMMETHOD([dispid(2), 'propget'], HRESULT, 'Value',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(2), 'propput'], HRESULT, 'Value',
              ( ['in'], c_int, 'prop' )),
    COMMETHOD([dispid(3), 'propget'], HRESULT, 'ListEntries',
              ( ['out', 'retval'], POINTER(POINTER(ListEntries)), 'prop' )),
]
################################################################
## code template for DropDown implementation
##class DropDown_Impl(object):
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Creator(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Valid(self):
##        '-no docstring-'
##        #return prop
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    Default = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    Value = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def ListEntries(self):
##        '-no docstring-'
##        #return prop
##

class SpellingSuggestion(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{000209AB-0000-0000-C000-000000000046}')
    _idlflags_ = ['dual', 'nonextensible', 'oleautomation']
SpellingSuggestions._methods_ = [
    COMMETHOD([dispid(1000), 'propget'], HRESULT, 'Application',
              ( ['out', 'retval'], POINTER(POINTER(Application)), 'prop' )),
    COMMETHOD([dispid(1001), 'propget'], HRESULT, 'Creator',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(1002), 'propget'], HRESULT, 'Parent',
              ( ['out', 'retval'], POINTER(POINTER(IDispatch)), 'prop' )),
    COMMETHOD([dispid(-4), 'nonbrowsable', 'propget'], HRESULT, '_NewEnum',
              ( ['out', 'retval'], POINTER(POINTER(IUnknown)), 'prop' )),
    COMMETHOD([dispid(1), 'propget'], HRESULT, 'Count',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(2), 'propget'], HRESULT, 'SpellingErrorType',
              ( ['out', 'retval'], POINTER(WdSpellingErrorType), 'prop' )),
    COMMETHOD([dispid(0)], HRESULT, 'Item',
              ( ['in'], c_int, 'Index' ),
              ( ['out', 'retval'], POINTER(POINTER(SpellingSuggestion)), 'prop' )),
]
################################################################
## code template for SpellingSuggestions implementation
##class SpellingSuggestions_Impl(object):
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Creator(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def _NewEnum(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Count(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def SpellingErrorType(self):
##        '-no docstring-'
##        #return prop
##
##    def Item(self, Index):
##        '-no docstring-'
##        #return prop
##

class RecentFile(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{00020964-0000-0000-C000-000000000046}')
    _idlflags_ = ['dual', 'nonextensible', 'oleautomation']
RecentFile._methods_ = [
    COMMETHOD([dispid(1000), 'propget'], HRESULT, 'Application',
              ( ['out', 'retval'], POINTER(POINTER(Application)), 'prop' )),
    COMMETHOD([dispid(1001), 'propget'], HRESULT, 'Creator',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(1002), 'propget'], HRESULT, 'Parent',
              ( ['out', 'retval'], POINTER(POINTER(IDispatch)), 'prop' )),
    COMMETHOD([dispid(0), 'propget'], HRESULT, 'Name',
              ( ['out', 'retval'], POINTER(BSTR), 'prop' )),
    COMMETHOD([dispid(1), 'propget'], HRESULT, 'Index',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(2), 'propget'], HRESULT, 'ReadOnly',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'prop' )),
    COMMETHOD([dispid(2), 'propput'], HRESULT, 'ReadOnly',
              ( ['in'], VARIANT_BOOL, 'prop' )),
    COMMETHOD([dispid(3), 'propget'], HRESULT, 'Path',
              ( ['out', 'retval'], POINTER(BSTR), 'prop' )),
    COMMETHOD([dispid(4)], HRESULT, 'Open',
              ( ['out', 'retval'], POINTER(POINTER(Document)), 'prop' )),
    COMMETHOD([dispid(5)], HRESULT, 'Delete'),
]
################################################################
## code template for RecentFile implementation
##class RecentFile_Impl(object):
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Creator(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Name(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Index(self):
##        '-no docstring-'
##        #return prop
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    ReadOnly = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Path(self):
##        '-no docstring-'
##        #return prop
##
##    def Open(self):
##        '-no docstring-'
##        #return prop
##
##    def Delete(self):
##        '-no docstring-'
##        #return 
##


# values for enumeration 'WdTextFormFieldType'
wdRegularText = 0
wdNumberText = 1
wdDateText = 2
wdCurrentDateText = 3
wdCurrentTimeText = 4
wdCalculationText = 5
WdTextFormFieldType = c_int # enum
Point._methods_ = [
    COMMETHOD([dispid(150), 'propget'], HRESULT, 'Parent',
              ( ['out', 'retval'], POINTER(POINTER(IDispatch)), 'prop' )),
    COMMETHOD([dispid(128), 'hidden', 'propget'], HRESULT, 'Border',
              ( ['out', 'retval'], POINTER(POINTER(ChartBorder)), 'prop' )),
    COMMETHOD([dispid(112)], HRESULT, 'ClearFormats',
              ( ['out', 'retval'], POINTER(VARIANT), 'prop' )),
    COMMETHOD([dispid(551)], HRESULT, 'Copy',
              ( ['out', 'retval'], POINTER(VARIANT), 'prop' )),
    COMMETHOD([dispid(158), 'propget'], HRESULT, 'DataLabel',
              ( ['out', 'retval'], POINTER(POINTER(DataLabel)), 'prop' )),
    COMMETHOD([dispid(117)], HRESULT, 'Delete',
              ( ['out', 'retval'], POINTER(VARIANT), 'prop' )),
    COMMETHOD([dispid(182), 'propget'], HRESULT, 'Explosion',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(182), 'propput'], HRESULT, 'Explosion',
              ( ['in'], c_int, 'prop' )),
    COMMETHOD([dispid(77), 'propget'], HRESULT, 'HasDataLabel',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'prop' )),
    COMMETHOD([dispid(77), 'propput'], HRESULT, 'HasDataLabel',
              ( ['in'], VARIANT_BOOL, 'prop' )),
    COMMETHOD([dispid(129), 'hidden', 'propget'], HRESULT, 'Interior',
              ( ['out', 'retval'], POINTER(POINTER(Interior)), 'prop' )),
    COMMETHOD([dispid(132), 'propget'], HRESULT, 'InvertIfNegative',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'prop' )),
    COMMETHOD([dispid(132), 'propput'], HRESULT, 'InvertIfNegative',
              ( ['in'], VARIANT_BOOL, 'prop' )),
    COMMETHOD([dispid(73), 'propget'], HRESULT, 'MarkerBackgroundColor',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(73), 'propput'], HRESULT, 'MarkerBackgroundColor',
              ( ['in'], c_int, 'prop' )),
    COMMETHOD([dispid(74), 'propget'], HRESULT, 'MarkerBackgroundColorIndex',
              ( ['out', 'retval'], POINTER(XlColorIndex), 'prop' )),
    COMMETHOD([dispid(74), 'propput'], HRESULT, 'MarkerBackgroundColorIndex',
              ( ['in'], XlColorIndex, 'prop' )),
    COMMETHOD([dispid(75), 'propget'], HRESULT, 'MarkerForegroundColor',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(75), 'propput'], HRESULT, 'MarkerForegroundColor',
              ( ['in'], c_int, 'prop' )),
    COMMETHOD([dispid(76), 'propget'], HRESULT, 'MarkerForegroundColorIndex',
              ( ['out', 'retval'], POINTER(XlColorIndex), 'prop' )),
    COMMETHOD([dispid(76), 'propput'], HRESULT, 'MarkerForegroundColorIndex',
              ( ['in'], XlColorIndex, 'prop' )),
    COMMETHOD([dispid(231), 'propget'], HRESULT, 'MarkerSize',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(231), 'propput'], HRESULT, 'MarkerSize',
              ( ['in'], c_int, 'prop' )),
    COMMETHOD([dispid(72), 'propget'], HRESULT, 'MarkerStyle',
              ( ['out', 'retval'], POINTER(XlMarkerStyle), 'prop' )),
    COMMETHOD([dispid(72), 'propput'], HRESULT, 'MarkerStyle',
              ( ['in'], XlMarkerStyle, 'prop' )),
    COMMETHOD([dispid(211)], HRESULT, 'Paste',
              ( ['out', 'retval'], POINTER(VARIANT), 'prop' )),
    COMMETHOD([dispid(161), 'propget'], HRESULT, 'PictureType',
              ( ['out', 'retval'], POINTER(XlChartPictureType), 'prop' )),
    COMMETHOD([dispid(161), 'propput'], HRESULT, 'PictureType',
              ( ['in'], XlChartPictureType, 'prop' )),
    COMMETHOD([dispid(162), 'hidden', 'propget'], HRESULT, 'PictureUnit',
              ( ['out', 'retval'], POINTER(c_double), 'prop' )),
    COMMETHOD([dispid(162), 'hidden', 'propput'], HRESULT, 'PictureUnit',
              ( ['in'], c_double, 'prop' )),
    COMMETHOD([dispid(235)], HRESULT, 'Select',
              ( ['out', 'retval'], POINTER(VARIANT), 'prop' )),
    COMMETHOD([dispid(1659), 'propget'], HRESULT, 'ApplyPictToSides',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'prop' )),
    COMMETHOD([dispid(1659), 'propput'], HRESULT, 'ApplyPictToSides',
              ( ['in'], VARIANT_BOOL, 'prop' )),
    COMMETHOD([dispid(1660), 'propget'], HRESULT, 'ApplyPictToFront',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'prop' )),
    COMMETHOD([dispid(1660), 'propput'], HRESULT, 'ApplyPictToFront',
              ( ['in'], VARIANT_BOOL, 'prop' )),
    COMMETHOD([dispid(1661), 'propget'], HRESULT, 'ApplyPictToEnd',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'prop' )),
    COMMETHOD([dispid(1661), 'propput'], HRESULT, 'ApplyPictToEnd',
              ( ['in'], VARIANT_BOOL, 'prop' )),
    COMMETHOD([dispid(103), 'propget'], HRESULT, 'Shadow',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'prop' )),
    COMMETHOD([dispid(103), 'propput'], HRESULT, 'Shadow',
              ( ['in'], VARIANT_BOOL, 'prop' )),
    COMMETHOD([dispid(1662), 'propget'], HRESULT, 'SecondaryPlot',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'prop' )),
    COMMETHOD([dispid(1662), 'propput'], HRESULT, 'SecondaryPlot',
              ( ['in'], VARIANT_BOOL, 'prop' )),
    COMMETHOD([dispid(1663), 'hidden', 'propget'], HRESULT, 'Fill',
              ( ['out', 'retval'], POINTER(POINTER(ChartFillFormat)), 'prop' )),
    COMMETHOD([dispid(1922)], HRESULT, 'ApplyDataLabels',
              ( ['in', 'optional'], XlDataLabelsType, 'Type', 2 ),
              ( ['in', 'optional'], VARIANT, 'LegendKey' ),
              ( ['in', 'optional'], VARIANT, 'AutoText' ),
              ( ['in', 'optional'], VARIANT, 'HasLeaderLines' ),
              ( ['in', 'optional'], VARIANT, 'ShowSeriesName' ),
              ( ['in', 'optional'], VARIANT, 'ShowCategoryName' ),
              ( ['in', 'optional'], VARIANT, 'ShowValue' ),
              ( ['in', 'optional'], VARIANT, 'ShowPercentage' ),
              ( ['in', 'optional'], VARIANT, 'ShowBubbleSize' ),
              ( ['in', 'optional'], VARIANT, 'Separator' ),
              ( ['out', 'retval'], POINTER(VARIANT), 'prop' )),
    COMMETHOD([dispid(1665), 'propget'], HRESULT, 'Has3DEffect',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'prop' )),
    COMMETHOD([dispid(1665), 'propput'], HRESULT, 'Has3DEffect',
              ( ['in'], VARIANT_BOOL, 'prop' )),
    COMMETHOD([dispid(1610743854), 'propget'], HRESULT, 'Format',
              ( ['out', 'retval'], POINTER(POINTER(ChartFormat)), 'prop' )),
    COMMETHOD([dispid(148), 'propget'], HRESULT, 'Application',
              ( ['out', 'retval'], POINTER(POINTER(IDispatch)), 'prop' )),
    COMMETHOD([dispid(149), 'propget'], HRESULT, 'Creator',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(2649), 'propget'], HRESULT, 'PictureUnit2',
              ( ['out', 'retval'], POINTER(c_double), 'prop' )),
    COMMETHOD([dispid(2649), 'propput'], HRESULT, 'PictureUnit2',
              ( ['in'], c_double, 'prop' )),
    COMMETHOD([dispid(2652), 'propget'], HRESULT, 'Height',
              ( ['out', 'retval'], POINTER(c_double), 'prop' )),
    COMMETHOD([dispid(2653), 'propget'], HRESULT, 'Width',
              ( ['out', 'retval'], POINTER(c_double), 'prop' )),
    COMMETHOD([dispid(2655), 'propget'], HRESULT, 'Top',
              ( ['out', 'retval'], POINTER(c_double), 'prop' )),
    COMMETHOD([dispid(2654), 'propget'], HRESULT, 'Left',
              ( ['out', 'retval'], POINTER(c_double), 'prop' )),
    COMMETHOD([dispid(2651), 'propget'], HRESULT, 'Name',
              ( ['out', 'retval'], POINTER(BSTR), 'prop' )),
    COMMETHOD([dispid(2656)], HRESULT, 'PieSliceLocation',
              ( ['in'], XlPieSliceLocation, 'loc' ),
              ( ['in', 'optional'], XlPieSliceIndex, 'Index', 2 ),
              ( ['out', 'retval'], POINTER(c_double), 'prop' )),
    COMMETHOD([dispid(2890), 'propget'], HRESULT, 'IsTotal',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'prop' )),
    COMMETHOD([dispid(2890), 'propput'], HRESULT, 'IsTotal',
              ( ['in'], VARIANT_BOOL, 'prop' )),
    COMMETHOD([dispid(253)], HRESULT, 'SetProperty',
              ( ['in'], BSTR, 'ID' ),
              ( ['in'], VARIANT, 'Value' )),
    COMMETHOD([dispid(254)], HRESULT, 'GetProperty',
              ( ['in'], BSTR, 'ID' ),
              ( ['out', 'retval'], POINTER(VARIANT), 'prop' )),
]
################################################################
## code template for Point implementation
##class Point_Impl(object):
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Border(self):
##        '-no docstring-'
##        #return prop
##
##    def ClearFormats(self):
##        '-no docstring-'
##        #return prop
##
##    def Copy(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def DataLabel(self):
##        '-no docstring-'
##        #return prop
##
##    def Delete(self):
##        '-no docstring-'
##        #return prop
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    Explosion = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    HasDataLabel = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Interior(self):
##        '-no docstring-'
##        #return prop
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    InvertIfNegative = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    MarkerBackgroundColor = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    MarkerBackgroundColorIndex = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    MarkerForegroundColor = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    MarkerForegroundColorIndex = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    MarkerSize = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    MarkerStyle = property(_get, _set, doc = _set.__doc__)
##
##    def Paste(self):
##        '-no docstring-'
##        #return prop
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    PictureType = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    PictureUnit = property(_get, _set, doc = _set.__doc__)
##
##    def Select(self):
##        '-no docstring-'
##        #return prop
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    ApplyPictToSides = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    ApplyPictToFront = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    ApplyPictToEnd = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    Shadow = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    SecondaryPlot = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Fill(self):
##        '-no docstring-'
##        #return prop
##
##    def ApplyDataLabels(self, Type, LegendKey, AutoText, HasLeaderLines, ShowSeriesName, ShowCategoryName, ShowValue, ShowPercentage, ShowBubbleSize, Separator):
##        '-no docstring-'
##        #return prop
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    Has3DEffect = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Format(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Creator(self):
##        '-no docstring-'
##        #return prop
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    PictureUnit2 = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Height(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Width(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Top(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Left(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Name(self):
##        '-no docstring-'
##        #return prop
##
##    def PieSliceLocation(self, loc, Index):
##        '-no docstring-'
##        #return prop
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    IsTotal = property(_get, _set, doc = _set.__doc__)
##
##    def SetProperty(self, ID, Value):
##        '-no docstring-'
##        #return 
##
##    def GetProperty(self, ID):
##        '-no docstring-'
##        #return prop
##

DiagramNodeChildren._methods_ = [
    COMMETHOD([dispid(1000), 'propget'], HRESULT, 'Application',
              ( ['out', 'retval'], POINTER(POINTER(Application)), 'prop' )),
    COMMETHOD([dispid(1001), 'propget'], HRESULT, 'Creator',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(-4), 'nonbrowsable', 'propget'], HRESULT, '_NewEnum',
              ( ['out', 'retval'], POINTER(POINTER(IUnknown)), 'prop' )),
    COMMETHOD([dispid(100), 'propget'], HRESULT, 'Parent',
              ( ['out', 'retval'], POINTER(POINTER(IDispatch)), 'prop' )),
    COMMETHOD([dispid(101), 'propget'], HRESULT, 'Count',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(103), 'propget'], HRESULT, 'FirstChild',
              ( ['out', 'retval'], POINTER(POINTER(DiagramNode)), 'prop' )),
    COMMETHOD([dispid(104), 'propget'], HRESULT, 'LastChild',
              ( ['out', 'retval'], POINTER(POINTER(DiagramNode)), 'prop' )),
    COMMETHOD([dispid(0)], HRESULT, 'Item',
              ( ['in'], POINTER(VARIANT), 'Index' ),
              ( ['out', 'retval'], POINTER(POINTER(DiagramNode)), 'prop' )),
    COMMETHOD([dispid(10)], HRESULT, 'AddNode',
              ( ['in', 'optional'], POINTER(VARIANT), 'Index', -1 ),
              ( ['in', 'optional'], comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoDiagramNodeType, 'NodeType', 1 ),
              ( ['out', 'retval'], POINTER(POINTER(DiagramNode)), 'prop' )),
    COMMETHOD([dispid(11)], HRESULT, 'SelectAll'),
]
################################################################
## code template for DiagramNodeChildren implementation
##class DiagramNodeChildren_Impl(object):
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Creator(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def _NewEnum(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Count(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def FirstChild(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def LastChild(self):
##        '-no docstring-'
##        #return prop
##
##    def Item(self, Index):
##        '-no docstring-'
##        #return prop
##
##    def AddNode(self, Index, NodeType):
##        '-no docstring-'
##        #return prop
##
##    def SelectAll(self):
##        '-no docstring-'
##        #return 
##


# values for enumeration 'WdFramePosition'
wdFrameTop = -999999
wdFrameLeft = -999998
wdFrameBottom = -999997
wdFrameRight = -999996
wdFrameCenter = -999995
wdFrameInside = -999994
wdFrameOutside = -999993
WdFramePosition = c_int # enum

# values for enumeration 'WdSortOrder'
wdSortOrderAscending = 0
wdSortOrderDescending = 1
WdSortOrder = c_int # enum
DocumentEvents2._disp_methods_ = [
    DISPMETHOD([dispid(4)], None, 'New'),
    DISPMETHOD([dispid(5)], None, 'Open'),
    DISPMETHOD([dispid(6)], None, 'Close'),
    DISPMETHOD([dispid(7)], None, 'Sync',
               ( [], comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoSyncEventType, 'SyncEventType' )),
    DISPMETHOD([dispid(8)], None, 'XMLAfterInsert',
               ( ['in'], POINTER(XMLNode), 'NewXMLNode' ),
               ( ['in'], VARIANT_BOOL, 'InUndoRedo' )),
    DISPMETHOD([dispid(9)], None, 'XMLBeforeDelete',
               ( ['in'], POINTER(Range), 'DeletedRange' ),
               ( ['in'], POINTER(XMLNode), 'OldXMLNode' ),
               ( ['in'], VARIANT_BOOL, 'InUndoRedo' )),
    DISPMETHOD([dispid(12)], None, 'ContentControlAfterAdd',
               ( ['in'], POINTER(ContentControl), 'NewContentControl' ),
               ( ['in'], VARIANT_BOOL, 'InUndoRedo' )),
    DISPMETHOD([dispid(13)], None, 'ContentControlBeforeDelete',
               ( ['in'], POINTER(ContentControl), 'OldContentControl' ),
               ( ['in'], VARIANT_BOOL, 'InUndoRedo' )),
    DISPMETHOD([dispid(14)], None, 'ContentControlOnExit',
               ( ['in'], POINTER(ContentControl), 'ContentControl' ),
               ( ['in', 'out'], POINTER(VARIANT_BOOL), 'Cancel' )),
    DISPMETHOD([dispid(15)], None, 'ContentControlOnEnter',
               ( ['in'], POINTER(ContentControl), 'ContentControl' )),
    DISPMETHOD([dispid(16)], None, 'ContentControlBeforeStoreUpdate',
               ( ['in'], POINTER(ContentControl), 'ContentControl' ),
               ( ['in', 'out'], POINTER(BSTR), 'Content' )),
    DISPMETHOD([dispid(17)], None, 'ContentControlBeforeContentUpdate',
               ( ['in'], POINTER(ContentControl), 'ContentControl' ),
               ( ['in', 'out'], POINTER(BSTR), 'Content' )),
    DISPMETHOD([dispid(18)], None, 'BuildingBlockInsert',
               ( ['in'], POINTER(Range), 'Range' ),
               ( ['in'], BSTR, 'Name' ),
               ( ['in'], BSTR, 'Category' ),
               ( ['in'], BSTR, 'BlockType' ),
               ( ['in'], BSTR, 'Template' )),
]

# values for enumeration 'WdBorderTypeHID'
emptyenum = 0
WdBorderTypeHID = c_int # enum

# values for enumeration 'WdRoutingSlipStatus'
wdNotYetRouted = 0
wdRouteInProgress = 1
wdRouteComplete = 2
WdRoutingSlipStatus = c_int # enum
HorizontalLineFormat._methods_ = [
    COMMETHOD([dispid(1000), 'propget'], HRESULT, 'Application',
              ( ['out', 'retval'], POINTER(POINTER(Application)), 'prop' )),
    COMMETHOD([dispid(1001), 'propget'], HRESULT, 'Creator',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(1002), 'propget'], HRESULT, 'Parent',
              ( ['out', 'retval'], POINTER(POINTER(IDispatch)), 'prop' )),
    COMMETHOD([dispid(2), 'propget'], HRESULT, 'PercentWidth',
              ( ['out', 'retval'], POINTER(c_float), 'prop' )),
    COMMETHOD([dispid(2), 'propput'], HRESULT, 'PercentWidth',
              ( ['in'], c_float, 'prop' )),
    COMMETHOD([dispid(3), 'propget'], HRESULT, 'NoShade',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'prop' )),
    COMMETHOD([dispid(3), 'propput'], HRESULT, 'NoShade',
              ( ['in'], VARIANT_BOOL, 'prop' )),
    COMMETHOD([dispid(4), 'propget'], HRESULT, 'Alignment',
              ( ['out', 'retval'], POINTER(WdHorizontalLineAlignment), 'prop' )),
    COMMETHOD([dispid(4), 'propput'], HRESULT, 'Alignment',
              ( ['in'], WdHorizontalLineAlignment, 'prop' )),
    COMMETHOD([dispid(5), 'propget'], HRESULT, 'WidthType',
              ( ['out', 'retval'], POINTER(WdHorizontalLineWidthType), 'prop' )),
    COMMETHOD([dispid(5), 'propput'], HRESULT, 'WidthType',
              ( ['in'], WdHorizontalLineWidthType, 'prop' )),
]
################################################################
## code template for HorizontalLineFormat implementation
##class HorizontalLineFormat_Impl(object):
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Creator(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return prop
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    PercentWidth = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    NoShade = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    Alignment = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    WidthType = property(_get, _set, doc = _set.__doc__)
##


# values for enumeration 'WdMovementType'
wdMove = 0
wdExtend = 1
WdMovementType = c_int # enum

# values for enumeration 'WdSaveOptions'
wdDoNotSaveChanges = 0
wdSaveChanges = -1
wdPromptToSaveChanges = -2
WdSaveOptions = c_int # enum

# values for enumeration 'WdDateLanguage'
wdDateLanguageBidi = 10
wdDateLanguageLatin = 1033
WdDateLanguage = c_int # enum

# values for enumeration 'XlOrientation'
xlDownward = -4170
xlHorizontal = -4128
xlUpward = -4171
xlVertical = -4166
XlOrientation = c_int # enum

# values for enumeration 'WdPasteDataType'
wdPasteOLEObject = 0
wdPasteRTF = 1
wdPasteText = 2
wdPasteMetafilePicture = 3
wdPasteBitmap = 4
wdPasteDeviceIndependentBitmap = 5
wdPasteHyperlink = 7
wdPasteShape = 8
wdPasteEnhancedMetafile = 9
wdPasteHTML = 10
WdPasteDataType = c_int # enum

# values for enumeration 'WdShapePosition'
wdShapeTop = -999999
wdShapeLeft = -999998
wdShapeBottom = -999997
wdShapeRight = -999996
wdShapeCenter = -999995
wdShapeInside = -999994
wdShapeOutside = -999993
WdShapePosition = c_int # enum
Legend._methods_ = [
    COMMETHOD([dispid(150), 'propget'], HRESULT, 'Parent',
              ( ['out', 'retval'], POINTER(POINTER(IDispatch)), 'prop' )),
    COMMETHOD([dispid(110), 'propget'], HRESULT, 'Name',
              ( ['out', 'retval'], POINTER(BSTR), 'prop' )),
    COMMETHOD([dispid(235)], HRESULT, 'Select',
              ( ['out', 'retval'], POINTER(VARIANT), 'prop' )),
    COMMETHOD([dispid(128), 'hidden', 'propget'], HRESULT, 'Border',
              ( ['out', 'retval'], POINTER(POINTER(ChartBorder)), 'prop' )),
    COMMETHOD([dispid(117)], HRESULT, 'Delete',
              ( ['out', 'retval'], POINTER(VARIANT), 'prop' )),
    COMMETHOD([dispid(146), 'hidden', 'propget'], HRESULT, 'Font',
              ( ['out', 'retval'], POINTER(POINTER(ChartFont)), 'prop' )),
    COMMETHOD([dispid(173)], HRESULT, 'LegendEntries',
              ( ['in', 'optional'], VARIANT, 'Index' ),
              ( ['out', 'retval'], POINTER(POINTER(IDispatch)), 'prop' )),
    COMMETHOD([dispid(133), 'propget'], HRESULT, 'Position',
              ( ['out', 'retval'], POINTER(XlLegendPosition), 'prop' )),
    COMMETHOD([dispid(133), 'propput'], HRESULT, 'Position',
              ( ['in'], XlLegendPosition, 'prop' )),
    COMMETHOD([dispid(103), 'propget'], HRESULT, 'Shadow',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'prop' )),
    COMMETHOD([dispid(103), 'propput'], HRESULT, 'Shadow',
              ( ['in'], VARIANT_BOOL, 'prop' )),
    COMMETHOD([dispid(111)], HRESULT, 'Clear',
              ( ['out', 'retval'], POINTER(VARIANT), 'prop' )),
    COMMETHOD([dispid(123), 'propget'], HRESULT, 'Height',
              ( ['out', 'retval'], POINTER(c_double), 'prop' )),
    COMMETHOD([dispid(123), 'propput'], HRESULT, 'Height',
              ( ['in'], c_double, 'prop' )),
    COMMETHOD([dispid(129), 'hidden', 'propget'], HRESULT, 'Interior',
              ( ['out', 'retval'], POINTER(POINTER(Interior)), 'prop' )),
    COMMETHOD([dispid(1663), 'hidden', 'propget'], HRESULT, 'Fill',
              ( ['out', 'retval'], POINTER(POINTER(ChartFillFormat)), 'prop' )),
    COMMETHOD([dispid(127), 'propget'], HRESULT, 'Left',
              ( ['out', 'retval'], POINTER(c_double), 'prop' )),
    COMMETHOD([dispid(127), 'propput'], HRESULT, 'Left',
              ( ['in'], c_double, 'prop' )),
    COMMETHOD([dispid(126), 'propget'], HRESULT, 'Top',
              ( ['out', 'retval'], POINTER(c_double), 'prop' )),
    COMMETHOD([dispid(126), 'propput'], HRESULT, 'Top',
              ( ['in'], c_double, 'prop' )),
    COMMETHOD([dispid(122), 'propget'], HRESULT, 'Width',
              ( ['out', 'retval'], POINTER(c_double), 'prop' )),
    COMMETHOD([dispid(122), 'propput'], HRESULT, 'Width',
              ( ['in'], c_double, 'prop' )),
    COMMETHOD([dispid(1525), 'hidden', 'propget'], HRESULT, 'AutoScaleFont',
              ( ['out', 'retval'], POINTER(VARIANT), 'prop' )),
    COMMETHOD([dispid(1525), 'hidden', 'propput'], HRESULT, 'AutoScaleFont',
              ( ['in'], VARIANT, 'prop' )),
    COMMETHOD([dispid(2418), 'propget'], HRESULT, 'IncludeInLayout',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'prop' )),
    COMMETHOD([dispid(2418), 'propput'], HRESULT, 'IncludeInLayout',
              ( ['in'], VARIANT_BOOL, 'prop' )),
    COMMETHOD([dispid(1610743834), 'propget'], HRESULT, 'Format',
              ( ['out', 'retval'], POINTER(POINTER(ChartFormat)), 'prop' )),
    COMMETHOD([dispid(148), 'propget'], HRESULT, 'Application',
              ( ['out', 'retval'], POINTER(POINTER(IDispatch)), 'prop' )),
    COMMETHOD([dispid(149), 'propget'], HRESULT, 'Creator',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(253)], HRESULT, 'SetProperty',
              ( ['in'], BSTR, 'ID' ),
              ( ['in'], VARIANT, 'Value' )),
    COMMETHOD([dispid(254)], HRESULT, 'GetProperty',
              ( ['in'], BSTR, 'ID' ),
              ( ['out', 'retval'], POINTER(VARIANT), 'prop' )),
]
################################################################
## code template for Legend implementation
##class Legend_Impl(object):
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Name(self):
##        '-no docstring-'
##        #return prop
##
##    def Select(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Border(self):
##        '-no docstring-'
##        #return prop
##
##    def Delete(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Font(self):
##        '-no docstring-'
##        #return prop
##
##    def LegendEntries(self, Index):
##        '-no docstring-'
##        #return prop
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    Position = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    Shadow = property(_get, _set, doc = _set.__doc__)
##
##    def Clear(self):
##        '-no docstring-'
##        #return prop
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    Height = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Interior(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Fill(self):
##        '-no docstring-'
##        #return prop
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    Left = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    Top = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    Width = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    AutoScaleFont = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    IncludeInLayout = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Format(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Creator(self):
##        '-no docstring-'
##        #return prop
##
##    def SetProperty(self, ID, Value):
##        '-no docstring-'
##        #return 
##
##    def GetProperty(self, ID):
##        '-no docstring-'
##        #return prop
##

OMathAutoCorrectEntry._methods_ = [
    COMMETHOD([dispid(100), 'propget'], HRESULT, 'Application',
              ( ['out', 'retval'], POINTER(POINTER(Application)), 'prop' )),
    COMMETHOD([dispid(101), 'propget'], HRESULT, 'Creator',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(102), 'propget'], HRESULT, 'Parent',
              ( ['out', 'retval'], POINTER(POINTER(IDispatch)), 'prop' )),
    COMMETHOD([dispid(103), 'propget'], HRESULT, 'Index',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(104), 'propget'], HRESULT, 'Name',
              ( ['out', 'retval'], POINTER(BSTR), 'prop' )),
    COMMETHOD([dispid(104), 'propput'], HRESULT, 'Name',
              ( ['in'], BSTR, 'prop' )),
    COMMETHOD([dispid(105), 'propget'], HRESULT, 'Value',
              ( ['out', 'retval'], POINTER(BSTR), 'prop' )),
    COMMETHOD([dispid(105), 'propput'], HRESULT, 'Value',
              ( ['in'], BSTR, 'prop' )),
    COMMETHOD([dispid(200)], HRESULT, 'Delete'),
]
################################################################
## code template for OMathAutoCorrectEntry implementation
##class OMathAutoCorrectEntry_Impl(object):
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Creator(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Index(self):
##        '-no docstring-'
##        #return prop
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    Name = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    Value = property(_get, _set, doc = _set.__doc__)
##
##    def Delete(self):
##        '-no docstring-'
##        #return 
##


# values for enumeration 'XlReadingOrder'
xlContext = -5002
xlLTR = -5003
xlRTL = -5004
XlReadingOrder = c_int # enum
class MappedDataFields(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{799A6814-EA41-11D3-87CC-00105AA31A34}')
    _idlflags_ = ['dual', 'nonextensible', 'oleautomation']
MappedDataFields._methods_ = [
    COMMETHOD([dispid(1000), 'propget'], HRESULT, 'Application',
              ( ['out', 'retval'], POINTER(POINTER(Application)), 'prop' )),
    COMMETHOD([dispid(1001), 'propget'], HRESULT, 'Creator',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(1002), 'propget'], HRESULT, 'Parent',
              ( ['out', 'retval'], POINTER(POINTER(IDispatch)), 'prop' )),
    COMMETHOD([dispid(1), 'propget'], HRESULT, 'Count',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(-4), 'nonbrowsable', 'propget'], HRESULT, '_NewEnum',
              ( ['out', 'retval'], POINTER(POINTER(IUnknown)), 'prop' )),
    COMMETHOD([dispid(0)], HRESULT, 'Item',
              ( ['in'], WdMappedDataFields, 'Index' ),
              ( ['out', 'retval'], POINTER(POINTER(MappedDataField)), 'prop' )),
]
################################################################
## code template for MappedDataFields implementation
##class MappedDataFields_Impl(object):
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Creator(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Count(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def _NewEnum(self):
##        '-no docstring-'
##        #return prop
##
##    def Item(self, Index):
##        '-no docstring-'
##        #return prop
##


# values for enumeration 'WdTablePosition'
wdTableTop = -999999
wdTableLeft = -999998
wdTableBottom = -999997
wdTableRight = -999996
wdTableCenter = -999995
wdTableInside = -999994
wdTableOutside = -999993
WdTablePosition = c_int # enum
class LegendEntries(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{B6511068-70BF-4751-A741-55C1D41AD96F}')
    _idlflags_ = ['dual', 'nonextensible', 'oleautomation']
LegendEntries._methods_ = [
    COMMETHOD([dispid(150), 'propget'], HRESULT, 'Parent',
              ( ['out', 'retval'], POINTER(POINTER(IDispatch)), 'prop' )),
    COMMETHOD([dispid(118), 'propget'], HRESULT, 'Count',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(0)], HRESULT, 'Item',
              ( ['in'], VARIANT, 'Index' ),
              ( ['out', 'retval'], POINTER(POINTER(LegendEntry)), 'prop' )),
    COMMETHOD([dispid(-4), 'nonbrowsable'], HRESULT, '_NewEnum',
              ( ['out', 'retval'], POINTER(POINTER(IUnknown)), 'prop' )),
    COMMETHOD([dispid(148), 'propget'], HRESULT, 'Application',
              ( ['out', 'retval'], POINTER(POINTER(IDispatch)), 'prop' )),
    COMMETHOD([dispid(149), 'propget'], HRESULT, 'Creator',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(1610743814), 'nonbrowsable'], HRESULT, '_Default',
              ( ['in'], VARIANT, 'Index' ),
              ( ['out', 'retval'], POINTER(POINTER(LegendEntry)), 'prop' )),
]
################################################################
## code template for LegendEntries implementation
##class LegendEntries_Impl(object):
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Count(self):
##        '-no docstring-'
##        #return prop
##
##    def Item(self, Index):
##        '-no docstring-'
##        #return prop
##
##    def _NewEnum(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Creator(self):
##        '-no docstring-'
##        #return prop
##
##    def _Default(self, Index):
##        '-no docstring-'
##        #return prop
##


# values for enumeration 'WdTableFormatApply'
wdTableFormatApplyBorders = 1
wdTableFormatApplyShading = 2
wdTableFormatApplyFont = 4
wdTableFormatApplyColor = 8
wdTableFormatApplyAutoFit = 16
wdTableFormatApplyHeadingRows = 32
wdTableFormatApplyLastRow = 64
wdTableFormatApplyFirstColumn = 128
wdTableFormatApplyLastColumn = 256
WdTableFormatApply = c_int # enum

# values for enumeration 'WdConstants'
wdUndefined = 9999999
wdToggle = 9999998
wdForward = 1073741823
wdBackward = -1073741823
wdAutoPosition = 0
wdFirst = 1
wdCreatorCode = 1297307460
WdConstants = c_int # enum

# values for enumeration 'WdDefaultListBehavior'
wdWord8ListBehavior = 0
wdWord9ListBehavior = 1
wdWord10ListBehavior = 2
WdDefaultListBehavior = c_int # enum

# values for enumeration 'WdAraSpeller'
wdNone = 0
wdInitialAlef = 1
wdFinalYaa = 2
wdBoth = 3
WdAraSpeller = c_int # enum
Words._methods_ = [
    COMMETHOD([dispid(-4), 'nonbrowsable', 'propget'], HRESULT, '_NewEnum',
              ( ['out', 'retval'], POINTER(POINTER(IUnknown)), 'prop' )),
    COMMETHOD([dispid(2), 'propget'], HRESULT, 'Count',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(3), 'propget'], HRESULT, 'First',
              ( ['out', 'retval'], POINTER(POINTER(Range)), 'prop' )),
    COMMETHOD([dispid(4), 'propget'], HRESULT, 'Last',
              ( ['out', 'retval'], POINTER(POINTER(Range)), 'prop' )),
    COMMETHOD([dispid(1000), 'propget'], HRESULT, 'Application',
              ( ['out', 'retval'], POINTER(POINTER(Application)), 'prop' )),
    COMMETHOD([dispid(1001), 'propget'], HRESULT, 'Creator',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(1002), 'propget'], HRESULT, 'Parent',
              ( ['out', 'retval'], POINTER(POINTER(IDispatch)), 'prop' )),
    COMMETHOD([dispid(0)], HRESULT, 'Item',
              ( ['in'], c_int, 'Index' ),
              ( ['out', 'retval'], POINTER(POINTER(Range)), 'prop' )),
]
################################################################
## code template for Words implementation
##class Words_Impl(object):
##    @property
##    def _NewEnum(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Count(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def First(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Last(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Creator(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return prop
##
##    def Item(self, Index):
##        '-no docstring-'
##        #return prop
##


# values for enumeration 'XlTickLabelOrientation'
xlTickLabelOrientationAutomatic = -4105
xlTickLabelOrientationDownward = -4170
xlTickLabelOrientationHorizontal = -4128
xlTickLabelOrientationUpward = -4171
xlTickLabelOrientationVertical = -4166
XlTickLabelOrientation = c_int # enum
TickLabels._methods_ = [
    COMMETHOD([dispid(1610743808), 'propget'], HRESULT, 'Parent',
              ( ['out', 'retval'], POINTER(POINTER(IDispatch)), 'prop' )),
    COMMETHOD([dispid(1610743809)], HRESULT, 'Delete',
              ( ['out', 'retval'], POINTER(VARIANT), 'prop' )),
    COMMETHOD([dispid(1610743810), 'propget'], HRESULT, 'Font',
              ( ['out', 'retval'], POINTER(POINTER(ChartFont)), 'prop' )),
    COMMETHOD([dispid(1610743811), 'propget'], HRESULT, 'Name',
              ( ['out', 'retval'], POINTER(BSTR), 'prop' )),
    COMMETHOD([dispid(1610743812), 'propget'], HRESULT, 'NumberFormat',
              ( ['out', 'retval'], POINTER(BSTR), 'prop' )),
    COMMETHOD([dispid(1610743812), 'propput'], HRESULT, 'NumberFormat',
              ( ['in'], BSTR, 'prop' )),
    COMMETHOD([dispid(1610743814), 'propget'], HRESULT, 'NumberFormatLinked',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'prop' )),
    COMMETHOD([dispid(1610743814), 'propput'], HRESULT, 'NumberFormatLinked',
              ( ['in'], VARIANT_BOOL, 'prop' )),
    COMMETHOD([dispid(1610743816), 'propget'], HRESULT, 'NumberFormatLocal',
              ( ['out', 'retval'], POINTER(VARIANT), 'prop' )),
    COMMETHOD([dispid(1610743816), 'propput'], HRESULT, 'NumberFormatLocal',
              ( ['in'], VARIANT, 'prop' )),
    COMMETHOD([dispid(1610743818), 'propget'], HRESULT, 'Orientation',
              ( ['out', 'retval'], POINTER(XlTickLabelOrientation), 'prop' )),
    COMMETHOD([dispid(1610743818), 'propput'], HRESULT, 'Orientation',
              ( ['in'], XlTickLabelOrientation, 'prop' )),
    COMMETHOD([dispid(1610743820)], HRESULT, 'Select',
              ( ['out', 'retval'], POINTER(VARIANT), 'prop' )),
    COMMETHOD([dispid(1610743821), 'propget'], HRESULT, 'ReadingOrder',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(1610743821), 'propput'], HRESULT, 'ReadingOrder',
              ( ['in'], c_int, 'prop' )),
    COMMETHOD([dispid(1610743823), 'hidden', 'propget'], HRESULT, 'AutoScaleFont',
              ( ['out', 'retval'], POINTER(VARIANT), 'prop' )),
    COMMETHOD([dispid(1610743823), 'hidden', 'propput'], HRESULT, 'AutoScaleFont',
              ( ['in'], VARIANT, 'prop' )),
    COMMETHOD([dispid(1610743825), 'propget'], HRESULT, 'Depth',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(1610743826), 'propget'], HRESULT, 'Offset',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(1610743826), 'propput'], HRESULT, 'Offset',
              ( ['in'], c_int, 'prop' )),
    COMMETHOD([dispid(1610743828), 'propget'], HRESULT, 'Alignment',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(1610743828), 'propput'], HRESULT, 'Alignment',
              ( ['in'], c_int, 'prop' )),
    COMMETHOD([dispid(1610743830), 'propget'], HRESULT, 'MultiLevel',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'prop' )),
    COMMETHOD([dispid(1610743830), 'propput'], HRESULT, 'MultiLevel',
              ( ['in'], VARIANT_BOOL, 'prop' )),
    COMMETHOD([dispid(1610743832), 'propget'], HRESULT, 'Format',
              ( ['out', 'retval'], POINTER(POINTER(ChartFormat)), 'prop' )),
    COMMETHOD([dispid(148), 'propget'], HRESULT, 'Application',
              ( ['out', 'retval'], POINTER(POINTER(IDispatch)), 'prop' )),
    COMMETHOD([dispid(149), 'propget'], HRESULT, 'Creator',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
]
################################################################
## code template for TickLabels implementation
##class TickLabels_Impl(object):
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return prop
##
##    def Delete(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Font(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Name(self):
##        '-no docstring-'
##        #return prop
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    NumberFormat = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    NumberFormatLinked = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    NumberFormatLocal = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    Orientation = property(_get, _set, doc = _set.__doc__)
##
##    def Select(self):
##        '-no docstring-'
##        #return prop
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    ReadingOrder = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    AutoScaleFont = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Depth(self):
##        '-no docstring-'
##        #return prop
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    Offset = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    Alignment = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    MultiLevel = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Format(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Creator(self):
##        '-no docstring-'
##        #return prop
##

TablesOfFigures._methods_ = [
    COMMETHOD([dispid(1000), 'propget'], HRESULT, 'Application',
              ( ['out', 'retval'], POINTER(POINTER(Application)), 'prop' )),
    COMMETHOD([dispid(1001), 'propget'], HRESULT, 'Creator',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(1002), 'propget'], HRESULT, 'Parent',
              ( ['out', 'retval'], POINTER(POINTER(IDispatch)), 'prop' )),
    COMMETHOD([dispid(-4), 'nonbrowsable', 'propget'], HRESULT, '_NewEnum',
              ( ['out', 'retval'], POINTER(POINTER(IUnknown)), 'prop' )),
    COMMETHOD([dispid(1), 'propget'], HRESULT, 'Count',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(2), 'propget'], HRESULT, 'Format',
              ( ['out', 'retval'], POINTER(WdTofFormat), 'prop' )),
    COMMETHOD([dispid(2), 'propput'], HRESULT, 'Format',
              ( ['in'], WdTofFormat, 'prop' )),
    COMMETHOD([dispid(0)], HRESULT, 'Item',
              ( ['in'], c_int, 'Index' ),
              ( ['out', 'retval'], POINTER(POINTER(TableOfFigures)), 'prop' )),
    COMMETHOD([dispid(100), 'hidden'], HRESULT, 'AddOld',
              ( ['in'], POINTER(Range), 'Range' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'Caption' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'IncludeLabel' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'UseHeadingStyles' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'UpperHeadingLevel' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'LowerHeadingLevel' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'UseFields' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'TableID' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'RightAlignPageNumbers' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'IncludePageNumbers' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'AddedStyles' ),
              ( ['out', 'retval'], POINTER(POINTER(TableOfFigures)), 'prop' )),
    COMMETHOD([dispid(101)], HRESULT, 'MarkEntry',
              ( ['in'], POINTER(Range), 'Range' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'Entry' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'EntryAutoText' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'TableID' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'Level' ),
              ( ['out', 'retval'], POINTER(POINTER(Field)), 'prop' )),
    COMMETHOD([dispid(444)], HRESULT, 'Add',
              ( ['in'], POINTER(Range), 'Range' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'Caption' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'IncludeLabel' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'UseHeadingStyles' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'UpperHeadingLevel' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'LowerHeadingLevel' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'UseFields' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'TableID' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'RightAlignPageNumbers' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'IncludePageNumbers' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'AddedStyles' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'UseHyperlinks' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'HidePageNumbersInWeb' ),
              ( ['out', 'retval'], POINTER(POINTER(TableOfFigures)), 'prop' )),
]
################################################################
## code template for TablesOfFigures implementation
##class TablesOfFigures_Impl(object):
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Creator(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def _NewEnum(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Count(self):
##        '-no docstring-'
##        #return prop
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    Format = property(_get, _set, doc = _set.__doc__)
##
##    def Item(self, Index):
##        '-no docstring-'
##        #return prop
##
##    def AddOld(self, Range, Caption, IncludeLabel, UseHeadingStyles, UpperHeadingLevel, LowerHeadingLevel, UseFields, TableID, RightAlignPageNumbers, IncludePageNumbers, AddedStyles):
##        '-no docstring-'
##        #return prop
##
##    def MarkEntry(self, Range, Entry, EntryAutoText, TableID, Level):
##        '-no docstring-'
##        #return prop
##
##    def Add(self, Range, Caption, IncludeLabel, UseHeadingStyles, UpperHeadingLevel, LowerHeadingLevel, UseFields, TableID, RightAlignPageNumbers, IncludePageNumbers, AddedStyles, UseHyperlinks, HidePageNumbersInWeb):
##        '-no docstring-'
##        #return prop
##

RecentFiles._methods_ = [
    COMMETHOD([dispid(1000), 'propget'], HRESULT, 'Application',
              ( ['out', 'retval'], POINTER(POINTER(Application)), 'prop' )),
    COMMETHOD([dispid(1001), 'propget'], HRESULT, 'Creator',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(1002), 'propget'], HRESULT, 'Parent',
              ( ['out', 'retval'], POINTER(POINTER(IDispatch)), 'prop' )),
    COMMETHOD([dispid(-4), 'nonbrowsable', 'propget'], HRESULT, '_NewEnum',
              ( ['out', 'retval'], POINTER(POINTER(IUnknown)), 'prop' )),
    COMMETHOD([dispid(1), 'propget'], HRESULT, 'Count',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(2), 'propget'], HRESULT, 'Maximum',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(2), 'propput'], HRESULT, 'Maximum',
              ( ['in'], c_int, 'prop' )),
    COMMETHOD([dispid(0)], HRESULT, 'Item',
              ( ['in'], c_int, 'Index' ),
              ( ['out', 'retval'], POINTER(POINTER(RecentFile)), 'prop' )),
    COMMETHOD([dispid(3)], HRESULT, 'Add',
              ( ['in'], POINTER(VARIANT), 'Document' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'ReadOnly' ),
              ( ['out', 'retval'], POINTER(POINTER(RecentFile)), 'prop' )),
]
################################################################
## code template for RecentFiles implementation
##class RecentFiles_Impl(object):
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Creator(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def _NewEnum(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Count(self):
##        '-no docstring-'
##        #return prop
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    Maximum = property(_get, _set, doc = _set.__doc__)
##
##    def Item(self, Index):
##        '-no docstring-'
##        #return prop
##
##    def Add(self, Document, ReadOnly):
##        '-no docstring-'
##        #return prop
##

PageNumber._methods_ = [
    COMMETHOD([dispid(1000), 'propget'], HRESULT, 'Application',
              ( ['out', 'retval'], POINTER(POINTER(Application)), 'prop' )),
    COMMETHOD([dispid(1001), 'propget'], HRESULT, 'Creator',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(1002), 'propget'], HRESULT, 'Parent',
              ( ['out', 'retval'], POINTER(POINTER(IDispatch)), 'prop' )),
    COMMETHOD([dispid(1), 'propget'], HRESULT, 'Index',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(3), 'propget'], HRESULT, 'Alignment',
              ( ['out', 'retval'], POINTER(WdPageNumberAlignment), 'prop' )),
    COMMETHOD([dispid(3), 'propput'], HRESULT, 'Alignment',
              ( ['in'], WdPageNumberAlignment, 'prop' )),
    COMMETHOD([dispid(65535)], HRESULT, 'Select'),
    COMMETHOD([dispid(101)], HRESULT, 'Copy'),
    COMMETHOD([dispid(102)], HRESULT, 'Cut'),
    COMMETHOD([dispid(103)], HRESULT, 'Delete'),
]
################################################################
## code template for PageNumber implementation
##class PageNumber_Impl(object):
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Creator(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Index(self):
##        '-no docstring-'
##        #return prop
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    Alignment = property(_get, _set, doc = _set.__doc__)
##
##    def Select(self):
##        '-no docstring-'
##        #return 
##
##    def Copy(self):
##        '-no docstring-'
##        #return 
##
##    def Cut(self):
##        '-no docstring-'
##        #return 
##
##    def Delete(self):
##        '-no docstring-'
##        #return 
##

class XMLNamespaces(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{656BBED7-E82D-4B0A-8F97-EC742BA11FFA}')
    _idlflags_ = ['dual', 'nonextensible', 'oleautomation']
XMLNamespaces._methods_ = [
    COMMETHOD([dispid(-4), 'nonbrowsable', 'propget'], HRESULT, '_NewEnum',
              ( ['out', 'retval'], POINTER(POINTER(IUnknown)), 'prop' )),
    COMMETHOD([dispid(2), 'propget'], HRESULT, 'Count',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(1000), 'propget'], HRESULT, 'Application',
              ( ['out', 'retval'], POINTER(POINTER(Application)), 'prop' )),
    COMMETHOD([dispid(1001), 'propget'], HRESULT, 'Creator',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(1002), 'propget'], HRESULT, 'Parent',
              ( ['out', 'retval'], POINTER(POINTER(IDispatch)), 'prop' )),
    COMMETHOD([dispid(0)], HRESULT, 'Item',
              ( ['in'], POINTER(VARIANT), 'Index' ),
              ( ['out', 'retval'], POINTER(POINTER(XMLNamespace)), 'prop' )),
    COMMETHOD([dispid(101)], HRESULT, 'Add',
              ( ['in'], BSTR, 'Path' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'NamespaceURI' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'Alias' ),
              ( ['in', 'optional'], VARIANT_BOOL, 'InstallForAllUsers', False ),
              ( ['out', 'retval'], POINTER(POINTER(XMLNamespace)), 'prop' )),
    COMMETHOD([dispid(102)], HRESULT, 'InstallManifest',
              ( ['in'], BSTR, 'Path' ),
              ( ['in', 'optional'], VARIANT_BOOL, 'InstallForAllUsers', False )),
]
################################################################
## code template for XMLNamespaces implementation
##class XMLNamespaces_Impl(object):
##    @property
##    def _NewEnum(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Count(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Creator(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return prop
##
##    def Item(self, Index):
##        '-no docstring-'
##        #return prop
##
##    def Add(self, Path, NamespaceURI, Alias, InstallForAllUsers):
##        '-no docstring-'
##        #return prop
##
##    def InstallManifest(self, Path, InstallForAllUsers):
##        '-no docstring-'
##        #return 
##


# values for enumeration 'WdShapePositionRelative'
wdShapePositionRelativeNone = -999999
WdShapePositionRelative = c_int # enum

# values for enumeration 'WdTableFormat'
wdTableFormatNone = 0
wdTableFormatSimple1 = 1
wdTableFormatSimple2 = 2
wdTableFormatSimple3 = 3
wdTableFormatClassic1 = 4
wdTableFormatClassic2 = 5
wdTableFormatClassic3 = 6
wdTableFormatClassic4 = 7
wdTableFormatColorful1 = 8
wdTableFormatColorful2 = 9
wdTableFormatColorful3 = 10
wdTableFormatColumns1 = 11
wdTableFormatColumns2 = 12
wdTableFormatColumns3 = 13
wdTableFormatColumns4 = 14
wdTableFormatColumns5 = 15
wdTableFormatGrid1 = 16
wdTableFormatGrid2 = 17
wdTableFormatGrid3 = 18
wdTableFormatGrid4 = 19
wdTableFormatGrid5 = 20
wdTableFormatGrid6 = 21
wdTableFormatGrid7 = 22
wdTableFormatGrid8 = 23
wdTableFormatList1 = 24
wdTableFormatList2 = 25
wdTableFormatList3 = 26
wdTableFormatList4 = 27
wdTableFormatList5 = 28
wdTableFormatList6 = 29
wdTableFormatList7 = 30
wdTableFormatList8 = 31
wdTableFormat3DEffects1 = 32
wdTableFormat3DEffects2 = 33
wdTableFormat3DEffects3 = 34
wdTableFormatContemporary = 35
wdTableFormatElegant = 36
wdTableFormatProfessional = 37
wdTableFormatSubtle1 = 38
wdTableFormatSubtle2 = 39
wdTableFormatWeb1 = 40
wdTableFormatWeb2 = 41
wdTableFormatWeb3 = 42
WdTableFormat = c_int # enum

# values for enumeration 'WdXMLSelectionChangeReason'
wdXMLSelectionChangeReasonMove = 0
wdXMLSelectionChangeReasonInsert = 1
wdXMLSelectionChangeReasonDelete = 2
WdXMLSelectionChangeReason = c_int # enum

# values for enumeration 'WdOriginalFormat'
wdWordDocument = 0
wdOriginalDocumentFormat = 1
wdPromptUser = 2
WdOriginalFormat = c_int # enum
ProofreadingErrors._methods_ = [
    COMMETHOD([dispid(1000), 'propget'], HRESULT, 'Application',
              ( ['out', 'retval'], POINTER(POINTER(Application)), 'prop' )),
    COMMETHOD([dispid(1001), 'propget'], HRESULT, 'Creator',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(1002), 'propget'], HRESULT, 'Parent',
              ( ['out', 'retval'], POINTER(POINTER(IDispatch)), 'prop' )),
    COMMETHOD([dispid(-4), 'nonbrowsable', 'propget'], HRESULT, '_NewEnum',
              ( ['out', 'retval'], POINTER(POINTER(IUnknown)), 'prop' )),
    COMMETHOD([dispid(1), 'propget'], HRESULT, 'Count',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(2), 'propget'], HRESULT, 'Type',
              ( ['out', 'retval'], POINTER(WdProofreadingErrorType), 'prop' )),
    COMMETHOD([dispid(0)], HRESULT, 'Item',
              ( ['in'], c_int, 'Index' ),
              ( ['out', 'retval'], POINTER(POINTER(Range)), 'prop' )),
]
################################################################
## code template for ProofreadingErrors implementation
##class ProofreadingErrors_Impl(object):
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Creator(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def _NewEnum(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Count(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Type(self):
##        '-no docstring-'
##        #return prop
##
##    def Item(self, Index):
##        '-no docstring-'
##        #return prop
##

OMathNary._methods_ = [
    COMMETHOD([dispid(100), 'propget'], HRESULT, 'Application',
              ( ['out', 'retval'], POINTER(POINTER(Application)), 'prop' )),
    COMMETHOD([dispid(101), 'propget'], HRESULT, 'Creator',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(102), 'propget'], HRESULT, 'Parent',
              ( ['out', 'retval'], POINTER(POINTER(IDispatch)), 'prop' )),
    COMMETHOD([dispid(103), 'propget'], HRESULT, 'Sub',
              ( ['out', 'retval'], POINTER(POINTER(OMath)), 'prop' )),
    COMMETHOD([dispid(104), 'propget'], HRESULT, 'Sup',
              ( ['out', 'retval'], POINTER(POINTER(OMath)), 'prop' )),
    COMMETHOD([dispid(105), 'propget'], HRESULT, 'E',
              ( ['out', 'retval'], POINTER(POINTER(OMath)), 'prop' )),
    COMMETHOD([dispid(106), 'propget'], HRESULT, 'Char',
              ( ['out', 'retval'], POINTER(c_short), 'prop' )),
    COMMETHOD([dispid(106), 'propput'], HRESULT, 'Char',
              ( ['in'], c_short, 'prop' )),
    COMMETHOD([dispid(107), 'propget'], HRESULT, 'Grow',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'prop' )),
    COMMETHOD([dispid(107), 'propput'], HRESULT, 'Grow',
              ( ['in'], VARIANT_BOOL, 'prop' )),
    COMMETHOD([dispid(108), 'propget'], HRESULT, 'SubSupLim',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'prop' )),
    COMMETHOD([dispid(108), 'propput'], HRESULT, 'SubSupLim',
              ( ['in'], VARIANT_BOOL, 'prop' )),
    COMMETHOD([dispid(109), 'propget'], HRESULT, 'HideSub',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'prop' )),
    COMMETHOD([dispid(109), 'propput'], HRESULT, 'HideSub',
              ( ['in'], VARIANT_BOOL, 'prop' )),
    COMMETHOD([dispid(110), 'propget'], HRESULT, 'HideSup',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'prop' )),
    COMMETHOD([dispid(110), 'propput'], HRESULT, 'HideSup',
              ( ['in'], VARIANT_BOOL, 'prop' )),
]
################################################################
## code template for OMathNary implementation
##class OMathNary_Impl(object):
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Creator(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Sub(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Sup(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def E(self):
##        '-no docstring-'
##        #return prop
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    Char = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    Grow = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    SubSupLim = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    HideSub = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    HideSup = property(_get, _set, doc = _set.__doc__)
##

BuildingBlocks._methods_ = [
    COMMETHOD([dispid(1000), 'propget'], HRESULT, 'Application',
              ( ['out', 'retval'], POINTER(POINTER(Application)), 'prop' )),
    COMMETHOD([dispid(1001), 'propget'], HRESULT, 'Creator',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(1002), 'propget'], HRESULT, 'Parent',
              ( ['out', 'retval'], POINTER(POINTER(IDispatch)), 'prop' )),
    COMMETHOD([dispid(1), 'propget'], HRESULT, 'Count',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(0)], HRESULT, 'Item',
              ( ['in'], POINTER(VARIANT), 'Index' ),
              ( ['out', 'retval'], POINTER(POINTER(BuildingBlock)), 'prop' )),
    COMMETHOD([dispid(101)], HRESULT, 'Add',
              ( ['in'], BSTR, 'Name' ),
              ( ['in'], POINTER(Range), 'Range' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'Description' ),
              ( ['in', 'optional'], WdDocPartInsertOptions, 'InsertOptions', 0 ),
              ( ['out', 'retval'], POINTER(POINTER(BuildingBlock)), 'prop' )),
]
################################################################
## code template for BuildingBlocks implementation
##class BuildingBlocks_Impl(object):
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Creator(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Count(self):
##        '-no docstring-'
##        #return prop
##
##    def Item(self, Index):
##        '-no docstring-'
##        #return prop
##
##    def Add(self, Name, Range, Description, InsertOptions):
##        '-no docstring-'
##        #return prop
##

OMathScrPre._methods_ = [
    COMMETHOD([dispid(100), 'propget'], HRESULT, 'Application',
              ( ['out', 'retval'], POINTER(POINTER(Application)), 'prop' )),
    COMMETHOD([dispid(101), 'propget'], HRESULT, 'Creator',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(102), 'propget'], HRESULT, 'Parent',
              ( ['out', 'retval'], POINTER(POINTER(IDispatch)), 'prop' )),
    COMMETHOD([dispid(103), 'propget'], HRESULT, 'Sub',
              ( ['out', 'retval'], POINTER(POINTER(OMath)), 'prop' )),
    COMMETHOD([dispid(104), 'propget'], HRESULT, 'Sup',
              ( ['out', 'retval'], POINTER(POINTER(OMath)), 'prop' )),
    COMMETHOD([dispid(105), 'propget'], HRESULT, 'E',
              ( ['out', 'retval'], POINTER(POINTER(OMath)), 'prop' )),
    COMMETHOD([dispid(201)], HRESULT, 'ToScrSubSup',
              ( ['out', 'retval'], POINTER(POINTER(OMathFunction)), 'prop' )),
]
################################################################
## code template for OMathScrPre implementation
##class OMathScrPre_Impl(object):
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Creator(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Sub(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Sup(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def E(self):
##        '-no docstring-'
##        #return prop
##
##    def ToScrSubSup(self):
##        '-no docstring-'
##        #return prop
##


# values for enumeration 'WdEditorType'
wdEditorEveryone = -1
wdEditorOwners = -4
wdEditorEditors = -5
wdEditorCurrent = -6
WdEditorType = c_int # enum

# values for enumeration 'WdCheckInVersionType'
wdCheckInMinorVersion = 0
wdCheckInMajorVersion = 1
wdCheckInOverwriteVersion = 2
WdCheckInVersionType = c_int # enum
FreeformBuilder._methods_ = [
    COMMETHOD([dispid(1000), 'propget'], HRESULT, 'Application',
              ( ['out', 'retval'], POINTER(POINTER(Application)), 'prop' )),
    COMMETHOD([dispid(1001), 'propget'], HRESULT, 'Creator',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(1), 'propget'], HRESULT, 'Parent',
              ( ['out', 'retval'], POINTER(POINTER(IDispatch)), 'prop' )),
    COMMETHOD([dispid(10)], HRESULT, 'AddNodes',
              ( ['in'], comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoSegmentType, 'SegmentType' ),
              ( ['in'], comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoEditingType, 'EditingType' ),
              ( ['in'], c_float, 'X1' ),
              ( ['in'], c_float, 'Y1' ),
              ( ['in', 'optional'], c_float, 'X2', 0.0 ),
              ( ['in', 'optional'], c_float, 'Y2', 0.0 ),
              ( ['in', 'optional'], c_float, 'X3', 0.0 ),
              ( ['in', 'optional'], c_float, 'Y3', 0.0 )),
    COMMETHOD([dispid(11)], HRESULT, 'ConvertToShape',
              ( ['in', 'optional'], POINTER(VARIANT), 'Anchor' ),
              ( ['out', 'retval'], POINTER(POINTER(Shape)), 'prop' )),
]
################################################################
## code template for FreeformBuilder implementation
##class FreeformBuilder_Impl(object):
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Creator(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return prop
##
##    def AddNodes(self, SegmentType, EditingType, X1, Y1, X2, Y2, X3, Y3):
##        '-no docstring-'
##        #return 
##
##    def ConvertToShape(self, Anchor):
##        '-no docstring-'
##        #return prop
##


# values for enumeration 'WdAlignmentTabRelative'
wdMargin = 0
wdIndent = 1
WdAlignmentTabRelative = c_int # enum

# values for enumeration 'XlHAlign'
xlHAlignCenter = -4108
xlHAlignCenterAcrossSelection = 7
xlHAlignDistributed = -4117
xlHAlignFill = 5
xlHAlignGeneral = 1
xlHAlignJustify = -4130
xlHAlignLeft = -4131
xlHAlignRight = -4152
XlHAlign = c_int # enum
List._methods_ = [
    COMMETHOD([dispid(1), 'propget'], HRESULT, 'Range',
              ( ['out', 'retval'], POINTER(POINTER(Range)), 'prop' )),
    COMMETHOD([dispid(2), 'propget'], HRESULT, 'ListParagraphs',
              ( ['out', 'retval'], POINTER(POINTER(ListParagraphs)), 'prop' )),
    COMMETHOD([dispid(3), 'propget'], HRESULT, 'SingleListTemplate',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'prop' )),
    COMMETHOD([dispid(1000), 'propget'], HRESULT, 'Application',
              ( ['out', 'retval'], POINTER(POINTER(Application)), 'prop' )),
    COMMETHOD([dispid(1001), 'propget'], HRESULT, 'Creator',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(1002), 'propget'], HRESULT, 'Parent',
              ( ['out', 'retval'], POINTER(POINTER(IDispatch)), 'prop' )),
    COMMETHOD([dispid(101)], HRESULT, 'ConvertNumbersToText',
              ( ['in', 'optional'], POINTER(VARIANT), 'NumberType' )),
    COMMETHOD([dispid(102)], HRESULT, 'RemoveNumbers',
              ( ['in', 'optional'], POINTER(VARIANT), 'NumberType' )),
    COMMETHOD([dispid(103)], HRESULT, 'CountNumberedItems',
              ( ['in', 'optional'], POINTER(VARIANT), 'NumberType' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'Level' ),
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(104), 'hidden'], HRESULT, 'ApplyListTemplateOld',
              ( ['in'], POINTER(ListTemplate), 'ListTemplate' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'ContinuePreviousList' )),
    COMMETHOD([dispid(105)], HRESULT, 'CanContinuePreviousList',
              ( ['in'], POINTER(ListTemplate), 'ListTemplate' ),
              ( ['out', 'retval'], POINTER(WdContinue), 'prop' )),
    COMMETHOD([dispid(106)], HRESULT, 'ApplyListTemplate',
              ( ['in'], POINTER(ListTemplate), 'ListTemplate' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'ContinuePreviousList' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'DefaultListBehavior' )),
    COMMETHOD([dispid(4), 'propget'], HRESULT, 'StyleName',
              ( ['out', 'retval'], POINTER(BSTR), 'prop' )),
    COMMETHOD([dispid(107)], HRESULT, 'ApplyListTemplateWithLevel',
              ( ['in'], POINTER(ListTemplate), 'ListTemplate' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'ContinuePreviousList' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'DefaultListBehavior' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'ApplyLevel' )),
]
################################################################
## code template for List implementation
##class List_Impl(object):
##    @property
##    def Range(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def ListParagraphs(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def SingleListTemplate(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Creator(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return prop
##
##    def ConvertNumbersToText(self, NumberType):
##        '-no docstring-'
##        #return 
##
##    def RemoveNumbers(self, NumberType):
##        '-no docstring-'
##        #return 
##
##    def CountNumberedItems(self, NumberType, Level):
##        '-no docstring-'
##        #return prop
##
##    def ApplyListTemplateOld(self, ListTemplate, ContinuePreviousList):
##        '-no docstring-'
##        #return 
##
##    def CanContinuePreviousList(self, ListTemplate):
##        '-no docstring-'
##        #return prop
##
##    def ApplyListTemplate(self, ListTemplate, ContinuePreviousList, DefaultListBehavior):
##        '-no docstring-'
##        #return 
##
##    @property
##    def StyleName(self):
##        '-no docstring-'
##        #return prop
##
##    def ApplyListTemplateWithLevel(self, ListTemplate, ContinuePreviousList, DefaultListBehavior, ApplyLevel):
##        '-no docstring-'
##        #return 
##


# values for enumeration 'XlChartSplitType'
xlSplitByPosition = 1
xlSplitByPercentValue = 3
xlSplitByCustomSplit = 4
xlSplitByValue = 2
XlChartSplitType = c_int # enum
OMathScrSubSup._methods_ = [
    COMMETHOD([dispid(100), 'propget'], HRESULT, 'Application',
              ( ['out', 'retval'], POINTER(POINTER(Application)), 'prop' )),
    COMMETHOD([dispid(101), 'propget'], HRESULT, 'Creator',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(102), 'propget'], HRESULT, 'Parent',
              ( ['out', 'retval'], POINTER(POINTER(IDispatch)), 'prop' )),
    COMMETHOD([dispid(103), 'propget'], HRESULT, 'E',
              ( ['out', 'retval'], POINTER(POINTER(OMath)), 'prop' )),
    COMMETHOD([dispid(104), 'propget'], HRESULT, 'Sub',
              ( ['out', 'retval'], POINTER(POINTER(OMath)), 'prop' )),
    COMMETHOD([dispid(105), 'propget'], HRESULT, 'Sup',
              ( ['out', 'retval'], POINTER(POINTER(OMath)), 'prop' )),
    COMMETHOD([dispid(106), 'propget'], HRESULT, 'AlignScripts',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'prop' )),
    COMMETHOD([dispid(106), 'propput'], HRESULT, 'AlignScripts',
              ( ['in'], VARIANT_BOOL, 'prop' )),
    COMMETHOD([dispid(200)], HRESULT, 'RemoveSub',
              ( ['out', 'retval'], POINTER(POINTER(OMathFunction)), 'prop' )),
    COMMETHOD([dispid(201)], HRESULT, 'RemoveSup',
              ( ['out', 'retval'], POINTER(POINTER(OMathFunction)), 'prop' )),
    COMMETHOD([dispid(202)], HRESULT, 'ToScrPre',
              ( ['out', 'retval'], POINTER(POINTER(OMathFunction)), 'prop' )),
]
################################################################
## code template for OMathScrSubSup implementation
##class OMathScrSubSup_Impl(object):
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Creator(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def E(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Sub(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Sup(self):
##        '-no docstring-'
##        #return prop
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    AlignScripts = property(_get, _set, doc = _set.__doc__)
##
##    def RemoveSub(self):
##        '-no docstring-'
##        #return prop
##
##    def RemoveSup(self):
##        '-no docstring-'
##        #return prop
##
##    def ToScrPre(self):
##        '-no docstring-'
##        #return prop
##


# values for enumeration 'WdMergeFormatFrom'
wdMergeFormatFromOriginal = 0
wdMergeFormatFromRevised = 1
wdMergeFormatFromPrompt = 2
WdMergeFormatFrom = c_int # enum

# values for enumeration 'WdAlignmentTabAlignment'
wdLeft = 0
wdCenter = 1
wdRight = 2
WdAlignmentTabAlignment = c_int # enum

# values for enumeration 'WdNewDocumentType'
wdNewBlankDocument = 0
wdNewWebPage = 1
wdNewEmailMessage = 2
wdNewFrameset = 3
wdNewXMLDocument = 4
WdNewDocumentType = c_int # enum
Break._methods_ = [
    COMMETHOD([dispid(1000), 'propget'], HRESULT, 'Application',
              ( ['out', 'retval'], POINTER(POINTER(Application)), 'prop' )),
    COMMETHOD([dispid(1001), 'propget'], HRESULT, 'Creator',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(1002), 'propget'], HRESULT, 'Parent',
              ( ['out', 'retval'], POINTER(POINTER(IDispatch)), 'prop' )),
    COMMETHOD([dispid(2), 'propget'], HRESULT, 'Range',
              ( ['out', 'retval'], POINTER(POINTER(Range)), 'prop' )),
    COMMETHOD([dispid(3), 'propget'], HRESULT, 'PageIndex',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
]
################################################################
## code template for Break implementation
##class Break_Impl(object):
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Creator(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Range(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def PageIndex(self):
##        '-no docstring-'
##        #return prop
##

class UpBars(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{86905AC9-33F3-4A88-96C8-B289B0390BCA}')
    _idlflags_ = ['dual', 'nonextensible', 'oleautomation']
ChartGroup._methods_ = [
    COMMETHOD([dispid(1610743808), 'propget'], HRESULT, 'AxisGroup',
              ( ['out', 'retval'], POINTER(XlAxisGroup), 'prop' )),
    COMMETHOD([dispid(1610743808), 'propput'], HRESULT, 'AxisGroup',
              ( ['in'], XlAxisGroup, 'prop' )),
    COMMETHOD([dispid(1610743810), 'propget'], HRESULT, 'DoughnutHoleSize',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(1610743810), 'propput'], HRESULT, 'DoughnutHoleSize',
              ( ['in'], c_int, 'prop' )),
    COMMETHOD([dispid(1610743812), 'propget'], HRESULT, 'DownBars',
              ( ['out', 'retval'], POINTER(POINTER(DownBars)), 'prop' )),
    COMMETHOD([dispid(1610743813), 'propget'], HRESULT, 'DropLines',
              ( ['out', 'retval'], POINTER(POINTER(DropLines)), 'prop' )),
    COMMETHOD([dispid(1610743814), 'propget'], HRESULT, 'FirstSliceAngle',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(1610743814), 'propput'], HRESULT, 'FirstSliceAngle',
              ( ['in'], c_int, 'prop' )),
    COMMETHOD([dispid(1610743816), 'propget'], HRESULT, 'GapWidth',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(1610743816), 'propput'], HRESULT, 'GapWidth',
              ( ['in'], c_int, 'prop' )),
    COMMETHOD([dispid(1610743818), 'propget'], HRESULT, 'HasDropLines',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'prop' )),
    COMMETHOD([dispid(1610743818), 'propput'], HRESULT, 'HasDropLines',
              ( ['in'], VARIANT_BOOL, 'prop' )),
    COMMETHOD([dispid(1610743820), 'propget'], HRESULT, 'HasHiLoLines',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'prop' )),
    COMMETHOD([dispid(1610743820), 'propput'], HRESULT, 'HasHiLoLines',
              ( ['in'], VARIANT_BOOL, 'prop' )),
    COMMETHOD([dispid(1610743822), 'propget'], HRESULT, 'HasRadarAxisLabels',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'prop' )),
    COMMETHOD([dispid(1610743822), 'propput'], HRESULT, 'HasRadarAxisLabels',
              ( ['in'], VARIANT_BOOL, 'prop' )),
    COMMETHOD([dispid(1610743824), 'propget'], HRESULT, 'HasSeriesLines',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'prop' )),
    COMMETHOD([dispid(1610743824), 'propput'], HRESULT, 'HasSeriesLines',
              ( ['in'], VARIANT_BOOL, 'prop' )),
    COMMETHOD([dispid(1610743826), 'propget'], HRESULT, 'HasUpDownBars',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'prop' )),
    COMMETHOD([dispid(1610743826), 'propput'], HRESULT, 'HasUpDownBars',
              ( ['in'], VARIANT_BOOL, 'prop' )),
    COMMETHOD([dispid(1610743828), 'propget'], HRESULT, 'HiLoLines',
              ( ['out', 'retval'], POINTER(POINTER(HiLoLines)), 'prop' )),
    COMMETHOD([dispid(1610743829), 'propget'], HRESULT, 'Index',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(1610743830), 'propget'], HRESULT, 'Overlap',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(1610743830), 'propput'], HRESULT, 'Overlap',
              ( ['in'], c_int, 'prop' )),
    COMMETHOD([dispid(1610743832), 'propget'], HRESULT, 'RadarAxisLabels',
              ( ['out', 'retval'], POINTER(POINTER(TickLabels)), 'prop' )),
    COMMETHOD([dispid(1610743833)], HRESULT, 'SeriesCollection',
              ( ['in', 'optional'], VARIANT, 'Index' ),
              ( ['out', 'retval'], POINTER(POINTER(IDispatch)), 'prop' )),
    COMMETHOD([dispid(1610743834), 'propget'], HRESULT, 'SeriesLines',
              ( ['out', 'retval'], POINTER(POINTER(SeriesLines)), 'prop' )),
    COMMETHOD([dispid(1610743835), 'hidden', 'propget'], HRESULT, 'SubType',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(1610743835), 'hidden', 'propput'], HRESULT, 'SubType',
              ( ['in'], c_int, 'prop' )),
    COMMETHOD([dispid(1610743837), 'hidden', 'propget'], HRESULT, 'Type',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(1610743837), 'hidden', 'propput'], HRESULT, 'Type',
              ( ['in'], c_int, 'prop' )),
    COMMETHOD([dispid(1610743839), 'propget'], HRESULT, 'UpBars',
              ( ['out', 'retval'], POINTER(POINTER(UpBars)), 'prop' )),
    COMMETHOD([dispid(1610743840), 'propget'], HRESULT, 'VaryByCategories',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'prop' )),
    COMMETHOD([dispid(1610743840), 'propput'], HRESULT, 'VaryByCategories',
              ( ['in'], VARIANT_BOOL, 'prop' )),
    COMMETHOD([dispid(1610743842), 'propget'], HRESULT, 'SizeRepresents',
              ( ['out', 'retval'], POINTER(XlSizeRepresents), 'prop' )),
    COMMETHOD([dispid(1610743842), 'propput'], HRESULT, 'SizeRepresents',
              ( ['in'], XlSizeRepresents, 'prop' )),
    COMMETHOD([dispid(1610743844), 'propget'], HRESULT, 'BubbleScale',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(1610743844), 'propput'], HRESULT, 'BubbleScale',
              ( ['in'], c_int, 'prop' )),
    COMMETHOD([dispid(1610743846), 'propget'], HRESULT, 'ShowNegativeBubbles',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'prop' )),
    COMMETHOD([dispid(1610743846), 'propput'], HRESULT, 'ShowNegativeBubbles',
              ( ['in'], VARIANT_BOOL, 'prop' )),
    COMMETHOD([dispid(1610743848), 'propget'], HRESULT, 'SplitType',
              ( ['out', 'retval'], POINTER(XlChartSplitType), 'prop' )),
    COMMETHOD([dispid(1610743848), 'propput'], HRESULT, 'SplitType',
              ( ['in'], XlChartSplitType, 'prop' )),
    COMMETHOD([dispid(1610743850), 'propget'], HRESULT, 'SplitValue',
              ( ['out', 'retval'], POINTER(VARIANT), 'prop' )),
    COMMETHOD([dispid(1610743850), 'propput'], HRESULT, 'SplitValue',
              ( ['in'], VARIANT, 'prop' )),
    COMMETHOD([dispid(1610743852), 'propget'], HRESULT, 'SecondPlotSize',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(1610743852), 'propput'], HRESULT, 'SecondPlotSize',
              ( ['in'], c_int, 'prop' )),
    COMMETHOD([dispid(1610743854), 'propget'], HRESULT, 'Has3DShading',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'prop' )),
    COMMETHOD([dispid(1610743854), 'propput'], HRESULT, 'Has3DShading',
              ( ['in'], VARIANT_BOOL, 'prop' )),
    COMMETHOD([dispid(148), 'propget'], HRESULT, 'Application',
              ( ['out', 'retval'], POINTER(POINTER(IDispatch)), 'prop' )),
    COMMETHOD([dispid(149), 'propget'], HRESULT, 'Creator',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(150), 'propget'], HRESULT, 'Parent',
              ( ['out', 'retval'], POINTER(POINTER(IDispatch)), 'prop' )),
    COMMETHOD([dispid(151)], HRESULT, 'CategoryCollection',
              ( ['in', 'optional'], VARIANT, 'Index' ),
              ( ['in', 'lcid'], c_int, 'lcid', _lcid ),
              ( ['out', 'retval'], POINTER(POINTER(IDispatch)), 'prop' )),
    COMMETHOD([dispid(152)], HRESULT, 'FullCategoryCollection',
              ( ['in', 'optional'], VARIANT, 'Index' ),
              ( ['in', 'lcid'], c_int, 'lcid', _lcid ),
              ( ['out', 'retval'], POINTER(POINTER(IDispatch)), 'prop' )),
    COMMETHOD([dispid(2891), 'propget'], HRESULT, 'BinsType',
              ( ['out', 'retval'], POINTER(XlBinsType), 'prop' )),
    COMMETHOD([dispid(2891), 'propput'], HRESULT, 'BinsType',
              ( ['in'], XlBinsType, 'prop' )),
    COMMETHOD([dispid(2892), 'propget'], HRESULT, 'BinWidthValue',
              ( ['out', 'retval'], POINTER(c_double), 'prop' )),
    COMMETHOD([dispid(2892), 'propput'], HRESULT, 'BinWidthValue',
              ( ['in'], c_double, 'prop' )),
    COMMETHOD([dispid(2893), 'propget'], HRESULT, 'BinsCountValue',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(2893), 'propput'], HRESULT, 'BinsCountValue',
              ( ['in'], c_int, 'prop' )),
    COMMETHOD([dispid(2894), 'propget'], HRESULT, 'BinsOverflowEnabled',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'prop' )),
    COMMETHOD([dispid(2894), 'propput'], HRESULT, 'BinsOverflowEnabled',
              ( ['in'], VARIANT_BOOL, 'prop' )),
    COMMETHOD([dispid(2895), 'propget'], HRESULT, 'BinsOverflowValue',
              ( ['out', 'retval'], POINTER(c_double), 'prop' )),
    COMMETHOD([dispid(2895), 'propput'], HRESULT, 'BinsOverflowValue',
              ( ['in'], c_double, 'prop' )),
    COMMETHOD([dispid(2896), 'propget'], HRESULT, 'BinsUnderflowEnabled',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'prop' )),
    COMMETHOD([dispid(2896), 'propput'], HRESULT, 'BinsUnderflowEnabled',
              ( ['in'], VARIANT_BOOL, 'prop' )),
    COMMETHOD([dispid(2897), 'propget'], HRESULT, 'BinsUnderflowValue',
              ( ['out', 'retval'], POINTER(c_double), 'prop' )),
    COMMETHOD([dispid(2897), 'propput'], HRESULT, 'BinsUnderflowValue',
              ( ['in'], c_double, 'prop' )),
]
################################################################
## code template for ChartGroup implementation
##class ChartGroup_Impl(object):
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    AxisGroup = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    DoughnutHoleSize = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def DownBars(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def DropLines(self):
##        '-no docstring-'
##        #return prop
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    FirstSliceAngle = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    GapWidth = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    HasDropLines = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    HasHiLoLines = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    HasRadarAxisLabels = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    HasSeriesLines = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    HasUpDownBars = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def HiLoLines(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Index(self):
##        '-no docstring-'
##        #return prop
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    Overlap = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def RadarAxisLabels(self):
##        '-no docstring-'
##        #return prop
##
##    def SeriesCollection(self, Index):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def SeriesLines(self):
##        '-no docstring-'
##        #return prop
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    SubType = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    Type = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def UpBars(self):
##        '-no docstring-'
##        #return prop
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    VaryByCategories = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    SizeRepresents = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    BubbleScale = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    ShowNegativeBubbles = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    SplitType = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    SplitValue = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    SecondPlotSize = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    Has3DShading = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Creator(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return prop
##
##    def CategoryCollection(self, Index, lcid):
##        '-no docstring-'
##        #return prop
##
##    def FullCategoryCollection(self, Index, lcid):
##        '-no docstring-'
##        #return prop
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    BinsType = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    BinWidthValue = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    BinsCountValue = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    BinsOverflowEnabled = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    BinsOverflowValue = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    BinsUnderflowEnabled = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    BinsUnderflowValue = property(_get, _set, doc = _set.__doc__)
##


# values for enumeration 'WdCollapseDirection'
wdCollapseStart = 1
wdCollapseEnd = 0
WdCollapseDirection = c_int # enum
KeyBindings._methods_ = [
    COMMETHOD([dispid(1000), 'propget'], HRESULT, 'Application',
              ( ['out', 'retval'], POINTER(POINTER(Application)), 'prop' )),
    COMMETHOD([dispid(1001), 'propget'], HRESULT, 'Creator',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(1002), 'propget'], HRESULT, 'Parent',
              ( ['out', 'retval'], POINTER(POINTER(IDispatch)), 'prop' )),
    COMMETHOD([dispid(-4), 'nonbrowsable', 'propget'], HRESULT, '_NewEnum',
              ( ['out', 'retval'], POINTER(POINTER(IUnknown)), 'prop' )),
    COMMETHOD([dispid(2), 'propget'], HRESULT, 'Count',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(10), 'propget'], HRESULT, 'Context',
              ( ['out', 'retval'], POINTER(POINTER(IDispatch)), 'prop' )),
    COMMETHOD([dispid(0)], HRESULT, 'Item',
              ( ['in'], c_int, 'Index' ),
              ( ['out', 'retval'], POINTER(POINTER(KeyBinding)), 'prop' )),
    COMMETHOD([dispid(101)], HRESULT, 'Add',
              ( ['in'], WdKeyCategory, 'KeyCategory' ),
              ( ['in'], BSTR, 'Command' ),
              ( ['in'], c_int, 'KeyCode' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'KeyCode2' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'CommandParameter' ),
              ( ['out', 'retval'], POINTER(POINTER(KeyBinding)), 'prop' )),
    COMMETHOD([dispid(102)], HRESULT, 'ClearAll'),
    COMMETHOD([dispid(110)], HRESULT, 'Key',
              ( ['in'], c_int, 'KeyCode' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'KeyCode2' ),
              ( ['out', 'retval'], POINTER(POINTER(KeyBinding)), 'prop' )),
]
################################################################
## code template for KeyBindings implementation
##class KeyBindings_Impl(object):
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Creator(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def _NewEnum(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Count(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Context(self):
##        '-no docstring-'
##        #return prop
##
##    def Item(self, Index):
##        '-no docstring-'
##        #return prop
##
##    def Add(self, KeyCategory, Command, KeyCode, KeyCode2, CommandParameter):
##        '-no docstring-'
##        #return prop
##
##    def ClearAll(self):
##        '-no docstring-'
##        #return 
##
##    def Key(self, KeyCode, KeyCode2):
##        '-no docstring-'
##        #return prop
##

ChartTitle._methods_ = [
    COMMETHOD([dispid(1610743808), 'propget'], HRESULT, 'Caption',
              ( ['out', 'retval'], POINTER(BSTR), 'prop' )),
    COMMETHOD([dispid(1610743808), 'propput'], HRESULT, 'Caption',
              ( ['in'], BSTR, 'prop' )),
    COMMETHOD([dispid(1610743810), 'propget'], HRESULT, 'Characters',
              ( ['in', 'optional'], VARIANT, 'Start' ),
              ( ['in', 'optional'], VARIANT, 'Length' ),
              ( ['out', 'retval'], POINTER(POINTER(ChartCharacters)), 'prop' )),
    COMMETHOD([dispid(1610743811), 'hidden', 'propget'], HRESULT, 'Font',
              ( ['out', 'retval'], POINTER(POINTER(ChartFont)), 'prop' )),
    COMMETHOD([dispid(1610743812), 'propget'], HRESULT, 'HorizontalAlignment',
              ( ['out', 'retval'], POINTER(VARIANT), 'prop' )),
    COMMETHOD([dispid(1610743812), 'propput'], HRESULT, 'HorizontalAlignment',
              ( ['in'], VARIANT, 'prop' )),
    COMMETHOD([dispid(1610743814), 'propget'], HRESULT, 'Left',
              ( ['out', 'retval'], POINTER(c_double), 'prop' )),
    COMMETHOD([dispid(1610743814), 'propput'], HRESULT, 'Left',
              ( ['in'], c_double, 'prop' )),
    COMMETHOD([dispid(1610743816), 'propget'], HRESULT, 'Orientation',
              ( ['out', 'retval'], POINTER(VARIANT), 'prop' )),
    COMMETHOD([dispid(1610743816), 'propput'], HRESULT, 'Orientation',
              ( ['in'], VARIANT, 'prop' )),
    COMMETHOD([dispid(1610743818), 'propget'], HRESULT, 'Shadow',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'prop' )),
    COMMETHOD([dispid(1610743818), 'propput'], HRESULT, 'Shadow',
              ( ['in'], VARIANT_BOOL, 'prop' )),
    COMMETHOD([dispid(1610743820), 'propget'], HRESULT, 'Text',
              ( ['out', 'retval'], POINTER(BSTR), 'prop' )),
    COMMETHOD([dispid(1610743820), 'propput'], HRESULT, 'Text',
              ( ['in'], BSTR, 'prop' )),
    COMMETHOD([dispid(1610743822), 'propget'], HRESULT, 'Top',
              ( ['out', 'retval'], POINTER(c_double), 'prop' )),
    COMMETHOD([dispid(1610743822), 'propput'], HRESULT, 'Top',
              ( ['in'], c_double, 'prop' )),
    COMMETHOD([dispid(1610743824), 'propget'], HRESULT, 'VerticalAlignment',
              ( ['out', 'retval'], POINTER(VARIANT), 'prop' )),
    COMMETHOD([dispid(1610743824), 'propput'], HRESULT, 'VerticalAlignment',
              ( ['in'], VARIANT, 'prop' )),
    COMMETHOD([dispid(1610743826), 'propget'], HRESULT, 'ReadingOrder',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(1610743826), 'propput'], HRESULT, 'ReadingOrder',
              ( ['in'], c_int, 'prop' )),
    COMMETHOD([dispid(1610743828), 'hidden', 'propget'], HRESULT, 'AutoScaleFont',
              ( ['out', 'retval'], POINTER(VARIANT), 'prop' )),
    COMMETHOD([dispid(1610743828), 'hidden', 'propput'], HRESULT, 'AutoScaleFont',
              ( ['in'], VARIANT, 'prop' )),
    COMMETHOD([dispid(1610743830), 'hidden', 'propget'], HRESULT, 'Interior',
              ( ['out', 'retval'], POINTER(POINTER(Interior)), 'prop' )),
    COMMETHOD([dispid(1610743831), 'hidden', 'propget'], HRESULT, 'Fill',
              ( ['out', 'retval'], POINTER(POINTER(ChartFillFormat)), 'prop' )),
    COMMETHOD([dispid(1610743832)], HRESULT, 'Delete',
              ( ['out', 'retval'], POINTER(VARIANT), 'prop' )),
    COMMETHOD([dispid(1610743833), 'hidden', 'propget'], HRESULT, 'Border',
              ( ['out', 'retval'], POINTER(POINTER(ChartBorder)), 'prop' )),
    COMMETHOD([dispid(1610743834), 'propget'], HRESULT, 'Name',
              ( ['out', 'retval'], POINTER(BSTR), 'prop' )),
    COMMETHOD([dispid(1610743835), 'propget'], HRESULT, 'Parent',
              ( ['out', 'retval'], POINTER(POINTER(IDispatch)), 'prop' )),
    COMMETHOD([dispid(1610743836)], HRESULT, 'Select',
              ( ['out', 'retval'], POINTER(VARIANT), 'prop' )),
    COMMETHOD([dispid(2418), 'propget'], HRESULT, 'IncludeInLayout',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'prop' )),
    COMMETHOD([dispid(2418), 'propput'], HRESULT, 'IncludeInLayout',
              ( ['in'], VARIANT_BOOL, 'prop' )),
    COMMETHOD([dispid(1671), 'propget'], HRESULT, 'Position',
              ( ['out', 'retval'], POINTER(XlChartElementPosition), 'prop' )),
    COMMETHOD([dispid(1671), 'propput'], HRESULT, 'Position',
              ( ['in'], XlChartElementPosition, 'prop' )),
    COMMETHOD([dispid(1610743841), 'propget'], HRESULT, 'Format',
              ( ['out', 'retval'], POINTER(POINTER(ChartFormat)), 'prop' )),
    COMMETHOD([dispid(148), 'propget'], HRESULT, 'Application',
              ( ['out', 'retval'], POINTER(POINTER(IDispatch)), 'prop' )),
    COMMETHOD([dispid(149), 'propget'], HRESULT, 'Creator',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(1610743842), 'propget'], HRESULT, 'Height',
              ( ['out', 'retval'], POINTER(c_double), 'prop' )),
    COMMETHOD([dispid(1610743845), 'propget'], HRESULT, 'Width',
              ( ['out', 'retval'], POINTER(c_double), 'prop' )),
    COMMETHOD([dispid(1610743846), 'propget'], HRESULT, 'Formula',
              ( ['out', 'retval'], POINTER(BSTR), 'prop' )),
    COMMETHOD([dispid(1610743846), 'propput'], HRESULT, 'Formula',
              ( ['in'], BSTR, 'prop' )),
    COMMETHOD([dispid(1610743848), 'propget'], HRESULT, 'FormulaR1C1',
              ( ['out', 'retval'], POINTER(BSTR), 'prop' )),
    COMMETHOD([dispid(1610743848), 'propput'], HRESULT, 'FormulaR1C1',
              ( ['in'], BSTR, 'prop' )),
    COMMETHOD([dispid(1610743850), 'propget'], HRESULT, 'FormulaLocal',
              ( ['out', 'retval'], POINTER(BSTR), 'prop' )),
    COMMETHOD([dispid(1610743850), 'propput'], HRESULT, 'FormulaLocal',
              ( ['in'], BSTR, 'prop' )),
    COMMETHOD([dispid(1610743852), 'propget'], HRESULT, 'FormulaR1C1Local',
              ( ['out', 'retval'], POINTER(BSTR), 'prop' )),
    COMMETHOD([dispid(1610743852), 'propput'], HRESULT, 'FormulaR1C1Local',
              ( ['in'], BSTR, 'prop' )),
    COMMETHOD([dispid(253)], HRESULT, 'SetProperty',
              ( ['in'], BSTR, 'ID' ),
              ( ['in'], VARIANT, 'Value' )),
    COMMETHOD([dispid(254)], HRESULT, 'GetProperty',
              ( ['in'], BSTR, 'ID' ),
              ( ['out', 'retval'], POINTER(VARIANT), 'prop' )),
]
################################################################
## code template for ChartTitle implementation
##class ChartTitle_Impl(object):
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    Caption = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Characters(self, Start, Length):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Font(self):
##        '-no docstring-'
##        #return prop
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    HorizontalAlignment = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    Left = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    Orientation = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    Shadow = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    Text = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    Top = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    VerticalAlignment = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    ReadingOrder = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    AutoScaleFont = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Interior(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Fill(self):
##        '-no docstring-'
##        #return prop
##
##    def Delete(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Border(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Name(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return prop
##
##    def Select(self):
##        '-no docstring-'
##        #return prop
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    IncludeInLayout = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    Position = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Format(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Creator(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Height(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Width(self):
##        '-no docstring-'
##        #return prop
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    Formula = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    FormulaR1C1 = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    FormulaLocal = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    FormulaR1C1Local = property(_get, _set, doc = _set.__doc__)
##
##    def SetProperty(self, ID, Value):
##        '-no docstring-'
##        #return 
##
##    def GetProperty(self, ID):
##        '-no docstring-'
##        #return prop
##

OMathBox._methods_ = [
    COMMETHOD([dispid(100), 'propget'], HRESULT, 'Application',
              ( ['out', 'retval'], POINTER(POINTER(Application)), 'prop' )),
    COMMETHOD([dispid(101), 'propget'], HRESULT, 'Creator',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(102), 'propget'], HRESULT, 'Parent',
              ( ['out', 'retval'], POINTER(POINTER(IDispatch)), 'prop' )),
    COMMETHOD([dispid(103), 'propget'], HRESULT, 'E',
              ( ['out', 'retval'], POINTER(POINTER(OMath)), 'prop' )),
    COMMETHOD([dispid(104), 'propget'], HRESULT, 'OpEmu',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'prop' )),
    COMMETHOD([dispid(104), 'propput'], HRESULT, 'OpEmu',
              ( ['in'], VARIANT_BOOL, 'prop' )),
    COMMETHOD([dispid(105), 'propget'], HRESULT, 'NoBreak',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'prop' )),
    COMMETHOD([dispid(105), 'propput'], HRESULT, 'NoBreak',
              ( ['in'], VARIANT_BOOL, 'prop' )),
    COMMETHOD([dispid(106), 'propget'], HRESULT, 'Diff',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'prop' )),
    COMMETHOD([dispid(106), 'propput'], HRESULT, 'Diff',
              ( ['in'], VARIANT_BOOL, 'prop' )),
]
################################################################
## code template for OMathBox implementation
##class OMathBox_Impl(object):
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Creator(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def E(self):
##        '-no docstring-'
##        #return prop
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    OpEmu = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    NoBreak = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    Diff = property(_get, _set, doc = _set.__doc__)
##

Page._methods_ = [
    COMMETHOD([dispid(1000), 'propget'], HRESULT, 'Application',
              ( ['out', 'retval'], POINTER(POINTER(Application)), 'prop' )),
    COMMETHOD([dispid(1001), 'propget'], HRESULT, 'Creator',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(1002), 'propget'], HRESULT, 'Parent',
              ( ['out', 'retval'], POINTER(POINTER(IDispatch)), 'prop' )),
    COMMETHOD([dispid(2), 'propget'], HRESULT, 'Left',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(3), 'propget'], HRESULT, 'Top',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(4), 'propget'], HRESULT, 'Width',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(5), 'propget'], HRESULT, 'Height',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(6), 'propget'], HRESULT, 'Rectangles',
              ( ['out', 'retval'], POINTER(POINTER(Rectangles)), 'prop' )),
    COMMETHOD([dispid(7), 'propget'], HRESULT, 'Breaks',
              ( ['out', 'retval'], POINTER(POINTER(Breaks)), 'prop' )),
    COMMETHOD([dispid(8), 'propget'], HRESULT, 'EnhMetaFileBits',
              ( ['out', 'retval'], POINTER(VARIANT), 'prop' )),
    COMMETHOD([dispid(200), 'hidden'], HRESULT, 'SaveAsPNG',
              ( ['in'], BSTR, 'FileName' )),
]
################################################################
## code template for Page implementation
##class Page_Impl(object):
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Creator(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Left(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Top(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Width(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Height(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Rectangles(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Breaks(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def EnhMetaFileBits(self):
##        '-no docstring-'
##        #return prop
##
##    def SaveAsPNG(self, FileName):
##        '-no docstring-'
##        #return 
##


# values for enumeration 'WdUpdateStyleListBehavior'
wdListBehaviorKeepPreviousPattern = 0
wdListBehaviorAddBulletsNumbering = 1
WdUpdateStyleListBehavior = c_int # enum
Shading._methods_ = [
    COMMETHOD([dispid(1000), 'propget'], HRESULT, 'Application',
              ( ['out', 'retval'], POINTER(POINTER(Application)), 'prop' )),
    COMMETHOD([dispid(1001), 'propget'], HRESULT, 'Creator',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(1002), 'propget'], HRESULT, 'Parent',
              ( ['out', 'retval'], POINTER(POINTER(IDispatch)), 'prop' )),
    COMMETHOD([dispid(1), 'propget'], HRESULT, 'ForegroundPatternColorIndex',
              ( ['out', 'retval'], POINTER(WdColorIndex), 'prop' )),
    COMMETHOD([dispid(1), 'propput'], HRESULT, 'ForegroundPatternColorIndex',
              ( ['in'], WdColorIndex, 'prop' )),
    COMMETHOD([dispid(2), 'propget'], HRESULT, 'BackgroundPatternColorIndex',
              ( ['out', 'retval'], POINTER(WdColorIndex), 'prop' )),
    COMMETHOD([dispid(2), 'propput'], HRESULT, 'BackgroundPatternColorIndex',
              ( ['in'], WdColorIndex, 'prop' )),
    COMMETHOD([dispid(3), 'propget'], HRESULT, 'Texture',
              ( ['out', 'retval'], POINTER(WdTextureIndex), 'prop' )),
    COMMETHOD([dispid(3), 'propput'], HRESULT, 'Texture',
              ( ['in'], WdTextureIndex, 'prop' )),
    COMMETHOD([dispid(4), 'propget'], HRESULT, 'ForegroundPatternColor',
              ( ['out', 'retval'], POINTER(WdColor), 'prop' )),
    COMMETHOD([dispid(4), 'propput'], HRESULT, 'ForegroundPatternColor',
              ( ['in'], WdColor, 'prop' )),
    COMMETHOD([dispid(5), 'propget'], HRESULT, 'BackgroundPatternColor',
              ( ['out', 'retval'], POINTER(WdColor), 'prop' )),
    COMMETHOD([dispid(5), 'propput'], HRESULT, 'BackgroundPatternColor',
              ( ['in'], WdColor, 'prop' )),
]
################################################################
## code template for Shading implementation
##class Shading_Impl(object):
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Creator(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return prop
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    ForegroundPatternColorIndex = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    BackgroundPatternColorIndex = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    Texture = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    ForegroundPatternColor = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    BackgroundPatternColor = property(_get, _set, doc = _set.__doc__)
##

GroupShapes._methods_ = [
    COMMETHOD([dispid(8000), 'propget'], HRESULT, 'Application',
              ( ['out', 'retval'], POINTER(POINTER(Application)), 'prop' )),
    COMMETHOD([dispid(8001), 'propget'], HRESULT, 'Creator',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(1), 'propget'], HRESULT, 'Parent',
              ( ['out', 'retval'], POINTER(POINTER(IDispatch)), 'prop' )),
    COMMETHOD([dispid(2), 'propget'], HRESULT, 'Count',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(-4), 'nonbrowsable', 'propget'], HRESULT, '_NewEnum',
              ( ['out', 'retval'], POINTER(POINTER(IUnknown)), 'prop' )),
    COMMETHOD([dispid(0)], HRESULT, 'Item',
              ( ['in'], POINTER(VARIANT), 'Index' ),
              ( ['out', 'retval'], POINTER(POINTER(Shape)), 'prop' )),
    COMMETHOD([dispid(10)], HRESULT, 'Range',
              ( ['in'], POINTER(VARIANT), 'Index' ),
              ( ['out', 'retval'], POINTER(POINTER(ShapeRange)), 'prop' )),
]
################################################################
## code template for GroupShapes implementation
##class GroupShapes_Impl(object):
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Creator(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Count(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def _NewEnum(self):
##        '-no docstring-'
##        #return prop
##
##    def Item(self, Index):
##        '-no docstring-'
##        #return prop
##
##    def Range(self, Index):
##        '-no docstring-'
##        #return prop
##


# values for enumeration 'WdPrintOutItem'
wdPrintDocumentContent = 0
wdPrintProperties = 1
wdPrintComments = 2
wdPrintMarkup = 2
wdPrintStyles = 3
wdPrintAutoTextEntries = 4
wdPrintKeyAssignments = 5
wdPrintEnvelope = 6
wdPrintDocumentWithMarkup = 7
WdPrintOutItem = c_int # enum
Table._methods_ = [
    COMMETHOD([dispid(0), 'propget'], HRESULT, 'Range',
              ( ['out', 'retval'], POINTER(POINTER(Range)), 'prop' )),
    COMMETHOD([dispid(1000), 'propget'], HRESULT, 'Application',
              ( ['out', 'retval'], POINTER(POINTER(Application)), 'prop' )),
    COMMETHOD([dispid(1001), 'propget'], HRESULT, 'Creator',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(1002), 'propget'], HRESULT, 'Parent',
              ( ['out', 'retval'], POINTER(POINTER(IDispatch)), 'prop' )),
    COMMETHOD([dispid(100), 'propget'], HRESULT, 'Columns',
              ( ['out', 'retval'], POINTER(POINTER(Columns)), 'prop' )),
    COMMETHOD([dispid(101), 'propget'], HRESULT, 'Rows',
              ( ['out', 'retval'], POINTER(POINTER(Rows)), 'prop' )),
    COMMETHOD([dispid(1100), 'propget'], HRESULT, 'Borders',
              ( ['out', 'retval'], POINTER(POINTER(Borders)), 'prop' )),
    COMMETHOD([dispid(1100), 'propput'], HRESULT, 'Borders',
              ( ['in'], POINTER(Borders), 'prop' )),
    COMMETHOD([dispid(104), 'propget'], HRESULT, 'Shading',
              ( ['out', 'retval'], POINTER(POINTER(Shading)), 'prop' )),
    COMMETHOD([dispid(105), 'propget'], HRESULT, 'Uniform',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'prop' )),
    COMMETHOD([dispid(106), 'propget'], HRESULT, 'AutoFormatType',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(200)], HRESULT, 'Select'),
    COMMETHOD([dispid(9)], HRESULT, 'Delete'),
    COMMETHOD([dispid(10), 'hidden'], HRESULT, 'SortOld',
              ( ['in', 'optional'], POINTER(VARIANT), 'ExcludeHeader' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'FieldNumber' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'SortFieldType' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'SortOrder' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'FieldNumber2' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'SortFieldType2' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'SortOrder2' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'FieldNumber3' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'SortFieldType3' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'SortOrder3' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'CaseSensitive' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'LanguageID' )),
    COMMETHOD([dispid(12)], HRESULT, 'SortAscending'),
    COMMETHOD([dispid(13)], HRESULT, 'SortDescending'),
    COMMETHOD([dispid(14)], HRESULT, 'AutoFormat',
              ( ['in', 'optional'], POINTER(VARIANT), 'Format' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'ApplyBorders' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'ApplyShading' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'ApplyFont' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'ApplyColor' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'ApplyHeadingRows' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'ApplyLastRow' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'ApplyFirstColumn' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'ApplyLastColumn' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'AutoFit' )),
    COMMETHOD([dispid(15)], HRESULT, 'UpdateAutoFormat'),
    COMMETHOD([dispid(16), 'hidden'], HRESULT, 'ConvertToTextOld',
              ( ['in', 'optional'], POINTER(VARIANT), 'Separator' ),
              ( ['out', 'retval'], POINTER(POINTER(Range)), 'prop' )),
    COMMETHOD([dispid(17)], HRESULT, 'Cell',
              ( ['in'], c_int, 'Row' ),
              ( ['in'], c_int, 'Column' ),
              ( ['out', 'retval'], POINTER(POINTER(Cell)), 'prop' )),
    COMMETHOD([dispid(18)], HRESULT, 'Split',
              ( ['in'], POINTER(VARIANT), 'BeforeRow' ),
              ( ['out', 'retval'], POINTER(POINTER(Table)), 'prop' )),
    COMMETHOD([dispid(19)], HRESULT, 'ConvertToText',
              ( ['in', 'optional'], POINTER(VARIANT), 'Separator' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'NestedTables' ),
              ( ['out', 'retval'], POINTER(POINTER(Range)), 'prop' )),
    COMMETHOD([dispid(20)], HRESULT, 'AutoFitBehavior',
              ( ['in'], WdAutoFitBehavior, 'Behavior' )),
    COMMETHOD([dispid(23)], HRESULT, 'Sort',
              ( ['in', 'optional'], POINTER(VARIANT), 'ExcludeHeader' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'FieldNumber' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'SortFieldType' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'SortOrder' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'FieldNumber2' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'SortFieldType2' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'SortOrder2' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'FieldNumber3' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'SortFieldType3' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'SortOrder3' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'CaseSensitive' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'BidiSort' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'IgnoreThe' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'IgnoreKashida' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'IgnoreDiacritics' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'IgnoreHe' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'LanguageID' )),
    COMMETHOD([dispid(107), 'propget'], HRESULT, 'Tables',
              ( ['out', 'retval'], POINTER(POINTER(Tables)), 'prop' )),
    COMMETHOD([dispid(108), 'propget'], HRESULT, 'NestingLevel',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(109), 'hidden', 'propget'], HRESULT, 'AllowPageBreaks',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'prop' )),
    COMMETHOD([dispid(109), 'hidden', 'propput'], HRESULT, 'AllowPageBreaks',
              ( ['in'], VARIANT_BOOL, 'prop' )),
    COMMETHOD([dispid(110), 'propget'], HRESULT, 'AllowAutoFit',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'prop' )),
    COMMETHOD([dispid(110), 'propput'], HRESULT, 'AllowAutoFit',
              ( ['in'], VARIANT_BOOL, 'prop' )),
    COMMETHOD([dispid(111), 'propget'], HRESULT, 'PreferredWidth',
              ( ['out', 'retval'], POINTER(c_float), 'prop' )),
    COMMETHOD([dispid(111), 'propput'], HRESULT, 'PreferredWidth',
              ( ['in'], c_float, 'prop' )),
    COMMETHOD([dispid(112), 'propget'], HRESULT, 'PreferredWidthType',
              ( ['out', 'retval'], POINTER(WdPreferredWidthType), 'prop' )),
    COMMETHOD([dispid(112), 'propput'], HRESULT, 'PreferredWidthType',
              ( ['in'], WdPreferredWidthType, 'prop' )),
    COMMETHOD([dispid(113), 'propget'], HRESULT, 'TopPadding',
              ( ['out', 'retval'], POINTER(c_float), 'prop' )),
    COMMETHOD([dispid(113), 'propput'], HRESULT, 'TopPadding',
              ( ['in'], c_float, 'prop' )),
    COMMETHOD([dispid(114), 'propget'], HRESULT, 'BottomPadding',
              ( ['out', 'retval'], POINTER(c_float), 'prop' )),
    COMMETHOD([dispid(114), 'propput'], HRESULT, 'BottomPadding',
              ( ['in'], c_float, 'prop' )),
    COMMETHOD([dispid(115), 'propget'], HRESULT, 'LeftPadding',
              ( ['out', 'retval'], POINTER(c_float), 'prop' )),
    COMMETHOD([dispid(115), 'propput'], HRESULT, 'LeftPadding',
              ( ['in'], c_float, 'prop' )),
    COMMETHOD([dispid(116), 'propget'], HRESULT, 'RightPadding',
              ( ['out', 'retval'], POINTER(c_float), 'prop' )),
    COMMETHOD([dispid(116), 'propput'], HRESULT, 'RightPadding',
              ( ['in'], c_float, 'prop' )),
    COMMETHOD([dispid(117), 'propget'], HRESULT, 'Spacing',
              ( ['out', 'retval'], POINTER(c_float), 'prop' )),
    COMMETHOD([dispid(117), 'propput'], HRESULT, 'Spacing',
              ( ['in'], c_float, 'prop' )),
    COMMETHOD([dispid(118), 'propget'], HRESULT, 'TableDirection',
              ( ['out', 'retval'], POINTER(WdTableDirection), 'prop' )),
    COMMETHOD([dispid(118), 'propput'], HRESULT, 'TableDirection',
              ( ['in'], WdTableDirection, 'prop' )),
    COMMETHOD([dispid(119), 'propget'], HRESULT, 'ID',
              ( ['out', 'retval'], POINTER(BSTR), 'prop' )),
    COMMETHOD([dispid(119), 'propput'], HRESULT, 'ID',
              ( ['in'], BSTR, 'prop' )),
    COMMETHOD([dispid(201), 'propget'], HRESULT, 'Style',
              ( ['out', 'retval'], POINTER(VARIANT), 'prop' )),
    COMMETHOD([dispid(201), 'propput'], HRESULT, 'Style',
              ( ['in'], POINTER(VARIANT), 'prop' )),
    COMMETHOD([dispid(202), 'propget'], HRESULT, 'ApplyStyleHeadingRows',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'prop' )),
    COMMETHOD([dispid(202), 'propput'], HRESULT, 'ApplyStyleHeadingRows',
              ( ['in'], VARIANT_BOOL, 'prop' )),
    COMMETHOD([dispid(203), 'propget'], HRESULT, 'ApplyStyleLastRow',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'prop' )),
    COMMETHOD([dispid(203), 'propput'], HRESULT, 'ApplyStyleLastRow',
              ( ['in'], VARIANT_BOOL, 'prop' )),
    COMMETHOD([dispid(204), 'propget'], HRESULT, 'ApplyStyleFirstColumn',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'prop' )),
    COMMETHOD([dispid(204), 'propput'], HRESULT, 'ApplyStyleFirstColumn',
              ( ['in'], VARIANT_BOOL, 'prop' )),
    COMMETHOD([dispid(205), 'propget'], HRESULT, 'ApplyStyleLastColumn',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'prop' )),
    COMMETHOD([dispid(205), 'propput'], HRESULT, 'ApplyStyleLastColumn',
              ( ['in'], VARIANT_BOOL, 'prop' )),
    COMMETHOD([dispid(206), 'propget'], HRESULT, 'ApplyStyleRowBands',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'prop' )),
    COMMETHOD([dispid(206), 'propput'], HRESULT, 'ApplyStyleRowBands',
              ( ['in'], VARIANT_BOOL, 'prop' )),
    COMMETHOD([dispid(207), 'propget'], HRESULT, 'ApplyStyleColumnBands',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'prop' )),
    COMMETHOD([dispid(207), 'propput'], HRESULT, 'ApplyStyleColumnBands',
              ( ['in'], VARIANT_BOOL, 'prop' )),
    COMMETHOD([dispid(208)], HRESULT, 'ApplyStyleDirectFormatting',
              ( ['in'], BSTR, 'StyleName' )),
    COMMETHOD([dispid(209), 'propget'], HRESULT, 'Title',
              ( ['out', 'retval'], POINTER(BSTR), 'prop' )),
    COMMETHOD([dispid(209), 'propput'], HRESULT, 'Title',
              ( ['in'], BSTR, 'prop' )),
    COMMETHOD([dispid(210), 'propget'], HRESULT, 'Descr',
              ( ['out', 'retval'], POINTER(BSTR), 'prop' )),
    COMMETHOD([dispid(210), 'propput'], HRESULT, 'Descr',
              ( ['in'], BSTR, 'prop' )),
]
################################################################
## code template for Table implementation
##class Table_Impl(object):
##    @property
##    def Range(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Creator(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Columns(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Rows(self):
##        '-no docstring-'
##        #return prop
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    Borders = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Shading(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Uniform(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def AutoFormatType(self):
##        '-no docstring-'
##        #return prop
##
##    def Select(self):
##        '-no docstring-'
##        #return 
##
##    def Delete(self):
##        '-no docstring-'
##        #return 
##
##    def SortOld(self, ExcludeHeader, FieldNumber, SortFieldType, SortOrder, FieldNumber2, SortFieldType2, SortOrder2, FieldNumber3, SortFieldType3, SortOrder3, CaseSensitive, LanguageID):
##        '-no docstring-'
##        #return 
##
##    def SortAscending(self):
##        '-no docstring-'
##        #return 
##
##    def SortDescending(self):
##        '-no docstring-'
##        #return 
##
##    def AutoFormat(self, Format, ApplyBorders, ApplyShading, ApplyFont, ApplyColor, ApplyHeadingRows, ApplyLastRow, ApplyFirstColumn, ApplyLastColumn, AutoFit):
##        '-no docstring-'
##        #return 
##
##    def UpdateAutoFormat(self):
##        '-no docstring-'
##        #return 
##
##    def ConvertToTextOld(self, Separator):
##        '-no docstring-'
##        #return prop
##
##    def Cell(self, Row, Column):
##        '-no docstring-'
##        #return prop
##
##    def Split(self, BeforeRow):
##        '-no docstring-'
##        #return prop
##
##    def ConvertToText(self, Separator, NestedTables):
##        '-no docstring-'
##        #return prop
##
##    def AutoFitBehavior(self, Behavior):
##        '-no docstring-'
##        #return 
##
##    def Sort(self, ExcludeHeader, FieldNumber, SortFieldType, SortOrder, FieldNumber2, SortFieldType2, SortOrder2, FieldNumber3, SortFieldType3, SortOrder3, CaseSensitive, BidiSort, IgnoreThe, IgnoreKashida, IgnoreDiacritics, IgnoreHe, LanguageID):
##        '-no docstring-'
##        #return 
##
##    @property
##    def Tables(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def NestingLevel(self):
##        '-no docstring-'
##        #return prop
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    AllowPageBreaks = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    AllowAutoFit = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    PreferredWidth = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    PreferredWidthType = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    TopPadding = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    BottomPadding = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    LeftPadding = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    RightPadding = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    Spacing = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    TableDirection = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    ID = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    Style = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    ApplyStyleHeadingRows = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    ApplyStyleLastRow = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    ApplyStyleFirstColumn = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    ApplyStyleLastColumn = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    ApplyStyleRowBands = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    ApplyStyleColumnBands = property(_get, _set, doc = _set.__doc__)
##
##    def ApplyStyleDirectFormatting(self, StyleName):
##        '-no docstring-'
##        #return 
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    Title = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    Descr = property(_get, _set, doc = _set.__doc__)
##

Lists._methods_ = [
    COMMETHOD([dispid(-4), 'nonbrowsable', 'propget'], HRESULT, '_NewEnum',
              ( ['out', 'retval'], POINTER(POINTER(IUnknown)), 'prop' )),
    COMMETHOD([dispid(2), 'propget'], HRESULT, 'Count',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(1000), 'propget'], HRESULT, 'Application',
              ( ['out', 'retval'], POINTER(POINTER(Application)), 'prop' )),
    COMMETHOD([dispid(1001), 'propget'], HRESULT, 'Creator',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(1002), 'propget'], HRESULT, 'Parent',
              ( ['out', 'retval'], POINTER(POINTER(IDispatch)), 'prop' )),
    COMMETHOD([dispid(0)], HRESULT, 'Item',
              ( ['in'], c_int, 'Index' ),
              ( ['out', 'retval'], POINTER(POINTER(List)), 'prop' )),
]
################################################################
## code template for Lists implementation
##class Lists_Impl(object):
##    @property
##    def _NewEnum(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Count(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Creator(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return prop
##
##    def Item(self, Index):
##        '-no docstring-'
##        #return prop
##

LeaderLines._methods_ = [
    COMMETHOD([dispid(235)], HRESULT, 'Select'),
    COMMETHOD([dispid(128), 'propget'], HRESULT, 'Border',
              ( ['out', 'retval'], POINTER(POINTER(ChartBorder)), 'prop' )),
    COMMETHOD([dispid(117)], HRESULT, 'Delete'),
    COMMETHOD([dispid(1610743811), 'propget'], HRESULT, 'Format',
              ( ['out', 'retval'], POINTER(POINTER(ChartFormat)), 'prop' )),
    COMMETHOD([dispid(148), 'propget'], HRESULT, 'Application',
              ( ['out', 'retval'], POINTER(POINTER(IDispatch)), 'prop' )),
    COMMETHOD([dispid(149), 'propget'], HRESULT, 'Creator',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(150), 'propget'], HRESULT, 'Parent',
              ( ['out', 'retval'], POINTER(POINTER(IDispatch)), 'prop' )),
]
################################################################
## code template for LeaderLines implementation
##class LeaderLines_Impl(object):
##    def Select(self):
##        '-no docstring-'
##        #return 
##
##    @property
##    def Border(self):
##        '-no docstring-'
##        #return prop
##
##    def Delete(self):
##        '-no docstring-'
##        #return 
##
##    @property
##    def Format(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Creator(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return prop
##

class IApplicationEvents4(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{00020A01-0001-0000-C000-000000000046}')
    _idlflags_ = ['hidden']
IApplicationEvents4._methods_ = [
    COMMETHOD(['restricted', 'hidden'], HRESULT, 'Startup'),
    COMMETHOD([], HRESULT, 'Quit'),
    COMMETHOD([], HRESULT, 'DocumentChange'),
    COMMETHOD([], HRESULT, 'DocumentOpen',
              ( ['in'], POINTER(Document), 'Doc' )),
    COMMETHOD([], HRESULT, 'DocumentBeforeClose',
              ( ['in'], POINTER(Document), 'Doc' ),
              ( ['in', 'out'], POINTER(VARIANT_BOOL), 'Cancel' )),
    COMMETHOD([], HRESULT, 'DocumentBeforePrint',
              ( ['in'], POINTER(Document), 'Doc' ),
              ( ['in', 'out'], POINTER(VARIANT_BOOL), 'Cancel' )),
    COMMETHOD([], HRESULT, 'DocumentBeforeSave',
              ( ['in'], POINTER(Document), 'Doc' ),
              ( ['in'], POINTER(VARIANT_BOOL), 'SaveAsUI' ),
              ( ['in', 'out'], POINTER(VARIANT_BOOL), 'Cancel' )),
    COMMETHOD([], HRESULT, 'NewDocument',
              ( ['in'], POINTER(Document), 'Doc' )),
    COMMETHOD([], HRESULT, 'WindowActivate',
              ( ['in'], POINTER(Document), 'Doc' ),
              ( ['in'], POINTER(Window), 'Wn' )),
    COMMETHOD([], HRESULT, 'WindowDeactivate',
              ( ['in'], POINTER(Document), 'Doc' ),
              ( ['in'], POINTER(Window), 'Wn' )),
    COMMETHOD([], HRESULT, 'WindowSelectionChange',
              ( ['in'], POINTER(Selection), 'Sel' )),
    COMMETHOD([], HRESULT, 'WindowBeforeRightClick',
              ( ['in'], POINTER(Selection), 'Sel' ),
              ( ['in', 'out'], POINTER(VARIANT_BOOL), 'Cancel' )),
    COMMETHOD([], HRESULT, 'WindowBeforeDoubleClick',
              ( ['in'], POINTER(Selection), 'Sel' ),
              ( ['in', 'out'], POINTER(VARIANT_BOOL), 'Cancel' )),
    COMMETHOD([], HRESULT, 'EPostagePropertyDialog',
              ( ['in'], POINTER(Document), 'Doc' )),
    COMMETHOD([], HRESULT, 'EPostageInsert',
              ( ['in'], POINTER(Document), 'Doc' )),
    COMMETHOD([], HRESULT, 'MailMergeAfterMerge',
              ( ['in'], POINTER(Document), 'Doc' ),
              ( ['in'], POINTER(Document), 'DocResult' )),
    COMMETHOD([], HRESULT, 'MailMergeAfterRecordMerge',
              ( ['in'], POINTER(Document), 'Doc' )),
    COMMETHOD([], HRESULT, 'MailMergeBeforeMerge',
              ( ['in'], POINTER(Document), 'Doc' ),
              ( ['in'], c_int, 'StartRecord' ),
              ( ['in'], c_int, 'EndRecord' ),
              ( ['in', 'out'], POINTER(VARIANT_BOOL), 'Cancel' )),
    COMMETHOD([], HRESULT, 'MailMergeBeforeRecordMerge',
              ( ['in'], POINTER(Document), 'Doc' ),
              ( ['in', 'out'], POINTER(VARIANT_BOOL), 'Cancel' )),
    COMMETHOD([], HRESULT, 'MailMergeDataSourceLoad',
              ( ['in'], POINTER(Document), 'Doc' )),
    COMMETHOD([], HRESULT, 'MailMergeDataSourceValidate',
              ( ['in'], POINTER(Document), 'Doc' ),
              ( ['in'], POINTER(VARIANT_BOOL), 'Handled' )),
    COMMETHOD([], HRESULT, 'MailMergeWizardSendToCustom',
              ( ['in'], POINTER(Document), 'Doc' )),
    COMMETHOD([], HRESULT, 'MailMergeWizardStateChange',
              ( ['in'], POINTER(Document), 'Doc' ),
              ( ['in'], POINTER(c_int), 'FromState' ),
              ( ['in'], POINTER(c_int), 'ToState' ),
              ( ['in'], POINTER(VARIANT_BOOL), 'Handled' )),
    COMMETHOD([], HRESULT, 'WindowSize',
              ( ['in'], POINTER(Document), 'Doc' ),
              ( ['in'], POINTER(Window), 'Wn' )),
    COMMETHOD([], HRESULT, 'XMLSelectionChange',
              ( ['in'], POINTER(Selection), 'Sel' ),
              ( ['in'], POINTER(XMLNode), 'OldXMLNode' ),
              ( ['in'], POINTER(XMLNode), 'NewXMLNode' ),
              ( ['in'], POINTER(c_int), 'Reason' )),
    COMMETHOD([], HRESULT, 'XMLValidationError',
              ( ['in'], POINTER(XMLNode), 'XMLNode' )),
    COMMETHOD([], HRESULT, 'DocumentSync',
              ( ['in'], POINTER(Document), 'Doc' ),
              ( ['in'], comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoSyncEventType, 'SyncEventType' )),
    COMMETHOD([], HRESULT, 'EPostageInsertEx',
              ( ['in'], POINTER(Document), 'Doc' ),
              ( ['in'], c_int, 'cpDeliveryAddrStart' ),
              ( ['in'], c_int, 'cpDeliveryAddrEnd' ),
              ( ['in'], c_int, 'cpReturnAddrStart' ),
              ( ['in'], c_int, 'cpReturnAddrEnd' ),
              ( ['in'], c_int, 'xaWidth' ),
              ( ['in'], c_int, 'yaHeight' ),
              ( ['in'], BSTR, 'bstrPrinterName' ),
              ( ['in'], BSTR, 'bstrPaperFeed' ),
              ( ['in'], VARIANT_BOOL, 'fPrint' ),
              ( ['in', 'out'], POINTER(VARIANT_BOOL), 'fCancel' )),
    COMMETHOD([], HRESULT, 'MailMergeDataSourceValidate2',
              ( ['in'], POINTER(Document), 'Doc' ),
              ( ['in', 'out'], POINTER(VARIANT_BOOL), 'Handled' )),
    COMMETHOD([], HRESULT, 'ProtectedViewWindowOpen',
              ( ['in'], POINTER(ProtectedViewWindow), 'PvWindow' )),
    COMMETHOD([], HRESULT, 'ProtectedViewWindowBeforeEdit',
              ( ['in'], POINTER(ProtectedViewWindow), 'PvWindow' ),
              ( ['in', 'out'], POINTER(VARIANT_BOOL), 'Cancel' )),
    COMMETHOD([], HRESULT, 'ProtectedViewWindowBeforeClose',
              ( ['in'], POINTER(ProtectedViewWindow), 'PvWindow' ),
              ( ['in'], c_int, 'CloseReason' ),
              ( ['in', 'out'], POINTER(VARIANT_BOOL), 'Cancel' )),
    COMMETHOD([], HRESULT, 'ProtectedViewWindowSize',
              ( ['in'], POINTER(ProtectedViewWindow), 'PvWindow' )),
    COMMETHOD([], HRESULT, 'ProtectedViewWindowActivate',
              ( ['in'], POINTER(ProtectedViewWindow), 'PvWindow' )),
    COMMETHOD([], HRESULT, 'ProtectedViewWindowDeactivate',
              ( ['in'], POINTER(ProtectedViewWindow), 'PvWindow' )),
]
################################################################
## code template for IApplicationEvents4 implementation
##class IApplicationEvents4_Impl(object):
##    def Startup(self):
##        '-no docstring-'
##        #return 
##
##    def Quit(self):
##        '-no docstring-'
##        #return 
##
##    def DocumentChange(self):
##        '-no docstring-'
##        #return 
##
##    def DocumentOpen(self, Doc):
##        '-no docstring-'
##        #return 
##
##    def DocumentBeforeClose(self, Doc):
##        '-no docstring-'
##        #return Cancel
##
##    def DocumentBeforePrint(self, Doc):
##        '-no docstring-'
##        #return Cancel
##
##    def DocumentBeforeSave(self, Doc, SaveAsUI):
##        '-no docstring-'
##        #return Cancel
##
##    def NewDocument(self, Doc):
##        '-no docstring-'
##        #return 
##
##    def WindowActivate(self, Doc, Wn):
##        '-no docstring-'
##        #return 
##
##    def WindowDeactivate(self, Doc, Wn):
##        '-no docstring-'
##        #return 
##
##    def WindowSelectionChange(self, Sel):
##        '-no docstring-'
##        #return 
##
##    def WindowBeforeRightClick(self, Sel):
##        '-no docstring-'
##        #return Cancel
##
##    def WindowBeforeDoubleClick(self, Sel):
##        '-no docstring-'
##        #return Cancel
##
##    def EPostagePropertyDialog(self, Doc):
##        '-no docstring-'
##        #return 
##
##    def EPostageInsert(self, Doc):
##        '-no docstring-'
##        #return 
##
##    def MailMergeAfterMerge(self, Doc, DocResult):
##        '-no docstring-'
##        #return 
##
##    def MailMergeAfterRecordMerge(self, Doc):
##        '-no docstring-'
##        #return 
##
##    def MailMergeBeforeMerge(self, Doc, StartRecord, EndRecord):
##        '-no docstring-'
##        #return Cancel
##
##    def MailMergeBeforeRecordMerge(self, Doc):
##        '-no docstring-'
##        #return Cancel
##
##    def MailMergeDataSourceLoad(self, Doc):
##        '-no docstring-'
##        #return 
##
##    def MailMergeDataSourceValidate(self, Doc, Handled):
##        '-no docstring-'
##        #return 
##
##    def MailMergeWizardSendToCustom(self, Doc):
##        '-no docstring-'
##        #return 
##
##    def MailMergeWizardStateChange(self, Doc, FromState, ToState, Handled):
##        '-no docstring-'
##        #return 
##
##    def WindowSize(self, Doc, Wn):
##        '-no docstring-'
##        #return 
##
##    def XMLSelectionChange(self, Sel, OldXMLNode, NewXMLNode, Reason):
##        '-no docstring-'
##        #return 
##
##    def XMLValidationError(self, XMLNode):
##        '-no docstring-'
##        #return 
##
##    def DocumentSync(self, Doc, SyncEventType):
##        '-no docstring-'
##        #return 
##
##    def EPostageInsertEx(self, Doc, cpDeliveryAddrStart, cpDeliveryAddrEnd, cpReturnAddrStart, cpReturnAddrEnd, xaWidth, yaHeight, bstrPrinterName, bstrPaperFeed, fPrint):
##        '-no docstring-'
##        #return fCancel
##
##    def MailMergeDataSourceValidate2(self, Doc):
##        '-no docstring-'
##        #return Handled
##
##    def ProtectedViewWindowOpen(self, PvWindow):
##        '-no docstring-'
##        #return 
##
##    def ProtectedViewWindowBeforeEdit(self, PvWindow):
##        '-no docstring-'
##        #return Cancel
##
##    def ProtectedViewWindowBeforeClose(self, PvWindow, CloseReason):
##        '-no docstring-'
##        #return Cancel
##
##    def ProtectedViewWindowSize(self, PvWindow):
##        '-no docstring-'
##        #return 
##
##    def ProtectedViewWindowActivate(self, PvWindow):
##        '-no docstring-'
##        #return 
##
##    def ProtectedViewWindowDeactivate(self, PvWindow):
##        '-no docstring-'
##        #return 
##


# values for enumeration 'XlChartPicturePlacement'
xlSides = 1
xlEnd = 2
xlEndSides = 3
xlFront = 4
xlFrontSides = 5
xlFrontEnd = 6
xlAllFaces = 7
XlChartPicturePlacement = c_int # enum
Endnotes._methods_ = [
    COMMETHOD([dispid(-4), 'nonbrowsable', 'propget'], HRESULT, '_NewEnum',
              ( ['out', 'retval'], POINTER(POINTER(IUnknown)), 'prop' )),
    COMMETHOD([dispid(2), 'propget'], HRESULT, 'Count',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(1000), 'propget'], HRESULT, 'Application',
              ( ['out', 'retval'], POINTER(POINTER(Application)), 'prop' )),
    COMMETHOD([dispid(1001), 'propget'], HRESULT, 'Creator',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(1002), 'propget'], HRESULT, 'Parent',
              ( ['out', 'retval'], POINTER(POINTER(IDispatch)), 'prop' )),
    COMMETHOD([dispid(100), 'propget'], HRESULT, 'Location',
              ( ['out', 'retval'], POINTER(WdEndnoteLocation), 'prop' )),
    COMMETHOD([dispid(100), 'propput'], HRESULT, 'Location',
              ( ['in'], WdEndnoteLocation, 'prop' )),
    COMMETHOD([dispid(101), 'propget'], HRESULT, 'NumberStyle',
              ( ['out', 'retval'], POINTER(WdNoteNumberStyle), 'prop' )),
    COMMETHOD([dispid(101), 'propput'], HRESULT, 'NumberStyle',
              ( ['in'], WdNoteNumberStyle, 'prop' )),
    COMMETHOD([dispid(102), 'propget'], HRESULT, 'StartingNumber',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(102), 'propput'], HRESULT, 'StartingNumber',
              ( ['in'], c_int, 'prop' )),
    COMMETHOD([dispid(103), 'propget'], HRESULT, 'NumberingRule',
              ( ['out', 'retval'], POINTER(WdNumberingRule), 'prop' )),
    COMMETHOD([dispid(103), 'propput'], HRESULT, 'NumberingRule',
              ( ['in'], WdNumberingRule, 'prop' )),
    COMMETHOD([dispid(104), 'propget'], HRESULT, 'Separator',
              ( ['out', 'retval'], POINTER(POINTER(Range)), 'prop' )),
    COMMETHOD([dispid(105), 'propget'], HRESULT, 'ContinuationSeparator',
              ( ['out', 'retval'], POINTER(POINTER(Range)), 'prop' )),
    COMMETHOD([dispid(106), 'propget'], HRESULT, 'ContinuationNotice',
              ( ['out', 'retval'], POINTER(POINTER(Range)), 'prop' )),
    COMMETHOD([dispid(0)], HRESULT, 'Item',
              ( ['in'], c_int, 'Index' ),
              ( ['out', 'retval'], POINTER(POINTER(Endnote)), 'prop' )),
    COMMETHOD([dispid(4)], HRESULT, 'Add',
              ( ['in'], POINTER(Range), 'Range' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'Reference' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'Text' ),
              ( ['out', 'retval'], POINTER(POINTER(Endnote)), 'prop' )),
    COMMETHOD([dispid(5)], HRESULT, 'Convert'),
    COMMETHOD([dispid(6)], HRESULT, 'SwapWithFootnotes'),
    COMMETHOD([dispid(7)], HRESULT, 'ResetSeparator'),
    COMMETHOD([dispid(8)], HRESULT, 'ResetContinuationSeparator'),
    COMMETHOD([dispid(9)], HRESULT, 'ResetContinuationNotice'),
]
################################################################
## code template for Endnotes implementation
##class Endnotes_Impl(object):
##    @property
##    def _NewEnum(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Count(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Creator(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return prop
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    Location = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    NumberStyle = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    StartingNumber = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    NumberingRule = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Separator(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def ContinuationSeparator(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def ContinuationNotice(self):
##        '-no docstring-'
##        #return prop
##
##    def Item(self, Index):
##        '-no docstring-'
##        #return prop
##
##    def Add(self, Range, Reference, Text):
##        '-no docstring-'
##        #return prop
##
##    def Convert(self):
##        '-no docstring-'
##        #return 
##
##    def SwapWithFootnotes(self):
##        '-no docstring-'
##        #return 
##
##    def ResetSeparator(self):
##        '-no docstring-'
##        #return 
##
##    def ResetContinuationSeparator(self):
##        '-no docstring-'
##        #return 
##
##    def ResetContinuationNotice(self):
##        '-no docstring-'
##        #return 
##

OMathFrac._methods_ = [
    COMMETHOD([dispid(100), 'propget'], HRESULT, 'Application',
              ( ['out', 'retval'], POINTER(POINTER(Application)), 'prop' )),
    COMMETHOD([dispid(101), 'propget'], HRESULT, 'Creator',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(102), 'propget'], HRESULT, 'Parent',
              ( ['out', 'retval'], POINTER(POINTER(IDispatch)), 'prop' )),
    COMMETHOD([dispid(103), 'propget'], HRESULT, 'Num',
              ( ['out', 'retval'], POINTER(POINTER(OMath)), 'prop' )),
    COMMETHOD([dispid(104), 'propget'], HRESULT, 'Den',
              ( ['out', 'retval'], POINTER(POINTER(OMath)), 'prop' )),
    COMMETHOD([dispid(105), 'propget'], HRESULT, 'Type',
              ( ['out', 'retval'], POINTER(WdOMathFracType), 'prop' )),
    COMMETHOD([dispid(105), 'propput'], HRESULT, 'Type',
              ( ['in'], WdOMathFracType, 'prop' )),
]
################################################################
## code template for OMathFrac implementation
##class OMathFrac_Impl(object):
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Creator(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Num(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Den(self):
##        '-no docstring-'
##        #return prop
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    Type = property(_get, _set, doc = _set.__doc__)
##

Documents._methods_ = [
    COMMETHOD([dispid(-4), 'nonbrowsable', 'propget'], HRESULT, '_NewEnum',
              ( ['out', 'retval'], POINTER(POINTER(IUnknown)), 'prop' )),
    COMMETHOD([dispid(2), 'propget'], HRESULT, 'Count',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(1000), 'propget'], HRESULT, 'Application',
              ( ['out', 'retval'], POINTER(POINTER(Application)), 'prop' )),
    COMMETHOD([dispid(1001), 'propget'], HRESULT, 'Creator',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(1002), 'propget'], HRESULT, 'Parent',
              ( ['out', 'retval'], POINTER(POINTER(IDispatch)), 'prop' )),
    COMMETHOD([dispid(0)], HRESULT, 'Item',
              ( ['in'], POINTER(VARIANT), 'Index' ),
              ( ['out', 'retval'], POINTER(POINTER(Document)), 'prop' )),
    COMMETHOD([dispid(1105)], HRESULT, 'Close',
              ( ['in', 'optional'], POINTER(VARIANT), 'SaveChanges' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'OriginalFormat' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'RouteDocument' )),
    COMMETHOD([dispid(11), 'hidden'], HRESULT, 'AddOld',
              ( ['in', 'optional'], POINTER(VARIANT), 'Template' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'NewTemplate' ),
              ( ['out', 'retval'], POINTER(POINTER(Document)), 'prop' )),
    COMMETHOD([dispid(12), 'hidden'], HRESULT, 'OpenOld',
              ( ['in'], POINTER(VARIANT), 'FileName' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'ConfirmConversions' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'ReadOnly' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'AddToRecentFiles' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'PasswordDocument' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'PasswordTemplate' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'Revert' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'WritePasswordDocument' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'WritePasswordTemplate' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'Format' ),
              ( ['out', 'retval'], POINTER(POINTER(Document)), 'prop' )),
    COMMETHOD([dispid(13)], HRESULT, 'Save',
              ( ['in', 'optional'], POINTER(VARIANT), 'NoPrompt' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'OriginalFormat' )),
    COMMETHOD([dispid(14)], HRESULT, 'Add',
              ( ['in', 'optional'], POINTER(VARIANT), 'Template' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'NewTemplate' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'DocumentType' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'Visible' ),
              ( ['out', 'retval'], POINTER(POINTER(Document)), 'prop' )),
    COMMETHOD([dispid(15), 'hidden'], HRESULT, 'Open2000',
              ( ['in'], POINTER(VARIANT), 'FileName' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'ConfirmConversions' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'ReadOnly' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'AddToRecentFiles' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'PasswordDocument' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'PasswordTemplate' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'Revert' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'WritePasswordDocument' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'WritePasswordTemplate' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'Format' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'Encoding' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'Visible' ),
              ( ['out', 'retval'], POINTER(POINTER(Document)), 'prop' )),
    COMMETHOD([dispid(16)], HRESULT, 'CheckOut',
              ( ['in'], BSTR, 'FileName' )),
    COMMETHOD([dispid(17)], HRESULT, 'CanCheckOut',
              ( ['in'], BSTR, 'FileName' ),
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'prop' )),
    COMMETHOD([dispid(18), 'hidden'], HRESULT, 'Open2002',
              ( ['in'], POINTER(VARIANT), 'FileName' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'ConfirmConversions' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'ReadOnly' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'AddToRecentFiles' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'PasswordDocument' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'PasswordTemplate' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'Revert' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'WritePasswordDocument' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'WritePasswordTemplate' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'Format' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'Encoding' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'Visible' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'OpenAndRepair' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'DocumentDirection' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'NoEncodingDialog' ),
              ( ['out', 'retval'], POINTER(POINTER(Document)), 'prop' )),
    COMMETHOD([dispid(19)], HRESULT, 'Open',
              ( ['in'], POINTER(VARIANT), 'FileName' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'ConfirmConversions' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'ReadOnly' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'AddToRecentFiles' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'PasswordDocument' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'PasswordTemplate' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'Revert' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'WritePasswordDocument' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'WritePasswordTemplate' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'Format' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'Encoding' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'Visible' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'OpenAndRepair' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'DocumentDirection' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'NoEncodingDialog' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'XMLTransform' ),
              ( ['out', 'retval'], POINTER(POINTER(Document)), 'prop' )),
    COMMETHOD([dispid(20)], HRESULT, 'OpenNoRepairDialog',
              ( ['in'], POINTER(VARIANT), 'FileName' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'ConfirmConversions' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'ReadOnly' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'AddToRecentFiles' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'PasswordDocument' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'PasswordTemplate' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'Revert' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'WritePasswordDocument' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'WritePasswordTemplate' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'Format' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'Encoding' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'Visible' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'OpenAndRepair' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'DocumentDirection' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'NoEncodingDialog' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'XMLTransform' ),
              ( ['out', 'retval'], POINTER(POINTER(Document)), 'prop' )),
    COMMETHOD([dispid(21)], HRESULT, 'AddBlogDocument',
              ( ['in'], BSTR, 'ProviderID' ),
              ( ['in'], BSTR, 'PostURL' ),
              ( ['in'], BSTR, 'BlogName' ),
              ( ['in', 'optional'], BSTR, 'PostID' ),
              ( ['out', 'retval'], POINTER(POINTER(Document)), 'prop' )),
]
################################################################
## code template for Documents implementation
##class Documents_Impl(object):
##    @property
##    def _NewEnum(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Count(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Creator(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return prop
##
##    def Item(self, Index):
##        '-no docstring-'
##        #return prop
##
##    def Close(self, SaveChanges, OriginalFormat, RouteDocument):
##        '-no docstring-'
##        #return 
##
##    def AddOld(self, Template, NewTemplate):
##        '-no docstring-'
##        #return prop
##
##    def OpenOld(self, FileName, ConfirmConversions, ReadOnly, AddToRecentFiles, PasswordDocument, PasswordTemplate, Revert, WritePasswordDocument, WritePasswordTemplate, Format):
##        '-no docstring-'
##        #return prop
##
##    def Save(self, NoPrompt, OriginalFormat):
##        '-no docstring-'
##        #return 
##
##    def Add(self, Template, NewTemplate, DocumentType, Visible):
##        '-no docstring-'
##        #return prop
##
##    def Open2000(self, FileName, ConfirmConversions, ReadOnly, AddToRecentFiles, PasswordDocument, PasswordTemplate, Revert, WritePasswordDocument, WritePasswordTemplate, Format, Encoding, Visible):
##        '-no docstring-'
##        #return prop
##
##    def CheckOut(self, FileName):
##        '-no docstring-'
##        #return 
##
##    def CanCheckOut(self, FileName):
##        '-no docstring-'
##        #return prop
##
##    def Open2002(self, FileName, ConfirmConversions, ReadOnly, AddToRecentFiles, PasswordDocument, PasswordTemplate, Revert, WritePasswordDocument, WritePasswordTemplate, Format, Encoding, Visible, OpenAndRepair, DocumentDirection, NoEncodingDialog):
##        '-no docstring-'
##        #return prop
##
##    def Open(self, FileName, ConfirmConversions, ReadOnly, AddToRecentFiles, PasswordDocument, PasswordTemplate, Revert, WritePasswordDocument, WritePasswordTemplate, Format, Encoding, Visible, OpenAndRepair, DocumentDirection, NoEncodingDialog, XMLTransform):
##        '-no docstring-'
##        #return prop
##
##    def OpenNoRepairDialog(self, FileName, ConfirmConversions, ReadOnly, AddToRecentFiles, PasswordDocument, PasswordTemplate, Revert, WritePasswordDocument, WritePasswordTemplate, Format, Encoding, Visible, OpenAndRepair, DocumentDirection, NoEncodingDialog, XMLTransform):
##        '-no docstring-'
##        #return prop
##
##    def AddBlogDocument(self, ProviderID, PostURL, BlogName, PostID):
##        '-no docstring-'
##        #return prop
##


# values for enumeration 'WdWrapTypeMerged'
wdWrapMergeInline = 0
wdWrapMergeSquare = 1
wdWrapMergeTight = 2
wdWrapMergeBehind = 3
wdWrapMergeFront = 4
wdWrapMergeThrough = 5
wdWrapMergeTopBottom = 6
WdWrapTypeMerged = c_int # enum
TextInput._methods_ = [
    COMMETHOD([dispid(1000), 'propget'], HRESULT, 'Application',
              ( ['out', 'retval'], POINTER(POINTER(Application)), 'prop' )),
    COMMETHOD([dispid(1001), 'propget'], HRESULT, 'Creator',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(1002), 'propget'], HRESULT, 'Parent',
              ( ['out', 'retval'], POINTER(POINTER(IDispatch)), 'prop' )),
    COMMETHOD([dispid(0), 'propget'], HRESULT, 'Valid',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'prop' )),
    COMMETHOD([dispid(1), 'propget'], HRESULT, 'Default',
              ( ['out', 'retval'], POINTER(BSTR), 'prop' )),
    COMMETHOD([dispid(1), 'propput'], HRESULT, 'Default',
              ( ['in'], BSTR, 'prop' )),
    COMMETHOD([dispid(2), 'propget'], HRESULT, 'Type',
              ( ['out', 'retval'], POINTER(WdTextFormFieldType), 'prop' )),
    COMMETHOD([dispid(3), 'propget'], HRESULT, 'Format',
              ( ['out', 'retval'], POINTER(BSTR), 'prop' )),
    COMMETHOD([dispid(4), 'propget'], HRESULT, 'Width',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(4), 'propput'], HRESULT, 'Width',
              ( ['in'], c_int, 'prop' )),
    COMMETHOD([dispid(101)], HRESULT, 'Clear'),
    COMMETHOD([dispid(102)], HRESULT, 'EditType',
              ( ['in'], WdTextFormFieldType, 'Type' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'Default' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'Format' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'Enabled' )),
]
################################################################
## code template for TextInput implementation
##class TextInput_Impl(object):
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Creator(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Valid(self):
##        '-no docstring-'
##        #return prop
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    Default = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Type(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Format(self):
##        '-no docstring-'
##        #return prop
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    Width = property(_get, _set, doc = _set.__doc__)
##
##    def Clear(self):
##        '-no docstring-'
##        #return 
##
##    def EditType(self, Type, Default, Format, Enabled):
##        '-no docstring-'
##        #return 
##


# values for enumeration 'WdShapeSizeRelative'
wdShapeSizeRelativeNone = -999999
WdShapeSizeRelative = c_int # enum

# values for enumeration 'WdDefaultTableBehavior'
wdWord8TableBehavior = 0
wdWord9TableBehavior = 1
WdDefaultTableBehavior = c_int # enum

# values for enumeration 'XlVAlign'
xlVAlignBottom = -4107
xlVAlignCenter = -4108
xlVAlignDistributed = -4117
xlVAlignJustify = -4130
xlVAlignTop = -4160
XlVAlign = c_int # enum

# values for enumeration 'WdRelocate'
wdRelocateUp = 0
wdRelocateDown = 1
WdRelocate = c_int # enum
HeaderFooter._methods_ = [
    COMMETHOD([dispid(1000), 'propget'], HRESULT, 'Application',
              ( ['out', 'retval'], POINTER(POINTER(Application)), 'prop' )),
    COMMETHOD([dispid(1001), 'propget'], HRESULT, 'Creator',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(1002), 'propget'], HRESULT, 'Parent',
              ( ['out', 'retval'], POINTER(POINTER(IDispatch)), 'prop' )),
    COMMETHOD([dispid(0), 'propget'], HRESULT, 'Range',
              ( ['out', 'retval'], POINTER(POINTER(Range)), 'prop' )),
    COMMETHOD([dispid(2), 'propget'], HRESULT, 'Index',
              ( ['out', 'retval'], POINTER(WdHeaderFooterIndex), 'prop' )),
    COMMETHOD([dispid(3), 'propget'], HRESULT, 'IsHeader',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'prop' )),
    COMMETHOD([dispid(4), 'propget'], HRESULT, 'Exists',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'prop' )),
    COMMETHOD([dispid(4), 'propput'], HRESULT, 'Exists',
              ( ['in'], VARIANT_BOOL, 'prop' )),
    COMMETHOD([dispid(5), 'propget'], HRESULT, 'PageNumbers',
              ( ['out', 'retval'], POINTER(POINTER(PageNumbers)), 'prop' )),
    COMMETHOD([dispid(6), 'propget'], HRESULT, 'LinkToPrevious',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'prop' )),
    COMMETHOD([dispid(6), 'propput'], HRESULT, 'LinkToPrevious',
              ( ['in'], VARIANT_BOOL, 'prop' )),
    COMMETHOD([dispid(7), 'propget'], HRESULT, 'Shapes',
              ( ['out', 'retval'], POINTER(POINTER(Shapes)), 'prop' )),
    COMMETHOD([dispid(8), 'propget'], HRESULT, 'IsEmpty',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'prop' )),
]
################################################################
## code template for HeaderFooter implementation
##class HeaderFooter_Impl(object):
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Creator(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Range(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Index(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def IsHeader(self):
##        '-no docstring-'
##        #return prop
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    Exists = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def PageNumbers(self):
##        '-no docstring-'
##        #return prop
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    LinkToPrevious = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Shapes(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def IsEmpty(self):
##        '-no docstring-'
##        #return prop
##

ListParagraphs._methods_ = [
    COMMETHOD([dispid(-4), 'nonbrowsable', 'propget'], HRESULT, '_NewEnum',
              ( ['out', 'retval'], POINTER(POINTER(IUnknown)), 'prop' )),
    COMMETHOD([dispid(2), 'propget'], HRESULT, 'Count',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(1000), 'propget'], HRESULT, 'Application',
              ( ['out', 'retval'], POINTER(POINTER(Application)), 'prop' )),
    COMMETHOD([dispid(1001), 'propget'], HRESULT, 'Creator',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(1002), 'propget'], HRESULT, 'Parent',
              ( ['out', 'retval'], POINTER(POINTER(IDispatch)), 'prop' )),
    COMMETHOD([dispid(0)], HRESULT, 'Item',
              ( ['in'], c_int, 'Index' ),
              ( ['out', 'retval'], POINTER(POINTER(Paragraph)), 'prop' )),
]
################################################################
## code template for ListParagraphs implementation
##class ListParagraphs_Impl(object):
##    @property
##    def _NewEnum(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Count(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Creator(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return prop
##
##    def Item(self, Index):
##        '-no docstring-'
##        #return prop
##

CoAuthLocks._methods_ = [
    COMMETHOD([dispid(1000), 'propget'], HRESULT, 'Application',
              ( ['out', 'retval'], POINTER(POINTER(Application)), 'prop' )),
    COMMETHOD([dispid(1001), 'propget'], HRESULT, 'Creator',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(1002), 'propget'], HRESULT, 'Parent',
              ( ['out', 'retval'], POINTER(POINTER(IDispatch)), 'prop' )),
    COMMETHOD([dispid(1), 'propget'], HRESULT, 'Count',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(-4), 'nonbrowsable', 'propget'], HRESULT, '_NewEnum',
              ( ['out', 'retval'], POINTER(POINTER(IUnknown)), 'prop' )),
    COMMETHOD([dispid(0)], HRESULT, 'Item',
              ( ['in'], c_int, 'Index' ),
              ( ['out', 'retval'], POINTER(POINTER(CoAuthLock)), 'prop' )),
    COMMETHOD([dispid(2)], HRESULT, 'Add',
              ( ['in', 'optional'], VARIANT, 'Range' ),
              ( ['in', 'optional'], WdLockType, 'Type', 1 ),
              ( ['out', 'retval'], POINTER(POINTER(CoAuthLock)), 'prop' )),
    COMMETHOD([dispid(3)], HRESULT, 'RemoveEphemeralLocks'),
]
################################################################
## code template for CoAuthLocks implementation
##class CoAuthLocks_Impl(object):
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Creator(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Count(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def _NewEnum(self):
##        '-no docstring-'
##        #return prop
##
##    def Item(self, Index):
##        '-no docstring-'
##        #return prop
##
##    def Add(self, Range, Type):
##        '-no docstring-'
##        #return prop
##
##    def RemoveEphemeralLocks(self):
##        '-no docstring-'
##        #return 
##


# values for enumeration 'WdViewTypeOld'
wdPageView = 3
wdOnlineView = 6
WdViewTypeOld = c_int # enum

# values for enumeration 'WdInsertedTextMark'
wdInsertedTextMarkNone = 0
wdInsertedTextMarkBold = 1
wdInsertedTextMarkItalic = 2
wdInsertedTextMarkUnderline = 3
wdInsertedTextMarkDoubleUnderline = 4
wdInsertedTextMarkColorOnly = 5
wdInsertedTextMarkStrikeThrough = 6
wdInsertedTextMarkDoubleStrikeThrough = 7
WdInsertedTextMark = c_int # enum
class MailMergeFieldNames(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{0002091C-0000-0000-C000-000000000046}')
    _idlflags_ = ['dual', 'nonextensible', 'oleautomation']
MailMergeFieldNames._methods_ = [
    COMMETHOD([dispid(1000), 'propget'], HRESULT, 'Application',
              ( ['out', 'retval'], POINTER(POINTER(Application)), 'prop' )),
    COMMETHOD([dispid(1001), 'propget'], HRESULT, 'Creator',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(1002), 'propget'], HRESULT, 'Parent',
              ( ['out', 'retval'], POINTER(POINTER(IDispatch)), 'prop' )),
    COMMETHOD([dispid(-4), 'nonbrowsable', 'propget'], HRESULT, '_NewEnum',
              ( ['out', 'retval'], POINTER(POINTER(IUnknown)), 'prop' )),
    COMMETHOD([dispid(1), 'propget'], HRESULT, 'Count',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(0)], HRESULT, 'Item',
              ( ['in'], POINTER(VARIANT), 'Index' ),
              ( ['out', 'retval'], POINTER(POINTER(MailMergeFieldName)), 'prop' )),
]
################################################################
## code template for MailMergeFieldNames implementation
##class MailMergeFieldNames_Impl(object):
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Creator(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def _NewEnum(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Count(self):
##        '-no docstring-'
##        #return prop
##
##    def Item(self, Index):
##        '-no docstring-'
##        #return prop
##


# values for enumeration 'WdApplyQuickStyleSets'
wdSessionStartSet = 1
wdTemplateSet = 2
WdApplyQuickStyleSets = c_int # enum

# values for enumeration 'WdBreakType'
wdSectionBreakNextPage = 2
wdSectionBreakContinuous = 3
wdSectionBreakEvenPage = 4
wdSectionBreakOddPage = 5
wdLineBreak = 6
wdPageBreak = 7
wdColumnBreak = 8
wdLineBreakClearLeft = 9
wdLineBreakClearRight = 10
wdTextWrappingBreak = 11
WdBreakType = c_int # enum
class Section(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{00020959-0000-0000-C000-000000000046}')
    _idlflags_ = ['dual', 'nonextensible', 'oleautomation']
Sections._methods_ = [
    COMMETHOD([dispid(-4), 'nonbrowsable', 'propget'], HRESULT, '_NewEnum',
              ( ['out', 'retval'], POINTER(POINTER(IUnknown)), 'prop' )),
    COMMETHOD([dispid(2), 'propget'], HRESULT, 'Count',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(3), 'propget'], HRESULT, 'First',
              ( ['out', 'retval'], POINTER(POINTER(Section)), 'prop' )),
    COMMETHOD([dispid(4), 'propget'], HRESULT, 'Last',
              ( ['out', 'retval'], POINTER(POINTER(Section)), 'prop' )),
    COMMETHOD([dispid(1000), 'propget'], HRESULT, 'Application',
              ( ['out', 'retval'], POINTER(POINTER(Application)), 'prop' )),
    COMMETHOD([dispid(1001), 'propget'], HRESULT, 'Creator',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(1002), 'propget'], HRESULT, 'Parent',
              ( ['out', 'retval'], POINTER(POINTER(IDispatch)), 'prop' )),
    COMMETHOD([dispid(1101), 'propget'], HRESULT, 'PageSetup',
              ( ['out', 'retval'], POINTER(POINTER(PageSetup)), 'prop' )),
    COMMETHOD([dispid(1101), 'propput'], HRESULT, 'PageSetup',
              ( ['in'], POINTER(PageSetup), 'prop' )),
    COMMETHOD([dispid(0)], HRESULT, 'Item',
              ( ['in'], c_int, 'Index' ),
              ( ['out', 'retval'], POINTER(POINTER(Section)), 'prop' )),
    COMMETHOD([dispid(5)], HRESULT, 'Add',
              ( ['in', 'optional'], POINTER(VARIANT), 'Range' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'Start' ),
              ( ['out', 'retval'], POINTER(POINTER(Section)), 'prop' )),
]
################################################################
## code template for Sections implementation
##class Sections_Impl(object):
##    @property
##    def _NewEnum(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Count(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def First(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Last(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Creator(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return prop
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    PageSetup = property(_get, _set, doc = _set.__doc__)
##
##    def Item(self, Index):
##        '-no docstring-'
##        #return prop
##
##    def Add(self, Range, Start):
##        '-no docstring-'
##        #return prop
##

FormFields._methods_ = [
    COMMETHOD([dispid(1000), 'propget'], HRESULT, 'Application',
              ( ['out', 'retval'], POINTER(POINTER(Application)), 'prop' )),
    COMMETHOD([dispid(1001), 'propget'], HRESULT, 'Creator',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(1002), 'propget'], HRESULT, 'Parent',
              ( ['out', 'retval'], POINTER(POINTER(IDispatch)), 'prop' )),
    COMMETHOD([dispid(1), 'propget'], HRESULT, 'Count',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(2), 'propget'], HRESULT, 'Shaded',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'prop' )),
    COMMETHOD([dispid(2), 'propput'], HRESULT, 'Shaded',
              ( ['in'], VARIANT_BOOL, 'prop' )),
    COMMETHOD([dispid(-4), 'nonbrowsable', 'propget'], HRESULT, '_NewEnum',
              ( ['out', 'retval'], POINTER(POINTER(IUnknown)), 'prop' )),
    COMMETHOD([dispid(0)], HRESULT, 'Item',
              ( ['in'], POINTER(VARIANT), 'Index' ),
              ( ['out', 'retval'], POINTER(POINTER(FormField)), 'prop' )),
    COMMETHOD([dispid(101)], HRESULT, 'Add',
              ( ['in'], POINTER(Range), 'Range' ),
              ( ['in'], WdFieldType, 'Type' ),
              ( ['out', 'retval'], POINTER(POINTER(FormField)), 'prop' )),
]
################################################################
## code template for FormFields implementation
##class FormFields_Impl(object):
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Creator(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Count(self):
##        '-no docstring-'
##        #return prop
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    Shaded = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def _NewEnum(self):
##        '-no docstring-'
##        #return prop
##
##    def Item(self, Index):
##        '-no docstring-'
##        #return prop
##
##    def Add(self, Range, Type):
##        '-no docstring-'
##        #return prop
##


# values for enumeration 'WdReferenceType'
wdRefTypeNumberedItem = 0
wdRefTypeHeading = 1
wdRefTypeBookmark = 2
wdRefTypeFootnote = 3
wdRefTypeEndnote = 4
WdReferenceType = c_int # enum

# values for enumeration 'WdListNumberStyleHID'
emptyenum = 0
WdListNumberStyleHID = c_int # enum

# values for enumeration 'WdMailMergeDefaultRecord'
wdDefaultFirstRecord = 1
wdDefaultLastRecord = -16
WdMailMergeDefaultRecord = c_int # enum

# values for enumeration 'WdFontBias'
wdFontBiasDontCare = 255
wdFontBiasDefault = 0
wdFontBiasFareast = 1
WdFontBias = c_int # enum

# values for enumeration 'WdGoToDirection'
wdGoToFirst = 1
wdGoToLast = -1
wdGoToNext = 2
wdGoToRelative = 2
wdGoToPrevious = 3
wdGoToAbsolute = 1
WdGoToDirection = c_int # enum
Lines._methods_ = [
    COMMETHOD([dispid(-4), 'nonbrowsable', 'propget'], HRESULT, '_NewEnum',
              ( ['out', 'retval'], POINTER(POINTER(IUnknown)), 'prop' )),
    COMMETHOD([dispid(2), 'propget'], HRESULT, 'Count',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(1000), 'propget'], HRESULT, 'Application',
              ( ['out', 'retval'], POINTER(POINTER(Application)), 'prop' )),
    COMMETHOD([dispid(1001), 'propget'], HRESULT, 'Creator',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(1002), 'propget'], HRESULT, 'Parent',
              ( ['out', 'retval'], POINTER(POINTER(IDispatch)), 'prop' )),
    COMMETHOD([dispid(0)], HRESULT, 'Item',
              ( ['in'], c_int, 'Index' ),
              ( ['out', 'retval'], POINTER(POINTER(Line)), 'prop' )),
]
################################################################
## code template for Lines implementation
##class Lines_Impl(object):
##    @property
##    def _NewEnum(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Count(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Creator(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return prop
##
##    def Item(self, Index):
##        '-no docstring-'
##        #return prop
##


# values for enumeration 'WdMailMergeDataSource'
wdNoMergeInfo = -1
wdMergeInfoFromWord = 0
wdMergeInfoFromAccessDDE = 1
wdMergeInfoFromExcelDDE = 2
wdMergeInfoFromMSQueryDDE = 3
wdMergeInfoFromODBC = 4
wdMergeInfoFromODSO = 5
WdMailMergeDataSource = c_int # enum

# values for enumeration 'WdArabicNumeral'
wdNumeralArabic = 0
wdNumeralHindi = 1
wdNumeralContext = 2
wdNumeralSystem = 3
WdArabicNumeral = c_int # enum
OMathMatCol._methods_ = [
    COMMETHOD([dispid(100), 'propget'], HRESULT, 'Application',
              ( ['out', 'retval'], POINTER(POINTER(Application)), 'prop' )),
    COMMETHOD([dispid(101), 'propget'], HRESULT, 'Creator',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(102), 'propget'], HRESULT, 'Parent',
              ( ['out', 'retval'], POINTER(POINTER(IDispatch)), 'prop' )),
    COMMETHOD([dispid(103), 'propget'], HRESULT, 'Args',
              ( ['out', 'retval'], POINTER(POINTER(OMathArgs)), 'prop' )),
    COMMETHOD([dispid(104), 'propget'], HRESULT, 'ColIndex',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(105), 'propget'], HRESULT, 'Align',
              ( ['out', 'retval'], POINTER(WdOMathHorizAlignType), 'prop' )),
    COMMETHOD([dispid(105), 'propput'], HRESULT, 'Align',
              ( ['in'], WdOMathHorizAlignType, 'prop' )),
    COMMETHOD([dispid(200)], HRESULT, 'Delete'),
]
################################################################
## code template for OMathMatCol implementation
##class OMathMatCol_Impl(object):
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Creator(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Args(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def ColIndex(self):
##        '-no docstring-'
##        #return prop
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    Align = property(_get, _set, doc = _set.__doc__)
##
##    def Delete(self):
##        '-no docstring-'
##        #return 
##


# values for enumeration 'WdBuiltinStyle'
wdStyleNormal = -1
wdStyleEnvelopeAddress = -37
wdStyleEnvelopeReturn = -38
wdStyleBodyText = -67
wdStyleHeading1 = -2
wdStyleHeading2 = -3
wdStyleHeading3 = -4
wdStyleHeading4 = -5
wdStyleHeading5 = -6
wdStyleHeading6 = -7
wdStyleHeading7 = -8
wdStyleHeading8 = -9
wdStyleHeading9 = -10
wdStyleIndex1 = -11
wdStyleIndex2 = -12
wdStyleIndex3 = -13
wdStyleIndex4 = -14
wdStyleIndex5 = -15
wdStyleIndex6 = -16
wdStyleIndex7 = -17
wdStyleIndex8 = -18
wdStyleIndex9 = -19
wdStyleTOC1 = -20
wdStyleTOC2 = -21
wdStyleTOC3 = -22
wdStyleTOC4 = -23
wdStyleTOC5 = -24
wdStyleTOC6 = -25
wdStyleTOC7 = -26
wdStyleTOC8 = -27
wdStyleTOC9 = -28
wdStyleNormalIndent = -29
wdStyleFootnoteText = -30
wdStyleCommentText = -31
wdStyleHeader = -32
wdStyleFooter = -33
wdStyleIndexHeading = -34
wdStyleCaption = -35
wdStyleTableOfFigures = -36
wdStyleFootnoteReference = -39
wdStyleCommentReference = -40
wdStyleLineNumber = -41
wdStylePageNumber = -42
wdStyleEndnoteReference = -43
wdStyleEndnoteText = -44
wdStyleTableOfAuthorities = -45
wdStyleMacroText = -46
wdStyleTOAHeading = -47
wdStyleList = -48
wdStyleListBullet = -49
wdStyleListNumber = -50
wdStyleList2 = -51
wdStyleList3 = -52
wdStyleList4 = -53
wdStyleList5 = -54
wdStyleListBullet2 = -55
wdStyleListBullet3 = -56
wdStyleListBullet4 = -57
wdStyleListBullet5 = -58
wdStyleListNumber2 = -59
wdStyleListNumber3 = -60
wdStyleListNumber4 = -61
wdStyleListNumber5 = -62
wdStyleTitle = -63
wdStyleClosing = -64
wdStyleSignature = -65
wdStyleDefaultParagraphFont = -66
wdStyleBodyTextIndent = -68
wdStyleListContinue = -69
wdStyleListContinue2 = -70
wdStyleListContinue3 = -71
wdStyleListContinue4 = -72
wdStyleListContinue5 = -73
wdStyleMessageHeader = -74
wdStyleSubtitle = -75
wdStyleSalutation = -76
wdStyleDate = -77
wdStyleBodyTextFirstIndent = -78
wdStyleBodyTextFirstIndent2 = -79
wdStyleNoteHeading = -80
wdStyleBodyText2 = -81
wdStyleBodyText3 = -82
wdStyleBodyTextIndent2 = -83
wdStyleBodyTextIndent3 = -84
wdStyleBlockQuotation = -85
wdStyleHyperlink = -86
wdStyleHyperlinkFollowed = -87
wdStyleStrong = -88
wdStyleEmphasis = -89
wdStyleNavPane = -90
wdStylePlainText = -91
wdStyleHtmlNormal = -95
wdStyleHtmlAcronym = -96
wdStyleHtmlAddress = -97
wdStyleHtmlCite = -98
wdStyleHtmlCode = -99
wdStyleHtmlDfn = -100
wdStyleHtmlKbd = -101
wdStyleHtmlPre = -102
wdStyleHtmlSamp = -103
wdStyleHtmlTt = -104
wdStyleHtmlVar = -105
wdStyleNormalTable = -106
wdStyleNormalObject = -158
wdStyleTableLightShading = -159
wdStyleTableLightList = -160
wdStyleTableLightGrid = -161
wdStyleTableMediumShading1 = -162
wdStyleTableMediumShading2 = -163
wdStyleTableMediumList1 = -164
wdStyleTableMediumList2 = -165
wdStyleTableMediumGrid1 = -166
wdStyleTableMediumGrid2 = -167
wdStyleTableMediumGrid3 = -168
wdStyleTableDarkList = -169
wdStyleTableColorfulShading = -170
wdStyleTableColorfulList = -171
wdStyleTableColorfulGrid = -172
wdStyleTableLightShadingAccent1 = -173
wdStyleTableLightListAccent1 = -174
wdStyleTableLightGridAccent1 = -175
wdStyleTableMediumShading1Accent1 = -176
wdStyleTableMediumShading2Accent1 = -177
wdStyleTableMediumList1Accent1 = -178
wdStyleListParagraph = -180
wdStyleQuote = -181
wdStyleIntenseQuote = -182
wdStyleSubtleEmphasis = -261
wdStyleIntenseEmphasis = -262
wdStyleSubtleReference = -263
wdStyleIntenseReference = -264
wdStyleBookTitle = -265
wdStyleBibliography = -266
wdStyleTocHeading = -267
WdBuiltinStyle = c_int # enum
class BuildingBlockTypes(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{B5828B50-0E3D-448A-962D-A40702A5868D}')
    _idlflags_ = ['dual', 'nonextensible', 'oleautomation']
BuildingBlockTypes._methods_ = [
    COMMETHOD([dispid(1000), 'propget'], HRESULT, 'Application',
              ( ['out', 'retval'], POINTER(POINTER(Application)), 'prop' )),
    COMMETHOD([dispid(1001), 'propget'], HRESULT, 'Creator',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(1002), 'propget'], HRESULT, 'Parent',
              ( ['out', 'retval'], POINTER(POINTER(IDispatch)), 'prop' )),
    COMMETHOD([dispid(1), 'propget'], HRESULT, 'Count',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(0)], HRESULT, 'Item',
              ( ['in'], WdBuildingBlockTypes, 'Index' ),
              ( ['out', 'retval'], POINTER(POINTER(BuildingBlockType)), 'prop' )),
]
################################################################
## code template for BuildingBlockTypes implementation
##class BuildingBlockTypes_Impl(object):
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Creator(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Count(self):
##        '-no docstring-'
##        #return prop
##
##    def Item(self, Index):
##        '-no docstring-'
##        #return prop
##


# values for enumeration 'WdSelectionType'
wdNoSelection = 0
wdSelectionIP = 1
wdSelectionNormal = 2
wdSelectionFrame = 3
wdSelectionColumn = 4
wdSelectionRow = 5
wdSelectionBlock = 6
wdSelectionInlineShape = 7
wdSelectionShape = 8
WdSelectionType = c_int # enum
Walls._methods_ = [
    COMMETHOD([dispid(110), 'propget'], HRESULT, 'Name',
              ( ['out', 'retval'], POINTER(BSTR), 'prop' )),
    COMMETHOD([dispid(235)], HRESULT, 'Select',
              ( ['out', 'retval'], POINTER(VARIANT), 'prop' )),
    COMMETHOD([dispid(150), 'propget'], HRESULT, 'Parent',
              ( ['out', 'retval'], POINTER(POINTER(IDispatch)), 'prop' )),
    COMMETHOD([dispid(128), 'hidden', 'propget'], HRESULT, 'Border',
              ( ['out', 'retval'], POINTER(POINTER(ChartBorder)), 'prop' )),
    COMMETHOD([dispid(112)], HRESULT, 'ClearFormats',
              ( ['out', 'retval'], POINTER(VARIANT), 'prop' )),
    COMMETHOD([dispid(129), 'hidden', 'propget'], HRESULT, 'Interior',
              ( ['out', 'retval'], POINTER(POINTER(Interior)), 'prop' )),
    COMMETHOD([dispid(1663), 'hidden', 'propget'], HRESULT, 'Fill',
              ( ['out', 'retval'], POINTER(POINTER(ChartFillFormat)), 'prop' )),
    COMMETHOD([dispid(161), 'propget'], HRESULT, 'PictureType',
              ( ['out', 'retval'], POINTER(VARIANT), 'prop' )),
    COMMETHOD([dispid(161), 'propput'], HRESULT, 'PictureType',
              ( ['in'], VARIANT, 'prop' )),
    COMMETHOD([dispid(211)], HRESULT, 'Paste'),
    COMMETHOD([dispid(162), 'propget'], HRESULT, 'PictureUnit',
              ( ['out', 'retval'], POINTER(VARIANT), 'prop' )),
    COMMETHOD([dispid(162), 'propput'], HRESULT, 'PictureUnit',
              ( ['in'], VARIANT, 'prop' )),
    COMMETHOD([dispid(2419), 'propget'], HRESULT, 'Thickness',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(2419), 'propput'], HRESULT, 'Thickness',
              ( ['in'], c_int, 'prop' )),
    COMMETHOD([dispid(1610743822), 'propget'], HRESULT, 'Format',
              ( ['out', 'retval'], POINTER(POINTER(ChartFormat)), 'prop' )),
    COMMETHOD([dispid(148), 'propget'], HRESULT, 'Application',
              ( ['out', 'retval'], POINTER(POINTER(IDispatch)), 'prop' )),
    COMMETHOD([dispid(149), 'propget'], HRESULT, 'Creator',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
]
################################################################
## code template for Walls implementation
##class Walls_Impl(object):
##    @property
##    def Name(self):
##        '-no docstring-'
##        #return prop
##
##    def Select(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Border(self):
##        '-no docstring-'
##        #return prop
##
##    def ClearFormats(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Interior(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Fill(self):
##        '-no docstring-'
##        #return prop
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    PictureType = property(_get, _set, doc = _set.__doc__)
##
##    def Paste(self):
##        '-no docstring-'
##        #return 
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    PictureUnit = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    Thickness = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Format(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Creator(self):
##        '-no docstring-'
##        #return prop
##

Selection._methods_ = [
    COMMETHOD([dispid(0), 'propget'], HRESULT, 'Text',
              ( ['out', 'retval'], POINTER(BSTR), 'prop' )),
    COMMETHOD([dispid(0), 'propput'], HRESULT, 'Text',
              ( ['in'], BSTR, 'prop' )),
    COMMETHOD([dispid(2), 'propget'], HRESULT, 'FormattedText',
              ( ['out', 'retval'], POINTER(POINTER(Range)), 'prop' )),
    COMMETHOD([dispid(2), 'propput'], HRESULT, 'FormattedText',
              ( ['in'], POINTER(Range), 'prop' )),
    COMMETHOD([dispid(3), 'propget'], HRESULT, 'Start',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(3), 'propput'], HRESULT, 'Start',
              ( ['in'], c_int, 'prop' )),
    COMMETHOD([dispid(4), 'propget'], HRESULT, 'End',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(4), 'propput'], HRESULT, 'End',
              ( ['in'], c_int, 'prop' )),
    COMMETHOD([dispid(5), 'propget'], HRESULT, 'Font',
              ( ['out', 'retval'], POINTER(POINTER(Font)), 'prop' )),
    COMMETHOD([dispid(5), 'propput'], HRESULT, 'Font',
              ( ['in'], POINTER(Font), 'prop' )),
    COMMETHOD([dispid(6), 'propget'], HRESULT, 'Type',
              ( ['out', 'retval'], POINTER(WdSelectionType), 'prop' )),
    COMMETHOD([dispid(7), 'propget'], HRESULT, 'StoryType',
              ( ['out', 'retval'], POINTER(WdStoryType), 'prop' )),
    COMMETHOD([dispid(8), 'propget'], HRESULT, 'Style',
              ( ['out', 'retval'], POINTER(VARIANT), 'prop' )),
    COMMETHOD([dispid(8), 'propput'], HRESULT, 'Style',
              ( ['in'], POINTER(VARIANT), 'prop' )),
    COMMETHOD([dispid(50), 'propget'], HRESULT, 'Tables',
              ( ['out', 'retval'], POINTER(POINTER(Tables)), 'prop' )),
    COMMETHOD([dispid(51), 'propget'], HRESULT, 'Words',
              ( ['out', 'retval'], POINTER(POINTER(Words)), 'prop' )),
    COMMETHOD([dispid(52), 'propget'], HRESULT, 'Sentences',
              ( ['out', 'retval'], POINTER(POINTER(Sentences)), 'prop' )),
    COMMETHOD([dispid(53), 'propget'], HRESULT, 'Characters',
              ( ['out', 'retval'], POINTER(POINTER(Characters)), 'prop' )),
    COMMETHOD([dispid(54), 'propget'], HRESULT, 'Footnotes',
              ( ['out', 'retval'], POINTER(POINTER(Footnotes)), 'prop' )),
    COMMETHOD([dispid(55), 'propget'], HRESULT, 'Endnotes',
              ( ['out', 'retval'], POINTER(POINTER(Endnotes)), 'prop' )),
    COMMETHOD([dispid(56), 'propget'], HRESULT, 'Comments',
              ( ['out', 'retval'], POINTER(POINTER(Comments)), 'prop' )),
    COMMETHOD([dispid(57), 'propget'], HRESULT, 'Cells',
              ( ['out', 'retval'], POINTER(POINTER(Cells)), 'prop' )),
    COMMETHOD([dispid(58), 'propget'], HRESULT, 'Sections',
              ( ['out', 'retval'], POINTER(POINTER(Sections)), 'prop' )),
    COMMETHOD([dispid(59), 'propget'], HRESULT, 'Paragraphs',
              ( ['out', 'retval'], POINTER(POINTER(Paragraphs)), 'prop' )),
    COMMETHOD([dispid(1100), 'propget'], HRESULT, 'Borders',
              ( ['out', 'retval'], POINTER(POINTER(Borders)), 'prop' )),
    COMMETHOD([dispid(1100), 'propput'], HRESULT, 'Borders',
              ( ['in'], POINTER(Borders), 'prop' )),
    COMMETHOD([dispid(61), 'propget'], HRESULT, 'Shading',
              ( ['out', 'retval'], POINTER(POINTER(Shading)), 'prop' )),
    COMMETHOD([dispid(64), 'propget'], HRESULT, 'Fields',
              ( ['out', 'retval'], POINTER(POINTER(Fields)), 'prop' )),
    COMMETHOD([dispid(65), 'propget'], HRESULT, 'FormFields',
              ( ['out', 'retval'], POINTER(POINTER(FormFields)), 'prop' )),
    COMMETHOD([dispid(66), 'propget'], HRESULT, 'Frames',
              ( ['out', 'retval'], POINTER(POINTER(Frames)), 'prop' )),
    COMMETHOD([dispid(1102), 'propget'], HRESULT, 'ParagraphFormat',
              ( ['out', 'retval'], POINTER(POINTER(ParagraphFormat)), 'prop' )),
    COMMETHOD([dispid(1102), 'propput'], HRESULT, 'ParagraphFormat',
              ( ['in'], POINTER(ParagraphFormat), 'prop' )),
    COMMETHOD([dispid(1101), 'propget'], HRESULT, 'PageSetup',
              ( ['out', 'retval'], POINTER(POINTER(PageSetup)), 'prop' )),
    COMMETHOD([dispid(1101), 'propput'], HRESULT, 'PageSetup',
              ( ['in'], POINTER(PageSetup), 'prop' )),
    COMMETHOD([dispid(75), 'propget'], HRESULT, 'Bookmarks',
              ( ['out', 'retval'], POINTER(POINTER(Bookmarks)), 'prop' )),
    COMMETHOD([dispid(152), 'propget'], HRESULT, 'StoryLength',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(153), 'propget'], HRESULT, 'LanguageID',
              ( ['out', 'retval'], POINTER(WdLanguageID), 'prop' )),
    COMMETHOD([dispid(153), 'propput'], HRESULT, 'LanguageID',
              ( ['in'], WdLanguageID, 'prop' )),
    COMMETHOD([dispid(154), 'propget'], HRESULT, 'LanguageIDFarEast',
              ( ['out', 'retval'], POINTER(WdLanguageID), 'prop' )),
    COMMETHOD([dispid(154), 'propput'], HRESULT, 'LanguageIDFarEast',
              ( ['in'], WdLanguageID, 'prop' )),
    COMMETHOD([dispid(155), 'propget'], HRESULT, 'LanguageIDOther',
              ( ['out', 'retval'], POINTER(WdLanguageID), 'prop' )),
    COMMETHOD([dispid(155), 'propput'], HRESULT, 'LanguageIDOther',
              ( ['in'], WdLanguageID, 'prop' )),
    COMMETHOD([dispid(156), 'propget'], HRESULT, 'Hyperlinks',
              ( ['out', 'retval'], POINTER(POINTER(Hyperlinks)), 'prop' )),
    COMMETHOD([dispid(302), 'propget'], HRESULT, 'Columns',
              ( ['out', 'retval'], POINTER(POINTER(Columns)), 'prop' )),
    COMMETHOD([dispid(303), 'propget'], HRESULT, 'Rows',
              ( ['out', 'retval'], POINTER(POINTER(Rows)), 'prop' )),
    COMMETHOD([dispid(306), 'propget'], HRESULT, 'HeaderFooter',
              ( ['out', 'retval'], POINTER(POINTER(HeaderFooter)), 'prop' )),
    COMMETHOD([dispid(307), 'propget'], HRESULT, 'IsEndOfRowMark',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'prop' )),
    COMMETHOD([dispid(308), 'propget'], HRESULT, 'BookmarkID',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(309), 'propget'], HRESULT, 'PreviousBookmarkID',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(262), 'propget'], HRESULT, 'Find',
              ( ['out', 'retval'], POINTER(POINTER(Find)), 'prop' )),
    COMMETHOD([dispid(400), 'propget'], HRESULT, 'Range',
              ( ['out', 'retval'], POINTER(POINTER(Range)), 'prop' )),
    COMMETHOD([dispid(401), 'propget'], HRESULT, 'Information',
              ( ['in'], WdInformation, 'Type' ),
              ( ['out', 'retval'], POINTER(VARIANT), 'prop' )),
    COMMETHOD([dispid(402), 'propget'], HRESULT, 'Flags',
              ( ['out', 'retval'], POINTER(WdSelectionFlags), 'prop' )),
    COMMETHOD([dispid(402), 'propput'], HRESULT, 'Flags',
              ( ['in'], WdSelectionFlags, 'prop' )),
    COMMETHOD([dispid(403), 'propget'], HRESULT, 'Active',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'prop' )),
    COMMETHOD([dispid(404), 'propget'], HRESULT, 'StartIsActive',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'prop' )),
    COMMETHOD([dispid(404), 'propput'], HRESULT, 'StartIsActive',
              ( ['in'], VARIANT_BOOL, 'prop' )),
    COMMETHOD([dispid(405), 'propget'], HRESULT, 'IPAtEndOfLine',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'prop' )),
    COMMETHOD([dispid(406), 'propget'], HRESULT, 'ExtendMode',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'prop' )),
    COMMETHOD([dispid(406), 'propput'], HRESULT, 'ExtendMode',
              ( ['in'], VARIANT_BOOL, 'prop' )),
    COMMETHOD([dispid(407), 'propget'], HRESULT, 'ColumnSelectMode',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'prop' )),
    COMMETHOD([dispid(407), 'propput'], HRESULT, 'ColumnSelectMode',
              ( ['in'], VARIANT_BOOL, 'prop' )),
    COMMETHOD([dispid(410), 'propget'], HRESULT, 'Orientation',
              ( ['out', 'retval'], POINTER(WdTextOrientation), 'prop' )),
    COMMETHOD([dispid(410), 'propput'], HRESULT, 'Orientation',
              ( ['in'], WdTextOrientation, 'prop' )),
    COMMETHOD([dispid(411), 'propget'], HRESULT, 'InlineShapes',
              ( ['out', 'retval'], POINTER(POINTER(InlineShapes)), 'prop' )),
    COMMETHOD([dispid(1000), 'propget'], HRESULT, 'Application',
              ( ['out', 'retval'], POINTER(POINTER(Application)), 'prop' )),
    COMMETHOD([dispid(1001), 'propget'], HRESULT, 'Creator',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(1002), 'propget'], HRESULT, 'Parent',
              ( ['out', 'retval'], POINTER(POINTER(IDispatch)), 'prop' )),
    COMMETHOD([dispid(1003), 'propget'], HRESULT, 'Document',
              ( ['out', 'retval'], POINTER(POINTER(Document)), 'prop' )),
    COMMETHOD([dispid(1004), 'propget'], HRESULT, 'ShapeRange',
              ( ['out', 'retval'], POINTER(POINTER(ShapeRange)), 'prop' )),
    COMMETHOD([dispid(65535)], HRESULT, 'Select'),
    COMMETHOD([dispid(100)], HRESULT, 'SetRange',
              ( ['in'], c_int, 'Start' ),
              ( ['in'], c_int, 'End' )),
    COMMETHOD([dispid(101)], HRESULT, 'Collapse',
              ( ['in', 'optional'], POINTER(VARIANT), 'Direction' )),
    COMMETHOD([dispid(102)], HRESULT, 'InsertBefore',
              ( ['in'], BSTR, 'Text' )),
    COMMETHOD([dispid(104)], HRESULT, 'InsertAfter',
              ( ['in'], BSTR, 'Text' )),
    COMMETHOD([dispid(105)], HRESULT, 'Next',
              ( ['in', 'optional'], POINTER(VARIANT), 'Unit' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'Count' ),
              ( ['out', 'retval'], POINTER(POINTER(Range)), 'prop' )),
    COMMETHOD([dispid(106)], HRESULT, 'Previous',
              ( ['in', 'optional'], POINTER(VARIANT), 'Unit' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'Count' ),
              ( ['out', 'retval'], POINTER(POINTER(Range)), 'prop' )),
    COMMETHOD([dispid(107)], HRESULT, 'StartOf',
              ( ['in', 'optional'], POINTER(VARIANT), 'Unit' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'Extend' ),
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(108)], HRESULT, 'EndOf',
              ( ['in', 'optional'], POINTER(VARIANT), 'Unit' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'Extend' ),
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(109)], HRESULT, 'Move',
              ( ['in', 'optional'], POINTER(VARIANT), 'Unit' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'Count' ),
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(110)], HRESULT, 'MoveStart',
              ( ['in', 'optional'], POINTER(VARIANT), 'Unit' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'Count' ),
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(111)], HRESULT, 'MoveEnd',
              ( ['in', 'optional'], POINTER(VARIANT), 'Unit' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'Count' ),
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(112)], HRESULT, 'MoveWhile',
              ( ['in'], POINTER(VARIANT), 'Cset' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'Count' ),
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(113)], HRESULT, 'MoveStartWhile',
              ( ['in'], POINTER(VARIANT), 'Cset' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'Count' ),
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(114)], HRESULT, 'MoveEndWhile',
              ( ['in'], POINTER(VARIANT), 'Cset' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'Count' ),
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(115)], HRESULT, 'MoveUntil',
              ( ['in'], POINTER(VARIANT), 'Cset' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'Count' ),
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(116)], HRESULT, 'MoveStartUntil',
              ( ['in'], POINTER(VARIANT), 'Cset' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'Count' ),
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(117)], HRESULT, 'MoveEndUntil',
              ( ['in'], POINTER(VARIANT), 'Cset' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'Count' ),
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(119)], HRESULT, 'Cut'),
    COMMETHOD([dispid(120)], HRESULT, 'Copy'),
    COMMETHOD([dispid(121)], HRESULT, 'Paste'),
    COMMETHOD([dispid(122)], HRESULT, 'InsertBreak',
              ( ['in', 'optional'], POINTER(VARIANT), 'Type' )),
    COMMETHOD([dispid(123)], HRESULT, 'InsertFile',
              ( ['in'], BSTR, 'FileName' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'Range' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'ConfirmConversions' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'Link' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'Attachment' )),
    COMMETHOD([dispid(125)], HRESULT, 'InStory',
              ( ['in'], POINTER(Range), 'Range' ),
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'prop' )),
    COMMETHOD([dispid(126)], HRESULT, 'InRange',
              ( ['in'], POINTER(Range), 'Range' ),
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'prop' )),
    COMMETHOD([dispid(127)], HRESULT, 'Delete',
              ( ['in', 'optional'], POINTER(VARIANT), 'Unit' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'Count' ),
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(129)], HRESULT, 'Expand',
              ( ['in', 'optional'], POINTER(VARIANT), 'Unit' ),
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(160)], HRESULT, 'InsertParagraph'),
    COMMETHOD([dispid(161)], HRESULT, 'InsertParagraphAfter'),
    COMMETHOD([dispid(162), 'hidden'], HRESULT, 'ConvertToTableOld',
              ( ['in', 'optional'], POINTER(VARIANT), 'Separator' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'NumRows' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'NumColumns' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'InitialColumnWidth' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'Format' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'ApplyBorders' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'ApplyShading' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'ApplyFont' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'ApplyColor' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'ApplyHeadingRows' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'ApplyLastRow' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'ApplyFirstColumn' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'ApplyLastColumn' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'AutoFit' ),
              ( ['out', 'retval'], POINTER(POINTER(Table)), 'prop' )),
    COMMETHOD([dispid(163), 'hidden'], HRESULT, 'InsertDateTimeOld',
              ( ['in', 'optional'], POINTER(VARIANT), 'DateTimeFormat' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'InsertAsField' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'InsertAsFullWidth' )),
    COMMETHOD([dispid(164)], HRESULT, 'InsertSymbol',
              ( ['in'], c_int, 'CharacterNumber' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'Font' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'Unicode' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'Bias' )),
    COMMETHOD([dispid(165), 'hidden'], HRESULT, 'InsertCrossReference_2002',
              ( ['in'], POINTER(VARIANT), 'ReferenceType' ),
              ( ['in'], WdReferenceKind, 'ReferenceKind' ),
              ( ['in'], POINTER(VARIANT), 'ReferenceItem' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'InsertAsHyperlink' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'IncludePosition' )),
    COMMETHOD([dispid(166), 'hidden'], HRESULT, 'InsertCaptionXP',
              ( ['in'], POINTER(VARIANT), 'Label' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'Title' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'TitleAutoText' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'Position' )),
    COMMETHOD([dispid(167)], HRESULT, 'CopyAsPicture'),
    COMMETHOD([dispid(168), 'hidden'], HRESULT, 'SortOld',
              ( ['in', 'optional'], POINTER(VARIANT), 'ExcludeHeader' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'FieldNumber' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'SortFieldType' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'SortOrder' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'FieldNumber2' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'SortFieldType2' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'SortOrder2' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'FieldNumber3' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'SortFieldType3' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'SortOrder3' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'SortColumn' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'Separator' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'CaseSensitive' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'LanguageID' )),
    COMMETHOD([dispid(169)], HRESULT, 'SortAscending'),
    COMMETHOD([dispid(170)], HRESULT, 'SortDescending'),
    COMMETHOD([dispid(171)], HRESULT, 'IsEqual',
              ( ['in'], POINTER(Range), 'Range' ),
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'prop' )),
    COMMETHOD([dispid(172)], HRESULT, 'Calculate',
              ( ['out', 'retval'], POINTER(c_float), 'prop' )),
    COMMETHOD([dispid(173)], HRESULT, 'GoTo',
              ( ['in', 'optional'], POINTER(VARIANT), 'What' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'Which' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'Count' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'Name' ),
              ( ['out', 'retval'], POINTER(POINTER(Range)), 'prop' )),
    COMMETHOD([dispid(174)], HRESULT, 'GoToNext',
              ( ['in'], WdGoToItem, 'What' ),
              ( ['out', 'retval'], POINTER(POINTER(Range)), 'prop' )),
    COMMETHOD([dispid(175)], HRESULT, 'GoToPrevious',
              ( ['in'], WdGoToItem, 'What' ),
              ( ['out', 'retval'], POINTER(POINTER(Range)), 'prop' )),
    COMMETHOD([dispid(176)], HRESULT, 'PasteSpecial',
              ( ['in', 'optional'], POINTER(VARIANT), 'IconIndex' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'Link' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'Placement' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'DisplayAsIcon' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'DataType' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'IconFileName' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'IconLabel' )),
    COMMETHOD([dispid(177)], HRESULT, 'PreviousField',
              ( ['out', 'retval'], POINTER(POINTER(Field)), 'prop' )),
    COMMETHOD([dispid(178)], HRESULT, 'NextField',
              ( ['out', 'retval'], POINTER(POINTER(Field)), 'prop' )),
    COMMETHOD([dispid(212)], HRESULT, 'InsertParagraphBefore'),
    COMMETHOD([dispid(214)], HRESULT, 'InsertCells',
              ( ['in', 'optional'], POINTER(VARIANT), 'ShiftCells' )),
    COMMETHOD([dispid(300)], HRESULT, 'Extend',
              ( ['in', 'optional'], POINTER(VARIANT), 'Character' )),
    COMMETHOD([dispid(301)], HRESULT, 'Shrink'),
    COMMETHOD([dispid(500)], HRESULT, 'MoveLeft',
              ( ['in', 'optional'], POINTER(VARIANT), 'Unit' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'Count' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'Extend' ),
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(501)], HRESULT, 'MoveRight',
              ( ['in', 'optional'], POINTER(VARIANT), 'Unit' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'Count' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'Extend' ),
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(502)], HRESULT, 'MoveUp',
              ( ['in', 'optional'], POINTER(VARIANT), 'Unit' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'Count' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'Extend' ),
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(503)], HRESULT, 'MoveDown',
              ( ['in', 'optional'], POINTER(VARIANT), 'Unit' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'Count' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'Extend' ),
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(504)], HRESULT, 'HomeKey',
              ( ['in', 'optional'], POINTER(VARIANT), 'Unit' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'Extend' ),
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(505)], HRESULT, 'EndKey',
              ( ['in', 'optional'], POINTER(VARIANT), 'Unit' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'Extend' ),
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(506)], HRESULT, 'EscapeKey'),
    COMMETHOD([dispid(507)], HRESULT, 'TypeText',
              ( ['in'], BSTR, 'Text' )),
    COMMETHOD([dispid(509)], HRESULT, 'CopyFormat'),
    COMMETHOD([dispid(510)], HRESULT, 'PasteFormat'),
    COMMETHOD([dispid(512)], HRESULT, 'TypeParagraph'),
    COMMETHOD([dispid(513)], HRESULT, 'TypeBackspace'),
    COMMETHOD([dispid(514)], HRESULT, 'NextSubdocument'),
    COMMETHOD([dispid(515)], HRESULT, 'PreviousSubdocument'),
    COMMETHOD([dispid(516)], HRESULT, 'SelectColumn'),
    COMMETHOD([dispid(517)], HRESULT, 'SelectCurrentFont'),
    COMMETHOD([dispid(518)], HRESULT, 'SelectCurrentAlignment'),
    COMMETHOD([dispid(519)], HRESULT, 'SelectCurrentSpacing'),
    COMMETHOD([dispid(520)], HRESULT, 'SelectCurrentIndent'),
    COMMETHOD([dispid(521)], HRESULT, 'SelectCurrentTabs'),
    COMMETHOD([dispid(522)], HRESULT, 'SelectCurrentColor'),
    COMMETHOD([dispid(523)], HRESULT, 'CreateTextbox'),
    COMMETHOD([dispid(524)], HRESULT, 'WholeStory'),
    COMMETHOD([dispid(525)], HRESULT, 'SelectRow'),
    COMMETHOD([dispid(526)], HRESULT, 'SplitTable'),
    COMMETHOD([dispid(528)], HRESULT, 'InsertRows',
              ( ['in', 'optional'], POINTER(VARIANT), 'NumRows' )),
    COMMETHOD([dispid(529)], HRESULT, 'InsertColumns'),
    COMMETHOD([dispid(530)], HRESULT, 'InsertFormula',
              ( ['in', 'optional'], POINTER(VARIANT), 'Formula' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'NumberFormat' )),
    COMMETHOD([dispid(531)], HRESULT, 'NextRevision',
              ( ['in', 'optional'], POINTER(VARIANT), 'Wrap' ),
              ( ['out', 'retval'], POINTER(POINTER(Revision)), 'prop' )),
    COMMETHOD([dispid(532)], HRESULT, 'PreviousRevision',
              ( ['in', 'optional'], POINTER(VARIANT), 'Wrap' ),
              ( ['out', 'retval'], POINTER(POINTER(Revision)), 'prop' )),
    COMMETHOD([dispid(533)], HRESULT, 'PasteAsNestedTable'),
    COMMETHOD([dispid(534)], HRESULT, 'CreateAutoTextEntry',
              ( ['in'], BSTR, 'Name' ),
              ( ['in'], BSTR, 'StyleName' ),
              ( ['out', 'retval'], POINTER(POINTER(AutoTextEntry)), 'prop' )),
    COMMETHOD([dispid(535)], HRESULT, 'DetectLanguage'),
    COMMETHOD([dispid(536)], HRESULT, 'SelectCell'),
    COMMETHOD([dispid(537)], HRESULT, 'InsertRowsBelow',
              ( ['in', 'optional'], POINTER(VARIANT), 'NumRows' )),
    COMMETHOD([dispid(538)], HRESULT, 'InsertColumnsRight'),
    COMMETHOD([dispid(539)], HRESULT, 'InsertRowsAbove',
              ( ['in', 'optional'], POINTER(VARIANT), 'NumRows' )),
    COMMETHOD([dispid(600)], HRESULT, 'RtlRun'),
    COMMETHOD([dispid(601)], HRESULT, 'LtrRun'),
    COMMETHOD([dispid(602)], HRESULT, 'BoldRun'),
    COMMETHOD([dispid(603)], HRESULT, 'ItalicRun'),
    COMMETHOD([dispid(605)], HRESULT, 'RtlPara'),
    COMMETHOD([dispid(606)], HRESULT, 'LtrPara'),
    COMMETHOD([dispid(444)], HRESULT, 'InsertDateTime',
              ( ['in', 'optional'], POINTER(VARIANT), 'DateTimeFormat' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'InsertAsField' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'InsertAsFullWidth' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'DateLanguage' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'CalendarType' )),
    COMMETHOD([dispid(445), 'hidden'], HRESULT, 'Sort2000',
              ( ['in', 'optional'], POINTER(VARIANT), 'ExcludeHeader' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'FieldNumber' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'SortFieldType' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'SortOrder' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'FieldNumber2' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'SortFieldType2' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'SortOrder2' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'FieldNumber3' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'SortFieldType3' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'SortOrder3' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'SortColumn' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'Separator' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'CaseSensitive' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'BidiSort' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'IgnoreThe' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'IgnoreKashida' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'IgnoreDiacritics' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'IgnoreHe' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'LanguageID' )),
    COMMETHOD([dispid(457)], HRESULT, 'ConvertToTable',
              ( ['in', 'optional'], POINTER(VARIANT), 'Separator' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'NumRows' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'NumColumns' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'InitialColumnWidth' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'Format' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'ApplyBorders' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'ApplyShading' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'ApplyFont' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'ApplyColor' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'ApplyHeadingRows' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'ApplyLastRow' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'ApplyFirstColumn' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'ApplyLastColumn' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'AutoFit' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'AutoFitBehavior' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'DefaultTableBehavior' ),
              ( ['out', 'retval'], POINTER(POINTER(Table)), 'prop' )),
    COMMETHOD([dispid(1005), 'propget'], HRESULT, 'NoProofing',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(1005), 'propput'], HRESULT, 'NoProofing',
              ( ['in'], c_int, 'prop' )),
    COMMETHOD([dispid(1006), 'propget'], HRESULT, 'TopLevelTables',
              ( ['out', 'retval'], POINTER(POINTER(Tables)), 'prop' )),
    COMMETHOD([dispid(1007), 'propget'], HRESULT, 'LanguageDetected',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'prop' )),
    COMMETHOD([dispid(1007), 'propput'], HRESULT, 'LanguageDetected',
              ( ['in'], VARIANT_BOOL, 'prop' )),
    COMMETHOD([dispid(1008), 'propget'], HRESULT, 'FitTextWidth',
              ( ['out', 'retval'], POINTER(c_float), 'prop' )),
    COMMETHOD([dispid(1008), 'propput'], HRESULT, 'FitTextWidth',
              ( ['in'], c_float, 'prop' )),
    COMMETHOD([dispid(1009)], HRESULT, 'ClearFormatting'),
    COMMETHOD([dispid(1010)], HRESULT, 'PasteAppendTable'),
    COMMETHOD([dispid(1011), 'propget'], HRESULT, 'HTMLDivisions',
              ( ['out', 'retval'], POINTER(POINTER(HTMLDivisions)), 'prop' )),
    COMMETHOD([dispid(1015), 'hidden', 'propget'], HRESULT, 'SmartTags',
              ( ['out', 'retval'], POINTER(POINTER(SmartTags)), 'prop' )),
    COMMETHOD([dispid(1021), 'propget'], HRESULT, 'ChildShapeRange',
              ( ['out', 'retval'], POINTER(POINTER(ShapeRange)), 'prop' )),
    COMMETHOD([dispid(1022), 'propget'], HRESULT, 'HasChildShapeRange',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'prop' )),
    COMMETHOD([dispid(1024), 'propget'], HRESULT, 'FootnoteOptions',
              ( ['out', 'retval'], POINTER(POINTER(FootnoteOptions)), 'prop' )),
    COMMETHOD([dispid(1025), 'propget'], HRESULT, 'EndnoteOptions',
              ( ['out', 'retval'], POINTER(POINTER(EndnoteOptions)), 'prop' )),
    COMMETHOD([dispid(1012)], HRESULT, 'ToggleCharacterCode'),
    COMMETHOD([dispid(1013)], HRESULT, 'PasteAndFormat',
              ( ['in'], WdRecoveryType, 'Type' )),
    COMMETHOD([dispid(1014)], HRESULT, 'PasteExcelTable',
              ( ['in'], VARIANT_BOOL, 'LinkedToExcel' ),
              ( ['in'], VARIANT_BOOL, 'WordFormatting' ),
              ( ['in'], VARIANT_BOOL, 'RTF' )),
    COMMETHOD([dispid(1019)], HRESULT, 'ShrinkDiscontiguousSelection'),
    COMMETHOD([dispid(1020)], HRESULT, 'InsertStyleSeparator'),
    COMMETHOD([dispid(1023)], HRESULT, 'Sort',
              ( ['in', 'optional'], POINTER(VARIANT), 'ExcludeHeader' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'FieldNumber' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'SortFieldType' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'SortOrder' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'FieldNumber2' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'SortFieldType2' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'SortOrder2' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'FieldNumber3' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'SortFieldType3' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'SortOrder3' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'SortColumn' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'Separator' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'CaseSensitive' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'BidiSort' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'IgnoreThe' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'IgnoreKashida' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'IgnoreDiacritics' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'IgnoreHe' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'LanguageID' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'SubFieldNumber' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'SubFieldNumber2' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'SubFieldNumber3' )),
    COMMETHOD([dispid(310), 'hidden', 'propget'], HRESULT, 'XMLNodes',
              ( ['out', 'retval'], POINTER(POINTER(XMLNodes)), 'prop' )),
    COMMETHOD([dispid(311), 'hidden', 'propget'], HRESULT, 'XMLParentNode',
              ( ['out', 'retval'], POINTER(POINTER(XMLNode)), 'prop' )),
    COMMETHOD([dispid(313), 'propget'], HRESULT, 'Editors',
              ( ['out', 'retval'], POINTER(POINTER(Editors)), 'prop' )),
    COMMETHOD([dispid(314), 'propget'], HRESULT, 'XML',
              ( ['in', 'optional'], VARIANT_BOOL, 'DataOnly', False ),
              ( ['out', 'retval'], POINTER(BSTR), 'prop' )),
    COMMETHOD([dispid(315), 'propget'], HRESULT, 'EnhMetaFileBits',
              ( ['out', 'retval'], POINTER(VARIANT), 'prop' )),
    COMMETHOD([dispid(1027)], HRESULT, 'GoToEditableRange',
              ( ['in', 'optional'], POINTER(VARIANT), 'EditorID' ),
              ( ['out', 'retval'], POINTER(POINTER(Range)), 'prop' )),
    COMMETHOD([dispid(1028)], HRESULT, 'InsertXML',
              ( ['in'], BSTR, 'XML' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'Transform' )),
    COMMETHOD([dispid(417)], HRESULT, 'InsertCaption',
              ( ['in'], POINTER(VARIANT), 'Label' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'Title' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'TitleAutoText' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'Position' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'ExcludeLabel' )),
    COMMETHOD([dispid(418)], HRESULT, 'InsertCrossReference',
              ( ['in'], POINTER(VARIANT), 'ReferenceType' ),
              ( ['in'], WdReferenceKind, 'ReferenceKind' ),
              ( ['in'], POINTER(VARIANT), 'ReferenceItem' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'InsertAsHyperlink' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'IncludePosition' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'SeparateNumbers' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'SeparatorString' )),
    COMMETHOD([dispid(316), 'propget'], HRESULT, 'OMaths',
              ( ['out', 'retval'], POINTER(POINTER(OMaths)), 'prop' )),
    COMMETHOD([dispid(317), 'propget'], HRESULT, 'WordOpenXML',
              ( ['out', 'retval'], POINTER(BSTR), 'prop' )),
    COMMETHOD([dispid(1030)], HRESULT, 'ClearParagraphStyle'),
    COMMETHOD([dispid(1031)], HRESULT, 'ClearCharacterAllFormatting'),
    COMMETHOD([dispid(1032)], HRESULT, 'ClearCharacterStyle'),
    COMMETHOD([dispid(1033)], HRESULT, 'ClearCharacterDirectFormatting'),
    COMMETHOD([dispid(1034), 'hidden', 'propget'], HRESULT, 'ContentControls',
              ( ['out', 'retval'], POINTER(POINTER(ContentControls)), 'prop' )),
    COMMETHOD([dispid(1035), 'hidden', 'propget'], HRESULT, 'ParentContentControl',
              ( ['out', 'retval'], POINTER(POINTER(ContentControl)), 'prop' )),
    COMMETHOD([dispid(1036)], HRESULT, 'ExportAsFixedFormat',
              ( ['in'], BSTR, 'OutputFileName' ),
              ( ['in'], WdExportFormat, 'ExportFormat' ),
              ( ['in', 'optional'], VARIANT_BOOL, 'OpenAfterExport', False ),
              ( ['in', 'optional'], WdExportOptimizeFor, 'OptimizeFor', 0 ),
              ( ['in', 'optional'], VARIANT_BOOL, 'ExportCurrentPage', False ),
              ( ['in', 'optional'], WdExportItem, 'Item', 0 ),
              ( ['in', 'optional'], VARIANT_BOOL, 'IncludeDocProps', False ),
              ( ['in', 'optional'], VARIANT_BOOL, 'KeepIRM', True ),
              ( ['in', 'optional'], WdExportCreateBookmarks, 'CreateBookmarks', 0 ),
              ( ['in', 'optional'], VARIANT_BOOL, 'DocStructureTags', True ),
              ( ['in', 'optional'], VARIANT_BOOL, 'BitmapMissingFonts', True ),
              ( ['in', 'optional'], VARIANT_BOOL, 'UseISO19005_1', False ),
              ( ['in', 'optional'], POINTER(VARIANT), 'FixedFormatExtClassPtr' )),
    COMMETHOD([dispid(1037)], HRESULT, 'ReadingModeGrowFont'),
    COMMETHOD([dispid(1038)], HRESULT, 'ReadingModeShrinkFont'),
    COMMETHOD([dispid(1039)], HRESULT, 'ClearParagraphAllFormatting'),
    COMMETHOD([dispid(1040)], HRESULT, 'ClearParagraphDirectFormatting'),
    COMMETHOD([dispid(1041)], HRESULT, 'InsertNewPage'),
    COMMETHOD([dispid(1042)], HRESULT, 'SortByHeadings',
              ( ['in', 'optional'], POINTER(VARIANT), 'SortFieldType' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'SortOrder' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'CaseSensitive' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'BidiSort' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'IgnoreThe' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'IgnoreKashida' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'IgnoreDiacritics' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'IgnoreHe' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'LanguageID' )),
    COMMETHOD([dispid(1043)], HRESULT, 'ExportAsFixedFormat2',
              ( ['in'], BSTR, 'OutputFileName' ),
              ( ['in'], WdExportFormat, 'ExportFormat' ),
              ( ['in', 'optional'], VARIANT_BOOL, 'OpenAfterExport', False ),
              ( ['in', 'optional'], WdExportOptimizeFor, 'OptimizeFor', 0 ),
              ( ['in', 'optional'], VARIANT_BOOL, 'ExportCurrentPage', False ),
              ( ['in', 'optional'], WdExportItem, 'Item', 0 ),
              ( ['in', 'optional'], VARIANT_BOOL, 'IncludeDocProps', False ),
              ( ['in', 'optional'], VARIANT_BOOL, 'KeepIRM', True ),
              ( ['in', 'optional'], WdExportCreateBookmarks, 'CreateBookmarks', 0 ),
              ( ['in', 'optional'], VARIANT_BOOL, 'DocStructureTags', True ),
              ( ['in', 'optional'], VARIANT_BOOL, 'BitmapMissingFonts', True ),
              ( ['in', 'optional'], VARIANT_BOOL, 'UseISO19005_1', False ),
              ( ['in', 'optional'], VARIANT_BOOL, 'OptimizeForImageQuality', False ),
              ( ['in', 'optional'], POINTER(VARIANT), 'FixedFormatExtClassPtr' )),
]
################################################################
## code template for Selection implementation
##class Selection_Impl(object):
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    Text = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    FormattedText = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    Start = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    End = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    Font = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Type(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def StoryType(self):
##        '-no docstring-'
##        #return prop
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    Style = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Tables(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Words(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Sentences(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Characters(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Footnotes(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Endnotes(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Comments(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Cells(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Sections(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Paragraphs(self):
##        '-no docstring-'
##        #return prop
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    Borders = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Shading(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Fields(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def FormFields(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Frames(self):
##        '-no docstring-'
##        #return prop
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    ParagraphFormat = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    PageSetup = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Bookmarks(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def StoryLength(self):
##        '-no docstring-'
##        #return prop
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    LanguageID = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    LanguageIDFarEast = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    LanguageIDOther = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Hyperlinks(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Columns(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Rows(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def HeaderFooter(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def IsEndOfRowMark(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def BookmarkID(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def PreviousBookmarkID(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Find(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Range(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Information(self, Type):
##        '-no docstring-'
##        #return prop
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    Flags = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Active(self):
##        '-no docstring-'
##        #return prop
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    StartIsActive = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def IPAtEndOfLine(self):
##        '-no docstring-'
##        #return prop
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    ExtendMode = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    ColumnSelectMode = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    Orientation = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def InlineShapes(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Creator(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Document(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def ShapeRange(self):
##        '-no docstring-'
##        #return prop
##
##    def Select(self):
##        '-no docstring-'
##        #return 
##
##    def SetRange(self, Start, End):
##        '-no docstring-'
##        #return 
##
##    def Collapse(self, Direction):
##        '-no docstring-'
##        #return 
##
##    def InsertBefore(self, Text):
##        '-no docstring-'
##        #return 
##
##    def InsertAfter(self, Text):
##        '-no docstring-'
##        #return 
##
##    def Next(self, Unit, Count):
##        '-no docstring-'
##        #return prop
##
##    def Previous(self, Unit, Count):
##        '-no docstring-'
##        #return prop
##
##    def StartOf(self, Unit, Extend):
##        '-no docstring-'
##        #return prop
##
##    def EndOf(self, Unit, Extend):
##        '-no docstring-'
##        #return prop
##
##    def Move(self, Unit, Count):
##        '-no docstring-'
##        #return prop
##
##    def MoveStart(self, Unit, Count):
##        '-no docstring-'
##        #return prop
##
##    def MoveEnd(self, Unit, Count):
##        '-no docstring-'
##        #return prop
##
##    def MoveWhile(self, Cset, Count):
##        '-no docstring-'
##        #return prop
##
##    def MoveStartWhile(self, Cset, Count):
##        '-no docstring-'
##        #return prop
##
##    def MoveEndWhile(self, Cset, Count):
##        '-no docstring-'
##        #return prop
##
##    def MoveUntil(self, Cset, Count):
##        '-no docstring-'
##        #return prop
##
##    def MoveStartUntil(self, Cset, Count):
##        '-no docstring-'
##        #return prop
##
##    def MoveEndUntil(self, Cset, Count):
##        '-no docstring-'
##        #return prop
##
##    def Cut(self):
##        '-no docstring-'
##        #return 
##
##    def Copy(self):
##        '-no docstring-'
##        #return 
##
##    def Paste(self):
##        '-no docstring-'
##        #return 
##
##    def InsertBreak(self, Type):
##        '-no docstring-'
##        #return 
##
##    def InsertFile(self, FileName, Range, ConfirmConversions, Link, Attachment):
##        '-no docstring-'
##        #return 
##
##    def InStory(self, Range):
##        '-no docstring-'
##        #return prop
##
##    def InRange(self, Range):
##        '-no docstring-'
##        #return prop
##
##    def Delete(self, Unit, Count):
##        '-no docstring-'
##        #return prop
##
##    def Expand(self, Unit):
##        '-no docstring-'
##        #return prop
##
##    def InsertParagraph(self):
##        '-no docstring-'
##        #return 
##
##    def InsertParagraphAfter(self):
##        '-no docstring-'
##        #return 
##
##    def ConvertToTableOld(self, Separator, NumRows, NumColumns, InitialColumnWidth, Format, ApplyBorders, ApplyShading, ApplyFont, ApplyColor, ApplyHeadingRows, ApplyLastRow, ApplyFirstColumn, ApplyLastColumn, AutoFit):
##        '-no docstring-'
##        #return prop
##
##    def InsertDateTimeOld(self, DateTimeFormat, InsertAsField, InsertAsFullWidth):
##        '-no docstring-'
##        #return 
##
##    def InsertSymbol(self, CharacterNumber, Font, Unicode, Bias):
##        '-no docstring-'
##        #return 
##
##    def InsertCrossReference_2002(self, ReferenceType, ReferenceKind, ReferenceItem, InsertAsHyperlink, IncludePosition):
##        '-no docstring-'
##        #return 
##
##    def InsertCaptionXP(self, Label, Title, TitleAutoText, Position):
##        '-no docstring-'
##        #return 
##
##    def CopyAsPicture(self):
##        '-no docstring-'
##        #return 
##
##    def SortOld(self, ExcludeHeader, FieldNumber, SortFieldType, SortOrder, FieldNumber2, SortFieldType2, SortOrder2, FieldNumber3, SortFieldType3, SortOrder3, SortColumn, Separator, CaseSensitive, LanguageID):
##        '-no docstring-'
##        #return 
##
##    def SortAscending(self):
##        '-no docstring-'
##        #return 
##
##    def SortDescending(self):
##        '-no docstring-'
##        #return 
##
##    def IsEqual(self, Range):
##        '-no docstring-'
##        #return prop
##
##    def Calculate(self):
##        '-no docstring-'
##        #return prop
##
##    def GoTo(self, What, Which, Count, Name):
##        '-no docstring-'
##        #return prop
##
##    def GoToNext(self, What):
##        '-no docstring-'
##        #return prop
##
##    def GoToPrevious(self, What):
##        '-no docstring-'
##        #return prop
##
##    def PasteSpecial(self, IconIndex, Link, Placement, DisplayAsIcon, DataType, IconFileName, IconLabel):
##        '-no docstring-'
##        #return 
##
##    def PreviousField(self):
##        '-no docstring-'
##        #return prop
##
##    def NextField(self):
##        '-no docstring-'
##        #return prop
##
##    def InsertParagraphBefore(self):
##        '-no docstring-'
##        #return 
##
##    def InsertCells(self, ShiftCells):
##        '-no docstring-'
##        #return 
##
##    def Extend(self, Character):
##        '-no docstring-'
##        #return 
##
##    def Shrink(self):
##        '-no docstring-'
##        #return 
##
##    def MoveLeft(self, Unit, Count, Extend):
##        '-no docstring-'
##        #return prop
##
##    def MoveRight(self, Unit, Count, Extend):
##        '-no docstring-'
##        #return prop
##
##    def MoveUp(self, Unit, Count, Extend):
##        '-no docstring-'
##        #return prop
##
##    def MoveDown(self, Unit, Count, Extend):
##        '-no docstring-'
##        #return prop
##
##    def HomeKey(self, Unit, Extend):
##        '-no docstring-'
##        #return prop
##
##    def EndKey(self, Unit, Extend):
##        '-no docstring-'
##        #return prop
##
##    def EscapeKey(self):
##        '-no docstring-'
##        #return 
##
##    def TypeText(self, Text):
##        '-no docstring-'
##        #return 
##
##    def CopyFormat(self):
##        '-no docstring-'
##        #return 
##
##    def PasteFormat(self):
##        '-no docstring-'
##        #return 
##
##    def TypeParagraph(self):
##        '-no docstring-'
##        #return 
##
##    def TypeBackspace(self):
##        '-no docstring-'
##        #return 
##
##    def NextSubdocument(self):
##        '-no docstring-'
##        #return 
##
##    def PreviousSubdocument(self):
##        '-no docstring-'
##        #return 
##
##    def SelectColumn(self):
##        '-no docstring-'
##        #return 
##
##    def SelectCurrentFont(self):
##        '-no docstring-'
##        #return 
##
##    def SelectCurrentAlignment(self):
##        '-no docstring-'
##        #return 
##
##    def SelectCurrentSpacing(self):
##        '-no docstring-'
##        #return 
##
##    def SelectCurrentIndent(self):
##        '-no docstring-'
##        #return 
##
##    def SelectCurrentTabs(self):
##        '-no docstring-'
##        #return 
##
##    def SelectCurrentColor(self):
##        '-no docstring-'
##        #return 
##
##    def CreateTextbox(self):
##        '-no docstring-'
##        #return 
##
##    def WholeStory(self):
##        '-no docstring-'
##        #return 
##
##    def SelectRow(self):
##        '-no docstring-'
##        #return 
##
##    def SplitTable(self):
##        '-no docstring-'
##        #return 
##
##    def InsertRows(self, NumRows):
##        '-no docstring-'
##        #return 
##
##    def InsertColumns(self):
##        '-no docstring-'
##        #return 
##
##    def InsertFormula(self, Formula, NumberFormat):
##        '-no docstring-'
##        #return 
##
##    def NextRevision(self, Wrap):
##        '-no docstring-'
##        #return prop
##
##    def PreviousRevision(self, Wrap):
##        '-no docstring-'
##        #return prop
##
##    def PasteAsNestedTable(self):
##        '-no docstring-'
##        #return 
##
##    def CreateAutoTextEntry(self, Name, StyleName):
##        '-no docstring-'
##        #return prop
##
##    def DetectLanguage(self):
##        '-no docstring-'
##        #return 
##
##    def SelectCell(self):
##        '-no docstring-'
##        #return 
##
##    def InsertRowsBelow(self, NumRows):
##        '-no docstring-'
##        #return 
##
##    def InsertColumnsRight(self):
##        '-no docstring-'
##        #return 
##
##    def InsertRowsAbove(self, NumRows):
##        '-no docstring-'
##        #return 
##
##    def RtlRun(self):
##        '-no docstring-'
##        #return 
##
##    def LtrRun(self):
##        '-no docstring-'
##        #return 
##
##    def BoldRun(self):
##        '-no docstring-'
##        #return 
##
##    def ItalicRun(self):
##        '-no docstring-'
##        #return 
##
##    def RtlPara(self):
##        '-no docstring-'
##        #return 
##
##    def LtrPara(self):
##        '-no docstring-'
##        #return 
##
##    def InsertDateTime(self, DateTimeFormat, InsertAsField, InsertAsFullWidth, DateLanguage, CalendarType):
##        '-no docstring-'
##        #return 
##
##    def Sort2000(self, ExcludeHeader, FieldNumber, SortFieldType, SortOrder, FieldNumber2, SortFieldType2, SortOrder2, FieldNumber3, SortFieldType3, SortOrder3, SortColumn, Separator, CaseSensitive, BidiSort, IgnoreThe, IgnoreKashida, IgnoreDiacritics, IgnoreHe, LanguageID):
##        '-no docstring-'
##        #return 
##
##    def ConvertToTable(self, Separator, NumRows, NumColumns, InitialColumnWidth, Format, ApplyBorders, ApplyShading, ApplyFont, ApplyColor, ApplyHeadingRows, ApplyLastRow, ApplyFirstColumn, ApplyLastColumn, AutoFit, AutoFitBehavior, DefaultTableBehavior):
##        '-no docstring-'
##        #return prop
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    NoProofing = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def TopLevelTables(self):
##        '-no docstring-'
##        #return prop
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    LanguageDetected = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    FitTextWidth = property(_get, _set, doc = _set.__doc__)
##
##    def ClearFormatting(self):
##        '-no docstring-'
##        #return 
##
##    def PasteAppendTable(self):
##        '-no docstring-'
##        #return 
##
##    @property
##    def HTMLDivisions(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def SmartTags(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def ChildShapeRange(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def HasChildShapeRange(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def FootnoteOptions(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def EndnoteOptions(self):
##        '-no docstring-'
##        #return prop
##
##    def ToggleCharacterCode(self):
##        '-no docstring-'
##        #return 
##
##    def PasteAndFormat(self, Type):
##        '-no docstring-'
##        #return 
##
##    def PasteExcelTable(self, LinkedToExcel, WordFormatting, RTF):
##        '-no docstring-'
##        #return 
##
##    def ShrinkDiscontiguousSelection(self):
##        '-no docstring-'
##        #return 
##
##    def InsertStyleSeparator(self):
##        '-no docstring-'
##        #return 
##
##    def Sort(self, ExcludeHeader, FieldNumber, SortFieldType, SortOrder, FieldNumber2, SortFieldType2, SortOrder2, FieldNumber3, SortFieldType3, SortOrder3, SortColumn, Separator, CaseSensitive, BidiSort, IgnoreThe, IgnoreKashida, IgnoreDiacritics, IgnoreHe, LanguageID, SubFieldNumber, SubFieldNumber2, SubFieldNumber3):
##        '-no docstring-'
##        #return 
##
##    @property
##    def XMLNodes(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def XMLParentNode(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Editors(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def XML(self, DataOnly):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def EnhMetaFileBits(self):
##        '-no docstring-'
##        #return prop
##
##    def GoToEditableRange(self, EditorID):
##        '-no docstring-'
##        #return prop
##
##    def InsertXML(self, XML, Transform):
##        '-no docstring-'
##        #return 
##
##    def InsertCaption(self, Label, Title, TitleAutoText, Position, ExcludeLabel):
##        '-no docstring-'
##        #return 
##
##    def InsertCrossReference(self, ReferenceType, ReferenceKind, ReferenceItem, InsertAsHyperlink, IncludePosition, SeparateNumbers, SeparatorString):
##        '-no docstring-'
##        #return 
##
##    @property
##    def OMaths(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def WordOpenXML(self):
##        '-no docstring-'
##        #return prop
##
##    def ClearParagraphStyle(self):
##        '-no docstring-'
##        #return 
##
##    def ClearCharacterAllFormatting(self):
##        '-no docstring-'
##        #return 
##
##    def ClearCharacterStyle(self):
##        '-no docstring-'
##        #return 
##
##    def ClearCharacterDirectFormatting(self):
##        '-no docstring-'
##        #return 
##
##    @property
##    def ContentControls(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def ParentContentControl(self):
##        '-no docstring-'
##        #return prop
##
##    def ExportAsFixedFormat(self, OutputFileName, ExportFormat, OpenAfterExport, OptimizeFor, ExportCurrentPage, Item, IncludeDocProps, KeepIRM, CreateBookmarks, DocStructureTags, BitmapMissingFonts, UseISO19005_1, FixedFormatExtClassPtr):
##        '-no docstring-'
##        #return 
##
##    def ReadingModeGrowFont(self):
##        '-no docstring-'
##        #return 
##
##    def ReadingModeShrinkFont(self):
##        '-no docstring-'
##        #return 
##
##    def ClearParagraphAllFormatting(self):
##        '-no docstring-'
##        #return 
##
##    def ClearParagraphDirectFormatting(self):
##        '-no docstring-'
##        #return 
##
##    def InsertNewPage(self):
##        '-no docstring-'
##        #return 
##
##    def SortByHeadings(self, SortFieldType, SortOrder, CaseSensitive, BidiSort, IgnoreThe, IgnoreKashida, IgnoreDiacritics, IgnoreHe, LanguageID):
##        '-no docstring-'
##        #return 
##
##    def ExportAsFixedFormat2(self, OutputFileName, ExportFormat, OpenAfterExport, OptimizeFor, ExportCurrentPage, Item, IncludeDocProps, KeepIRM, CreateBookmarks, DocStructureTags, BitmapMissingFonts, UseISO19005_1, OptimizeForImageQuality, FixedFormatExtClassPtr):
##        '-no docstring-'
##        #return 
##


# values for enumeration 'WdReplace'
wdReplaceNone = 0
wdReplaceOne = 1
wdReplaceAll = 2
WdReplace = c_int # enum
TableOfAuthorities._methods_ = [
    COMMETHOD([dispid(1000), 'propget'], HRESULT, 'Application',
              ( ['out', 'retval'], POINTER(POINTER(Application)), 'prop' )),
    COMMETHOD([dispid(1001), 'propget'], HRESULT, 'Creator',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(1002), 'propget'], HRESULT, 'Parent',
              ( ['out', 'retval'], POINTER(POINTER(IDispatch)), 'prop' )),
    COMMETHOD([dispid(1), 'propget'], HRESULT, 'Passim',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'prop' )),
    COMMETHOD([dispid(1), 'propput'], HRESULT, 'Passim',
              ( ['in'], VARIANT_BOOL, 'prop' )),
    COMMETHOD([dispid(2), 'propget'], HRESULT, 'KeepEntryFormatting',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'prop' )),
    COMMETHOD([dispid(2), 'propput'], HRESULT, 'KeepEntryFormatting',
              ( ['in'], VARIANT_BOOL, 'prop' )),
    COMMETHOD([dispid(3), 'propget'], HRESULT, 'Category',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(3), 'propput'], HRESULT, 'Category',
              ( ['in'], c_int, 'prop' )),
    COMMETHOD([dispid(4), 'propget'], HRESULT, 'Bookmark',
              ( ['out', 'retval'], POINTER(BSTR), 'prop' )),
    COMMETHOD([dispid(4), 'propput'], HRESULT, 'Bookmark',
              ( ['in'], BSTR, 'prop' )),
    COMMETHOD([dispid(5), 'propget'], HRESULT, 'Separator',
              ( ['out', 'retval'], POINTER(BSTR), 'prop' )),
    COMMETHOD([dispid(5), 'propput'], HRESULT, 'Separator',
              ( ['in'], BSTR, 'prop' )),
    COMMETHOD([dispid(6), 'propget'], HRESULT, 'IncludeSequenceName',
              ( ['out', 'retval'], POINTER(BSTR), 'prop' )),
    COMMETHOD([dispid(6), 'propput'], HRESULT, 'IncludeSequenceName',
              ( ['in'], BSTR, 'prop' )),
    COMMETHOD([dispid(7), 'propget'], HRESULT, 'EntrySeparator',
              ( ['out', 'retval'], POINTER(BSTR), 'prop' )),
    COMMETHOD([dispid(7), 'propput'], HRESULT, 'EntrySeparator',
              ( ['in'], BSTR, 'prop' )),
    COMMETHOD([dispid(8), 'propget'], HRESULT, 'PageRangeSeparator',
              ( ['out', 'retval'], POINTER(BSTR), 'prop' )),
    COMMETHOD([dispid(8), 'propput'], HRESULT, 'PageRangeSeparator',
              ( ['in'], BSTR, 'prop' )),
    COMMETHOD([dispid(9), 'propget'], HRESULT, 'IncludeCategoryHeader',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'prop' )),
    COMMETHOD([dispid(9), 'propput'], HRESULT, 'IncludeCategoryHeader',
              ( ['in'], VARIANT_BOOL, 'prop' )),
    COMMETHOD([dispid(10), 'propget'], HRESULT, 'PageNumberSeparator',
              ( ['out', 'retval'], POINTER(BSTR), 'prop' )),
    COMMETHOD([dispid(10), 'propput'], HRESULT, 'PageNumberSeparator',
              ( ['in'], BSTR, 'prop' )),
    COMMETHOD([dispid(11), 'propget'], HRESULT, 'Range',
              ( ['out', 'retval'], POINTER(POINTER(Range)), 'prop' )),
    COMMETHOD([dispid(12), 'propget'], HRESULT, 'TabLeader',
              ( ['out', 'retval'], POINTER(WdTabLeader), 'prop' )),
    COMMETHOD([dispid(12), 'propput'], HRESULT, 'TabLeader',
              ( ['in'], WdTabLeader, 'prop' )),
    COMMETHOD([dispid(100)], HRESULT, 'Delete'),
    COMMETHOD([dispid(101)], HRESULT, 'Update'),
]
################################################################
## code template for TableOfAuthorities implementation
##class TableOfAuthorities_Impl(object):
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Creator(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return prop
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    Passim = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    KeepEntryFormatting = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    Category = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    Bookmark = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    Separator = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    IncludeSequenceName = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    EntrySeparator = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    PageRangeSeparator = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    IncludeCategoryHeader = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    PageNumberSeparator = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Range(self):
##        '-no docstring-'
##        #return prop
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    TabLeader = property(_get, _set, doc = _set.__doc__)
##
##    def Delete(self):
##        '-no docstring-'
##        #return 
##
##    def Update(self):
##        '-no docstring-'
##        #return 
##


# values for enumeration 'WdLinkType'
wdLinkTypeOLE = 0
wdLinkTypePicture = 1
wdLinkTypeText = 2
wdLinkTypeReference = 3
wdLinkTypeInclude = 4
wdLinkTypeImport = 5
wdLinkTypeDDE = 6
wdLinkTypeDDEAuto = 7
wdLinkTypeChart = 8
WdLinkType = c_int # enum
LinkFormat._methods_ = [
    COMMETHOD([dispid(1000), 'propget'], HRESULT, 'Application',
              ( ['out', 'retval'], POINTER(POINTER(Application)), 'prop' )),
    COMMETHOD([dispid(1001), 'propget'], HRESULT, 'Creator',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(1002), 'propget'], HRESULT, 'Parent',
              ( ['out', 'retval'], POINTER(POINTER(IDispatch)), 'prop' )),
    COMMETHOD([dispid(1), 'propget'], HRESULT, 'AutoUpdate',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'prop' )),
    COMMETHOD([dispid(1), 'propput'], HRESULT, 'AutoUpdate',
              ( ['in'], VARIANT_BOOL, 'prop' )),
    COMMETHOD([dispid(4), 'propget'], HRESULT, 'SourceName',
              ( ['out', 'retval'], POINTER(BSTR), 'prop' )),
    COMMETHOD([dispid(5), 'propget'], HRESULT, 'SourcePath',
              ( ['out', 'retval'], POINTER(BSTR), 'prop' )),
    COMMETHOD([dispid(13), 'propget'], HRESULT, 'Locked',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'prop' )),
    COMMETHOD([dispid(13), 'propput'], HRESULT, 'Locked',
              ( ['in'], VARIANT_BOOL, 'prop' )),
    COMMETHOD([dispid(16), 'propget'], HRESULT, 'Type',
              ( ['out', 'retval'], POINTER(WdLinkType), 'prop' )),
    COMMETHOD([dispid(21), 'propget'], HRESULT, 'SourceFullName',
              ( ['out', 'retval'], POINTER(BSTR), 'prop' )),
    COMMETHOD([dispid(21), 'propput'], HRESULT, 'SourceFullName',
              ( ['in'], BSTR, 'prop' )),
    COMMETHOD([dispid(22), 'propget'], HRESULT, 'SavePictureWithDocument',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'prop' )),
    COMMETHOD([dispid(22), 'propput'], HRESULT, 'SavePictureWithDocument',
              ( ['in'], VARIANT_BOOL, 'prop' )),
    COMMETHOD([dispid(104)], HRESULT, 'BreakLink'),
    COMMETHOD([dispid(105)], HRESULT, 'Update'),
]
################################################################
## code template for LinkFormat implementation
##class LinkFormat_Impl(object):
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Creator(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return prop
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    AutoUpdate = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def SourceName(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def SourcePath(self):
##        '-no docstring-'
##        #return prop
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    Locked = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Type(self):
##        '-no docstring-'
##        #return prop
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    SourceFullName = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    SavePictureWithDocument = property(_get, _set, doc = _set.__doc__)
##
##    def BreakLink(self):
##        '-no docstring-'
##        #return 
##
##    def Update(self):
##        '-no docstring-'
##        #return 
##

class Global(CoClass):
    _reg_clsid_ = GUID('{000209F0-0000-0000-C000-000000000046}')
    _idlflags_ = ['appobject']
    _typelib_path_ = typelib_path
    _reg_typelib_ = ('{00020905-0000-0000-C000-000000000046}', 8, 7)
Global._com_interfaces_ = [_Global]

TableOfContents._methods_ = [
    COMMETHOD([dispid(1000), 'propget'], HRESULT, 'Application',
              ( ['out', 'retval'], POINTER(POINTER(Application)), 'prop' )),
    COMMETHOD([dispid(1001), 'propget'], HRESULT, 'Creator',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(1002), 'propget'], HRESULT, 'Parent',
              ( ['out', 'retval'], POINTER(POINTER(IDispatch)), 'prop' )),
    COMMETHOD([dispid(1), 'propget'], HRESULT, 'UseHeadingStyles',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'prop' )),
    COMMETHOD([dispid(1), 'propput'], HRESULT, 'UseHeadingStyles',
              ( ['in'], VARIANT_BOOL, 'prop' )),
    COMMETHOD([dispid(2), 'propget'], HRESULT, 'UseFields',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'prop' )),
    COMMETHOD([dispid(2), 'propput'], HRESULT, 'UseFields',
              ( ['in'], VARIANT_BOOL, 'prop' )),
    COMMETHOD([dispid(3), 'propget'], HRESULT, 'UpperHeadingLevel',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(3), 'propput'], HRESULT, 'UpperHeadingLevel',
              ( ['in'], c_int, 'prop' )),
    COMMETHOD([dispid(4), 'propget'], HRESULT, 'LowerHeadingLevel',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(4), 'propput'], HRESULT, 'LowerHeadingLevel',
              ( ['in'], c_int, 'prop' )),
    COMMETHOD([dispid(5), 'propget'], HRESULT, 'TableID',
              ( ['out', 'retval'], POINTER(BSTR), 'prop' )),
    COMMETHOD([dispid(5), 'propput'], HRESULT, 'TableID',
              ( ['in'], BSTR, 'prop' )),
    COMMETHOD([dispid(6), 'propget'], HRESULT, 'HeadingStyles',
              ( ['out', 'retval'], POINTER(POINTER(HeadingStyles)), 'prop' )),
    COMMETHOD([dispid(7), 'propget'], HRESULT, 'RightAlignPageNumbers',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'prop' )),
    COMMETHOD([dispid(7), 'propput'], HRESULT, 'RightAlignPageNumbers',
              ( ['in'], VARIANT_BOOL, 'prop' )),
    COMMETHOD([dispid(8), 'propget'], HRESULT, 'IncludePageNumbers',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'prop' )),
    COMMETHOD([dispid(8), 'propput'], HRESULT, 'IncludePageNumbers',
              ( ['in'], VARIANT_BOOL, 'prop' )),
    COMMETHOD([dispid(9), 'propget'], HRESULT, 'Range',
              ( ['out', 'retval'], POINTER(POINTER(Range)), 'prop' )),
    COMMETHOD([dispid(10), 'propget'], HRESULT, 'TabLeader',
              ( ['out', 'retval'], POINTER(WdTabLeader), 'prop' )),
    COMMETHOD([dispid(10), 'propput'], HRESULT, 'TabLeader',
              ( ['in'], WdTabLeader, 'prop' )),
    COMMETHOD([dispid(100)], HRESULT, 'Delete'),
    COMMETHOD([dispid(101)], HRESULT, 'UpdatePageNumbers'),
    COMMETHOD([dispid(102)], HRESULT, 'Update'),
    COMMETHOD([dispid(11), 'propget'], HRESULT, 'UseHyperlinks',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'prop' )),
    COMMETHOD([dispid(11), 'propput'], HRESULT, 'UseHyperlinks',
              ( ['in'], VARIANT_BOOL, 'prop' )),
    COMMETHOD([dispid(12), 'propget'], HRESULT, 'HidePageNumbersInWeb',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'prop' )),
    COMMETHOD([dispid(12), 'propput'], HRESULT, 'HidePageNumbersInWeb',
              ( ['in'], VARIANT_BOOL, 'prop' )),
]
################################################################
## code template for TableOfContents implementation
##class TableOfContents_Impl(object):
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Creator(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return prop
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    UseHeadingStyles = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    UseFields = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    UpperHeadingLevel = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    LowerHeadingLevel = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    TableID = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def HeadingStyles(self):
##        '-no docstring-'
##        #return prop
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    RightAlignPageNumbers = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    IncludePageNumbers = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Range(self):
##        '-no docstring-'
##        #return prop
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    TabLeader = property(_get, _set, doc = _set.__doc__)
##
##    def Delete(self):
##        '-no docstring-'
##        #return 
##
##    def UpdatePageNumbers(self):
##        '-no docstring-'
##        #return 
##
##    def Update(self):
##        '-no docstring-'
##        #return 
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    UseHyperlinks = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    HidePageNumbersInWeb = property(_get, _set, doc = _set.__doc__)
##

_LetterContent._methods_ = [
    COMMETHOD([dispid(1000), 'propget'], HRESULT, 'Application',
              ( ['out', 'retval'], POINTER(POINTER(Application)), 'prop' )),
    COMMETHOD([dispid(1001), 'propget'], HRESULT, 'Creator',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(1002), 'propget'], HRESULT, 'Parent',
              ( ['out', 'retval'], POINTER(POINTER(IDispatch)), 'prop' )),
    COMMETHOD([dispid(10), 'propget'], HRESULT, 'Duplicate',
              ( ['out', 'retval'], POINTER(POINTER(LetterContent)), 'prop' )),
    COMMETHOD([dispid(101), 'propget'], HRESULT, 'DateFormat',
              ( ['out', 'retval'], POINTER(BSTR), 'prop' )),
    COMMETHOD([dispid(101), 'propput'], HRESULT, 'DateFormat',
              ( ['in'], BSTR, 'prop' )),
    COMMETHOD([dispid(102), 'propget'], HRESULT, 'IncludeHeaderFooter',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'prop' )),
    COMMETHOD([dispid(102), 'propput'], HRESULT, 'IncludeHeaderFooter',
              ( ['in'], VARIANT_BOOL, 'prop' )),
    COMMETHOD([dispid(103), 'propget'], HRESULT, 'PageDesign',
              ( ['out', 'retval'], POINTER(BSTR), 'prop' )),
    COMMETHOD([dispid(103), 'propput'], HRESULT, 'PageDesign',
              ( ['in'], BSTR, 'prop' )),
    COMMETHOD([dispid(104), 'propget'], HRESULT, 'LetterStyle',
              ( ['out', 'retval'], POINTER(WdLetterStyle), 'prop' )),
    COMMETHOD([dispid(104), 'propput'], HRESULT, 'LetterStyle',
              ( ['in'], WdLetterStyle, 'prop' )),
    COMMETHOD([dispid(105), 'propget'], HRESULT, 'Letterhead',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'prop' )),
    COMMETHOD([dispid(105), 'propput'], HRESULT, 'Letterhead',
              ( ['in'], VARIANT_BOOL, 'prop' )),
    COMMETHOD([dispid(106), 'propget'], HRESULT, 'LetterheadLocation',
              ( ['out', 'retval'], POINTER(WdLetterheadLocation), 'prop' )),
    COMMETHOD([dispid(106), 'propput'], HRESULT, 'LetterheadLocation',
              ( ['in'], WdLetterheadLocation, 'prop' )),
    COMMETHOD([dispid(107), 'propget'], HRESULT, 'LetterheadSize',
              ( ['out', 'retval'], POINTER(c_float), 'prop' )),
    COMMETHOD([dispid(107), 'propput'], HRESULT, 'LetterheadSize',
              ( ['in'], c_float, 'prop' )),
    COMMETHOD([dispid(108), 'propget'], HRESULT, 'RecipientName',
              ( ['out', 'retval'], POINTER(BSTR), 'prop' )),
    COMMETHOD([dispid(108), 'propput'], HRESULT, 'RecipientName',
              ( ['in'], BSTR, 'prop' )),
    COMMETHOD([dispid(109), 'propget'], HRESULT, 'RecipientAddress',
              ( ['out', 'retval'], POINTER(BSTR), 'prop' )),
    COMMETHOD([dispid(109), 'propput'], HRESULT, 'RecipientAddress',
              ( ['in'], BSTR, 'prop' )),
    COMMETHOD([dispid(110), 'propget'], HRESULT, 'Salutation',
              ( ['out', 'retval'], POINTER(BSTR), 'prop' )),
    COMMETHOD([dispid(110), 'propput'], HRESULT, 'Salutation',
              ( ['in'], BSTR, 'prop' )),
    COMMETHOD([dispid(111), 'propget'], HRESULT, 'SalutationType',
              ( ['out', 'retval'], POINTER(WdSalutationType), 'prop' )),
    COMMETHOD([dispid(111), 'propput'], HRESULT, 'SalutationType',
              ( ['in'], WdSalutationType, 'prop' )),
    COMMETHOD([dispid(112), 'propget'], HRESULT, 'RecipientReference',
              ( ['out', 'retval'], POINTER(BSTR), 'prop' )),
    COMMETHOD([dispid(112), 'propput'], HRESULT, 'RecipientReference',
              ( ['in'], BSTR, 'prop' )),
    COMMETHOD([dispid(114), 'propget'], HRESULT, 'MailingInstructions',
              ( ['out', 'retval'], POINTER(BSTR), 'prop' )),
    COMMETHOD([dispid(114), 'propput'], HRESULT, 'MailingInstructions',
              ( ['in'], BSTR, 'prop' )),
    COMMETHOD([dispid(115), 'propget'], HRESULT, 'AttentionLine',
              ( ['out', 'retval'], POINTER(BSTR), 'prop' )),
    COMMETHOD([dispid(115), 'propput'], HRESULT, 'AttentionLine',
              ( ['in'], BSTR, 'prop' )),
    COMMETHOD([dispid(116), 'propget'], HRESULT, 'Subject',
              ( ['out', 'retval'], POINTER(BSTR), 'prop' )),
    COMMETHOD([dispid(116), 'propput'], HRESULT, 'Subject',
              ( ['in'], BSTR, 'prop' )),
    COMMETHOD([dispid(117), 'propget'], HRESULT, 'EnclosureNumber',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(117), 'propput'], HRESULT, 'EnclosureNumber',
              ( ['in'], c_int, 'prop' )),
    COMMETHOD([dispid(118), 'propget'], HRESULT, 'CCList',
              ( ['out', 'retval'], POINTER(BSTR), 'prop' )),
    COMMETHOD([dispid(118), 'propput'], HRESULT, 'CCList',
              ( ['in'], BSTR, 'prop' )),
    COMMETHOD([dispid(119), 'propget'], HRESULT, 'ReturnAddress',
              ( ['out', 'retval'], POINTER(BSTR), 'prop' )),
    COMMETHOD([dispid(119), 'propput'], HRESULT, 'ReturnAddress',
              ( ['in'], BSTR, 'prop' )),
    COMMETHOD([dispid(120), 'propget'], HRESULT, 'SenderName',
              ( ['out', 'retval'], POINTER(BSTR), 'prop' )),
    COMMETHOD([dispid(120), 'propput'], HRESULT, 'SenderName',
              ( ['in'], BSTR, 'prop' )),
    COMMETHOD([dispid(121), 'propget'], HRESULT, 'Closing',
              ( ['out', 'retval'], POINTER(BSTR), 'prop' )),
    COMMETHOD([dispid(121), 'propput'], HRESULT, 'Closing',
              ( ['in'], BSTR, 'prop' )),
    COMMETHOD([dispid(122), 'propget'], HRESULT, 'SenderCompany',
              ( ['out', 'retval'], POINTER(BSTR), 'prop' )),
    COMMETHOD([dispid(122), 'propput'], HRESULT, 'SenderCompany',
              ( ['in'], BSTR, 'prop' )),
    COMMETHOD([dispid(123), 'propget'], HRESULT, 'SenderJobTitle',
              ( ['out', 'retval'], POINTER(BSTR), 'prop' )),
    COMMETHOD([dispid(123), 'propput'], HRESULT, 'SenderJobTitle',
              ( ['in'], BSTR, 'prop' )),
    COMMETHOD([dispid(124), 'propget'], HRESULT, 'SenderInitials',
              ( ['out', 'retval'], POINTER(BSTR), 'prop' )),
    COMMETHOD([dispid(124), 'propput'], HRESULT, 'SenderInitials',
              ( ['in'], BSTR, 'prop' )),
    COMMETHOD([dispid(125), 'propget'], HRESULT, 'InfoBlock',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'prop' )),
    COMMETHOD([dispid(125), 'propput'], HRESULT, 'InfoBlock',
              ( ['in'], VARIANT_BOOL, 'prop' )),
    COMMETHOD([dispid(126), 'propget'], HRESULT, 'RecipientCode',
              ( ['out', 'retval'], POINTER(BSTR), 'prop' )),
    COMMETHOD([dispid(126), 'propput'], HRESULT, 'RecipientCode',
              ( ['in'], BSTR, 'prop' )),
    COMMETHOD([dispid(127), 'propget'], HRESULT, 'RecipientGender',
              ( ['out', 'retval'], POINTER(WdSalutationGender), 'prop' )),
    COMMETHOD([dispid(127), 'propput'], HRESULT, 'RecipientGender',
              ( ['in'], WdSalutationGender, 'prop' )),
    COMMETHOD([dispid(128), 'propget'], HRESULT, 'ReturnAddressShortForm',
              ( ['out', 'retval'], POINTER(BSTR), 'prop' )),
    COMMETHOD([dispid(128), 'propput'], HRESULT, 'ReturnAddressShortForm',
              ( ['in'], BSTR, 'prop' )),
    COMMETHOD([dispid(129), 'propget'], HRESULT, 'SenderCity',
              ( ['out', 'retval'], POINTER(BSTR), 'prop' )),
    COMMETHOD([dispid(129), 'propput'], HRESULT, 'SenderCity',
              ( ['in'], BSTR, 'prop' )),
    COMMETHOD([dispid(130), 'propget'], HRESULT, 'SenderCode',
              ( ['out', 'retval'], POINTER(BSTR), 'prop' )),
    COMMETHOD([dispid(130), 'propput'], HRESULT, 'SenderCode',
              ( ['in'], BSTR, 'prop' )),
    COMMETHOD([dispid(131), 'propget'], HRESULT, 'SenderGender',
              ( ['out', 'retval'], POINTER(WdSalutationGender), 'prop' )),
    COMMETHOD([dispid(131), 'propput'], HRESULT, 'SenderGender',
              ( ['in'], WdSalutationGender, 'prop' )),
    COMMETHOD([dispid(132), 'propget'], HRESULT, 'SenderReference',
              ( ['out', 'retval'], POINTER(BSTR), 'prop' )),
    COMMETHOD([dispid(132), 'propput'], HRESULT, 'SenderReference',
              ( ['in'], BSTR, 'prop' )),
]
################################################################
## code template for _LetterContent implementation
##class _LetterContent_Impl(object):
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Creator(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Duplicate(self):
##        '-no docstring-'
##        #return prop
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    DateFormat = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    IncludeHeaderFooter = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    PageDesign = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    LetterStyle = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    Letterhead = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    LetterheadLocation = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    LetterheadSize = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    RecipientName = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    RecipientAddress = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    Salutation = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    SalutationType = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    RecipientReference = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    MailingInstructions = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    AttentionLine = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    Subject = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    EnclosureNumber = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    CCList = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    ReturnAddress = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    SenderName = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    Closing = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    SenderCompany = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    SenderJobTitle = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    SenderInitials = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    InfoBlock = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    RecipientCode = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    RecipientGender = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    ReturnAddressShortForm = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    SenderCity = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    SenderCode = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    SenderGender = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    SenderReference = property(_get, _set, doc = _set.__doc__)
##

_ParagraphFormat._methods_ = [
    COMMETHOD([dispid(1000), 'propget'], HRESULT, 'Application',
              ( ['out', 'retval'], POINTER(POINTER(Application)), 'prop' )),
    COMMETHOD([dispid(1001), 'propget'], HRESULT, 'Creator',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(1002), 'propget'], HRESULT, 'Parent',
              ( ['out', 'retval'], POINTER(POINTER(IDispatch)), 'prop' )),
    COMMETHOD([dispid(10), 'propget'], HRESULT, 'Duplicate',
              ( ['out', 'retval'], POINTER(POINTER(ParagraphFormat)), 'prop' )),
    COMMETHOD([dispid(100), 'propget'], HRESULT, 'Style',
              ( ['out', 'retval'], POINTER(VARIANT), 'prop' )),
    COMMETHOD([dispid(100), 'propput'], HRESULT, 'Style',
              ( ['in'], POINTER(VARIANT), 'prop' )),
    COMMETHOD([dispid(101), 'propget'], HRESULT, 'Alignment',
              ( ['out', 'retval'], POINTER(WdParagraphAlignment), 'prop' )),
    COMMETHOD([dispid(101), 'propput'], HRESULT, 'Alignment',
              ( ['in'], WdParagraphAlignment, 'prop' )),
    COMMETHOD([dispid(102), 'propget'], HRESULT, 'KeepTogether',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(102), 'propput'], HRESULT, 'KeepTogether',
              ( ['in'], c_int, 'prop' )),
    COMMETHOD([dispid(103), 'propget'], HRESULT, 'KeepWithNext',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(103), 'propput'], HRESULT, 'KeepWithNext',
              ( ['in'], c_int, 'prop' )),
    COMMETHOD([dispid(104), 'propget'], HRESULT, 'PageBreakBefore',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(104), 'propput'], HRESULT, 'PageBreakBefore',
              ( ['in'], c_int, 'prop' )),
    COMMETHOD([dispid(105), 'propget'], HRESULT, 'NoLineNumber',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(105), 'propput'], HRESULT, 'NoLineNumber',
              ( ['in'], c_int, 'prop' )),
    COMMETHOD([dispid(106), 'propget'], HRESULT, 'RightIndent',
              ( ['out', 'retval'], POINTER(c_float), 'prop' )),
    COMMETHOD([dispid(106), 'propput'], HRESULT, 'RightIndent',
              ( ['in'], c_float, 'prop' )),
    COMMETHOD([dispid(107), 'propget'], HRESULT, 'LeftIndent',
              ( ['out', 'retval'], POINTER(c_float), 'prop' )),
    COMMETHOD([dispid(107), 'propput'], HRESULT, 'LeftIndent',
              ( ['in'], c_float, 'prop' )),
    COMMETHOD([dispid(108), 'propget'], HRESULT, 'FirstLineIndent',
              ( ['out', 'retval'], POINTER(c_float), 'prop' )),
    COMMETHOD([dispid(108), 'propput'], HRESULT, 'FirstLineIndent',
              ( ['in'], c_float, 'prop' )),
    COMMETHOD([dispid(109), 'propget'], HRESULT, 'LineSpacing',
              ( ['out', 'retval'], POINTER(c_float), 'prop' )),
    COMMETHOD([dispid(109), 'propput'], HRESULT, 'LineSpacing',
              ( ['in'], c_float, 'prop' )),
    COMMETHOD([dispid(110), 'propget'], HRESULT, 'LineSpacingRule',
              ( ['out', 'retval'], POINTER(WdLineSpacing), 'prop' )),
    COMMETHOD([dispid(110), 'propput'], HRESULT, 'LineSpacingRule',
              ( ['in'], WdLineSpacing, 'prop' )),
    COMMETHOD([dispid(111), 'propget'], HRESULT, 'SpaceBefore',
              ( ['out', 'retval'], POINTER(c_float), 'prop' )),
    COMMETHOD([dispid(111), 'propput'], HRESULT, 'SpaceBefore',
              ( ['in'], c_float, 'prop' )),
    COMMETHOD([dispid(112), 'propget'], HRESULT, 'SpaceAfter',
              ( ['out', 'retval'], POINTER(c_float), 'prop' )),
    COMMETHOD([dispid(112), 'propput'], HRESULT, 'SpaceAfter',
              ( ['in'], c_float, 'prop' )),
    COMMETHOD([dispid(113), 'propget'], HRESULT, 'Hyphenation',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(113), 'propput'], HRESULT, 'Hyphenation',
              ( ['in'], c_int, 'prop' )),
    COMMETHOD([dispid(114), 'propget'], HRESULT, 'WidowControl',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(114), 'propput'], HRESULT, 'WidowControl',
              ( ['in'], c_int, 'prop' )),
    COMMETHOD([dispid(117), 'propget'], HRESULT, 'FarEastLineBreakControl',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(117), 'propput'], HRESULT, 'FarEastLineBreakControl',
              ( ['in'], c_int, 'prop' )),
    COMMETHOD([dispid(118), 'propget'], HRESULT, 'WordWrap',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(118), 'propput'], HRESULT, 'WordWrap',
              ( ['in'], c_int, 'prop' )),
    COMMETHOD([dispid(119), 'propget'], HRESULT, 'HangingPunctuation',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(119), 'propput'], HRESULT, 'HangingPunctuation',
              ( ['in'], c_int, 'prop' )),
    COMMETHOD([dispid(120), 'propget'], HRESULT, 'HalfWidthPunctuationOnTopOfLine',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(120), 'propput'], HRESULT, 'HalfWidthPunctuationOnTopOfLine',
              ( ['in'], c_int, 'prop' )),
    COMMETHOD([dispid(121), 'propget'], HRESULT, 'AddSpaceBetweenFarEastAndAlpha',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(121), 'propput'], HRESULT, 'AddSpaceBetweenFarEastAndAlpha',
              ( ['in'], c_int, 'prop' )),
    COMMETHOD([dispid(122), 'propget'], HRESULT, 'AddSpaceBetweenFarEastAndDigit',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(122), 'propput'], HRESULT, 'AddSpaceBetweenFarEastAndDigit',
              ( ['in'], c_int, 'prop' )),
    COMMETHOD([dispid(123), 'propget'], HRESULT, 'BaseLineAlignment',
              ( ['out', 'retval'], POINTER(WdBaselineAlignment), 'prop' )),
    COMMETHOD([dispid(123), 'propput'], HRESULT, 'BaseLineAlignment',
              ( ['in'], WdBaselineAlignment, 'prop' )),
    COMMETHOD([dispid(124), 'propget'], HRESULT, 'AutoAdjustRightIndent',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(124), 'propput'], HRESULT, 'AutoAdjustRightIndent',
              ( ['in'], c_int, 'prop' )),
    COMMETHOD([dispid(125), 'propget'], HRESULT, 'DisableLineHeightGrid',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(125), 'propput'], HRESULT, 'DisableLineHeightGrid',
              ( ['in'], c_int, 'prop' )),
    COMMETHOD([dispid(1103), 'propget'], HRESULT, 'TabStops',
              ( ['out', 'retval'], POINTER(POINTER(TabStops)), 'prop' )),
    COMMETHOD([dispid(1103), 'propput'], HRESULT, 'TabStops',
              ( ['in'], POINTER(TabStops), 'prop' )),
    COMMETHOD([dispid(1100), 'propget'], HRESULT, 'Borders',
              ( ['out', 'retval'], POINTER(POINTER(Borders)), 'prop' )),
    COMMETHOD([dispid(1100), 'propput'], HRESULT, 'Borders',
              ( ['in'], POINTER(Borders), 'prop' )),
    COMMETHOD([dispid(1101), 'propget'], HRESULT, 'Shading',
              ( ['out', 'retval'], POINTER(POINTER(Shading)), 'prop' )),
    COMMETHOD([dispid(202), 'propget'], HRESULT, 'OutlineLevel',
              ( ['out', 'retval'], POINTER(WdOutlineLevel), 'prop' )),
    COMMETHOD([dispid(202), 'propput'], HRESULT, 'OutlineLevel',
              ( ['in'], WdOutlineLevel, 'prop' )),
    COMMETHOD([dispid(301)], HRESULT, 'CloseUp'),
    COMMETHOD([dispid(302)], HRESULT, 'OpenUp'),
    COMMETHOD([dispid(303)], HRESULT, 'OpenOrCloseUp'),
    COMMETHOD([dispid(304)], HRESULT, 'TabHangingIndent',
              ( ['in'], c_short, 'Count' )),
    COMMETHOD([dispid(306)], HRESULT, 'TabIndent',
              ( ['in'], c_short, 'Count' )),
    COMMETHOD([dispid(312)], HRESULT, 'Reset'),
    COMMETHOD([dispid(313)], HRESULT, 'Space1'),
    COMMETHOD([dispid(314)], HRESULT, 'Space15'),
    COMMETHOD([dispid(315)], HRESULT, 'Space2'),
    COMMETHOD([dispid(320)], HRESULT, 'IndentCharWidth',
              ( ['in'], c_short, 'Count' )),
    COMMETHOD([dispid(322)], HRESULT, 'IndentFirstLineCharWidth',
              ( ['in'], c_short, 'Count' )),
    COMMETHOD([dispid(126), 'propget'], HRESULT, 'CharacterUnitRightIndent',
              ( ['out', 'retval'], POINTER(c_float), 'prop' )),
    COMMETHOD([dispid(126), 'propput'], HRESULT, 'CharacterUnitRightIndent',
              ( ['in'], c_float, 'prop' )),
    COMMETHOD([dispid(127), 'propget'], HRESULT, 'CharacterUnitLeftIndent',
              ( ['out', 'retval'], POINTER(c_float), 'prop' )),
    COMMETHOD([dispid(127), 'propput'], HRESULT, 'CharacterUnitLeftIndent',
              ( ['in'], c_float, 'prop' )),
    COMMETHOD([dispid(128), 'propget'], HRESULT, 'CharacterUnitFirstLineIndent',
              ( ['out', 'retval'], POINTER(c_float), 'prop' )),
    COMMETHOD([dispid(128), 'propput'], HRESULT, 'CharacterUnitFirstLineIndent',
              ( ['in'], c_float, 'prop' )),
    COMMETHOD([dispid(129), 'propget'], HRESULT, 'LineUnitBefore',
              ( ['out', 'retval'], POINTER(c_float), 'prop' )),
    COMMETHOD([dispid(129), 'propput'], HRESULT, 'LineUnitBefore',
              ( ['in'], c_float, 'prop' )),
    COMMETHOD([dispid(130), 'propget'], HRESULT, 'LineUnitAfter',
              ( ['out', 'retval'], POINTER(c_float), 'prop' )),
    COMMETHOD([dispid(130), 'propput'], HRESULT, 'LineUnitAfter',
              ( ['in'], c_float, 'prop' )),
    COMMETHOD([dispid(131), 'propget'], HRESULT, 'ReadingOrder',
              ( ['out', 'retval'], POINTER(WdReadingOrder), 'prop' )),
    COMMETHOD([dispid(131), 'propput'], HRESULT, 'ReadingOrder',
              ( ['in'], WdReadingOrder, 'prop' )),
    COMMETHOD([dispid(132), 'propget'], HRESULT, 'SpaceBeforeAuto',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(132), 'propput'], HRESULT, 'SpaceBeforeAuto',
              ( ['in'], c_int, 'prop' )),
    COMMETHOD([dispid(133), 'propget'], HRESULT, 'SpaceAfterAuto',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(133), 'propput'], HRESULT, 'SpaceAfterAuto',
              ( ['in'], c_int, 'prop' )),
    COMMETHOD([dispid(134), 'propget'], HRESULT, 'MirrorIndents',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(134), 'propput'], HRESULT, 'MirrorIndents',
              ( ['in'], c_int, 'prop' )),
    COMMETHOD([dispid(135), 'propget'], HRESULT, 'TextboxTightWrap',
              ( ['out', 'retval'], POINTER(WdTextboxTightWrap), 'prop' )),
    COMMETHOD([dispid(135), 'propput'], HRESULT, 'TextboxTightWrap',
              ( ['in'], WdTextboxTightWrap, 'prop' )),
    COMMETHOD([dispid(136), 'propget'], HRESULT, 'CollapsedByDefault',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(136), 'propput'], HRESULT, 'CollapsedByDefault',
              ( ['in'], c_int, 'prop' )),
]
################################################################
## code template for _ParagraphFormat implementation
##class _ParagraphFormat_Impl(object):
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Creator(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Duplicate(self):
##        '-no docstring-'
##        #return prop
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    Style = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    Alignment = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    KeepTogether = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    KeepWithNext = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    PageBreakBefore = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    NoLineNumber = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    RightIndent = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    LeftIndent = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    FirstLineIndent = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    LineSpacing = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    LineSpacingRule = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    SpaceBefore = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    SpaceAfter = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    Hyphenation = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    WidowControl = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    FarEastLineBreakControl = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    WordWrap = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    HangingPunctuation = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    HalfWidthPunctuationOnTopOfLine = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    AddSpaceBetweenFarEastAndAlpha = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    AddSpaceBetweenFarEastAndDigit = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    BaseLineAlignment = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    AutoAdjustRightIndent = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    DisableLineHeightGrid = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    TabStops = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    Borders = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Shading(self):
##        '-no docstring-'
##        #return prop
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    OutlineLevel = property(_get, _set, doc = _set.__doc__)
##
##    def CloseUp(self):
##        '-no docstring-'
##        #return 
##
##    def OpenUp(self):
##        '-no docstring-'
##        #return 
##
##    def OpenOrCloseUp(self):
##        '-no docstring-'
##        #return 
##
##    def TabHangingIndent(self, Count):
##        '-no docstring-'
##        #return 
##
##    def TabIndent(self, Count):
##        '-no docstring-'
##        #return 
##
##    def Reset(self):
##        '-no docstring-'
##        #return 
##
##    def Space1(self):
##        '-no docstring-'
##        #return 
##
##    def Space15(self):
##        '-no docstring-'
##        #return 
##
##    def Space2(self):
##        '-no docstring-'
##        #return 
##
##    def IndentCharWidth(self, Count):
##        '-no docstring-'
##        #return 
##
##    def IndentFirstLineCharWidth(self, Count):
##        '-no docstring-'
##        #return 
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    CharacterUnitRightIndent = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    CharacterUnitLeftIndent = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    CharacterUnitFirstLineIndent = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    LineUnitBefore = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    LineUnitAfter = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    ReadingOrder = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    SpaceBeforeAuto = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    SpaceAfterAuto = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    MirrorIndents = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    TextboxTightWrap = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    CollapsedByDefault = property(_get, _set, doc = _set.__doc__)
##

class OtherCorrectionsExceptions(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{000209DF-0000-0000-C000-000000000046}')
    _idlflags_ = ['dual', 'nonextensible', 'oleautomation']
AutoCorrect._methods_ = [
    COMMETHOD([dispid(1000), 'propget'], HRESULT, 'Application',
              ( ['out', 'retval'], POINTER(POINTER(Application)), 'prop' )),
    COMMETHOD([dispid(1001), 'propget'], HRESULT, 'Creator',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(1002), 'propget'], HRESULT, 'Parent',
              ( ['out', 'retval'], POINTER(POINTER(IDispatch)), 'prop' )),
    COMMETHOD([dispid(1), 'propget'], HRESULT, 'CorrectDays',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'prop' )),
    COMMETHOD([dispid(1), 'propput'], HRESULT, 'CorrectDays',
              ( ['in'], VARIANT_BOOL, 'prop' )),
    COMMETHOD([dispid(2), 'propget'], HRESULT, 'CorrectInitialCaps',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'prop' )),
    COMMETHOD([dispid(2), 'propput'], HRESULT, 'CorrectInitialCaps',
              ( ['in'], VARIANT_BOOL, 'prop' )),
    COMMETHOD([dispid(3), 'propget'], HRESULT, 'CorrectSentenceCaps',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'prop' )),
    COMMETHOD([dispid(3), 'propput'], HRESULT, 'CorrectSentenceCaps',
              ( ['in'], VARIANT_BOOL, 'prop' )),
    COMMETHOD([dispid(4), 'propget'], HRESULT, 'ReplaceText',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'prop' )),
    COMMETHOD([dispid(4), 'propput'], HRESULT, 'ReplaceText',
              ( ['in'], VARIANT_BOOL, 'prop' )),
    COMMETHOD([dispid(6), 'propget'], HRESULT, 'Entries',
              ( ['out', 'retval'], POINTER(POINTER(AutoCorrectEntries)), 'prop' )),
    COMMETHOD([dispid(7), 'propget'], HRESULT, 'FirstLetterExceptions',
              ( ['out', 'retval'], POINTER(POINTER(FirstLetterExceptions)), 'prop' )),
    COMMETHOD([dispid(8), 'propget'], HRESULT, 'FirstLetterAutoAdd',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'prop' )),
    COMMETHOD([dispid(8), 'propput'], HRESULT, 'FirstLetterAutoAdd',
              ( ['in'], VARIANT_BOOL, 'prop' )),
    COMMETHOD([dispid(9), 'propget'], HRESULT, 'TwoInitialCapsExceptions',
              ( ['out', 'retval'], POINTER(POINTER(TwoInitialCapsExceptions)), 'prop' )),
    COMMETHOD([dispid(10), 'propget'], HRESULT, 'TwoInitialCapsAutoAdd',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'prop' )),
    COMMETHOD([dispid(10), 'propput'], HRESULT, 'TwoInitialCapsAutoAdd',
              ( ['in'], VARIANT_BOOL, 'prop' )),
    COMMETHOD([dispid(11), 'propget'], HRESULT, 'CorrectCapsLock',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'prop' )),
    COMMETHOD([dispid(11), 'propput'], HRESULT, 'CorrectCapsLock',
              ( ['in'], VARIANT_BOOL, 'prop' )),
    COMMETHOD([dispid(12), 'propget'], HRESULT, 'CorrectHangulAndAlphabet',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'prop' )),
    COMMETHOD([dispid(12), 'propput'], HRESULT, 'CorrectHangulAndAlphabet',
              ( ['in'], VARIANT_BOOL, 'prop' )),
    COMMETHOD([dispid(13), 'propget'], HRESULT, 'HangulAndAlphabetExceptions',
              ( ['out', 'retval'], POINTER(POINTER(HangulAndAlphabetExceptions)), 'prop' )),
    COMMETHOD([dispid(14), 'propget'], HRESULT, 'HangulAndAlphabetAutoAdd',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'prop' )),
    COMMETHOD([dispid(14), 'propput'], HRESULT, 'HangulAndAlphabetAutoAdd',
              ( ['in'], VARIANT_BOOL, 'prop' )),
    COMMETHOD([dispid(15), 'propget'], HRESULT, 'ReplaceTextFromSpellingChecker',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'prop' )),
    COMMETHOD([dispid(15), 'propput'], HRESULT, 'ReplaceTextFromSpellingChecker',
              ( ['in'], VARIANT_BOOL, 'prop' )),
    COMMETHOD([dispid(16), 'propget'], HRESULT, 'OtherCorrectionsAutoAdd',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'prop' )),
    COMMETHOD([dispid(16), 'propput'], HRESULT, 'OtherCorrectionsAutoAdd',
              ( ['in'], VARIANT_BOOL, 'prop' )),
    COMMETHOD([dispid(17), 'propget'], HRESULT, 'OtherCorrectionsExceptions',
              ( ['out', 'retval'], POINTER(POINTER(OtherCorrectionsExceptions)), 'prop' )),
    COMMETHOD([dispid(18), 'propget'], HRESULT, 'CorrectKeyboardSetting',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'prop' )),
    COMMETHOD([dispid(18), 'propput'], HRESULT, 'CorrectKeyboardSetting',
              ( ['in'], VARIANT_BOOL, 'prop' )),
    COMMETHOD([dispid(19), 'propget'], HRESULT, 'CorrectTableCells',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'prop' )),
    COMMETHOD([dispid(19), 'propput'], HRESULT, 'CorrectTableCells',
              ( ['in'], VARIANT_BOOL, 'prop' )),
    COMMETHOD([dispid(20), 'propget'], HRESULT, 'DisplayAutoCorrectOptions',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'prop' )),
    COMMETHOD([dispid(20), 'propput'], HRESULT, 'DisplayAutoCorrectOptions',
              ( ['in'], VARIANT_BOOL, 'prop' )),
]
################################################################
## code template for AutoCorrect implementation
##class AutoCorrect_Impl(object):
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Creator(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return prop
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    CorrectDays = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    CorrectInitialCaps = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    CorrectSentenceCaps = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    ReplaceText = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Entries(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def FirstLetterExceptions(self):
##        '-no docstring-'
##        #return prop
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    FirstLetterAutoAdd = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def TwoInitialCapsExceptions(self):
##        '-no docstring-'
##        #return prop
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    TwoInitialCapsAutoAdd = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    CorrectCapsLock = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    CorrectHangulAndAlphabet = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def HangulAndAlphabetExceptions(self):
##        '-no docstring-'
##        #return prop
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    HangulAndAlphabetAutoAdd = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    ReplaceTextFromSpellingChecker = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    OtherCorrectionsAutoAdd = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def OtherCorrectionsExceptions(self):
##        '-no docstring-'
##        #return prop
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    CorrectKeyboardSetting = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    CorrectTableCells = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    DisplayAutoCorrectOptions = property(_get, _set, doc = _set.__doc__)
##

ContentControls._methods_ = [
    COMMETHOD([dispid(-4), 'nonbrowsable', 'propget'], HRESULT, '_NewEnum',
              ( ['out', 'retval'], POINTER(POINTER(IUnknown)), 'prop' )),
    COMMETHOD([dispid(100), 'propget'], HRESULT, 'Application',
              ( ['out', 'retval'], POINTER(POINTER(Application)), 'prop' )),
    COMMETHOD([dispid(101), 'propget'], HRESULT, 'Creator',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(102), 'propget'], HRESULT, 'Parent',
              ( ['out', 'retval'], POINTER(POINTER(IDispatch)), 'prop' )),
    COMMETHOD([dispid(103), 'propget'], HRESULT, 'Count',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(0)], HRESULT, 'Item',
              ( ['in'], POINTER(VARIANT), 'Index' ),
              ( ['out', 'retval'], POINTER(POINTER(ContentControl)), 'prop' )),
    COMMETHOD([dispid(1)], HRESULT, 'Add',
              ( ['in', 'optional'], WdContentControlType, 'Type', 0 ),
              ( ['in', 'optional'], POINTER(VARIANT), 'Range' ),
              ( ['out', 'retval'], POINTER(POINTER(ContentControl)), 'prop' )),
]
################################################################
## code template for ContentControls implementation
##class ContentControls_Impl(object):
##    @property
##    def _NewEnum(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Creator(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Count(self):
##        '-no docstring-'
##        #return prop
##
##    def Item(self, Index):
##        '-no docstring-'
##        #return prop
##
##    def Add(self, Type, Range):
##        '-no docstring-'
##        #return prop
##

Reviewers._methods_ = [
    COMMETHOD([dispid(-4), 'nonbrowsable', 'propget'], HRESULT, '_NewEnum',
              ( ['out', 'retval'], POINTER(POINTER(IUnknown)), 'prop' )),
    COMMETHOD([dispid(1000), 'propget'], HRESULT, 'Application',
              ( ['out', 'retval'], POINTER(POINTER(Application)), 'prop' )),
    COMMETHOD([dispid(1001), 'propget'], HRESULT, 'Creator',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(1002), 'propget'], HRESULT, 'Parent',
              ( ['out', 'retval'], POINTER(POINTER(IDispatch)), 'prop' )),
    COMMETHOD([dispid(2), 'propget'], HRESULT, 'Count',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(0)], HRESULT, 'Item',
              ( ['in'], POINTER(VARIANT), 'Index' ),
              ( ['out', 'retval'], POINTER(POINTER(Reviewer)), 'prop' )),
]
################################################################
## code template for Reviewers implementation
##class Reviewers_Impl(object):
##    @property
##    def _NewEnum(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Creator(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Count(self):
##        '-no docstring-'
##        #return prop
##
##    def Item(self, Index):
##        '-no docstring-'
##        #return prop
##

class OLEControl(CoClass):
    _reg_clsid_ = GUID('{000209F2-0000-0000-C000-000000000046}')
    _idlflags_ = ['hidden']
    _typelib_path_ = typelib_path
    _reg_typelib_ = ('{00020905-0000-0000-C000-000000000046}', 8, 7)
class OCXEvents(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{000209F3-0000-0000-C000-000000000046}')
    _idlflags_ = ['hidden']
    _methods_ = []
OLEControl._com_interfaces_ = [_OLEControl]
OLEControl._outgoing_interfaces_ = [OCXEvents]

KeysBoundTo._methods_ = [
    COMMETHOD([dispid(1000), 'propget'], HRESULT, 'Application',
              ( ['out', 'retval'], POINTER(POINTER(Application)), 'prop' )),
    COMMETHOD([dispid(1001), 'propget'], HRESULT, 'Creator',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(1002), 'propget'], HRESULT, 'Parent',
              ( ['out', 'retval'], POINTER(POINTER(IDispatch)), 'prop' )),
    COMMETHOD([dispid(-4), 'nonbrowsable', 'propget'], HRESULT, '_NewEnum',
              ( ['out', 'retval'], POINTER(POINTER(IUnknown)), 'prop' )),
    COMMETHOD([dispid(2), 'propget'], HRESULT, 'Count',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(3), 'propget'], HRESULT, 'KeyCategory',
              ( ['out', 'retval'], POINTER(WdKeyCategory), 'prop' )),
    COMMETHOD([dispid(4), 'propget'], HRESULT, 'Command',
              ( ['out', 'retval'], POINTER(BSTR), 'prop' )),
    COMMETHOD([dispid(5), 'propget'], HRESULT, 'CommandParameter',
              ( ['out', 'retval'], POINTER(BSTR), 'prop' )),
    COMMETHOD([dispid(10), 'propget'], HRESULT, 'Context',
              ( ['out', 'retval'], POINTER(POINTER(IDispatch)), 'prop' )),
    COMMETHOD([dispid(0)], HRESULT, 'Item',
              ( ['in'], c_int, 'Index' ),
              ( ['out', 'retval'], POINTER(POINTER(KeyBinding)), 'prop' )),
    COMMETHOD([dispid(1)], HRESULT, 'Key',
              ( ['in'], c_int, 'KeyCode' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'KeyCode2' ),
              ( ['out', 'retval'], POINTER(POINTER(KeyBinding)), 'prop' )),
]
################################################################
## code template for KeysBoundTo implementation
##class KeysBoundTo_Impl(object):
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Creator(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def _NewEnum(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Count(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def KeyCategory(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Command(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def CommandParameter(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Context(self):
##        '-no docstring-'
##        #return prop
##
##    def Item(self, Index):
##        '-no docstring-'
##        #return prop
##
##    def Key(self, KeyCode, KeyCode2):
##        '-no docstring-'
##        #return prop
##

class Browser(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{0002092E-0000-0000-C000-000000000046}')
    _idlflags_ = ['dual', 'nonextensible', 'oleautomation']

# values for enumeration 'WdEnableCancelKey'
wdCancelDisabled = 0
wdCancelInterrupt = 1
WdEnableCancelKey = c_int # enum
_Application._methods_ = [
    COMMETHOD([dispid(1000), 'propget'], HRESULT, 'Application',
              ( ['out', 'retval'], POINTER(POINTER(Application)), 'prop' )),
    COMMETHOD([dispid(1001), 'propget'], HRESULT, 'Creator',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(1002), 'propget'], HRESULT, 'Parent',
              ( ['out', 'retval'], POINTER(POINTER(IDispatch)), 'prop' )),
    COMMETHOD([dispid(0), 'propget'], HRESULT, 'Name',
              ( ['out', 'retval'], POINTER(BSTR), 'prop' )),
    COMMETHOD([dispid(6), 'propget'], HRESULT, 'Documents',
              ( ['out', 'retval'], POINTER(POINTER(Documents)), 'prop' )),
    COMMETHOD([dispid(2), 'propget'], HRESULT, 'Windows',
              ( ['out', 'retval'], POINTER(POINTER(Windows)), 'prop' )),
    COMMETHOD([dispid(3), 'propget'], HRESULT, 'ActiveDocument',
              ( ['out', 'retval'], POINTER(POINTER(Document)), 'prop' )),
    COMMETHOD([dispid(4), 'propget'], HRESULT, 'ActiveWindow',
              ( ['out', 'retval'], POINTER(POINTER(Window)), 'prop' )),
    COMMETHOD([dispid(5), 'propget'], HRESULT, 'Selection',
              ( ['out', 'retval'], POINTER(POINTER(Selection)), 'prop' )),
    COMMETHOD([dispid(1), 'propget'], HRESULT, 'WordBasic',
              ( ['out', 'retval'], POINTER(POINTER(IDispatch)), 'prop' )),
    COMMETHOD([dispid(7), 'propget'], HRESULT, 'RecentFiles',
              ( ['out', 'retval'], POINTER(POINTER(RecentFiles)), 'prop' )),
    COMMETHOD([dispid(8), 'propget'], HRESULT, 'NormalTemplate',
              ( ['out', 'retval'], POINTER(POINTER(Template)), 'prop' )),
    COMMETHOD([dispid(9), 'propget'], HRESULT, 'System',
              ( ['out', 'retval'], POINTER(POINTER(System)), 'prop' )),
    COMMETHOD([dispid(10), 'propget'], HRESULT, 'AutoCorrect',
              ( ['out', 'retval'], POINTER(POINTER(AutoCorrect)), 'prop' )),
    COMMETHOD([dispid(11), 'propget'], HRESULT, 'FontNames',
              ( ['out', 'retval'], POINTER(POINTER(FontNames)), 'prop' )),
    COMMETHOD([dispid(12), 'propget'], HRESULT, 'LandscapeFontNames',
              ( ['out', 'retval'], POINTER(POINTER(FontNames)), 'prop' )),
    COMMETHOD([dispid(13), 'propget'], HRESULT, 'PortraitFontNames',
              ( ['out', 'retval'], POINTER(POINTER(FontNames)), 'prop' )),
    COMMETHOD([dispid(14), 'propget'], HRESULT, 'Languages',
              ( ['out', 'retval'], POINTER(POINTER(Languages)), 'prop' )),
    COMMETHOD([dispid(15), 'hidden', 'propget'], HRESULT, 'Assistant',
              ( ['out', 'retval'], POINTER(POINTER(comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.Assistant)), 'prop' )),
    COMMETHOD([dispid(16), 'propget'], HRESULT, 'Browser',
              ( ['out', 'retval'], POINTER(POINTER(Browser)), 'prop' )),
    COMMETHOD([dispid(17), 'propget'], HRESULT, 'FileConverters',
              ( ['out', 'retval'], POINTER(POINTER(FileConverters)), 'prop' )),
    COMMETHOD([dispid(18), 'propget'], HRESULT, 'MailingLabel',
              ( ['out', 'retval'], POINTER(POINTER(MailingLabel)), 'prop' )),
    COMMETHOD([dispid(19), 'propget'], HRESULT, 'Dialogs',
              ( ['out', 'retval'], POINTER(POINTER(Dialogs)), 'prop' )),
    COMMETHOD([dispid(20), 'propget'], HRESULT, 'CaptionLabels',
              ( ['out', 'retval'], POINTER(POINTER(CaptionLabels)), 'prop' )),
    COMMETHOD([dispid(21), 'propget'], HRESULT, 'AutoCaptions',
              ( ['out', 'retval'], POINTER(POINTER(AutoCaptions)), 'prop' )),
    COMMETHOD([dispid(22), 'propget'], HRESULT, 'AddIns',
              ( ['out', 'retval'], POINTER(POINTER(AddIns)), 'prop' )),
    COMMETHOD([dispid(23), 'propget'], HRESULT, 'Visible',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'prop' )),
    COMMETHOD([dispid(23), 'propput'], HRESULT, 'Visible',
              ( ['in'], VARIANT_BOOL, 'prop' )),
    COMMETHOD([dispid(24), 'propget'], HRESULT, 'Version',
              ( ['out', 'retval'], POINTER(BSTR), 'prop' )),
    COMMETHOD([dispid(26), 'propget'], HRESULT, 'ScreenUpdating',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'prop' )),
    COMMETHOD([dispid(26), 'propput'], HRESULT, 'ScreenUpdating',
              ( ['in'], VARIANT_BOOL, 'prop' )),
    COMMETHOD([dispid(27), 'propget'], HRESULT, 'PrintPreview',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'prop' )),
    COMMETHOD([dispid(27), 'propput'], HRESULT, 'PrintPreview',
              ( ['in'], VARIANT_BOOL, 'prop' )),
    COMMETHOD([dispid(28), 'propget'], HRESULT, 'Tasks',
              ( ['out', 'retval'], POINTER(POINTER(Tasks)), 'prop' )),
    COMMETHOD([dispid(29), 'hidden', 'propget'], HRESULT, 'DisplayStatusBar',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'prop' )),
    COMMETHOD([dispid(29), 'hidden', 'propput'], HRESULT, 'DisplayStatusBar',
              ( ['in'], VARIANT_BOOL, 'prop' )),
    COMMETHOD([dispid(30), 'propget'], HRESULT, 'SpecialMode',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'prop' )),
    COMMETHOD([dispid(33), 'propget'], HRESULT, 'UsableWidth',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(34), 'propget'], HRESULT, 'UsableHeight',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(36), 'propget'], HRESULT, 'MathCoprocessorAvailable',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'prop' )),
    COMMETHOD([dispid(37), 'propget'], HRESULT, 'MouseAvailable',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'prop' )),
    COMMETHOD([dispid(46), 'propget'], HRESULT, 'International',
              ( ['in'], WdInternationalIndex, 'Index' ),
              ( ['out', 'retval'], POINTER(VARIANT), 'prop' )),
    COMMETHOD([dispid(47), 'propget'], HRESULT, 'Build',
              ( ['out', 'retval'], POINTER(BSTR), 'prop' )),
    COMMETHOD([dispid(48), 'propget'], HRESULT, 'CapsLock',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'prop' )),
    COMMETHOD([dispid(49), 'propget'], HRESULT, 'NumLock',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'prop' )),
    COMMETHOD([dispid(52), 'propget'], HRESULT, 'UserName',
              ( ['out', 'retval'], POINTER(BSTR), 'prop' )),
    COMMETHOD([dispid(52), 'propput'], HRESULT, 'UserName',
              ( ['in'], BSTR, 'prop' )),
    COMMETHOD([dispid(53), 'propget'], HRESULT, 'UserInitials',
              ( ['out', 'retval'], POINTER(BSTR), 'prop' )),
    COMMETHOD([dispid(53), 'propput'], HRESULT, 'UserInitials',
              ( ['in'], BSTR, 'prop' )),
    COMMETHOD([dispid(54), 'propget'], HRESULT, 'UserAddress',
              ( ['out', 'retval'], POINTER(BSTR), 'prop' )),
    COMMETHOD([dispid(54), 'propput'], HRESULT, 'UserAddress',
              ( ['in'], BSTR, 'prop' )),
    COMMETHOD([dispid(55), 'propget'], HRESULT, 'MacroContainer',
              ( ['out', 'retval'], POINTER(POINTER(IDispatch)), 'prop' )),
    COMMETHOD([dispid(56), 'propget'], HRESULT, 'DisplayRecentFiles',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'prop' )),
    COMMETHOD([dispid(56), 'propput'], HRESULT, 'DisplayRecentFiles',
              ( ['in'], VARIANT_BOOL, 'prop' )),
    COMMETHOD([dispid(57), 'propget'], HRESULT, 'CommandBars',
              ( ['out', 'retval'], POINTER(POINTER(comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.CommandBars)), 'prop' )),
    COMMETHOD([dispid(59), 'propget'], HRESULT, 'SynonymInfo',
              ( ['in'], BSTR, 'Word' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'LanguageID' ),
              ( ['out', 'retval'], POINTER(POINTER(SynonymInfo)), 'prop' )),
    COMMETHOD([dispid(61), 'propget'], HRESULT, 'VBE',
              ( ['out', 'retval'], POINTER(POINTER(comtypes.gen._0002E157_0000_0000_C000_000000000046_0_5_3.VBE)), 'prop' )),
    COMMETHOD([dispid(64), 'propget'], HRESULT, 'DefaultSaveFormat',
              ( ['out', 'retval'], POINTER(BSTR), 'prop' )),
    COMMETHOD([dispid(64), 'propput'], HRESULT, 'DefaultSaveFormat',
              ( ['in'], BSTR, 'prop' )),
    COMMETHOD([dispid(65), 'propget'], HRESULT, 'ListGalleries',
              ( ['out', 'retval'], POINTER(POINTER(ListGalleries)), 'prop' )),
    COMMETHOD([dispid(66), 'propget'], HRESULT, 'ActivePrinter',
              ( ['out', 'retval'], POINTER(BSTR), 'prop' )),
    COMMETHOD([dispid(66), 'propput'], HRESULT, 'ActivePrinter',
              ( ['in'], BSTR, 'prop' )),
    COMMETHOD([dispid(67), 'propget'], HRESULT, 'Templates',
              ( ['out', 'retval'], POINTER(POINTER(Templates)), 'prop' )),
    COMMETHOD([dispid(68), 'propget'], HRESULT, 'CustomizationContext',
              ( ['out', 'retval'], POINTER(POINTER(IDispatch)), 'prop' )),
    COMMETHOD([dispid(68), 'propput'], HRESULT, 'CustomizationContext',
              ( ['in'], POINTER(IDispatch), 'prop' )),
    COMMETHOD([dispid(69), 'propget'], HRESULT, 'KeyBindings',
              ( ['out', 'retval'], POINTER(POINTER(KeyBindings)), 'prop' )),
    COMMETHOD([dispid(70), 'propget'], HRESULT, 'KeysBoundTo',
              ( ['in'], WdKeyCategory, 'KeyCategory' ),
              ( ['in'], BSTR, 'Command' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'CommandParameter' ),
              ( ['out', 'retval'], POINTER(POINTER(KeysBoundTo)), 'prop' )),
    COMMETHOD([dispid(71), 'propget'], HRESULT, 'FindKey',
              ( ['in'], c_int, 'KeyCode' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'KeyCode2' ),
              ( ['out', 'retval'], POINTER(POINTER(KeyBinding)), 'prop' )),
    COMMETHOD([dispid(80), 'propget'], HRESULT, 'Caption',
              ( ['out', 'retval'], POINTER(BSTR), 'prop' )),
    COMMETHOD([dispid(80), 'propput'], HRESULT, 'Caption',
              ( ['in'], BSTR, 'prop' )),
    COMMETHOD([dispid(81), 'propget'], HRESULT, 'Path',
              ( ['out', 'retval'], POINTER(BSTR), 'prop' )),
    COMMETHOD([dispid(82), 'propget'], HRESULT, 'DisplayScrollBars',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'prop' )),
    COMMETHOD([dispid(82), 'propput'], HRESULT, 'DisplayScrollBars',
              ( ['in'], VARIANT_BOOL, 'prop' )),
    COMMETHOD([dispid(83), 'propget'], HRESULT, 'StartupPath',
              ( ['out', 'retval'], POINTER(BSTR), 'prop' )),
    COMMETHOD([dispid(83), 'propput'], HRESULT, 'StartupPath',
              ( ['in'], BSTR, 'prop' )),
    COMMETHOD([dispid(85), 'propget'], HRESULT, 'BackgroundSavingStatus',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(86), 'propget'], HRESULT, 'BackgroundPrintingStatus',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(87), 'propget'], HRESULT, 'Left',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(87), 'propput'], HRESULT, 'Left',
              ( ['in'], c_int, 'prop' )),
    COMMETHOD([dispid(88), 'propget'], HRESULT, 'Top',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(88), 'propput'], HRESULT, 'Top',
              ( ['in'], c_int, 'prop' )),
    COMMETHOD([dispid(89), 'propget'], HRESULT, 'Width',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(89), 'propput'], HRESULT, 'Width',
              ( ['in'], c_int, 'prop' )),
    COMMETHOD([dispid(90), 'propget'], HRESULT, 'Height',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(90), 'propput'], HRESULT, 'Height',
              ( ['in'], c_int, 'prop' )),
    COMMETHOD([dispid(91), 'propget'], HRESULT, 'WindowState',
              ( ['out', 'retval'], POINTER(WdWindowState), 'prop' )),
    COMMETHOD([dispid(91), 'propput'], HRESULT, 'WindowState',
              ( ['in'], WdWindowState, 'prop' )),
    COMMETHOD([dispid(92), 'propget'], HRESULT, 'DisplayAutoCompleteTips',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'prop' )),
    COMMETHOD([dispid(92), 'propput'], HRESULT, 'DisplayAutoCompleteTips',
              ( ['in'], VARIANT_BOOL, 'prop' )),
    COMMETHOD([dispid(93), 'propget'], HRESULT, 'Options',
              ( ['out', 'retval'], POINTER(POINTER(Options)), 'prop' )),
    COMMETHOD([dispid(94), 'propget'], HRESULT, 'DisplayAlerts',
              ( ['out', 'retval'], POINTER(WdAlertLevel), 'prop' )),
    COMMETHOD([dispid(94), 'propput'], HRESULT, 'DisplayAlerts',
              ( ['in'], WdAlertLevel, 'prop' )),
    COMMETHOD([dispid(95), 'propget'], HRESULT, 'CustomDictionaries',
              ( ['out', 'retval'], POINTER(POINTER(Dictionaries)), 'prop' )),
    COMMETHOD([dispid(96), 'propget'], HRESULT, 'PathSeparator',
              ( ['out', 'retval'], POINTER(BSTR), 'prop' )),
    COMMETHOD([dispid(97), 'propput'], HRESULT, 'StatusBar',
              ( ['in'], BSTR, 'rhs' )),
    COMMETHOD([dispid(98), 'propget'], HRESULT, 'MAPIAvailable',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'prop' )),
    COMMETHOD([dispid(99), 'propget'], HRESULT, 'DisplayScreenTips',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'prop' )),
    COMMETHOD([dispid(99), 'propput'], HRESULT, 'DisplayScreenTips',
              ( ['in'], VARIANT_BOOL, 'prop' )),
    COMMETHOD([dispid(100), 'propget'], HRESULT, 'EnableCancelKey',
              ( ['out', 'retval'], POINTER(WdEnableCancelKey), 'prop' )),
    COMMETHOD([dispid(100), 'propput'], HRESULT, 'EnableCancelKey',
              ( ['in'], WdEnableCancelKey, 'prop' )),
    COMMETHOD([dispid(101), 'propget'], HRESULT, 'UserControl',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'prop' )),
    COMMETHOD([dispid(103), 'hidden', 'propget'], HRESULT, 'FileSearch',
              ( ['out', 'retval'], POINTER(POINTER(comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.FileSearch)), 'prop' )),
    COMMETHOD([dispid(104), 'propget'], HRESULT, 'MailSystem',
              ( ['out', 'retval'], POINTER(WdMailSystem), 'prop' )),
    COMMETHOD([dispid(105), 'propget'], HRESULT, 'DefaultTableSeparator',
              ( ['out', 'retval'], POINTER(BSTR), 'prop' )),
    COMMETHOD([dispid(105), 'propput'], HRESULT, 'DefaultTableSeparator',
              ( ['in'], BSTR, 'prop' )),
    COMMETHOD([dispid(106), 'propget'], HRESULT, 'ShowVisualBasicEditor',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'prop' )),
    COMMETHOD([dispid(106), 'propput'], HRESULT, 'ShowVisualBasicEditor',
              ( ['in'], VARIANT_BOOL, 'prop' )),
    COMMETHOD([dispid(108), 'propget'], HRESULT, 'BrowseExtraFileTypes',
              ( ['out', 'retval'], POINTER(BSTR), 'prop' )),
    COMMETHOD([dispid(108), 'propput'], HRESULT, 'BrowseExtraFileTypes',
              ( ['in'], BSTR, 'prop' )),
    COMMETHOD([dispid(109), 'propget'], HRESULT, 'IsObjectValid',
              ( ['in'], POINTER(IDispatch), 'Object' ),
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'prop' )),
    COMMETHOD([dispid(110), 'propget'], HRESULT, 'HangulHanjaDictionaries',
              ( ['out', 'retval'], POINTER(POINTER(HangulHanjaConversionDictionaries)), 'prop' )),
    COMMETHOD([dispid(348), 'propget'], HRESULT, 'MailMessage',
              ( ['out', 'retval'], POINTER(POINTER(MailMessage)), 'prop' )),
    COMMETHOD([dispid(386), 'propget'], HRESULT, 'FocusInMailHeader',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'prop' )),
    COMMETHOD([dispid(1105)], HRESULT, 'Quit',
              ( ['in', 'optional'], POINTER(VARIANT), 'SaveChanges' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'OriginalFormat' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'RouteDocument' )),
    COMMETHOD([dispid(301)], HRESULT, 'ScreenRefresh'),
    COMMETHOD([dispid(302), 'hidden'], HRESULT, 'PrintOutOld',
              ( ['in', 'optional'], POINTER(VARIANT), 'Background' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'Append' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'Range' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'OutputFileName' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'From' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'To' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'Item' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'Copies' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'Pages' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'PageType' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'PrintToFile' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'Collate' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'FileName' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'ActivePrinterMacGX' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'ManualDuplexPrint' )),
    COMMETHOD([dispid(303)], HRESULT, 'LookupNameProperties',
              ( ['in'], BSTR, 'Name' )),
    COMMETHOD([dispid(304)], HRESULT, 'SubstituteFont',
              ( ['in'], BSTR, 'UnavailableFont' ),
              ( ['in'], BSTR, 'SubstituteFont' )),
    COMMETHOD([dispid(305)], HRESULT, 'Repeat',
              ( ['in', 'optional'], POINTER(VARIANT), 'Times' ),
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'prop' )),
    COMMETHOD([dispid(310)], HRESULT, 'DDEExecute',
              ( ['in'], c_int, 'Channel' ),
              ( ['in'], BSTR, 'Command' )),
    COMMETHOD([dispid(311)], HRESULT, 'DDEInitiate',
              ( ['in'], BSTR, 'App' ),
              ( ['in'], BSTR, 'Topic' ),
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(312)], HRESULT, 'DDEPoke',
              ( ['in'], c_int, 'Channel' ),
              ( ['in'], BSTR, 'Item' ),
              ( ['in'], BSTR, 'Data' )),
    COMMETHOD([dispid(313)], HRESULT, 'DDERequest',
              ( ['in'], c_int, 'Channel' ),
              ( ['in'], BSTR, 'Item' ),
              ( ['out', 'retval'], POINTER(BSTR), 'prop' )),
    COMMETHOD([dispid(314)], HRESULT, 'DDETerminate',
              ( ['in'], c_int, 'Channel' )),
    COMMETHOD([dispid(315)], HRESULT, 'DDETerminateAll'),
    COMMETHOD([dispid(316)], HRESULT, 'BuildKeyCode',
              ( ['in'], WdKey, 'Arg1' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'Arg2' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'Arg3' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'Arg4' ),
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(317)], HRESULT, 'KeyString',
              ( ['in'], c_int, 'KeyCode' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'KeyCode2' ),
              ( ['out', 'retval'], POINTER(BSTR), 'prop' )),
    COMMETHOD([dispid(318)], HRESULT, 'OrganizerCopy',
              ( ['in'], BSTR, 'Source' ),
              ( ['in'], BSTR, 'Destination' ),
              ( ['in'], BSTR, 'Name' ),
              ( ['in'], WdOrganizerObject, 'Object' )),
    COMMETHOD([dispid(319)], HRESULT, 'OrganizerDelete',
              ( ['in'], BSTR, 'Source' ),
              ( ['in'], BSTR, 'Name' ),
              ( ['in'], WdOrganizerObject, 'Object' )),
    COMMETHOD([dispid(320)], HRESULT, 'OrganizerRename',
              ( ['in'], BSTR, 'Source' ),
              ( ['in'], BSTR, 'Name' ),
              ( ['in'], BSTR, 'NewName' ),
              ( ['in'], WdOrganizerObject, 'Object' )),
    COMMETHOD([dispid(321)], HRESULT, 'AddAddress',
              ( ['in'], POINTER(_midlSAFEARRAY(BSTR)), 'TagID' ),
              ( ['in'], POINTER(_midlSAFEARRAY(BSTR)), 'Value' )),
    COMMETHOD([dispid(322)], HRESULT, 'GetAddress',
              ( ['in', 'optional'], POINTER(VARIANT), 'Name' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'AddressProperties' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'UseAutoText' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'DisplaySelectDialog' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'SelectDialog' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'CheckNamesDialog' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'RecentAddressesChoice' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'UpdateRecentAddresses' ),
              ( ['out', 'retval'], POINTER(BSTR), 'prop' )),
    COMMETHOD([dispid(323)], HRESULT, 'CheckGrammar',
              ( ['in'], BSTR, 'String' ),
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'prop' )),
    COMMETHOD([dispid(324)], HRESULT, 'CheckSpelling',
              ( ['in'], BSTR, 'Word' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'CustomDictionary' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'IgnoreUppercase' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'MainDictionary' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'CustomDictionary2' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'CustomDictionary3' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'CustomDictionary4' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'CustomDictionary5' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'CustomDictionary6' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'CustomDictionary7' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'CustomDictionary8' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'CustomDictionary9' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'CustomDictionary10' ),
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'prop' )),
    COMMETHOD([dispid(326)], HRESULT, 'ResetIgnoreAll'),
    COMMETHOD([dispid(327)], HRESULT, 'GetSpellingSuggestions',
              ( ['in'], BSTR, 'Word' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'CustomDictionary' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'IgnoreUppercase' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'MainDictionary' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'SuggestionMode' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'CustomDictionary2' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'CustomDictionary3' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'CustomDictionary4' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'CustomDictionary5' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'CustomDictionary6' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'CustomDictionary7' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'CustomDictionary8' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'CustomDictionary9' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'CustomDictionary10' ),
              ( ['out', 'retval'], POINTER(POINTER(SpellingSuggestions)), 'prop' )),
    COMMETHOD([dispid(328)], HRESULT, 'GoBack'),
    COMMETHOD([dispid(329)], HRESULT, 'Help',
              ( ['in'], POINTER(VARIANT), 'HelpType' )),
    COMMETHOD([dispid(330)], HRESULT, 'AutomaticChange'),
    COMMETHOD([dispid(331)], HRESULT, 'ShowMe'),
    COMMETHOD([dispid(332)], HRESULT, 'HelpTool'),
    COMMETHOD([dispid(345)], HRESULT, 'NewWindow',
              ( ['out', 'retval'], POINTER(POINTER(Window)), 'prop' )),
    COMMETHOD([dispid(346)], HRESULT, 'ListCommands',
              ( ['in'], VARIANT_BOOL, 'ListAllCommands' )),
    COMMETHOD([dispid(349)], HRESULT, 'ShowClipboard'),
    COMMETHOD([dispid(350)], HRESULT, 'OnTime',
              ( ['in'], POINTER(VARIANT), 'When' ),
              ( ['in'], BSTR, 'Name' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'Tolerance' )),
    COMMETHOD([dispid(351)], HRESULT, 'NextLetter'),
    COMMETHOD([dispid(353), 'hidden'], HRESULT, 'MountVolume',
              ( ['in'], BSTR, 'Zone' ),
              ( ['in'], BSTR, 'Server' ),
              ( ['in'], BSTR, 'Volume' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'User' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'UserPassword' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'VolumePassword' ),
              ( ['out', 'retval'], POINTER(c_short), 'prop' )),
    COMMETHOD([dispid(354)], HRESULT, 'CleanString',
              ( ['in'], BSTR, 'String' ),
              ( ['out', 'retval'], POINTER(BSTR), 'prop' )),
    COMMETHOD([dispid(356), 'hidden'], HRESULT, 'SendFax'),
    COMMETHOD([dispid(357)], HRESULT, 'ChangeFileOpenDirectory',
              ( ['in'], BSTR, 'Path' )),
    COMMETHOD([dispid(358), 'hidden'], HRESULT, 'RunOld',
              ( ['in'], BSTR, 'MacroName' )),
    COMMETHOD([dispid(359)], HRESULT, 'GoForward'),
    COMMETHOD([dispid(360)], HRESULT, 'Move',
              ( ['in'], c_int, 'Left' ),
              ( ['in'], c_int, 'Top' )),
    COMMETHOD([dispid(361)], HRESULT, 'Resize',
              ( ['in'], c_int, 'Width' ),
              ( ['in'], c_int, 'Height' )),
    COMMETHOD([dispid(370)], HRESULT, 'InchesToPoints',
              ( ['in'], c_float, 'Inches' ),
              ( ['out', 'retval'], POINTER(c_float), 'prop' )),
    COMMETHOD([dispid(371)], HRESULT, 'CentimetersToPoints',
              ( ['in'], c_float, 'Centimeters' ),
              ( ['out', 'retval'], POINTER(c_float), 'prop' )),
    COMMETHOD([dispid(372)], HRESULT, 'MillimetersToPoints',
              ( ['in'], c_float, 'Millimeters' ),
              ( ['out', 'retval'], POINTER(c_float), 'prop' )),
    COMMETHOD([dispid(373)], HRESULT, 'PicasToPoints',
              ( ['in'], c_float, 'Picas' ),
              ( ['out', 'retval'], POINTER(c_float), 'prop' )),
    COMMETHOD([dispid(374)], HRESULT, 'LinesToPoints',
              ( ['in'], c_float, 'Lines' ),
              ( ['out', 'retval'], POINTER(c_float), 'prop' )),
    COMMETHOD([dispid(380)], HRESULT, 'PointsToInches',
              ( ['in'], c_float, 'Points' ),
              ( ['out', 'retval'], POINTER(c_float), 'prop' )),
    COMMETHOD([dispid(381)], HRESULT, 'PointsToCentimeters',
              ( ['in'], c_float, 'Points' ),
              ( ['out', 'retval'], POINTER(c_float), 'prop' )),
    COMMETHOD([dispid(382)], HRESULT, 'PointsToMillimeters',
              ( ['in'], c_float, 'Points' ),
              ( ['out', 'retval'], POINTER(c_float), 'prop' )),
    COMMETHOD([dispid(383)], HRESULT, 'PointsToPicas',
              ( ['in'], c_float, 'Points' ),
              ( ['out', 'retval'], POINTER(c_float), 'prop' )),
    COMMETHOD([dispid(384)], HRESULT, 'PointsToLines',
              ( ['in'], c_float, 'Points' ),
              ( ['out', 'retval'], POINTER(c_float), 'prop' )),
    COMMETHOD([dispid(385)], HRESULT, 'Activate'),
    COMMETHOD([dispid(387)], HRESULT, 'PointsToPixels',
              ( ['in'], c_float, 'Points' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'fVertical' ),
              ( ['out', 'retval'], POINTER(c_float), 'prop' )),
    COMMETHOD([dispid(388)], HRESULT, 'PixelsToPoints',
              ( ['in'], c_float, 'Pixels' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'fVertical' ),
              ( ['out', 'retval'], POINTER(c_float), 'prop' )),
    COMMETHOD([dispid(400)], HRESULT, 'KeyboardLatin'),
    COMMETHOD([dispid(401)], HRESULT, 'KeyboardBidi'),
    COMMETHOD([dispid(402)], HRESULT, 'ToggleKeyboard'),
    COMMETHOD([dispid(446)], HRESULT, 'Keyboard',
              ( ['in', 'optional'], c_int, 'LangId', 0 ),
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(404)], HRESULT, 'ProductCode',
              ( ['out', 'retval'], POINTER(BSTR), 'prop' )),
    COMMETHOD([dispid(405)], HRESULT, 'DefaultWebOptions',
              ( ['out', 'retval'], POINTER(POINTER(DefaultWebOptions)), 'prop' )),
    COMMETHOD([dispid(407), 'hidden'], HRESULT, 'DiscussionSupport',
              ( ['in'], POINTER(VARIANT), 'Range' ),
              ( ['in'], POINTER(VARIANT), 'cid' ),
              ( ['in'], POINTER(VARIANT), 'piCSE' )),
    COMMETHOD([dispid(414)], HRESULT, 'SetDefaultTheme',
              ( ['in'], BSTR, 'Name' ),
              ( ['in'], WdDocumentMedium, 'DocumentType' )),
    COMMETHOD([dispid(416)], HRESULT, 'GetDefaultTheme',
              ( ['in'], WdDocumentMedium, 'DocumentType' ),
              ( ['out', 'retval'], POINTER(BSTR), 'prop' )),
    COMMETHOD([dispid(389), 'propget'], HRESULT, 'EmailOptions',
              ( ['out', 'retval'], POINTER(POINTER(EmailOptions)), 'prop' )),
    COMMETHOD([dispid(391), 'propget'], HRESULT, 'Language',
              ( ['out', 'retval'], POINTER(comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoLanguageID), 'prop' )),
    COMMETHOD([dispid(111), 'propget'], HRESULT, 'COMAddIns',
              ( ['out', 'retval'], POINTER(POINTER(comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.COMAddIns)), 'prop' )),
    COMMETHOD([dispid(112), 'propget'], HRESULT, 'CheckLanguage',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'prop' )),
    COMMETHOD([dispid(112), 'propput'], HRESULT, 'CheckLanguage',
              ( ['in'], VARIANT_BOOL, 'prop' )),
    COMMETHOD([dispid(403), 'propget'], HRESULT, 'LanguageSettings',
              ( ['out', 'retval'], POINTER(POINTER(comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.LanguageSettings)), 'prop' )),
    COMMETHOD([dispid(406), 'hidden', 'propget'], HRESULT, 'Dummy1',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'prop' )),
    COMMETHOD([dispid(409), 'hidden', 'propget'], HRESULT, 'AnswerWizard',
              ( ['out', 'retval'], POINTER(POINTER(comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.AnswerWizard)), 'prop' )),
    COMMETHOD([dispid(447), 'propget'], HRESULT, 'FeatureInstall',
              ( ['out', 'retval'], POINTER(comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoFeatureInstall), 'prop' )),
    COMMETHOD([dispid(447), 'propput'], HRESULT, 'FeatureInstall',
              ( ['in'], comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoFeatureInstall, 'prop' )),
    COMMETHOD([dispid(444), 'hidden'], HRESULT, 'PrintOut2000',
              ( ['in', 'optional'], POINTER(VARIANT), 'Background' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'Append' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'Range' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'OutputFileName' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'From' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'To' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'Item' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'Copies' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'Pages' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'PageType' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'PrintToFile' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'Collate' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'FileName' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'ActivePrinterMacGX' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'ManualDuplexPrint' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'PrintZoomColumn' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'PrintZoomRow' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'PrintZoomPaperWidth' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'PrintZoomPaperHeight' )),
    COMMETHOD([dispid(445)], HRESULT, 'Run',
              ( ['in'], BSTR, 'MacroName' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'varg1' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'varg2' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'varg3' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'varg4' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'varg5' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'varg6' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'varg7' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'varg8' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'varg9' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'varg10' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'varg11' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'varg12' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'varg13' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'varg14' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'varg15' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'varg16' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'varg17' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'varg18' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'varg19' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'varg20' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'varg21' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'varg22' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'varg23' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'varg24' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'varg25' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'varg26' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'varg27' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'varg28' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'varg29' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'varg30' ),
              ( ['out', 'retval'], POINTER(VARIANT), 'prop' )),
    COMMETHOD([dispid(448)], HRESULT, 'PrintOut',
              ( ['in', 'optional'], POINTER(VARIANT), 'Background' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'Append' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'Range' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'OutputFileName' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'From' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'To' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'Item' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'Copies' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'Pages' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'PageType' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'PrintToFile' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'Collate' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'FileName' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'ActivePrinterMacGX' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'ManualDuplexPrint' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'PrintZoomColumn' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'PrintZoomRow' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'PrintZoomPaperWidth' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'PrintZoomPaperHeight' )),
    COMMETHOD([dispid(449), 'propget'], HRESULT, 'AutomationSecurity',
              ( ['out', 'retval'], POINTER(comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoAutomationSecurity), 'prop' )),
    COMMETHOD([dispid(449), 'propput'], HRESULT, 'AutomationSecurity',
              ( ['in'], comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoAutomationSecurity, 'prop' )),
    COMMETHOD([dispid(450), 'propget'], HRESULT, 'FileDialog',
              ( ['in'], comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoFileDialogType, 'FileDialogType' ),
              ( ['out', 'retval'], POINTER(POINTER(comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.FileDialog)), 'prop' )),
    COMMETHOD([dispid(451), 'propget'], HRESULT, 'EmailTemplate',
              ( ['out', 'retval'], POINTER(BSTR), 'prop' )),
    COMMETHOD([dispid(451), 'propput'], HRESULT, 'EmailTemplate',
              ( ['in'], BSTR, 'prop' )),
    COMMETHOD([dispid(452), 'hidden', 'propget'], HRESULT, 'ShowWindowsInTaskbar',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'prop' )),
    COMMETHOD([dispid(452), 'hidden', 'propput'], HRESULT, 'ShowWindowsInTaskbar',
              ( ['in'], VARIANT_BOOL, 'prop' )),
    COMMETHOD([dispid(454), 'propget'], HRESULT, 'NewDocument',
              ( ['out', 'retval'], POINTER(POINTER(comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.NewFile)), 'prop' )),
    COMMETHOD([dispid(455), 'propget'], HRESULT, 'ShowStartupDialog',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'prop' )),
    COMMETHOD([dispid(455), 'propput'], HRESULT, 'ShowStartupDialog',
              ( ['in'], VARIANT_BOOL, 'prop' )),
    COMMETHOD([dispid(456), 'propget'], HRESULT, 'AutoCorrectEmail',
              ( ['out', 'retval'], POINTER(POINTER(AutoCorrect)), 'prop' )),
    COMMETHOD([dispid(457), 'propget'], HRESULT, 'TaskPanes',
              ( ['out', 'retval'], POINTER(POINTER(TaskPanes)), 'prop' )),
    COMMETHOD([dispid(459), 'propget'], HRESULT, 'DefaultLegalBlackline',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'prop' )),
    COMMETHOD([dispid(459), 'propput'], HRESULT, 'DefaultLegalBlackline',
              ( ['in'], VARIANT_BOOL, 'prop' )),
    COMMETHOD([dispid(458), 'hidden'], HRESULT, 'Dummy2',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'prop' )),
    COMMETHOD([dispid(460), 'hidden', 'propget'], HRESULT, 'SmartTagRecognizers',
              ( ['out', 'retval'], POINTER(POINTER(SmartTagRecognizers)), 'prop' )),
    COMMETHOD([dispid(461), 'hidden', 'propget'], HRESULT, 'SmartTagTypes',
              ( ['out', 'retval'], POINTER(POINTER(SmartTagTypes)), 'prop' )),
    COMMETHOD([dispid(463), 'propget'], HRESULT, 'XMLNamespaces',
              ( ['out', 'retval'], POINTER(POINTER(XMLNamespaces)), 'prop' )),
    COMMETHOD([dispid(464)], HRESULT, 'PutFocusInMailHeader'),
    COMMETHOD([dispid(465), 'propget'], HRESULT, 'ArbitraryXMLSupportAvailable',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'prop' )),
    COMMETHOD([dispid(466), 'hidden', 'propget'], HRESULT, 'BuildFull',
              ( ['out', 'retval'], POINTER(BSTR), 'prop' )),
    COMMETHOD([dispid(467), 'hidden', 'propget'], HRESULT, 'BuildFeatureCrew',
              ( ['out', 'retval'], POINTER(BSTR), 'prop' )),
    COMMETHOD([dispid(469)], HRESULT, 'LoadMasterList',
              ( ['in'], BSTR, 'FileName' )),
    COMMETHOD([dispid(470)], HRESULT, 'CompareDocuments',
              ( ['in'], POINTER(Document), 'OriginalDocument' ),
              ( ['in'], POINTER(Document), 'RevisedDocument' ),
              ( ['in', 'optional'], WdCompareDestination, 'Destination', 2 ),
              ( ['in', 'optional'], WdGranularity, 'Granularity', 1 ),
              ( ['in', 'optional'], VARIANT_BOOL, 'CompareFormatting', True ),
              ( ['in', 'optional'], VARIANT_BOOL, 'CompareCaseChanges', True ),
              ( ['in', 'optional'], VARIANT_BOOL, 'CompareWhitespace', True ),
              ( ['in', 'optional'], VARIANT_BOOL, 'CompareTables', True ),
              ( ['in', 'optional'], VARIANT_BOOL, 'CompareHeaders', True ),
              ( ['in', 'optional'], VARIANT_BOOL, 'CompareFootnotes', True ),
              ( ['in', 'optional'], VARIANT_BOOL, 'CompareTextboxes', True ),
              ( ['in', 'optional'], VARIANT_BOOL, 'CompareFields', True ),
              ( ['in', 'optional'], VARIANT_BOOL, 'CompareComments', True ),
              ( ['in', 'optional'], VARIANT_BOOL, 'CompareMoves', True ),
              ( ['in', 'optional'], BSTR, 'RevisedAuthor' ),
              ( ['in', 'optional'], VARIANT_BOOL, 'IgnoreAllComparisonWarnings', False ),
              ( ['out', 'retval'], POINTER(POINTER(Document)), 'prop' )),
    COMMETHOD([dispid(471)], HRESULT, 'MergeDocuments',
              ( ['in'], POINTER(Document), 'OriginalDocument' ),
              ( ['in'], POINTER(Document), 'RevisedDocument' ),
              ( ['in', 'optional'], WdCompareDestination, 'Destination', 2 ),
              ( ['in', 'optional'], WdGranularity, 'Granularity', 1 ),
              ( ['in', 'optional'], VARIANT_BOOL, 'CompareFormatting', True ),
              ( ['in', 'optional'], VARIANT_BOOL, 'CompareCaseChanges', True ),
              ( ['in', 'optional'], VARIANT_BOOL, 'CompareWhitespace', True ),
              ( ['in', 'optional'], VARIANT_BOOL, 'CompareTables', True ),
              ( ['in', 'optional'], VARIANT_BOOL, 'CompareHeaders', True ),
              ( ['in', 'optional'], VARIANT_BOOL, 'CompareFootnotes', True ),
              ( ['in', 'optional'], VARIANT_BOOL, 'CompareTextboxes', True ),
              ( ['in', 'optional'], VARIANT_BOOL, 'CompareFields', True ),
              ( ['in', 'optional'], VARIANT_BOOL, 'CompareComments', True ),
              ( ['in', 'optional'], VARIANT_BOOL, 'CompareMoves', True ),
              ( ['in', 'optional'], BSTR, 'OriginalAuthor' ),
              ( ['in', 'optional'], BSTR, 'RevisedAuthor' ),
              ( ['in', 'optional'], WdMergeFormatFrom, 'FormatFrom', 2 ),
              ( ['out', 'retval'], POINTER(POINTER(Document)), 'prop' )),
    COMMETHOD([dispid(472), 'propget'], HRESULT, 'Bibliography',
              ( ['out', 'retval'], POINTER(POINTER(Bibliography)), 'prop' )),
    COMMETHOD([dispid(473), 'propget'], HRESULT, 'ShowStylePreviews',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'prop' )),
    COMMETHOD([dispid(473), 'propput'], HRESULT, 'ShowStylePreviews',
              ( ['in'], VARIANT_BOOL, 'prop' )),
    COMMETHOD([dispid(474), 'propget'], HRESULT, 'RestrictLinkedStyles',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'prop' )),
    COMMETHOD([dispid(474), 'propput'], HRESULT, 'RestrictLinkedStyles',
              ( ['in'], VARIANT_BOOL, 'prop' )),
    COMMETHOD([dispid(475), 'propget'], HRESULT, 'OMathAutoCorrect',
              ( ['out', 'retval'], POINTER(POINTER(OMathAutoCorrect)), 'prop' )),
    COMMETHOD([dispid(476), 'propget'], HRESULT, 'DisplayDocumentInformationPanel',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'prop' )),
    COMMETHOD([dispid(476), 'propput'], HRESULT, 'DisplayDocumentInformationPanel',
              ( ['in'], VARIANT_BOOL, 'prop' )),
    COMMETHOD([dispid(477), 'propget'], HRESULT, 'Assistance',
              ( ['out', 'retval'], POINTER(POINTER(comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.IAssistance)), 'prop' )),
    COMMETHOD([dispid(478), 'propget'], HRESULT, 'OpenAttachmentsInFullScreen',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'prop' )),
    COMMETHOD([dispid(478), 'propput'], HRESULT, 'OpenAttachmentsInFullScreen',
              ( ['in'], VARIANT_BOOL, 'prop' )),
    COMMETHOD([dispid(479), 'propget'], HRESULT, 'ActiveEncryptionSession',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(480), 'propget'], HRESULT, 'DontResetInsertionPointProperties',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'prop' )),
    COMMETHOD([dispid(480), 'propput'], HRESULT, 'DontResetInsertionPointProperties',
              ( ['in'], VARIANT_BOOL, 'prop' )),
    COMMETHOD([dispid(481), 'propget'], HRESULT, 'SmartArtLayouts',
              ( ['out', 'retval'], POINTER(POINTER(comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.SmartArtLayouts)), 'prop' )),
    COMMETHOD([dispid(482), 'propget'], HRESULT, 'SmartArtQuickStyles',
              ( ['out', 'retval'], POINTER(POINTER(comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.SmartArtQuickStyles)), 'prop' )),
    COMMETHOD([dispid(483), 'propget'], HRESULT, 'SmartArtColors',
              ( ['out', 'retval'], POINTER(POINTER(comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.SmartArtColors)), 'prop' )),
    COMMETHOD([dispid(484), 'hidden'], HRESULT, 'ThreeWayMerge',
              ( ['in'], POINTER(Document), 'LocalDocument' ),
              ( ['in'], POINTER(Document), 'ServerDocument' ),
              ( ['in'], POINTER(Document), 'BaseDocument' ),
              ( ['in'], VARIANT_BOOL, 'FavorSource' )),
    COMMETHOD([dispid(485), 'hidden'], HRESULT, 'Dummy4'),
    COMMETHOD([dispid(486), 'propget'], HRESULT, 'UndoRecord',
              ( ['out', 'retval'], POINTER(POINTER(UndoRecord)), 'prop' )),
    COMMETHOD([dispid(489), 'propget'], HRESULT, 'PickerDialog',
              ( ['out', 'retval'], POINTER(POINTER(comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.PickerDialog)), 'prop' )),
    COMMETHOD([dispid(490), 'propget'], HRESULT, 'ProtectedViewWindows',
              ( ['out', 'retval'], POINTER(POINTER(ProtectedViewWindows)), 'prop' )),
    COMMETHOD([dispid(491), 'propget'], HRESULT, 'ActiveProtectedViewWindow',
              ( ['out', 'retval'], POINTER(POINTER(ProtectedViewWindow)), 'prop' )),
    COMMETHOD([dispid(492), 'propget'], HRESULT, 'IsSandboxed',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'prop' )),
    COMMETHOD([dispid(493), 'propget'], HRESULT, 'FileValidation',
              ( ['out', 'retval'], POINTER(comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoFileValidationMode), 'prop' )),
    COMMETHOD([dispid(493), 'propput'], HRESULT, 'FileValidation',
              ( ['in'], comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoFileValidationMode, 'prop' )),
    COMMETHOD([dispid(494), 'propget'], HRESULT, 'ChartDataPointTrack',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'prop' )),
    COMMETHOD([dispid(494), 'propput'], HRESULT, 'ChartDataPointTrack',
              ( ['in'], VARIANT_BOOL, 'prop' )),
    COMMETHOD([dispid(495), 'propget'], HRESULT, 'ShowAnimation',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'prop' )),
    COMMETHOD([dispid(495), 'propput'], HRESULT, 'ShowAnimation',
              ( ['in'], VARIANT_BOOL, 'prop' )),
    COMMETHOD([dispid(496), 'hidden', 'propget'], HRESULT, 'DataPrivacyOptions',
              ( ['out', 'retval'], POINTER(POINTER(comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.DataPrivacyOptions)), 'prop' )),
    COMMETHOD([dispid(497), 'propget'], HRESULT, 'SensitivityLabelPolicy',
              ( ['out', 'retval'], POINTER(POINTER(comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.SensitivityLabelPolicy)), 'prop' )),
]
################################################################
## code template for _Application implementation
##class _Application_Impl(object):
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Creator(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Name(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Documents(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Windows(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def ActiveDocument(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def ActiveWindow(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Selection(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def WordBasic(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def RecentFiles(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def NormalTemplate(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def System(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def AutoCorrect(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def FontNames(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def LandscapeFontNames(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def PortraitFontNames(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Languages(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Assistant(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Browser(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def FileConverters(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def MailingLabel(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Dialogs(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def CaptionLabels(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def AutoCaptions(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def AddIns(self):
##        '-no docstring-'
##        #return prop
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    Visible = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Version(self):
##        '-no docstring-'
##        #return prop
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    ScreenUpdating = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    PrintPreview = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Tasks(self):
##        '-no docstring-'
##        #return prop
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    DisplayStatusBar = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def SpecialMode(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def UsableWidth(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def UsableHeight(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def MathCoprocessorAvailable(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def MouseAvailable(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def International(self, Index):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Build(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def CapsLock(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def NumLock(self):
##        '-no docstring-'
##        #return prop
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    UserName = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    UserInitials = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    UserAddress = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def MacroContainer(self):
##        '-no docstring-'
##        #return prop
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    DisplayRecentFiles = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def CommandBars(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def SynonymInfo(self, Word, LanguageID):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def VBE(self):
##        '-no docstring-'
##        #return prop
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    DefaultSaveFormat = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def ListGalleries(self):
##        '-no docstring-'
##        #return prop
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    ActivePrinter = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Templates(self):
##        '-no docstring-'
##        #return prop
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    CustomizationContext = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def KeyBindings(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def KeysBoundTo(self, KeyCategory, Command, CommandParameter):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def FindKey(self, KeyCode, KeyCode2):
##        '-no docstring-'
##        #return prop
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    Caption = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Path(self):
##        '-no docstring-'
##        #return prop
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    DisplayScrollBars = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    StartupPath = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def BackgroundSavingStatus(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def BackgroundPrintingStatus(self):
##        '-no docstring-'
##        #return prop
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    Left = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    Top = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    Width = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    Height = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    WindowState = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    DisplayAutoCompleteTips = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Options(self):
##        '-no docstring-'
##        #return prop
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    DisplayAlerts = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def CustomDictionaries(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def PathSeparator(self):
##        '-no docstring-'
##        #return prop
##
##    def _set(self, rhs):
##        '-no docstring-'
##    StatusBar = property(fset = _set, doc = _set.__doc__)
##
##    @property
##    def MAPIAvailable(self):
##        '-no docstring-'
##        #return prop
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    DisplayScreenTips = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    EnableCancelKey = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def UserControl(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def FileSearch(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def MailSystem(self):
##        '-no docstring-'
##        #return prop
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    DefaultTableSeparator = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    ShowVisualBasicEditor = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    BrowseExtraFileTypes = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def IsObjectValid(self, Object):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def HangulHanjaDictionaries(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def MailMessage(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def FocusInMailHeader(self):
##        '-no docstring-'
##        #return prop
##
##    def Quit(self, SaveChanges, OriginalFormat, RouteDocument):
##        '-no docstring-'
##        #return 
##
##    def ScreenRefresh(self):
##        '-no docstring-'
##        #return 
##
##    def PrintOutOld(self, Background, Append, Range, OutputFileName, From, To, Item, Copies, Pages, PageType, PrintToFile, Collate, FileName, ActivePrinterMacGX, ManualDuplexPrint):
##        '-no docstring-'
##        #return 
##
##    def LookupNameProperties(self, Name):
##        '-no docstring-'
##        #return 
##
##    def SubstituteFont(self, UnavailableFont, SubstituteFont):
##        '-no docstring-'
##        #return 
##
##    def Repeat(self, Times):
##        '-no docstring-'
##        #return prop
##
##    def DDEExecute(self, Channel, Command):
##        '-no docstring-'
##        #return 
##
##    def DDEInitiate(self, App, Topic):
##        '-no docstring-'
##        #return prop
##
##    def DDEPoke(self, Channel, Item, Data):
##        '-no docstring-'
##        #return 
##
##    def DDERequest(self, Channel, Item):
##        '-no docstring-'
##        #return prop
##
##    def DDETerminate(self, Channel):
##        '-no docstring-'
##        #return 
##
##    def DDETerminateAll(self):
##        '-no docstring-'
##        #return 
##
##    def BuildKeyCode(self, Arg1, Arg2, Arg3, Arg4):
##        '-no docstring-'
##        #return prop
##
##    def KeyString(self, KeyCode, KeyCode2):
##        '-no docstring-'
##        #return prop
##
##    def OrganizerCopy(self, Source, Destination, Name, Object):
##        '-no docstring-'
##        #return 
##
##    def OrganizerDelete(self, Source, Name, Object):
##        '-no docstring-'
##        #return 
##
##    def OrganizerRename(self, Source, Name, NewName, Object):
##        '-no docstring-'
##        #return 
##
##    def AddAddress(self, TagID, Value):
##        '-no docstring-'
##        #return 
##
##    def GetAddress(self, Name, AddressProperties, UseAutoText, DisplaySelectDialog, SelectDialog, CheckNamesDialog, RecentAddressesChoice, UpdateRecentAddresses):
##        '-no docstring-'
##        #return prop
##
##    def CheckGrammar(self, String):
##        '-no docstring-'
##        #return prop
##
##    def CheckSpelling(self, Word, CustomDictionary, IgnoreUppercase, MainDictionary, CustomDictionary2, CustomDictionary3, CustomDictionary4, CustomDictionary5, CustomDictionary6, CustomDictionary7, CustomDictionary8, CustomDictionary9, CustomDictionary10):
##        '-no docstring-'
##        #return prop
##
##    def ResetIgnoreAll(self):
##        '-no docstring-'
##        #return 
##
##    def GetSpellingSuggestions(self, Word, CustomDictionary, IgnoreUppercase, MainDictionary, SuggestionMode, CustomDictionary2, CustomDictionary3, CustomDictionary4, CustomDictionary5, CustomDictionary6, CustomDictionary7, CustomDictionary8, CustomDictionary9, CustomDictionary10):
##        '-no docstring-'
##        #return prop
##
##    def GoBack(self):
##        '-no docstring-'
##        #return 
##
##    def Help(self, HelpType):
##        '-no docstring-'
##        #return 
##
##    def AutomaticChange(self):
##        '-no docstring-'
##        #return 
##
##    def ShowMe(self):
##        '-no docstring-'
##        #return 
##
##    def HelpTool(self):
##        '-no docstring-'
##        #return 
##
##    def NewWindow(self):
##        '-no docstring-'
##        #return prop
##
##    def ListCommands(self, ListAllCommands):
##        '-no docstring-'
##        #return 
##
##    def ShowClipboard(self):
##        '-no docstring-'
##        #return 
##
##    def OnTime(self, When, Name, Tolerance):
##        '-no docstring-'
##        #return 
##
##    def NextLetter(self):
##        '-no docstring-'
##        #return 
##
##    def MountVolume(self, Zone, Server, Volume, User, UserPassword, VolumePassword):
##        '-no docstring-'
##        #return prop
##
##    def CleanString(self, String):
##        '-no docstring-'
##        #return prop
##
##    def SendFax(self):
##        '-no docstring-'
##        #return 
##
##    def ChangeFileOpenDirectory(self, Path):
##        '-no docstring-'
##        #return 
##
##    def RunOld(self, MacroName):
##        '-no docstring-'
##        #return 
##
##    def GoForward(self):
##        '-no docstring-'
##        #return 
##
##    def Move(self, Left, Top):
##        '-no docstring-'
##        #return 
##
##    def Resize(self, Width, Height):
##        '-no docstring-'
##        #return 
##
##    def InchesToPoints(self, Inches):
##        '-no docstring-'
##        #return prop
##
##    def CentimetersToPoints(self, Centimeters):
##        '-no docstring-'
##        #return prop
##
##    def MillimetersToPoints(self, Millimeters):
##        '-no docstring-'
##        #return prop
##
##    def PicasToPoints(self, Picas):
##        '-no docstring-'
##        #return prop
##
##    def LinesToPoints(self, Lines):
##        '-no docstring-'
##        #return prop
##
##    def PointsToInches(self, Points):
##        '-no docstring-'
##        #return prop
##
##    def PointsToCentimeters(self, Points):
##        '-no docstring-'
##        #return prop
##
##    def PointsToMillimeters(self, Points):
##        '-no docstring-'
##        #return prop
##
##    def PointsToPicas(self, Points):
##        '-no docstring-'
##        #return prop
##
##    def PointsToLines(self, Points):
##        '-no docstring-'
##        #return prop
##
##    def Activate(self):
##        '-no docstring-'
##        #return 
##
##    def PointsToPixels(self, Points, fVertical):
##        '-no docstring-'
##        #return prop
##
##    def PixelsToPoints(self, Pixels, fVertical):
##        '-no docstring-'
##        #return prop
##
##    def KeyboardLatin(self):
##        '-no docstring-'
##        #return 
##
##    def KeyboardBidi(self):
##        '-no docstring-'
##        #return 
##
##    def ToggleKeyboard(self):
##        '-no docstring-'
##        #return 
##
##    def Keyboard(self, LangId):
##        '-no docstring-'
##        #return prop
##
##    def ProductCode(self):
##        '-no docstring-'
##        #return prop
##
##    def DefaultWebOptions(self):
##        '-no docstring-'
##        #return prop
##
##    def DiscussionSupport(self, Range, cid, piCSE):
##        '-no docstring-'
##        #return 
##
##    def SetDefaultTheme(self, Name, DocumentType):
##        '-no docstring-'
##        #return 
##
##    def GetDefaultTheme(self, DocumentType):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def EmailOptions(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Language(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def COMAddIns(self):
##        '-no docstring-'
##        #return prop
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    CheckLanguage = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def LanguageSettings(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Dummy1(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def AnswerWizard(self):
##        '-no docstring-'
##        #return prop
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    FeatureInstall = property(_get, _set, doc = _set.__doc__)
##
##    def PrintOut2000(self, Background, Append, Range, OutputFileName, From, To, Item, Copies, Pages, PageType, PrintToFile, Collate, FileName, ActivePrinterMacGX, ManualDuplexPrint, PrintZoomColumn, PrintZoomRow, PrintZoomPaperWidth, PrintZoomPaperHeight):
##        '-no docstring-'
##        #return 
##
##    def Run(self, MacroName, varg1, varg2, varg3, varg4, varg5, varg6, varg7, varg8, varg9, varg10, varg11, varg12, varg13, varg14, varg15, varg16, varg17, varg18, varg19, varg20, varg21, varg22, varg23, varg24, varg25, varg26, varg27, varg28, varg29, varg30):
##        '-no docstring-'
##        #return prop
##
##    def PrintOut(self, Background, Append, Range, OutputFileName, From, To, Item, Copies, Pages, PageType, PrintToFile, Collate, FileName, ActivePrinterMacGX, ManualDuplexPrint, PrintZoomColumn, PrintZoomRow, PrintZoomPaperWidth, PrintZoomPaperHeight):
##        '-no docstring-'
##        #return 
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    AutomationSecurity = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def FileDialog(self, FileDialogType):
##        '-no docstring-'
##        #return prop
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    EmailTemplate = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    ShowWindowsInTaskbar = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def NewDocument(self):
##        '-no docstring-'
##        #return prop
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    ShowStartupDialog = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def AutoCorrectEmail(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def TaskPanes(self):
##        '-no docstring-'
##        #return prop
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    DefaultLegalBlackline = property(_get, _set, doc = _set.__doc__)
##
##    def Dummy2(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def SmartTagRecognizers(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def SmartTagTypes(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def XMLNamespaces(self):
##        '-no docstring-'
##        #return prop
##
##    def PutFocusInMailHeader(self):
##        '-no docstring-'
##        #return 
##
##    @property
##    def ArbitraryXMLSupportAvailable(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def BuildFull(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def BuildFeatureCrew(self):
##        '-no docstring-'
##        #return prop
##
##    def LoadMasterList(self, FileName):
##        '-no docstring-'
##        #return 
##
##    def CompareDocuments(self, OriginalDocument, RevisedDocument, Destination, Granularity, CompareFormatting, CompareCaseChanges, CompareWhitespace, CompareTables, CompareHeaders, CompareFootnotes, CompareTextboxes, CompareFields, CompareComments, CompareMoves, RevisedAuthor, IgnoreAllComparisonWarnings):
##        '-no docstring-'
##        #return prop
##
##    def MergeDocuments(self, OriginalDocument, RevisedDocument, Destination, Granularity, CompareFormatting, CompareCaseChanges, CompareWhitespace, CompareTables, CompareHeaders, CompareFootnotes, CompareTextboxes, CompareFields, CompareComments, CompareMoves, OriginalAuthor, RevisedAuthor, FormatFrom):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Bibliography(self):
##        '-no docstring-'
##        #return prop
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    ShowStylePreviews = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    RestrictLinkedStyles = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def OMathAutoCorrect(self):
##        '-no docstring-'
##        #return prop
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    DisplayDocumentInformationPanel = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Assistance(self):
##        '-no docstring-'
##        #return prop
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    OpenAttachmentsInFullScreen = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def ActiveEncryptionSession(self):
##        '-no docstring-'
##        #return prop
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    DontResetInsertionPointProperties = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def SmartArtLayouts(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def SmartArtQuickStyles(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def SmartArtColors(self):
##        '-no docstring-'
##        #return prop
##
##    def ThreeWayMerge(self, LocalDocument, ServerDocument, BaseDocument, FavorSource):
##        '-no docstring-'
##        #return 
##
##    def Dummy4(self):
##        '-no docstring-'
##        #return 
##
##    @property
##    def UndoRecord(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def PickerDialog(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def ProtectedViewWindows(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def ActiveProtectedViewWindow(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def IsSandboxed(self):
##        '-no docstring-'
##        #return prop
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    FileValidation = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    ChartDataPointTrack = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    ShowAnimation = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def DataPrivacyOptions(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def SensitivityLabelPolicy(self):
##        '-no docstring-'
##        #return prop
##

Style._methods_ = [
    COMMETHOD([dispid(1000), 'propget'], HRESULT, 'Application',
              ( ['out', 'retval'], POINTER(POINTER(Application)), 'prop' )),
    COMMETHOD([dispid(1001), 'propget'], HRESULT, 'Creator',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(1002), 'propget'], HRESULT, 'Parent',
              ( ['out', 'retval'], POINTER(POINTER(IDispatch)), 'prop' )),
    COMMETHOD([dispid(0), 'propget'], HRESULT, 'NameLocal',
              ( ['out', 'retval'], POINTER(BSTR), 'prop' )),
    COMMETHOD([dispid(0), 'propput'], HRESULT, 'NameLocal',
              ( ['in'], BSTR, 'prop' )),
    COMMETHOD([dispid(1), 'propget'], HRESULT, 'BaseStyle',
              ( ['out', 'retval'], POINTER(VARIANT), 'prop' )),
    COMMETHOD([dispid(1), 'propput'], HRESULT, 'BaseStyle',
              ( ['in'], POINTER(VARIANT), 'prop' )),
    COMMETHOD([dispid(2), 'propget'], HRESULT, 'Description',
              ( ['out', 'retval'], POINTER(BSTR), 'prop' )),
    COMMETHOD([dispid(3), 'propget'], HRESULT, 'Type',
              ( ['out', 'retval'], POINTER(WdStyleType), 'prop' )),
    COMMETHOD([dispid(4), 'propget'], HRESULT, 'BuiltIn',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'prop' )),
    COMMETHOD([dispid(5), 'propget'], HRESULT, 'NextParagraphStyle',
              ( ['out', 'retval'], POINTER(VARIANT), 'prop' )),
    COMMETHOD([dispid(5), 'propput'], HRESULT, 'NextParagraphStyle',
              ( ['in'], POINTER(VARIANT), 'prop' )),
    COMMETHOD([dispid(6), 'propget'], HRESULT, 'InUse',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'prop' )),
    COMMETHOD([dispid(7), 'propget'], HRESULT, 'Shading',
              ( ['out', 'retval'], POINTER(POINTER(Shading)), 'prop' )),
    COMMETHOD([dispid(8), 'propget'], HRESULT, 'Borders',
              ( ['out', 'retval'], POINTER(POINTER(Borders)), 'prop' )),
    COMMETHOD([dispid(8), 'propput'], HRESULT, 'Borders',
              ( ['in'], POINTER(Borders), 'prop' )),
    COMMETHOD([dispid(9), 'propget'], HRESULT, 'ParagraphFormat',
              ( ['out', 'retval'], POINTER(POINTER(ParagraphFormat)), 'prop' )),
    COMMETHOD([dispid(9), 'propput'], HRESULT, 'ParagraphFormat',
              ( ['in'], POINTER(ParagraphFormat), 'prop' )),
    COMMETHOD([dispid(10), 'propget'], HRESULT, 'Font',
              ( ['out', 'retval'], POINTER(POINTER(Font)), 'prop' )),
    COMMETHOD([dispid(10), 'propput'], HRESULT, 'Font',
              ( ['in'], POINTER(Font), 'prop' )),
    COMMETHOD([dispid(11), 'propget'], HRESULT, 'Frame',
              ( ['out', 'retval'], POINTER(POINTER(Frame)), 'prop' )),
    COMMETHOD([dispid(12), 'propget'], HRESULT, 'LanguageID',
              ( ['out', 'retval'], POINTER(WdLanguageID), 'prop' )),
    COMMETHOD([dispid(12), 'propput'], HRESULT, 'LanguageID',
              ( ['in'], WdLanguageID, 'prop' )),
    COMMETHOD([dispid(13), 'propget'], HRESULT, 'AutomaticallyUpdate',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'prop' )),
    COMMETHOD([dispid(13), 'propput'], HRESULT, 'AutomaticallyUpdate',
              ( ['in'], VARIANT_BOOL, 'prop' )),
    COMMETHOD([dispid(14), 'propget'], HRESULT, 'ListTemplate',
              ( ['out', 'retval'], POINTER(POINTER(ListTemplate)), 'prop' )),
    COMMETHOD([dispid(15), 'propget'], HRESULT, 'ListLevelNumber',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(16), 'propget'], HRESULT, 'LanguageIDFarEast',
              ( ['out', 'retval'], POINTER(WdLanguageID), 'prop' )),
    COMMETHOD([dispid(16), 'propput'], HRESULT, 'LanguageIDFarEast',
              ( ['in'], WdLanguageID, 'prop' )),
    COMMETHOD([dispid(17), 'hidden', 'propget'], HRESULT, 'Hidden',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'prop' )),
    COMMETHOD([dispid(17), 'hidden', 'propput'], HRESULT, 'Hidden',
              ( ['in'], VARIANT_BOOL, 'prop' )),
    COMMETHOD([dispid(100)], HRESULT, 'Delete'),
    COMMETHOD([dispid(101)], HRESULT, 'LinkToListTemplate',
              ( ['in'], POINTER(ListTemplate), 'ListTemplate' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'ListLevelNumber' )),
    COMMETHOD([dispid(18), 'propget'], HRESULT, 'NoProofing',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(18), 'propput'], HRESULT, 'NoProofing',
              ( ['in'], c_int, 'prop' )),
    COMMETHOD([dispid(104), 'propget'], HRESULT, 'LinkStyle',
              ( ['out', 'retval'], POINTER(VARIANT), 'prop' )),
    COMMETHOD([dispid(104), 'propput'], HRESULT, 'LinkStyle',
              ( ['in'], POINTER(VARIANT), 'prop' )),
    COMMETHOD([dispid(19), 'propget'], HRESULT, 'Visibility',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'prop' )),
    COMMETHOD([dispid(19), 'propput'], HRESULT, 'Visibility',
              ( ['in'], VARIANT_BOOL, 'prop' )),
    COMMETHOD([dispid(20), 'propget'], HRESULT, 'NoSpaceBetweenParagraphsOfSameStyle',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'prop' )),
    COMMETHOD([dispid(20), 'propput'], HRESULT, 'NoSpaceBetweenParagraphsOfSameStyle',
              ( ['in'], VARIANT_BOOL, 'prop' )),
    COMMETHOD([dispid(21), 'propget'], HRESULT, 'Table',
              ( ['out', 'retval'], POINTER(POINTER(TableStyle)), 'prop' )),
    COMMETHOD([dispid(22), 'propget'], HRESULT, 'Locked',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'prop' )),
    COMMETHOD([dispid(22), 'propput'], HRESULT, 'Locked',
              ( ['in'], VARIANT_BOOL, 'prop' )),
    COMMETHOD([dispid(23), 'propget'], HRESULT, 'Priority',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(23), 'propput'], HRESULT, 'Priority',
              ( ['in'], c_int, 'prop' )),
    COMMETHOD([dispid(24), 'propget'], HRESULT, 'UnhideWhenUsed',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'prop' )),
    COMMETHOD([dispid(24), 'propput'], HRESULT, 'UnhideWhenUsed',
              ( ['in'], VARIANT_BOOL, 'prop' )),
    COMMETHOD([dispid(25), 'propget'], HRESULT, 'QuickStyle',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'prop' )),
    COMMETHOD([dispid(25), 'propput'], HRESULT, 'QuickStyle',
              ( ['in'], VARIANT_BOOL, 'prop' )),
    COMMETHOD([dispid(26), 'propget'], HRESULT, 'Linked',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'prop' )),
]
################################################################
## code template for Style implementation
##class Style_Impl(object):
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Creator(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return prop
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    NameLocal = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    BaseStyle = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Description(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Type(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def BuiltIn(self):
##        '-no docstring-'
##        #return prop
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    NextParagraphStyle = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def InUse(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Shading(self):
##        '-no docstring-'
##        #return prop
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    Borders = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    ParagraphFormat = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    Font = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Frame(self):
##        '-no docstring-'
##        #return prop
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    LanguageID = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    AutomaticallyUpdate = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def ListTemplate(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def ListLevelNumber(self):
##        '-no docstring-'
##        #return prop
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    LanguageIDFarEast = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    Hidden = property(_get, _set, doc = _set.__doc__)
##
##    def Delete(self):
##        '-no docstring-'
##        #return 
##
##    def LinkToListTemplate(self, ListTemplate, ListLevelNumber):
##        '-no docstring-'
##        #return 
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    NoProofing = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    LinkStyle = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    Visibility = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    NoSpaceBetweenParagraphsOfSameStyle = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Table(self):
##        '-no docstring-'
##        #return prop
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    Locked = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    Priority = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    UnhideWhenUsed = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    QuickStyle = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Linked(self):
##        '-no docstring-'
##        #return prop
##

Template._methods_ = [
    COMMETHOD([dispid(0), 'propget'], HRESULT, 'Name',
              ( ['out', 'retval'], POINTER(BSTR), 'prop' )),
    COMMETHOD([dispid(1000), 'propget'], HRESULT, 'Application',
              ( ['out', 'retval'], POINTER(POINTER(Application)), 'prop' )),
    COMMETHOD([dispid(1001), 'propget'], HRESULT, 'Creator',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(1002), 'propget'], HRESULT, 'Parent',
              ( ['out', 'retval'], POINTER(POINTER(IDispatch)), 'prop' )),
    COMMETHOD([dispid(1), 'propget'], HRESULT, 'Path',
              ( ['out', 'retval'], POINTER(BSTR), 'prop' )),
    COMMETHOD([dispid(2), 'hidden', 'propget'], HRESULT, 'AutoTextEntries',
              ( ['out', 'retval'], POINTER(POINTER(AutoTextEntries)), 'prop' )),
    COMMETHOD([dispid(4), 'propget'], HRESULT, 'LanguageID',
              ( ['out', 'retval'], POINTER(WdLanguageID), 'prop' )),
    COMMETHOD([dispid(4), 'propput'], HRESULT, 'LanguageID',
              ( ['in'], WdLanguageID, 'prop' )),
    COMMETHOD([dispid(5), 'propget'], HRESULT, 'Saved',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'prop' )),
    COMMETHOD([dispid(5), 'propput'], HRESULT, 'Saved',
              ( ['in'], VARIANT_BOOL, 'prop' )),
    COMMETHOD([dispid(6), 'propget'], HRESULT, 'Type',
              ( ['out', 'retval'], POINTER(WdTemplateType), 'prop' )),
    COMMETHOD([dispid(7), 'propget'], HRESULT, 'FullName',
              ( ['out', 'retval'], POINTER(BSTR), 'prop' )),
    COMMETHOD([dispid(8), 'propget'], HRESULT, 'BuiltInDocumentProperties',
              ( ['out', 'retval'], POINTER(POINTER(IDispatch)), 'prop' )),
    COMMETHOD([dispid(9), 'propget'], HRESULT, 'CustomDocumentProperties',
              ( ['out', 'retval'], POINTER(POINTER(IDispatch)), 'prop' )),
    COMMETHOD([dispid(10), 'propget'], HRESULT, 'ListTemplates',
              ( ['out', 'retval'], POINTER(POINTER(ListTemplates)), 'prop' )),
    COMMETHOD([dispid(11), 'propget'], HRESULT, 'LanguageIDFarEast',
              ( ['out', 'retval'], POINTER(WdLanguageID), 'prop' )),
    COMMETHOD([dispid(11), 'propput'], HRESULT, 'LanguageIDFarEast',
              ( ['in'], WdLanguageID, 'prop' )),
    COMMETHOD([dispid(99), 'propget'], HRESULT, 'VBProject',
              ( ['out', 'retval'], POINTER(POINTER(comtypes.gen._0002E157_0000_0000_C000_000000000046_0_5_3.VBProject)), 'prop' )),
    COMMETHOD([dispid(12), 'propget'], HRESULT, 'KerningByAlgorithm',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'prop' )),
    COMMETHOD([dispid(12), 'propput'], HRESULT, 'KerningByAlgorithm',
              ( ['in'], VARIANT_BOOL, 'prop' )),
    COMMETHOD([dispid(13), 'propget'], HRESULT, 'JustificationMode',
              ( ['out', 'retval'], POINTER(WdJustificationMode), 'prop' )),
    COMMETHOD([dispid(13), 'propput'], HRESULT, 'JustificationMode',
              ( ['in'], WdJustificationMode, 'prop' )),
    COMMETHOD([dispid(14), 'propget'], HRESULT, 'FarEastLineBreakLevel',
              ( ['out', 'retval'], POINTER(WdFarEastLineBreakLevel), 'prop' )),
    COMMETHOD([dispid(14), 'propput'], HRESULT, 'FarEastLineBreakLevel',
              ( ['in'], WdFarEastLineBreakLevel, 'prop' )),
    COMMETHOD([dispid(15), 'propget'], HRESULT, 'NoLineBreakBefore',
              ( ['out', 'retval'], POINTER(BSTR), 'prop' )),
    COMMETHOD([dispid(15), 'propput'], HRESULT, 'NoLineBreakBefore',
              ( ['in'], BSTR, 'prop' )),
    COMMETHOD([dispid(16), 'propget'], HRESULT, 'NoLineBreakAfter',
              ( ['out', 'retval'], POINTER(BSTR), 'prop' )),
    COMMETHOD([dispid(16), 'propput'], HRESULT, 'NoLineBreakAfter',
              ( ['in'], BSTR, 'prop' )),
    COMMETHOD([dispid(100)], HRESULT, 'OpenAsDocument',
              ( ['out', 'retval'], POINTER(POINTER(Document)), 'prop' )),
    COMMETHOD([dispid(101)], HRESULT, 'Save'),
    COMMETHOD([dispid(17), 'propget'], HRESULT, 'NoProofing',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(17), 'propput'], HRESULT, 'NoProofing',
              ( ['in'], c_int, 'prop' )),
    COMMETHOD([dispid(18), 'propget'], HRESULT, 'FarEastLineBreakLanguage',
              ( ['out', 'retval'], POINTER(WdFarEastLineBreakLanguageID), 'prop' )),
    COMMETHOD([dispid(18), 'propput'], HRESULT, 'FarEastLineBreakLanguage',
              ( ['in'], WdFarEastLineBreakLanguageID, 'prop' )),
    COMMETHOD([dispid(19), 'propget'], HRESULT, 'BuildingBlockEntries',
              ( ['out', 'retval'], POINTER(POINTER(BuildingBlockEntries)), 'prop' )),
    COMMETHOD([dispid(20), 'propget'], HRESULT, 'BuildingBlockTypes',
              ( ['out', 'retval'], POINTER(POINTER(BuildingBlockTypes)), 'prop' )),
    COMMETHOD([dispid(21), 'propget'], HRESULT, 'AutoSaveOn',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'prop' )),
    COMMETHOD([dispid(21), 'propput'], HRESULT, 'AutoSaveOn',
              ( ['in'], VARIANT_BOOL, 'prop' )),
]
################################################################
## code template for Template implementation
##class Template_Impl(object):
##    @property
##    def Name(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Creator(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Path(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def AutoTextEntries(self):
##        '-no docstring-'
##        #return prop
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    LanguageID = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    Saved = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Type(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def FullName(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def BuiltInDocumentProperties(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def CustomDocumentProperties(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def ListTemplates(self):
##        '-no docstring-'
##        #return prop
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    LanguageIDFarEast = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def VBProject(self):
##        '-no docstring-'
##        #return prop
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    KerningByAlgorithm = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    JustificationMode = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    FarEastLineBreakLevel = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    NoLineBreakBefore = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    NoLineBreakAfter = property(_get, _set, doc = _set.__doc__)
##
##    def OpenAsDocument(self):
##        '-no docstring-'
##        #return prop
##
##    def Save(self):
##        '-no docstring-'
##        #return 
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    NoProofing = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    FarEastLineBreakLanguage = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def BuildingBlockEntries(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def BuildingBlockTypes(self):
##        '-no docstring-'
##        #return prop
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    AutoSaveOn = property(_get, _set, doc = _set.__doc__)
##


# values for enumeration 'WdMonthNames'
wdMonthNamesArabic = 0
wdMonthNamesEnglish = 1
wdMonthNamesFrench = 2
WdMonthNames = c_int # enum

# values for enumeration 'WdCursorMovement'
wdCursorMovementLogical = 0
wdCursorMovementVisual = 1
WdCursorMovement = c_int # enum
Options._methods_ = [
    COMMETHOD([dispid(1000), 'propget'], HRESULT, 'Application',
              ( ['out', 'retval'], POINTER(POINTER(Application)), 'prop' )),
    COMMETHOD([dispid(1001), 'propget'], HRESULT, 'Creator',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(1002), 'propget'], HRESULT, 'Parent',
              ( ['out', 'retval'], POINTER(POINTER(IDispatch)), 'prop' )),
    COMMETHOD([dispid(1), 'propget'], HRESULT, 'AllowAccentedUppercase',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'prop' )),
    COMMETHOD([dispid(1), 'propput'], HRESULT, 'AllowAccentedUppercase',
              ( ['in'], VARIANT_BOOL, 'prop' )),
    COMMETHOD([dispid(17), 'hidden', 'propget'], HRESULT, 'WPHelp',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'prop' )),
    COMMETHOD([dispid(17), 'hidden', 'propput'], HRESULT, 'WPHelp',
              ( ['in'], VARIANT_BOOL, 'prop' )),
    COMMETHOD([dispid(18), 'hidden', 'propget'], HRESULT, 'WPDocNavKeys',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'prop' )),
    COMMETHOD([dispid(18), 'hidden', 'propput'], HRESULT, 'WPDocNavKeys',
              ( ['in'], VARIANT_BOOL, 'prop' )),
    COMMETHOD([dispid(19), 'propget'], HRESULT, 'Pagination',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'prop' )),
    COMMETHOD([dispid(19), 'propput'], HRESULT, 'Pagination',
              ( ['in'], VARIANT_BOOL, 'prop' )),
    COMMETHOD([dispid(20), 'hidden', 'propget'], HRESULT, 'BlueScreen',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'prop' )),
    COMMETHOD([dispid(20), 'hidden', 'propput'], HRESULT, 'BlueScreen',
              ( ['in'], VARIANT_BOOL, 'prop' )),
    COMMETHOD([dispid(21), 'propget'], HRESULT, 'EnableSound',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'prop' )),
    COMMETHOD([dispid(21), 'propput'], HRESULT, 'EnableSound',
              ( ['in'], VARIANT_BOOL, 'prop' )),
    COMMETHOD([dispid(22), 'propget'], HRESULT, 'ConfirmConversions',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'prop' )),
    COMMETHOD([dispid(22), 'propput'], HRESULT, 'ConfirmConversions',
              ( ['in'], VARIANT_BOOL, 'prop' )),
    COMMETHOD([dispid(23), 'propget'], HRESULT, 'UpdateLinksAtOpen',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'prop' )),
    COMMETHOD([dispid(23), 'propput'], HRESULT, 'UpdateLinksAtOpen',
              ( ['in'], VARIANT_BOOL, 'prop' )),
    COMMETHOD([dispid(24), 'propget'], HRESULT, 'SendMailAttach',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'prop' )),
    COMMETHOD([dispid(24), 'propput'], HRESULT, 'SendMailAttach',
              ( ['in'], VARIANT_BOOL, 'prop' )),
    COMMETHOD([dispid(26), 'propget'], HRESULT, 'MeasurementUnit',
              ( ['out', 'retval'], POINTER(WdMeasurementUnits), 'prop' )),
    COMMETHOD([dispid(26), 'propput'], HRESULT, 'MeasurementUnit',
              ( ['in'], WdMeasurementUnits, 'prop' )),
    COMMETHOD([dispid(27), 'propget'], HRESULT, 'ButtonFieldClicks',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(27), 'propput'], HRESULT, 'ButtonFieldClicks',
              ( ['in'], c_int, 'prop' )),
    COMMETHOD([dispid(28), 'propget'], HRESULT, 'ShortMenuNames',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'prop' )),
    COMMETHOD([dispid(28), 'propput'], HRESULT, 'ShortMenuNames',
              ( ['in'], VARIANT_BOOL, 'prop' )),
    COMMETHOD([dispid(29), 'propget'], HRESULT, 'RTFInClipboard',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'prop' )),
    COMMETHOD([dispid(29), 'propput'], HRESULT, 'RTFInClipboard',
              ( ['in'], VARIANT_BOOL, 'prop' )),
    COMMETHOD([dispid(30), 'propget'], HRESULT, 'UpdateFieldsAtPrint',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'prop' )),
    COMMETHOD([dispid(30), 'propput'], HRESULT, 'UpdateFieldsAtPrint',
              ( ['in'], VARIANT_BOOL, 'prop' )),
    COMMETHOD([dispid(31), 'propget'], HRESULT, 'PrintProperties',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'prop' )),
    COMMETHOD([dispid(31), 'propput'], HRESULT, 'PrintProperties',
              ( ['in'], VARIANT_BOOL, 'prop' )),
    COMMETHOD([dispid(32), 'propget'], HRESULT, 'PrintFieldCodes',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'prop' )),
    COMMETHOD([dispid(32), 'propput'], HRESULT, 'PrintFieldCodes',
              ( ['in'], VARIANT_BOOL, 'prop' )),
    COMMETHOD([dispid(33), 'propget'], HRESULT, 'PrintComments',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'prop' )),
    COMMETHOD([dispid(33), 'propput'], HRESULT, 'PrintComments',
              ( ['in'], VARIANT_BOOL, 'prop' )),
    COMMETHOD([dispid(34), 'propget'], HRESULT, 'PrintHiddenText',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'prop' )),
    COMMETHOD([dispid(34), 'propput'], HRESULT, 'PrintHiddenText',
              ( ['in'], VARIANT_BOOL, 'prop' )),
    COMMETHOD([dispid(35), 'propget'], HRESULT, 'EnvelopeFeederInstalled',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'prop' )),
    COMMETHOD([dispid(36), 'propget'], HRESULT, 'UpdateLinksAtPrint',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'prop' )),
    COMMETHOD([dispid(36), 'propput'], HRESULT, 'UpdateLinksAtPrint',
              ( ['in'], VARIANT_BOOL, 'prop' )),
    COMMETHOD([dispid(37), 'propget'], HRESULT, 'PrintBackground',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'prop' )),
    COMMETHOD([dispid(37), 'propput'], HRESULT, 'PrintBackground',
              ( ['in'], VARIANT_BOOL, 'prop' )),
    COMMETHOD([dispid(38), 'propget'], HRESULT, 'PrintDrawingObjects',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'prop' )),
    COMMETHOD([dispid(38), 'propput'], HRESULT, 'PrintDrawingObjects',
              ( ['in'], VARIANT_BOOL, 'prop' )),
    COMMETHOD([dispid(39), 'propget'], HRESULT, 'DefaultTray',
              ( ['out', 'retval'], POINTER(BSTR), 'prop' )),
    COMMETHOD([dispid(39), 'propput'], HRESULT, 'DefaultTray',
              ( ['in'], BSTR, 'prop' )),
    COMMETHOD([dispid(40), 'propget'], HRESULT, 'DefaultTrayID',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(40), 'propput'], HRESULT, 'DefaultTrayID',
              ( ['in'], c_int, 'prop' )),
    COMMETHOD([dispid(41), 'propget'], HRESULT, 'CreateBackup',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'prop' )),
    COMMETHOD([dispid(41), 'propput'], HRESULT, 'CreateBackup',
              ( ['in'], VARIANT_BOOL, 'prop' )),
    COMMETHOD([dispid(42), 'hidden', 'propget'], HRESULT, 'AllowFastSave',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'prop' )),
    COMMETHOD([dispid(42), 'hidden', 'propput'], HRESULT, 'AllowFastSave',
              ( ['in'], VARIANT_BOOL, 'prop' )),
    COMMETHOD([dispid(43), 'propget'], HRESULT, 'SavePropertiesPrompt',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'prop' )),
    COMMETHOD([dispid(43), 'propput'], HRESULT, 'SavePropertiesPrompt',
              ( ['in'], VARIANT_BOOL, 'prop' )),
    COMMETHOD([dispid(44), 'propget'], HRESULT, 'SaveNormalPrompt',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'prop' )),
    COMMETHOD([dispid(44), 'propput'], HRESULT, 'SaveNormalPrompt',
              ( ['in'], VARIANT_BOOL, 'prop' )),
    COMMETHOD([dispid(45), 'propget'], HRESULT, 'SaveInterval',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(45), 'propput'], HRESULT, 'SaveInterval',
              ( ['in'], c_int, 'prop' )),
    COMMETHOD([dispid(46), 'propget'], HRESULT, 'BackgroundSave',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'prop' )),
    COMMETHOD([dispid(46), 'propput'], HRESULT, 'BackgroundSave',
              ( ['in'], VARIANT_BOOL, 'prop' )),
    COMMETHOD([dispid(57), 'propget'], HRESULT, 'InsertedTextMark',
              ( ['out', 'retval'], POINTER(WdInsertedTextMark), 'prop' )),
    COMMETHOD([dispid(57), 'propput'], HRESULT, 'InsertedTextMark',
              ( ['in'], WdInsertedTextMark, 'prop' )),
    COMMETHOD([dispid(58), 'propget'], HRESULT, 'DeletedTextMark',
              ( ['out', 'retval'], POINTER(WdDeletedTextMark), 'prop' )),
    COMMETHOD([dispid(58), 'propput'], HRESULT, 'DeletedTextMark',
              ( ['in'], WdDeletedTextMark, 'prop' )),
    COMMETHOD([dispid(59), 'propget'], HRESULT, 'RevisedLinesMark',
              ( ['out', 'retval'], POINTER(WdRevisedLinesMark), 'prop' )),
    COMMETHOD([dispid(59), 'propput'], HRESULT, 'RevisedLinesMark',
              ( ['in'], WdRevisedLinesMark, 'prop' )),
    COMMETHOD([dispid(60), 'propget'], HRESULT, 'InsertedTextColor',
              ( ['out', 'retval'], POINTER(WdColorIndex), 'prop' )),
    COMMETHOD([dispid(60), 'propput'], HRESULT, 'InsertedTextColor',
              ( ['in'], WdColorIndex, 'prop' )),
    COMMETHOD([dispid(61), 'propget'], HRESULT, 'DeletedTextColor',
              ( ['out', 'retval'], POINTER(WdColorIndex), 'prop' )),
    COMMETHOD([dispid(61), 'propput'], HRESULT, 'DeletedTextColor',
              ( ['in'], WdColorIndex, 'prop' )),
    COMMETHOD([dispid(62), 'propget'], HRESULT, 'RevisedLinesColor',
              ( ['out', 'retval'], POINTER(WdColorIndex), 'prop' )),
    COMMETHOD([dispid(62), 'propput'], HRESULT, 'RevisedLinesColor',
              ( ['in'], WdColorIndex, 'prop' )),
    COMMETHOD([dispid(65), 'propget'], HRESULT, 'DefaultFilePath',
              ( ['in'], WdDefaultFilePath, 'Path' ),
              ( ['out', 'retval'], POINTER(BSTR), 'prop' )),
    COMMETHOD([dispid(65), 'propput'], HRESULT, 'DefaultFilePath',
              ( ['in'], WdDefaultFilePath, 'Path' ),
              ( ['in'], BSTR, 'prop' )),
    COMMETHOD([dispid(66), 'propget'], HRESULT, 'Overtype',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'prop' )),
    COMMETHOD([dispid(66), 'propput'], HRESULT, 'Overtype',
              ( ['in'], VARIANT_BOOL, 'prop' )),
    COMMETHOD([dispid(67), 'propget'], HRESULT, 'ReplaceSelection',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'prop' )),
    COMMETHOD([dispid(67), 'propput'], HRESULT, 'ReplaceSelection',
              ( ['in'], VARIANT_BOOL, 'prop' )),
    COMMETHOD([dispid(68), 'propget'], HRESULT, 'AllowDragAndDrop',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'prop' )),
    COMMETHOD([dispid(68), 'propput'], HRESULT, 'AllowDragAndDrop',
              ( ['in'], VARIANT_BOOL, 'prop' )),
    COMMETHOD([dispid(69), 'propget'], HRESULT, 'AutoWordSelection',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'prop' )),
    COMMETHOD([dispid(69), 'propput'], HRESULT, 'AutoWordSelection',
              ( ['in'], VARIANT_BOOL, 'prop' )),
    COMMETHOD([dispid(70), 'propget'], HRESULT, 'INSKeyForPaste',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'prop' )),
    COMMETHOD([dispid(70), 'propput'], HRESULT, 'INSKeyForPaste',
              ( ['in'], VARIANT_BOOL, 'prop' )),
    COMMETHOD([dispid(71), 'propget'], HRESULT, 'SmartCutPaste',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'prop' )),
    COMMETHOD([dispid(71), 'propput'], HRESULT, 'SmartCutPaste',
              ( ['in'], VARIANT_BOOL, 'prop' )),
    COMMETHOD([dispid(72), 'propget'], HRESULT, 'TabIndentKey',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'prop' )),
    COMMETHOD([dispid(72), 'propput'], HRESULT, 'TabIndentKey',
              ( ['in'], VARIANT_BOOL, 'prop' )),
    COMMETHOD([dispid(73), 'propget'], HRESULT, 'PictureEditor',
              ( ['out', 'retval'], POINTER(BSTR), 'prop' )),
    COMMETHOD([dispid(73), 'propput'], HRESULT, 'PictureEditor',
              ( ['in'], BSTR, 'prop' )),
    COMMETHOD([dispid(74), 'propget'], HRESULT, 'AnimateScreenMovements',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'prop' )),
    COMMETHOD([dispid(74), 'propput'], HRESULT, 'AnimateScreenMovements',
              ( ['in'], VARIANT_BOOL, 'prop' )),
    COMMETHOD([dispid(75), 'hidden', 'propget'], HRESULT, 'VirusProtection',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'prop' )),
    COMMETHOD([dispid(75), 'hidden', 'propput'], HRESULT, 'VirusProtection',
              ( ['in'], VARIANT_BOOL, 'prop' )),
    COMMETHOD([dispid(76), 'propget'], HRESULT, 'RevisedPropertiesMark',
              ( ['out', 'retval'], POINTER(WdRevisedPropertiesMark), 'prop' )),
    COMMETHOD([dispid(76), 'propput'], HRESULT, 'RevisedPropertiesMark',
              ( ['in'], WdRevisedPropertiesMark, 'prop' )),
    COMMETHOD([dispid(77), 'propget'], HRESULT, 'RevisedPropertiesColor',
              ( ['out', 'retval'], POINTER(WdColorIndex), 'prop' )),
    COMMETHOD([dispid(77), 'propput'], HRESULT, 'RevisedPropertiesColor',
              ( ['in'], WdColorIndex, 'prop' )),
    COMMETHOD([dispid(79), 'propget'], HRESULT, 'SnapToGrid',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'prop' )),
    COMMETHOD([dispid(79), 'propput'], HRESULT, 'SnapToGrid',
              ( ['in'], VARIANT_BOOL, 'prop' )),
    COMMETHOD([dispid(80), 'propget'], HRESULT, 'SnapToShapes',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'prop' )),
    COMMETHOD([dispid(80), 'propput'], HRESULT, 'SnapToShapes',
              ( ['in'], VARIANT_BOOL, 'prop' )),
    COMMETHOD([dispid(81), 'propget'], HRESULT, 'GridDistanceHorizontal',
              ( ['out', 'retval'], POINTER(c_float), 'prop' )),
    COMMETHOD([dispid(81), 'propput'], HRESULT, 'GridDistanceHorizontal',
              ( ['in'], c_float, 'prop' )),
    COMMETHOD([dispid(82), 'propget'], HRESULT, 'GridDistanceVertical',
              ( ['out', 'retval'], POINTER(c_float), 'prop' )),
    COMMETHOD([dispid(82), 'propput'], HRESULT, 'GridDistanceVertical',
              ( ['in'], c_float, 'prop' )),
    COMMETHOD([dispid(83), 'propget'], HRESULT, 'GridOriginHorizontal',
              ( ['out', 'retval'], POINTER(c_float), 'prop' )),
    COMMETHOD([dispid(83), 'propput'], HRESULT, 'GridOriginHorizontal',
              ( ['in'], c_float, 'prop' )),
    COMMETHOD([dispid(84), 'propget'], HRESULT, 'GridOriginVertical',
              ( ['out', 'retval'], POINTER(c_float), 'prop' )),
    COMMETHOD([dispid(84), 'propput'], HRESULT, 'GridOriginVertical',
              ( ['in'], c_float, 'prop' )),
    COMMETHOD([dispid(86), 'propget'], HRESULT, 'InlineConversion',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'prop' )),
    COMMETHOD([dispid(86), 'propput'], HRESULT, 'InlineConversion',
              ( ['in'], VARIANT_BOOL, 'prop' )),
    COMMETHOD([dispid(87), 'propget'], HRESULT, 'IMEAutomaticControl',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'prop' )),
    COMMETHOD([dispid(87), 'propput'], HRESULT, 'IMEAutomaticControl',
              ( ['in'], VARIANT_BOOL, 'prop' )),
    COMMETHOD([dispid(250), 'propget'], HRESULT, 'AutoFormatApplyHeadings',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'prop' )),
    COMMETHOD([dispid(250), 'propput'], HRESULT, 'AutoFormatApplyHeadings',
              ( ['in'], VARIANT_BOOL, 'prop' )),
    COMMETHOD([dispid(251), 'propget'], HRESULT, 'AutoFormatApplyLists',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'prop' )),
    COMMETHOD([dispid(251), 'propput'], HRESULT, 'AutoFormatApplyLists',
              ( ['in'], VARIANT_BOOL, 'prop' )),
    COMMETHOD([dispid(252), 'propget'], HRESULT, 'AutoFormatApplyBulletedLists',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'prop' )),
    COMMETHOD([dispid(252), 'propput'], HRESULT, 'AutoFormatApplyBulletedLists',
              ( ['in'], VARIANT_BOOL, 'prop' )),
    COMMETHOD([dispid(253), 'propget'], HRESULT, 'AutoFormatApplyOtherParas',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'prop' )),
    COMMETHOD([dispid(253), 'propput'], HRESULT, 'AutoFormatApplyOtherParas',
              ( ['in'], VARIANT_BOOL, 'prop' )),
    COMMETHOD([dispid(254), 'propget'], HRESULT, 'AutoFormatReplaceQuotes',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'prop' )),
    COMMETHOD([dispid(254), 'propput'], HRESULT, 'AutoFormatReplaceQuotes',
              ( ['in'], VARIANT_BOOL, 'prop' )),
    COMMETHOD([dispid(255), 'propget'], HRESULT, 'AutoFormatReplaceSymbols',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'prop' )),
    COMMETHOD([dispid(255), 'propput'], HRESULT, 'AutoFormatReplaceSymbols',
              ( ['in'], VARIANT_BOOL, 'prop' )),
    COMMETHOD([dispid(256), 'propget'], HRESULT, 'AutoFormatReplaceOrdinals',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'prop' )),
    COMMETHOD([dispid(256), 'propput'], HRESULT, 'AutoFormatReplaceOrdinals',
              ( ['in'], VARIANT_BOOL, 'prop' )),
    COMMETHOD([dispid(257), 'propget'], HRESULT, 'AutoFormatReplaceFractions',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'prop' )),
    COMMETHOD([dispid(257), 'propput'], HRESULT, 'AutoFormatReplaceFractions',
              ( ['in'], VARIANT_BOOL, 'prop' )),
    COMMETHOD([dispid(258), 'propget'], HRESULT, 'AutoFormatReplacePlainTextEmphasis',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'prop' )),
    COMMETHOD([dispid(258), 'propput'], HRESULT, 'AutoFormatReplacePlainTextEmphasis',
              ( ['in'], VARIANT_BOOL, 'prop' )),
    COMMETHOD([dispid(259), 'propget'], HRESULT, 'AutoFormatPreserveStyles',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'prop' )),
    COMMETHOD([dispid(259), 'propput'], HRESULT, 'AutoFormatPreserveStyles',
              ( ['in'], VARIANT_BOOL, 'prop' )),
    COMMETHOD([dispid(260), 'propget'], HRESULT, 'AutoFormatAsYouTypeApplyHeadings',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'prop' )),
    COMMETHOD([dispid(260), 'propput'], HRESULT, 'AutoFormatAsYouTypeApplyHeadings',
              ( ['in'], VARIANT_BOOL, 'prop' )),
    COMMETHOD([dispid(261), 'propget'], HRESULT, 'AutoFormatAsYouTypeApplyBorders',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'prop' )),
    COMMETHOD([dispid(261), 'propput'], HRESULT, 'AutoFormatAsYouTypeApplyBorders',
              ( ['in'], VARIANT_BOOL, 'prop' )),
    COMMETHOD([dispid(262), 'propget'], HRESULT, 'AutoFormatAsYouTypeApplyBulletedLists',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'prop' )),
    COMMETHOD([dispid(262), 'propput'], HRESULT, 'AutoFormatAsYouTypeApplyBulletedLists',
              ( ['in'], VARIANT_BOOL, 'prop' )),
    COMMETHOD([dispid(263), 'propget'], HRESULT, 'AutoFormatAsYouTypeApplyNumberedLists',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'prop' )),
    COMMETHOD([dispid(263), 'propput'], HRESULT, 'AutoFormatAsYouTypeApplyNumberedLists',
              ( ['in'], VARIANT_BOOL, 'prop' )),
    COMMETHOD([dispid(264), 'propget'], HRESULT, 'AutoFormatAsYouTypeReplaceQuotes',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'prop' )),
    COMMETHOD([dispid(264), 'propput'], HRESULT, 'AutoFormatAsYouTypeReplaceQuotes',
              ( ['in'], VARIANT_BOOL, 'prop' )),
    COMMETHOD([dispid(265), 'propget'], HRESULT, 'AutoFormatAsYouTypeReplaceSymbols',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'prop' )),
    COMMETHOD([dispid(265), 'propput'], HRESULT, 'AutoFormatAsYouTypeReplaceSymbols',
              ( ['in'], VARIANT_BOOL, 'prop' )),
    COMMETHOD([dispid(266), 'propget'], HRESULT, 'AutoFormatAsYouTypeReplaceOrdinals',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'prop' )),
    COMMETHOD([dispid(266), 'propput'], HRESULT, 'AutoFormatAsYouTypeReplaceOrdinals',
              ( ['in'], VARIANT_BOOL, 'prop' )),
    COMMETHOD([dispid(267), 'propget'], HRESULT, 'AutoFormatAsYouTypeReplaceFractions',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'prop' )),
    COMMETHOD([dispid(267), 'propput'], HRESULT, 'AutoFormatAsYouTypeReplaceFractions',
              ( ['in'], VARIANT_BOOL, 'prop' )),
    COMMETHOD([dispid(268), 'propget'], HRESULT, 'AutoFormatAsYouTypeReplacePlainTextEmphasis',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'prop' )),
    COMMETHOD([dispid(268), 'propput'], HRESULT, 'AutoFormatAsYouTypeReplacePlainTextEmphasis',
              ( ['in'], VARIANT_BOOL, 'prop' )),
    COMMETHOD([dispid(269), 'propget'], HRESULT, 'AutoFormatAsYouTypeFormatListItemBeginning',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'prop' )),
    COMMETHOD([dispid(269), 'propput'], HRESULT, 'AutoFormatAsYouTypeFormatListItemBeginning',
              ( ['in'], VARIANT_BOOL, 'prop' )),
    COMMETHOD([dispid(270), 'propget'], HRESULT, 'AutoFormatAsYouTypeDefineStyles',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'prop' )),
    COMMETHOD([dispid(270), 'propput'], HRESULT, 'AutoFormatAsYouTypeDefineStyles',
              ( ['in'], VARIANT_BOOL, 'prop' )),
    COMMETHOD([dispid(271), 'propget'], HRESULT, 'AutoFormatPlainTextWordMail',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'prop' )),
    COMMETHOD([dispid(271), 'propput'], HRESULT, 'AutoFormatPlainTextWordMail',
              ( ['in'], VARIANT_BOOL, 'prop' )),
    COMMETHOD([dispid(272), 'propget'], HRESULT, 'AutoFormatAsYouTypeReplaceHyperlinks',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'prop' )),
    COMMETHOD([dispid(272), 'propput'], HRESULT, 'AutoFormatAsYouTypeReplaceHyperlinks',
              ( ['in'], VARIANT_BOOL, 'prop' )),
    COMMETHOD([dispid(273), 'propget'], HRESULT, 'AutoFormatReplaceHyperlinks',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'prop' )),
    COMMETHOD([dispid(273), 'propput'], HRESULT, 'AutoFormatReplaceHyperlinks',
              ( ['in'], VARIANT_BOOL, 'prop' )),
    COMMETHOD([dispid(274), 'propget'], HRESULT, 'DefaultHighlightColorIndex',
              ( ['out', 'retval'], POINTER(WdColorIndex), 'prop' )),
    COMMETHOD([dispid(274), 'propput'], HRESULT, 'DefaultHighlightColorIndex',
              ( ['in'], WdColorIndex, 'prop' )),
    COMMETHOD([dispid(275), 'propget'], HRESULT, 'DefaultBorderLineStyle',
              ( ['out', 'retval'], POINTER(WdLineStyle), 'prop' )),
    COMMETHOD([dispid(275), 'propput'], HRESULT, 'DefaultBorderLineStyle',
              ( ['in'], WdLineStyle, 'prop' )),
    COMMETHOD([dispid(276), 'propget'], HRESULT, 'CheckSpellingAsYouType',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'prop' )),
    COMMETHOD([dispid(276), 'propput'], HRESULT, 'CheckSpellingAsYouType',
              ( ['in'], VARIANT_BOOL, 'prop' )),
    COMMETHOD([dispid(277), 'propget'], HRESULT, 'CheckGrammarAsYouType',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'prop' )),
    COMMETHOD([dispid(277), 'propput'], HRESULT, 'CheckGrammarAsYouType',
              ( ['in'], VARIANT_BOOL, 'prop' )),
    COMMETHOD([dispid(278), 'propget'], HRESULT, 'IgnoreInternetAndFileAddresses',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'prop' )),
    COMMETHOD([dispid(278), 'propput'], HRESULT, 'IgnoreInternetAndFileAddresses',
              ( ['in'], VARIANT_BOOL, 'prop' )),
    COMMETHOD([dispid(279), 'propget'], HRESULT, 'ShowReadabilityStatistics',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'prop' )),
    COMMETHOD([dispid(279), 'propput'], HRESULT, 'ShowReadabilityStatistics',
              ( ['in'], VARIANT_BOOL, 'prop' )),
    COMMETHOD([dispid(280), 'propget'], HRESULT, 'IgnoreUppercase',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'prop' )),
    COMMETHOD([dispid(280), 'propput'], HRESULT, 'IgnoreUppercase',
              ( ['in'], VARIANT_BOOL, 'prop' )),
    COMMETHOD([dispid(281), 'propget'], HRESULT, 'IgnoreMixedDigits',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'prop' )),
    COMMETHOD([dispid(281), 'propput'], HRESULT, 'IgnoreMixedDigits',
              ( ['in'], VARIANT_BOOL, 'prop' )),
    COMMETHOD([dispid(282), 'propget'], HRESULT, 'SuggestFromMainDictionaryOnly',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'prop' )),
    COMMETHOD([dispid(282), 'propput'], HRESULT, 'SuggestFromMainDictionaryOnly',
              ( ['in'], VARIANT_BOOL, 'prop' )),
    COMMETHOD([dispid(283), 'propget'], HRESULT, 'SuggestSpellingCorrections',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'prop' )),
    COMMETHOD([dispid(283), 'propput'], HRESULT, 'SuggestSpellingCorrections',
              ( ['in'], VARIANT_BOOL, 'prop' )),
    COMMETHOD([dispid(284), 'propget'], HRESULT, 'DefaultBorderLineWidth',
              ( ['out', 'retval'], POINTER(WdLineWidth), 'prop' )),
    COMMETHOD([dispid(284), 'propput'], HRESULT, 'DefaultBorderLineWidth',
              ( ['in'], WdLineWidth, 'prop' )),
    COMMETHOD([dispid(285), 'propget'], HRESULT, 'CheckGrammarWithSpelling',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'prop' )),
    COMMETHOD([dispid(285), 'propput'], HRESULT, 'CheckGrammarWithSpelling',
              ( ['in'], VARIANT_BOOL, 'prop' )),
    COMMETHOD([dispid(286), 'propget'], HRESULT, 'DefaultOpenFormat',
              ( ['out', 'retval'], POINTER(WdOpenFormat), 'prop' )),
    COMMETHOD([dispid(286), 'propput'], HRESULT, 'DefaultOpenFormat',
              ( ['in'], WdOpenFormat, 'prop' )),
    COMMETHOD([dispid(287), 'propget'], HRESULT, 'PrintDraft',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'prop' )),
    COMMETHOD([dispid(287), 'propput'], HRESULT, 'PrintDraft',
              ( ['in'], VARIANT_BOOL, 'prop' )),
    COMMETHOD([dispid(288), 'propget'], HRESULT, 'PrintReverse',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'prop' )),
    COMMETHOD([dispid(288), 'propput'], HRESULT, 'PrintReverse',
              ( ['in'], VARIANT_BOOL, 'prop' )),
    COMMETHOD([dispid(289), 'propget'], HRESULT, 'MapPaperSize',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'prop' )),
    COMMETHOD([dispid(289), 'propput'], HRESULT, 'MapPaperSize',
              ( ['in'], VARIANT_BOOL, 'prop' )),
    COMMETHOD([dispid(290), 'propget'], HRESULT, 'AutoFormatAsYouTypeApplyTables',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'prop' )),
    COMMETHOD([dispid(290), 'propput'], HRESULT, 'AutoFormatAsYouTypeApplyTables',
              ( ['in'], VARIANT_BOOL, 'prop' )),
    COMMETHOD([dispid(291), 'propget'], HRESULT, 'AutoFormatApplyFirstIndents',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'prop' )),
    COMMETHOD([dispid(291), 'propput'], HRESULT, 'AutoFormatApplyFirstIndents',
              ( ['in'], VARIANT_BOOL, 'prop' )),
    COMMETHOD([dispid(294), 'propget'], HRESULT, 'AutoFormatMatchParentheses',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'prop' )),
    COMMETHOD([dispid(294), 'propput'], HRESULT, 'AutoFormatMatchParentheses',
              ( ['in'], VARIANT_BOOL, 'prop' )),
    COMMETHOD([dispid(295), 'propget'], HRESULT, 'AutoFormatReplaceFarEastDashes',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'prop' )),
    COMMETHOD([dispid(295), 'propput'], HRESULT, 'AutoFormatReplaceFarEastDashes',
              ( ['in'], VARIANT_BOOL, 'prop' )),
    COMMETHOD([dispid(296), 'propget'], HRESULT, 'AutoFormatDeleteAutoSpaces',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'prop' )),
    COMMETHOD([dispid(296), 'propput'], HRESULT, 'AutoFormatDeleteAutoSpaces',
              ( ['in'], VARIANT_BOOL, 'prop' )),
    COMMETHOD([dispid(297), 'propget'], HRESULT, 'AutoFormatAsYouTypeApplyFirstIndents',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'prop' )),
    COMMETHOD([dispid(297), 'propput'], HRESULT, 'AutoFormatAsYouTypeApplyFirstIndents',
              ( ['in'], VARIANT_BOOL, 'prop' )),
    COMMETHOD([dispid(298), 'propget'], HRESULT, 'AutoFormatAsYouTypeApplyDates',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'prop' )),
    COMMETHOD([dispid(298), 'propput'], HRESULT, 'AutoFormatAsYouTypeApplyDates',
              ( ['in'], VARIANT_BOOL, 'prop' )),
    COMMETHOD([dispid(299), 'propget'], HRESULT, 'AutoFormatAsYouTypeApplyClosings',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'prop' )),
    COMMETHOD([dispid(299), 'propput'], HRESULT, 'AutoFormatAsYouTypeApplyClosings',
              ( ['in'], VARIANT_BOOL, 'prop' )),
    COMMETHOD([dispid(300), 'propget'], HRESULT, 'AutoFormatAsYouTypeMatchParentheses',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'prop' )),
    COMMETHOD([dispid(300), 'propput'], HRESULT, 'AutoFormatAsYouTypeMatchParentheses',
              ( ['in'], VARIANT_BOOL, 'prop' )),
    COMMETHOD([dispid(301), 'propget'], HRESULT, 'AutoFormatAsYouTypeReplaceFarEastDashes',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'prop' )),
    COMMETHOD([dispid(301), 'propput'], HRESULT, 'AutoFormatAsYouTypeReplaceFarEastDashes',
              ( ['in'], VARIANT_BOOL, 'prop' )),
    COMMETHOD([dispid(302), 'propget'], HRESULT, 'AutoFormatAsYouTypeDeleteAutoSpaces',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'prop' )),
    COMMETHOD([dispid(302), 'propput'], HRESULT, 'AutoFormatAsYouTypeDeleteAutoSpaces',
              ( ['in'], VARIANT_BOOL, 'prop' )),
    COMMETHOD([dispid(303), 'propget'], HRESULT, 'AutoFormatAsYouTypeInsertClosings',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'prop' )),
    COMMETHOD([dispid(303), 'propput'], HRESULT, 'AutoFormatAsYouTypeInsertClosings',
              ( ['in'], VARIANT_BOOL, 'prop' )),
    COMMETHOD([dispid(304), 'propget'], HRESULT, 'AutoFormatAsYouTypeAutoLetterWizard',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'prop' )),
    COMMETHOD([dispid(304), 'propput'], HRESULT, 'AutoFormatAsYouTypeAutoLetterWizard',
              ( ['in'], VARIANT_BOOL, 'prop' )),
    COMMETHOD([dispid(305), 'propget'], HRESULT, 'AutoFormatAsYouTypeInsertOvers',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'prop' )),
    COMMETHOD([dispid(305), 'propput'], HRESULT, 'AutoFormatAsYouTypeInsertOvers',
              ( ['in'], VARIANT_BOOL, 'prop' )),
    COMMETHOD([dispid(306), 'propget'], HRESULT, 'DisplayGridLines',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'prop' )),
    COMMETHOD([dispid(306), 'propput'], HRESULT, 'DisplayGridLines',
              ( ['in'], VARIANT_BOOL, 'prop' )),
    COMMETHOD([dispid(309), 'propget'], HRESULT, 'MatchFuzzyCase',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'prop' )),
    COMMETHOD([dispid(309), 'propput'], HRESULT, 'MatchFuzzyCase',
              ( ['in'], VARIANT_BOOL, 'prop' )),
    COMMETHOD([dispid(310), 'propget'], HRESULT, 'MatchFuzzyByte',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'prop' )),
    COMMETHOD([dispid(310), 'propput'], HRESULT, 'MatchFuzzyByte',
              ( ['in'], VARIANT_BOOL, 'prop' )),
    COMMETHOD([dispid(311), 'propget'], HRESULT, 'MatchFuzzyHiragana',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'prop' )),
    COMMETHOD([dispid(311), 'propput'], HRESULT, 'MatchFuzzyHiragana',
              ( ['in'], VARIANT_BOOL, 'prop' )),
    COMMETHOD([dispid(312), 'propget'], HRESULT, 'MatchFuzzySmallKana',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'prop' )),
    COMMETHOD([dispid(312), 'propput'], HRESULT, 'MatchFuzzySmallKana',
              ( ['in'], VARIANT_BOOL, 'prop' )),
    COMMETHOD([dispid(313), 'propget'], HRESULT, 'MatchFuzzyDash',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'prop' )),
    COMMETHOD([dispid(313), 'propput'], HRESULT, 'MatchFuzzyDash',
              ( ['in'], VARIANT_BOOL, 'prop' )),
    COMMETHOD([dispid(314), 'propget'], HRESULT, 'MatchFuzzyIterationMark',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'prop' )),
    COMMETHOD([dispid(314), 'propput'], HRESULT, 'MatchFuzzyIterationMark',
              ( ['in'], VARIANT_BOOL, 'prop' )),
    COMMETHOD([dispid(315), 'propget'], HRESULT, 'MatchFuzzyKanji',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'prop' )),
    COMMETHOD([dispid(315), 'propput'], HRESULT, 'MatchFuzzyKanji',
              ( ['in'], VARIANT_BOOL, 'prop' )),
    COMMETHOD([dispid(316), 'propget'], HRESULT, 'MatchFuzzyOldKana',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'prop' )),
    COMMETHOD([dispid(316), 'propput'], HRESULT, 'MatchFuzzyOldKana',
              ( ['in'], VARIANT_BOOL, 'prop' )),
    COMMETHOD([dispid(317), 'propget'], HRESULT, 'MatchFuzzyProlongedSoundMark',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'prop' )),
    COMMETHOD([dispid(317), 'propput'], HRESULT, 'MatchFuzzyProlongedSoundMark',
              ( ['in'], VARIANT_BOOL, 'prop' )),
    COMMETHOD([dispid(318), 'propget'], HRESULT, 'MatchFuzzyDZ',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'prop' )),
    COMMETHOD([dispid(318), 'propput'], HRESULT, 'MatchFuzzyDZ',
              ( ['in'], VARIANT_BOOL, 'prop' )),
    COMMETHOD([dispid(319), 'propget'], HRESULT, 'MatchFuzzyBV',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'prop' )),
    COMMETHOD([dispid(319), 'propput'], HRESULT, 'MatchFuzzyBV',
              ( ['in'], VARIANT_BOOL, 'prop' )),
    COMMETHOD([dispid(320), 'propget'], HRESULT, 'MatchFuzzyTC',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'prop' )),
    COMMETHOD([dispid(320), 'propput'], HRESULT, 'MatchFuzzyTC',
              ( ['in'], VARIANT_BOOL, 'prop' )),
    COMMETHOD([dispid(321), 'propget'], HRESULT, 'MatchFuzzyHF',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'prop' )),
    COMMETHOD([dispid(321), 'propput'], HRESULT, 'MatchFuzzyHF',
              ( ['in'], VARIANT_BOOL, 'prop' )),
    COMMETHOD([dispid(322), 'propget'], HRESULT, 'MatchFuzzyZJ',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'prop' )),
    COMMETHOD([dispid(322), 'propput'], HRESULT, 'MatchFuzzyZJ',
              ( ['in'], VARIANT_BOOL, 'prop' )),
    COMMETHOD([dispid(323), 'propget'], HRESULT, 'MatchFuzzyAY',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'prop' )),
    COMMETHOD([dispid(323), 'propput'], HRESULT, 'MatchFuzzyAY',
              ( ['in'], VARIANT_BOOL, 'prop' )),
    COMMETHOD([dispid(324), 'propget'], HRESULT, 'MatchFuzzyKiKu',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'prop' )),
    COMMETHOD([dispid(324), 'propput'], HRESULT, 'MatchFuzzyKiKu',
              ( ['in'], VARIANT_BOOL, 'prop' )),
    COMMETHOD([dispid(325), 'propget'], HRESULT, 'MatchFuzzyPunctuation',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'prop' )),
    COMMETHOD([dispid(325), 'propput'], HRESULT, 'MatchFuzzyPunctuation',
              ( ['in'], VARIANT_BOOL, 'prop' )),
    COMMETHOD([dispid(326), 'propget'], HRESULT, 'MatchFuzzySpace',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'prop' )),
    COMMETHOD([dispid(326), 'propput'], HRESULT, 'MatchFuzzySpace',
              ( ['in'], VARIANT_BOOL, 'prop' )),
    COMMETHOD([dispid(327), 'propget'], HRESULT, 'ApplyFarEastFontsToAscii',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'prop' )),
    COMMETHOD([dispid(327), 'propput'], HRESULT, 'ApplyFarEastFontsToAscii',
              ( ['in'], VARIANT_BOOL, 'prop' )),
    COMMETHOD([dispid(328), 'propget'], HRESULT, 'ConvertHighAnsiToFarEast',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'prop' )),
    COMMETHOD([dispid(328), 'propput'], HRESULT, 'ConvertHighAnsiToFarEast',
              ( ['in'], VARIANT_BOOL, 'prop' )),
    COMMETHOD([dispid(330), 'propget'], HRESULT, 'PrintOddPagesInAscendingOrder',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'prop' )),
    COMMETHOD([dispid(330), 'propput'], HRESULT, 'PrintOddPagesInAscendingOrder',
              ( ['in'], VARIANT_BOOL, 'prop' )),
    COMMETHOD([dispid(331), 'propget'], HRESULT, 'PrintEvenPagesInAscendingOrder',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'prop' )),
    COMMETHOD([dispid(331), 'propput'], HRESULT, 'PrintEvenPagesInAscendingOrder',
              ( ['in'], VARIANT_BOOL, 'prop' )),
    COMMETHOD([dispid(337), 'propget'], HRESULT, 'DefaultBorderColorIndex',
              ( ['out', 'retval'], POINTER(WdColorIndex), 'prop' )),
    COMMETHOD([dispid(337), 'propput'], HRESULT, 'DefaultBorderColorIndex',
              ( ['in'], WdColorIndex, 'prop' )),
    COMMETHOD([dispid(338), 'propget'], HRESULT, 'EnableMisusedWordsDictionary',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'prop' )),
    COMMETHOD([dispid(338), 'propput'], HRESULT, 'EnableMisusedWordsDictionary',
              ( ['in'], VARIANT_BOOL, 'prop' )),
    COMMETHOD([dispid(339), 'propget'], HRESULT, 'AllowCombinedAuxiliaryForms',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'prop' )),
    COMMETHOD([dispid(339), 'propput'], HRESULT, 'AllowCombinedAuxiliaryForms',
              ( ['in'], VARIANT_BOOL, 'prop' )),
    COMMETHOD([dispid(340), 'propget'], HRESULT, 'HangulHanjaFastConversion',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'prop' )),
    COMMETHOD([dispid(340), 'propput'], HRESULT, 'HangulHanjaFastConversion',
              ( ['in'], VARIANT_BOOL, 'prop' )),
    COMMETHOD([dispid(341), 'propget'], HRESULT, 'CheckHangulEndings',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'prop' )),
    COMMETHOD([dispid(341), 'propput'], HRESULT, 'CheckHangulEndings',
              ( ['in'], VARIANT_BOOL, 'prop' )),
    COMMETHOD([dispid(342), 'propget'], HRESULT, 'EnableHangulHanjaRecentOrdering',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'prop' )),
    COMMETHOD([dispid(342), 'propput'], HRESULT, 'EnableHangulHanjaRecentOrdering',
              ( ['in'], VARIANT_BOOL, 'prop' )),
    COMMETHOD([dispid(343), 'propget'], HRESULT, 'MultipleWordConversionsMode',
              ( ['out', 'retval'], POINTER(WdMultipleWordConversionsMode), 'prop' )),
    COMMETHOD([dispid(343), 'propput'], HRESULT, 'MultipleWordConversionsMode',
              ( ['in'], WdMultipleWordConversionsMode, 'prop' )),
    COMMETHOD([dispid(333), 'hidden'], HRESULT, 'SetWPHelpOptions',
              ( ['in', 'optional'], POINTER(VARIANT), 'CommandKeyHelp' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'DocNavigationKeys' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'MouseSimulation' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'DemoGuidance' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'DemoSpeed' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'HelpType' )),
    COMMETHOD([dispid(344), 'propget'], HRESULT, 'DefaultBorderColor',
              ( ['out', 'retval'], POINTER(WdColor), 'prop' )),
    COMMETHOD([dispid(344), 'propput'], HRESULT, 'DefaultBorderColor',
              ( ['in'], WdColor, 'prop' )),
    COMMETHOD([dispid(345), 'propget'], HRESULT, 'AllowPixelUnits',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'prop' )),
    COMMETHOD([dispid(345), 'propput'], HRESULT, 'AllowPixelUnits',
              ( ['in'], VARIANT_BOOL, 'prop' )),
    COMMETHOD([dispid(346), 'propget'], HRESULT, 'UseCharacterUnit',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'prop' )),
    COMMETHOD([dispid(346), 'propput'], HRESULT, 'UseCharacterUnit',
              ( ['in'], VARIANT_BOOL, 'prop' )),
    COMMETHOD([dispid(347), 'propget'], HRESULT, 'AllowCompoundNounProcessing',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'prop' )),
    COMMETHOD([dispid(347), 'propput'], HRESULT, 'AllowCompoundNounProcessing',
              ( ['in'], VARIANT_BOOL, 'prop' )),
    COMMETHOD([dispid(399), 'propget'], HRESULT, 'AutoKeyboardSwitching',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'prop' )),
    COMMETHOD([dispid(399), 'propput'], HRESULT, 'AutoKeyboardSwitching',
              ( ['in'], VARIANT_BOOL, 'prop' )),
    COMMETHOD([dispid(400), 'propget'], HRESULT, 'DocumentViewDirection',
              ( ['out', 'retval'], POINTER(WdDocumentViewDirection), 'prop' )),
    COMMETHOD([dispid(400), 'propput'], HRESULT, 'DocumentViewDirection',
              ( ['in'], WdDocumentViewDirection, 'prop' )),
    COMMETHOD([dispid(401), 'propget'], HRESULT, 'ArabicNumeral',
              ( ['out', 'retval'], POINTER(WdArabicNumeral), 'prop' )),
    COMMETHOD([dispid(401), 'propput'], HRESULT, 'ArabicNumeral',
              ( ['in'], WdArabicNumeral, 'prop' )),
    COMMETHOD([dispid(402), 'propget'], HRESULT, 'MonthNames',
              ( ['out', 'retval'], POINTER(WdMonthNames), 'prop' )),
    COMMETHOD([dispid(402), 'propput'], HRESULT, 'MonthNames',
              ( ['in'], WdMonthNames, 'prop' )),
    COMMETHOD([dispid(403), 'propget'], HRESULT, 'CursorMovement',
              ( ['out', 'retval'], POINTER(WdCursorMovement), 'prop' )),
    COMMETHOD([dispid(403), 'propput'], HRESULT, 'CursorMovement',
              ( ['in'], WdCursorMovement, 'prop' )),
    COMMETHOD([dispid(404), 'propget'], HRESULT, 'VisualSelection',
              ( ['out', 'retval'], POINTER(WdVisualSelection), 'prop' )),
    COMMETHOD([dispid(404), 'propput'], HRESULT, 'VisualSelection',
              ( ['in'], WdVisualSelection, 'prop' )),
    COMMETHOD([dispid(405), 'propget'], HRESULT, 'ShowDiacritics',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'prop' )),
    COMMETHOD([dispid(405), 'propput'], HRESULT, 'ShowDiacritics',
              ( ['in'], VARIANT_BOOL, 'prop' )),
    COMMETHOD([dispid(406), 'propget'], HRESULT, 'ShowControlCharacters',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'prop' )),
    COMMETHOD([dispid(406), 'propput'], HRESULT, 'ShowControlCharacters',
              ( ['in'], VARIANT_BOOL, 'prop' )),
    COMMETHOD([dispid(407), 'propget'], HRESULT, 'AddControlCharacters',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'prop' )),
    COMMETHOD([dispid(407), 'propput'], HRESULT, 'AddControlCharacters',
              ( ['in'], VARIANT_BOOL, 'prop' )),
    COMMETHOD([dispid(408), 'propget'], HRESULT, 'AddBiDirectionalMarksWhenSavingTextFile',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'prop' )),
    COMMETHOD([dispid(408), 'propput'], HRESULT, 'AddBiDirectionalMarksWhenSavingTextFile',
              ( ['in'], VARIANT_BOOL, 'prop' )),
    COMMETHOD([dispid(409), 'propget'], HRESULT, 'StrictInitialAlefHamza',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'prop' )),
    COMMETHOD([dispid(409), 'propput'], HRESULT, 'StrictInitialAlefHamza',
              ( ['in'], VARIANT_BOOL, 'prop' )),
    COMMETHOD([dispid(410), 'propget'], HRESULT, 'StrictFinalYaa',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'prop' )),
    COMMETHOD([dispid(410), 'propput'], HRESULT, 'StrictFinalYaa',
              ( ['in'], VARIANT_BOOL, 'prop' )),
    COMMETHOD([dispid(411), 'propget'], HRESULT, 'HebrewMode',
              ( ['out', 'retval'], POINTER(WdHebSpellStart), 'prop' )),
    COMMETHOD([dispid(411), 'propput'], HRESULT, 'HebrewMode',
              ( ['in'], WdHebSpellStart, 'prop' )),
    COMMETHOD([dispid(412), 'propget'], HRESULT, 'ArabicMode',
              ( ['out', 'retval'], POINTER(WdAraSpeller), 'prop' )),
    COMMETHOD([dispid(412), 'propput'], HRESULT, 'ArabicMode',
              ( ['in'], WdAraSpeller, 'prop' )),
    COMMETHOD([dispid(413), 'propget'], HRESULT, 'AllowClickAndTypeMouse',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'prop' )),
    COMMETHOD([dispid(413), 'propput'], HRESULT, 'AllowClickAndTypeMouse',
              ( ['in'], VARIANT_BOOL, 'prop' )),
    COMMETHOD([dispid(415), 'propget'], HRESULT, 'UseGermanSpellingReform',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'prop' )),
    COMMETHOD([dispid(415), 'propput'], HRESULT, 'UseGermanSpellingReform',
              ( ['in'], VARIANT_BOOL, 'prop' )),
    COMMETHOD([dispid(418), 'propget'], HRESULT, 'InterpretHighAnsi',
              ( ['out', 'retval'], POINTER(WdHighAnsiText), 'prop' )),
    COMMETHOD([dispid(418), 'propput'], HRESULT, 'InterpretHighAnsi',
              ( ['in'], WdHighAnsiText, 'prop' )),
    COMMETHOD([dispid(419), 'propget'], HRESULT, 'AddHebDoubleQuote',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'prop' )),
    COMMETHOD([dispid(419), 'propput'], HRESULT, 'AddHebDoubleQuote',
              ( ['in'], VARIANT_BOOL, 'prop' )),
    COMMETHOD([dispid(420), 'propget'], HRESULT, 'UseDiffDiacColor',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'prop' )),
    COMMETHOD([dispid(420), 'propput'], HRESULT, 'UseDiffDiacColor',
              ( ['in'], VARIANT_BOOL, 'prop' )),
    COMMETHOD([dispid(421), 'propget'], HRESULT, 'DiacriticColorVal',
              ( ['out', 'retval'], POINTER(WdColor), 'prop' )),
    COMMETHOD([dispid(421), 'propput'], HRESULT, 'DiacriticColorVal',
              ( ['in'], WdColor, 'prop' )),
    COMMETHOD([dispid(423), 'propget'], HRESULT, 'OptimizeForWord97byDefault',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'prop' )),
    COMMETHOD([dispid(423), 'propput'], HRESULT, 'OptimizeForWord97byDefault',
              ( ['in'], VARIANT_BOOL, 'prop' )),
    COMMETHOD([dispid(424), 'propget'], HRESULT, 'LocalNetworkFile',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'prop' )),
    COMMETHOD([dispid(424), 'propput'], HRESULT, 'LocalNetworkFile',
              ( ['in'], VARIANT_BOOL, 'prop' )),
    COMMETHOD([dispid(425), 'propget'], HRESULT, 'TypeNReplace',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'prop' )),
    COMMETHOD([dispid(425), 'propput'], HRESULT, 'TypeNReplace',
              ( ['in'], VARIANT_BOOL, 'prop' )),
    COMMETHOD([dispid(426), 'propget'], HRESULT, 'SequenceCheck',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'prop' )),
    COMMETHOD([dispid(426), 'propput'], HRESULT, 'SequenceCheck',
              ( ['in'], VARIANT_BOOL, 'prop' )),
    COMMETHOD([dispid(427), 'hidden', 'propget'], HRESULT, 'BackgroundOpen',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'prop' )),
    COMMETHOD([dispid(427), 'hidden', 'propput'], HRESULT, 'BackgroundOpen',
              ( ['in'], VARIANT_BOOL, 'prop' )),
    COMMETHOD([dispid(428), 'propget'], HRESULT, 'DisableFeaturesbyDefault',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'prop' )),
    COMMETHOD([dispid(428), 'propput'], HRESULT, 'DisableFeaturesbyDefault',
              ( ['in'], VARIANT_BOOL, 'prop' )),
    COMMETHOD([dispid(429), 'propget'], HRESULT, 'PasteAdjustWordSpacing',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'prop' )),
    COMMETHOD([dispid(429), 'propput'], HRESULT, 'PasteAdjustWordSpacing',
              ( ['in'], VARIANT_BOOL, 'prop' )),
    COMMETHOD([dispid(430), 'propget'], HRESULT, 'PasteAdjustParagraphSpacing',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'prop' )),
    COMMETHOD([dispid(430), 'propput'], HRESULT, 'PasteAdjustParagraphSpacing',
              ( ['in'], VARIANT_BOOL, 'prop' )),
    COMMETHOD([dispid(431), 'propget'], HRESULT, 'PasteAdjustTableFormatting',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'prop' )),
    COMMETHOD([dispid(431), 'propput'], HRESULT, 'PasteAdjustTableFormatting',
              ( ['in'], VARIANT_BOOL, 'prop' )),
    COMMETHOD([dispid(432), 'propget'], HRESULT, 'PasteSmartStyleBehavior',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'prop' )),
    COMMETHOD([dispid(432), 'propput'], HRESULT, 'PasteSmartStyleBehavior',
              ( ['in'], VARIANT_BOOL, 'prop' )),
    COMMETHOD([dispid(433), 'propget'], HRESULT, 'PasteMergeFromPPT',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'prop' )),
    COMMETHOD([dispid(433), 'propput'], HRESULT, 'PasteMergeFromPPT',
              ( ['in'], VARIANT_BOOL, 'prop' )),
    COMMETHOD([dispid(434), 'propget'], HRESULT, 'PasteMergeFromXL',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'prop' )),
    COMMETHOD([dispid(434), 'propput'], HRESULT, 'PasteMergeFromXL',
              ( ['in'], VARIANT_BOOL, 'prop' )),
    COMMETHOD([dispid(435), 'propget'], HRESULT, 'CtrlClickHyperlinkToOpen',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'prop' )),
    COMMETHOD([dispid(435), 'propput'], HRESULT, 'CtrlClickHyperlinkToOpen',
              ( ['in'], VARIANT_BOOL, 'prop' )),
    COMMETHOD([dispid(436), 'propget'], HRESULT, 'PictureWrapType',
              ( ['out', 'retval'], POINTER(WdWrapTypeMerged), 'prop' )),
    COMMETHOD([dispid(436), 'propput'], HRESULT, 'PictureWrapType',
              ( ['in'], WdWrapTypeMerged, 'prop' )),
    COMMETHOD([dispid(437), 'propget'], HRESULT, 'DisableFeaturesIntroducedAfterbyDefault',
              ( ['out', 'retval'], POINTER(WdDisableFeaturesIntroducedAfter), 'prop' )),
    COMMETHOD([dispid(437), 'propput'], HRESULT, 'DisableFeaturesIntroducedAfterbyDefault',
              ( ['in'], WdDisableFeaturesIntroducedAfter, 'prop' )),
    COMMETHOD([dispid(438), 'propget'], HRESULT, 'PasteSmartCutPaste',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'prop' )),
    COMMETHOD([dispid(438), 'propput'], HRESULT, 'PasteSmartCutPaste',
              ( ['in'], VARIANT_BOOL, 'prop' )),
    COMMETHOD([dispid(439), 'propget'], HRESULT, 'DisplayPasteOptions',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'prop' )),
    COMMETHOD([dispid(439), 'propput'], HRESULT, 'DisplayPasteOptions',
              ( ['in'], VARIANT_BOOL, 'prop' )),
    COMMETHOD([dispid(441), 'propget'], HRESULT, 'PromptUpdateStyle',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'prop' )),
    COMMETHOD([dispid(441), 'propput'], HRESULT, 'PromptUpdateStyle',
              ( ['in'], VARIANT_BOOL, 'prop' )),
    COMMETHOD([dispid(442), 'propget'], HRESULT, 'DefaultEPostageApp',
              ( ['out', 'retval'], POINTER(BSTR), 'prop' )),
    COMMETHOD([dispid(442), 'propput'], HRESULT, 'DefaultEPostageApp',
              ( ['in'], BSTR, 'prop' )),
    COMMETHOD([dispid(443), 'propget'], HRESULT, 'DefaultTextEncoding',
              ( ['out', 'retval'], POINTER(comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoEncoding), 'prop' )),
    COMMETHOD([dispid(443), 'propput'], HRESULT, 'DefaultTextEncoding',
              ( ['in'], comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoEncoding, 'prop' )),
    COMMETHOD([dispid(444), 'hidden', 'propget'], HRESULT, 'LabelSmartTags',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'prop' )),
    COMMETHOD([dispid(444), 'hidden', 'propput'], HRESULT, 'LabelSmartTags',
              ( ['in'], VARIANT_BOOL, 'prop' )),
    COMMETHOD([dispid(445), 'hidden', 'propget'], HRESULT, 'DisplaySmartTagButtons',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'prop' )),
    COMMETHOD([dispid(445), 'hidden', 'propput'], HRESULT, 'DisplaySmartTagButtons',
              ( ['in'], VARIANT_BOOL, 'prop' )),
    COMMETHOD([dispid(446), 'propget'], HRESULT, 'WarnBeforeSavingPrintingSendingMarkup',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'prop' )),
    COMMETHOD([dispid(446), 'propput'], HRESULT, 'WarnBeforeSavingPrintingSendingMarkup',
              ( ['in'], VARIANT_BOOL, 'prop' )),
    COMMETHOD([dispid(447), 'propget'], HRESULT, 'StoreRSIDOnSave',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'prop' )),
    COMMETHOD([dispid(447), 'propput'], HRESULT, 'StoreRSIDOnSave',
              ( ['in'], VARIANT_BOOL, 'prop' )),
    COMMETHOD([dispid(448), 'propget'], HRESULT, 'ShowFormatError',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'prop' )),
    COMMETHOD([dispid(448), 'propput'], HRESULT, 'ShowFormatError',
              ( ['in'], VARIANT_BOOL, 'prop' )),
    COMMETHOD([dispid(449), 'propget'], HRESULT, 'FormatScanning',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'prop' )),
    COMMETHOD([dispid(449), 'propput'], HRESULT, 'FormatScanning',
              ( ['in'], VARIANT_BOOL, 'prop' )),
    COMMETHOD([dispid(450), 'propget'], HRESULT, 'PasteMergeLists',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'prop' )),
    COMMETHOD([dispid(450), 'propput'], HRESULT, 'PasteMergeLists',
              ( ['in'], VARIANT_BOOL, 'prop' )),
    COMMETHOD([dispid(451), 'propget'], HRESULT, 'AutoCreateNewDrawings',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'prop' )),
    COMMETHOD([dispid(451), 'propput'], HRESULT, 'AutoCreateNewDrawings',
              ( ['in'], VARIANT_BOOL, 'prop' )),
    COMMETHOD([dispid(452), 'propget'], HRESULT, 'SmartParaSelection',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'prop' )),
    COMMETHOD([dispid(452), 'propput'], HRESULT, 'SmartParaSelection',
              ( ['in'], VARIANT_BOOL, 'prop' )),
    COMMETHOD([dispid(453), 'propget'], HRESULT, 'RevisionsBalloonPrintOrientation',
              ( ['out', 'retval'], POINTER(WdRevisionsBalloonPrintOrientation), 'prop' )),
    COMMETHOD([dispid(453), 'propput'], HRESULT, 'RevisionsBalloonPrintOrientation',
              ( ['in'], WdRevisionsBalloonPrintOrientation, 'prop' )),
    COMMETHOD([dispid(454), 'propget'], HRESULT, 'CommentsColor',
              ( ['out', 'retval'], POINTER(WdColorIndex), 'prop' )),
    COMMETHOD([dispid(454), 'propput'], HRESULT, 'CommentsColor',
              ( ['in'], WdColorIndex, 'prop' )),
    COMMETHOD([dispid(455), 'propget'], HRESULT, 'PrintXMLTag',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'prop' )),
    COMMETHOD([dispid(455), 'propput'], HRESULT, 'PrintXMLTag',
              ( ['in'], VARIANT_BOOL, 'prop' )),
    COMMETHOD([dispid(456), 'propget'], HRESULT, 'PrintBackgrounds',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'prop' )),
    COMMETHOD([dispid(456), 'propput'], HRESULT, 'PrintBackgrounds',
              ( ['in'], VARIANT_BOOL, 'prop' )),
    COMMETHOD([dispid(457), 'propget'], HRESULT, 'AllowReadingMode',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'prop' )),
    COMMETHOD([dispid(457), 'propput'], HRESULT, 'AllowReadingMode',
              ( ['in'], VARIANT_BOOL, 'prop' )),
    COMMETHOD([dispid(458), 'propget'], HRESULT, 'ShowMarkupOpenSave',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'prop' )),
    COMMETHOD([dispid(458), 'propput'], HRESULT, 'ShowMarkupOpenSave',
              ( ['in'], VARIANT_BOOL, 'prop' )),
    COMMETHOD([dispid(459), 'propget'], HRESULT, 'SmartCursoring',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'prop' )),
    COMMETHOD([dispid(459), 'propput'], HRESULT, 'SmartCursoring',
              ( ['in'], VARIANT_BOOL, 'prop' )),
    COMMETHOD([dispid(460), 'propget'], HRESULT, 'MoveToTextMark',
              ( ['out', 'retval'], POINTER(WdMoveToTextMark), 'prop' )),
    COMMETHOD([dispid(460), 'propput'], HRESULT, 'MoveToTextMark',
              ( ['in'], WdMoveToTextMark, 'prop' )),
    COMMETHOD([dispid(461), 'propget'], HRESULT, 'MoveFromTextMark',
              ( ['out', 'retval'], POINTER(WdMoveFromTextMark), 'prop' )),
    COMMETHOD([dispid(461), 'propput'], HRESULT, 'MoveFromTextMark',
              ( ['in'], WdMoveFromTextMark, 'prop' )),
    COMMETHOD([dispid(462), 'propget'], HRESULT, 'BibliographyStyle',
              ( ['out', 'retval'], POINTER(BSTR), 'prop' )),
    COMMETHOD([dispid(462), 'propput'], HRESULT, 'BibliographyStyle',
              ( ['in'], BSTR, 'prop' )),
    COMMETHOD([dispid(463), 'propget'], HRESULT, 'BibliographySort',
              ( ['out', 'retval'], POINTER(BSTR), 'prop' )),
    COMMETHOD([dispid(463), 'propput'], HRESULT, 'BibliographySort',
              ( ['in'], BSTR, 'prop' )),
    COMMETHOD([dispid(464), 'propget'], HRESULT, 'InsertedCellColor',
              ( ['out', 'retval'], POINTER(WdCellColor), 'prop' )),
    COMMETHOD([dispid(464), 'propput'], HRESULT, 'InsertedCellColor',
              ( ['in'], WdCellColor, 'prop' )),
    COMMETHOD([dispid(465), 'propget'], HRESULT, 'DeletedCellColor',
              ( ['out', 'retval'], POINTER(WdCellColor), 'prop' )),
    COMMETHOD([dispid(465), 'propput'], HRESULT, 'DeletedCellColor',
              ( ['in'], WdCellColor, 'prop' )),
    COMMETHOD([dispid(466), 'propget'], HRESULT, 'MergedCellColor',
              ( ['out', 'retval'], POINTER(WdCellColor), 'prop' )),
    COMMETHOD([dispid(466), 'propput'], HRESULT, 'MergedCellColor',
              ( ['in'], WdCellColor, 'prop' )),
    COMMETHOD([dispid(467), 'propget'], HRESULT, 'SplitCellColor',
              ( ['out', 'retval'], POINTER(WdCellColor), 'prop' )),
    COMMETHOD([dispid(467), 'propput'], HRESULT, 'SplitCellColor',
              ( ['in'], WdCellColor, 'prop' )),
    COMMETHOD([dispid(468), 'propget'], HRESULT, 'ShowSelectionFloaties',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'prop' )),
    COMMETHOD([dispid(468), 'propput'], HRESULT, 'ShowSelectionFloaties',
              ( ['in'], VARIANT_BOOL, 'prop' )),
    COMMETHOD([dispid(469), 'propget'], HRESULT, 'ShowMenuFloaties',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'prop' )),
    COMMETHOD([dispid(469), 'propput'], HRESULT, 'ShowMenuFloaties',
              ( ['in'], VARIANT_BOOL, 'prop' )),
    COMMETHOD([dispid(470), 'propget'], HRESULT, 'ShowDevTools',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'prop' )),
    COMMETHOD([dispid(470), 'propput'], HRESULT, 'ShowDevTools',
              ( ['in'], VARIANT_BOOL, 'prop' )),
    COMMETHOD([dispid(472), 'propget'], HRESULT, 'EnableLivePreview',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'prop' )),
    COMMETHOD([dispid(472), 'propput'], HRESULT, 'EnableLivePreview',
              ( ['in'], VARIANT_BOOL, 'prop' )),
    COMMETHOD([dispid(474), 'propget'], HRESULT, 'OMathAutoBuildUp',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'prop' )),
    COMMETHOD([dispid(474), 'propput'], HRESULT, 'OMathAutoBuildUp',
              ( ['in'], VARIANT_BOOL, 'prop' )),
    COMMETHOD([dispid(476), 'hidden', 'propget'], HRESULT, 'AlwaysUseClearType',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'prop' )),
    COMMETHOD([dispid(476), 'hidden', 'propput'], HRESULT, 'AlwaysUseClearType',
              ( ['in'], VARIANT_BOOL, 'prop' )),
    COMMETHOD([dispid(477), 'propget'], HRESULT, 'PasteFormatWithinDocument',
              ( ['out', 'retval'], POINTER(WdPasteOptions), 'prop' )),
    COMMETHOD([dispid(477), 'propput'], HRESULT, 'PasteFormatWithinDocument',
              ( ['in'], WdPasteOptions, 'prop' )),
    COMMETHOD([dispid(478), 'propget'], HRESULT, 'PasteFormatBetweenDocuments',
              ( ['out', 'retval'], POINTER(WdPasteOptions), 'prop' )),
    COMMETHOD([dispid(478), 'propput'], HRESULT, 'PasteFormatBetweenDocuments',
              ( ['in'], WdPasteOptions, 'prop' )),
    COMMETHOD([dispid(479), 'propget'], HRESULT, 'PasteFormatBetweenStyledDocuments',
              ( ['out', 'retval'], POINTER(WdPasteOptions), 'prop' )),
    COMMETHOD([dispid(479), 'propput'], HRESULT, 'PasteFormatBetweenStyledDocuments',
              ( ['in'], WdPasteOptions, 'prop' )),
    COMMETHOD([dispid(480), 'propget'], HRESULT, 'PasteFormatFromExternalSource',
              ( ['out', 'retval'], POINTER(WdPasteOptions), 'prop' )),
    COMMETHOD([dispid(480), 'propput'], HRESULT, 'PasteFormatFromExternalSource',
              ( ['in'], WdPasteOptions, 'prop' )),
    COMMETHOD([dispid(481), 'propget'], HRESULT, 'PasteOptionKeepBulletsAndNumbers',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'prop' )),
    COMMETHOD([dispid(481), 'propput'], HRESULT, 'PasteOptionKeepBulletsAndNumbers',
              ( ['in'], VARIANT_BOOL, 'prop' )),
    COMMETHOD([dispid(482), 'propget'], HRESULT, 'INSKeyForOvertype',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'prop' )),
    COMMETHOD([dispid(482), 'propput'], HRESULT, 'INSKeyForOvertype',
              ( ['in'], VARIANT_BOOL, 'prop' )),
    COMMETHOD([dispid(483), 'propget'], HRESULT, 'RepeatWord',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'prop' )),
    COMMETHOD([dispid(483), 'propput'], HRESULT, 'RepeatWord',
              ( ['in'], VARIANT_BOOL, 'prop' )),
    COMMETHOD([dispid(484), 'propget'], HRESULT, 'FrenchReform',
              ( ['out', 'retval'], POINTER(WdFrenchSpeller), 'prop' )),
    COMMETHOD([dispid(484), 'propput'], HRESULT, 'FrenchReform',
              ( ['in'], WdFrenchSpeller, 'prop' )),
    COMMETHOD([dispid(485), 'propget'], HRESULT, 'ContextualSpeller',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'prop' )),
    COMMETHOD([dispid(485), 'propput'], HRESULT, 'ContextualSpeller',
              ( ['in'], VARIANT_BOOL, 'prop' )),
    COMMETHOD([dispid(486), 'propget'], HRESULT, 'MoveToTextColor',
              ( ['out', 'retval'], POINTER(WdColorIndex), 'prop' )),
    COMMETHOD([dispid(486), 'propput'], HRESULT, 'MoveToTextColor',
              ( ['in'], WdColorIndex, 'prop' )),
    COMMETHOD([dispid(487), 'propget'], HRESULT, 'MoveFromTextColor',
              ( ['out', 'retval'], POINTER(WdColorIndex), 'prop' )),
    COMMETHOD([dispid(487), 'propput'], HRESULT, 'MoveFromTextColor',
              ( ['in'], WdColorIndex, 'prop' )),
    COMMETHOD([dispid(488), 'propget'], HRESULT, 'OMathCopyLF',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'prop' )),
    COMMETHOD([dispid(488), 'propput'], HRESULT, 'OMathCopyLF',
              ( ['in'], VARIANT_BOOL, 'prop' )),
    COMMETHOD([dispid(489), 'propget'], HRESULT, 'UseNormalStyleForList',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'prop' )),
    COMMETHOD([dispid(489), 'propput'], HRESULT, 'UseNormalStyleForList',
              ( ['in'], VARIANT_BOOL, 'prop' )),
    COMMETHOD([dispid(490), 'propget'], HRESULT, 'AllowOpenInDraftView',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'prop' )),
    COMMETHOD([dispid(490), 'propput'], HRESULT, 'AllowOpenInDraftView',
              ( ['in'], VARIANT_BOOL, 'prop' )),
    COMMETHOD([dispid(492), 'propget'], HRESULT, 'EnableLegacyIMEMode',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'prop' )),
    COMMETHOD([dispid(492), 'propput'], HRESULT, 'EnableLegacyIMEMode',
              ( ['in'], VARIANT_BOOL, 'prop' )),
    COMMETHOD([dispid(493), 'propget'], HRESULT, 'DoNotPromptForConvert',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'prop' )),
    COMMETHOD([dispid(493), 'propput'], HRESULT, 'DoNotPromptForConvert',
              ( ['in'], VARIANT_BOOL, 'prop' )),
    COMMETHOD([dispid(494), 'propget'], HRESULT, 'PrecisePositioning',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'prop' )),
    COMMETHOD([dispid(494), 'propput'], HRESULT, 'PrecisePositioning',
              ( ['in'], VARIANT_BOOL, 'prop' )),
    COMMETHOD([dispid(495), 'propget'], HRESULT, 'UpdateStyleListBehavior',
              ( ['out', 'retval'], POINTER(WdUpdateStyleListBehavior), 'prop' )),
    COMMETHOD([dispid(495), 'propput'], HRESULT, 'UpdateStyleListBehavior',
              ( ['in'], WdUpdateStyleListBehavior, 'prop' )),
    COMMETHOD([dispid(496), 'propget'], HRESULT, 'StrictTaaMarboota',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'prop' )),
    COMMETHOD([dispid(496), 'propput'], HRESULT, 'StrictTaaMarboota',
              ( ['in'], VARIANT_BOOL, 'prop' )),
    COMMETHOD([dispid(497), 'propget'], HRESULT, 'StrictRussianE',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'prop' )),
    COMMETHOD([dispid(497), 'propput'], HRESULT, 'StrictRussianE',
              ( ['in'], VARIANT_BOOL, 'prop' )),
    COMMETHOD([dispid(498), 'propget'], HRESULT, 'SpanishMode',
              ( ['out', 'retval'], POINTER(WdSpanishSpeller), 'prop' )),
    COMMETHOD([dispid(498), 'propput'], HRESULT, 'SpanishMode',
              ( ['in'], WdSpanishSpeller, 'prop' )),
    COMMETHOD([dispid(501), 'propget'], HRESULT, 'PortugalReform',
              ( ['out', 'retval'], POINTER(WdPortugueseReform), 'prop' )),
    COMMETHOD([dispid(501), 'propput'], HRESULT, 'PortugalReform',
              ( ['in'], WdPortugueseReform, 'prop' )),
    COMMETHOD([dispid(502), 'propget'], HRESULT, 'BrazilReform',
              ( ['out', 'retval'], POINTER(WdPortugueseReform), 'prop' )),
    COMMETHOD([dispid(502), 'propput'], HRESULT, 'BrazilReform',
              ( ['in'], WdPortugueseReform, 'prop' )),
    COMMETHOD([dispid(503), 'propget'], HRESULT, 'UpdateFieldsWithTrackedChangesAtPrint',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'prop' )),
    COMMETHOD([dispid(503), 'propput'], HRESULT, 'UpdateFieldsWithTrackedChangesAtPrint',
              ( ['in'], VARIANT_BOOL, 'prop' )),
    COMMETHOD([dispid(504), 'propget'], HRESULT, 'DisplayAlignmentGuides',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'prop' )),
    COMMETHOD([dispid(504), 'propput'], HRESULT, 'DisplayAlignmentGuides',
              ( ['in'], VARIANT_BOOL, 'prop' )),
    COMMETHOD([dispid(505), 'propget'], HRESULT, 'PageAlignmentGuides',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'prop' )),
    COMMETHOD([dispid(505), 'propput'], HRESULT, 'PageAlignmentGuides',
              ( ['in'], VARIANT_BOOL, 'prop' )),
    COMMETHOD([dispid(506), 'propget'], HRESULT, 'MarginAlignmentGuides',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'prop' )),
    COMMETHOD([dispid(506), 'propput'], HRESULT, 'MarginAlignmentGuides',
              ( ['in'], VARIANT_BOOL, 'prop' )),
    COMMETHOD([dispid(507), 'propget'], HRESULT, 'ParagraphAlignmentGuides',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'prop' )),
    COMMETHOD([dispid(507), 'propput'], HRESULT, 'ParagraphAlignmentGuides',
              ( ['in'], VARIANT_BOOL, 'prop' )),
    COMMETHOD([dispid(508), 'propget'], HRESULT, 'EnableLiveDrag',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'prop' )),
    COMMETHOD([dispid(508), 'propput'], HRESULT, 'EnableLiveDrag',
              ( ['in'], VARIANT_BOOL, 'prop' )),
    COMMETHOD([dispid(509), 'propget'], HRESULT, 'UseSubPixelPositioning',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'prop' )),
    COMMETHOD([dispid(509), 'propput'], HRESULT, 'UseSubPixelPositioning',
              ( ['in'], VARIANT_BOOL, 'prop' )),
    COMMETHOD([dispid(510), 'propget'], HRESULT, 'AlertIfNotDefault',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'prop' )),
    COMMETHOD([dispid(510), 'propput'], HRESULT, 'AlertIfNotDefault',
              ( ['in'], VARIANT_BOOL, 'prop' )),
    COMMETHOD([dispid(511), 'propget'], HRESULT, 'EnableProofingToolsAdvertisement',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'prop' )),
    COMMETHOD([dispid(511), 'propput'], HRESULT, 'EnableProofingToolsAdvertisement',
              ( ['in'], VARIANT_BOOL, 'prop' )),
    COMMETHOD([dispid(512), 'propget'], HRESULT, 'PreferCloudSaveLocations',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'prop' )),
    COMMETHOD([dispid(512), 'propput'], HRESULT, 'PreferCloudSaveLocations',
              ( ['in'], VARIANT_BOOL, 'prop' )),
    COMMETHOD([dispid(513), 'hidden', 'propget'], HRESULT, 'SkyDriveSignInOption',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'prop' )),
    COMMETHOD([dispid(513), 'hidden', 'propput'], HRESULT, 'SkyDriveSignInOption',
              ( ['in'], VARIANT_BOOL, 'prop' )),
    COMMETHOD([dispid(514), 'propget'], HRESULT, 'ExpandHeadingsOnOpen',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'prop' )),
    COMMETHOD([dispid(514), 'propput'], HRESULT, 'ExpandHeadingsOnOpen',
              ( ['in'], VARIANT_BOOL, 'prop' )),
    COMMETHOD([dispid(515), 'propget'], HRESULT, 'UseLocalUserInfo',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'prop' )),
    COMMETHOD([dispid(515), 'propput'], HRESULT, 'UseLocalUserInfo',
              ( ['in'], VARIANT_BOOL, 'prop' )),
    COMMETHOD([dispid(516), 'propget'], HRESULT, 'CloudSignInOption',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'prop' )),
    COMMETHOD([dispid(516), 'propput'], HRESULT, 'CloudSignInOption',
              ( ['in'], VARIANT_BOOL, 'prop' )),
    COMMETHOD([dispid(517), 'propget'], HRESULT, 'ShowPopupAddRowColToTable',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'prop' )),
    COMMETHOD([dispid(517), 'propput'], HRESULT, 'ShowPopupAddRowColToTable',
              ( ['in'], VARIANT_BOOL, 'prop' )),
    COMMETHOD([dispid(1414), 'propget'], HRESULT, 'LiveWordCount',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'prop' )),
    COMMETHOD([dispid(1414), 'propput'], HRESULT, 'LiveWordCount',
              ( ['in'], VARIANT_BOOL, 'prop' )),
    COMMETHOD([dispid(518), 'propget'], HRESULT, 'AllowCoAuthoringOnFilesWithMacros',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'prop' )),
    COMMETHOD([dispid(518), 'propput'], HRESULT, 'AllowCoAuthoringOnFilesWithMacros',
              ( ['in'], VARIANT_BOOL, 'prop' )),
]
################################################################
## code template for Options implementation
##class Options_Impl(object):
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Creator(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return prop
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    AllowAccentedUppercase = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    WPHelp = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    WPDocNavKeys = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    Pagination = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    BlueScreen = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    EnableSound = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    ConfirmConversions = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    UpdateLinksAtOpen = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    SendMailAttach = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    MeasurementUnit = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    ButtonFieldClicks = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    ShortMenuNames = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    RTFInClipboard = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    UpdateFieldsAtPrint = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    PrintProperties = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    PrintFieldCodes = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    PrintComments = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    PrintHiddenText = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def EnvelopeFeederInstalled(self):
##        '-no docstring-'
##        #return prop
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    UpdateLinksAtPrint = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    PrintBackground = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    PrintDrawingObjects = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    DefaultTray = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    DefaultTrayID = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    CreateBackup = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    AllowFastSave = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    SavePropertiesPrompt = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    SaveNormalPrompt = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    SaveInterval = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    BackgroundSave = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    InsertedTextMark = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    DeletedTextMark = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    RevisedLinesMark = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    InsertedTextColor = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    DeletedTextColor = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    RevisedLinesColor = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self, Path):
##        '-no docstring-'
##        #return prop
##    def _set(self, Path, prop):
##        '-no docstring-'
##    DefaultFilePath = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    Overtype = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    ReplaceSelection = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    AllowDragAndDrop = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    AutoWordSelection = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    INSKeyForPaste = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    SmartCutPaste = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    TabIndentKey = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    PictureEditor = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    AnimateScreenMovements = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    VirusProtection = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    RevisedPropertiesMark = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    RevisedPropertiesColor = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    SnapToGrid = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    SnapToShapes = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    GridDistanceHorizontal = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    GridDistanceVertical = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    GridOriginHorizontal = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    GridOriginVertical = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    InlineConversion = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    IMEAutomaticControl = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    AutoFormatApplyHeadings = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    AutoFormatApplyLists = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    AutoFormatApplyBulletedLists = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    AutoFormatApplyOtherParas = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    AutoFormatReplaceQuotes = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    AutoFormatReplaceSymbols = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    AutoFormatReplaceOrdinals = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    AutoFormatReplaceFractions = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    AutoFormatReplacePlainTextEmphasis = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    AutoFormatPreserveStyles = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    AutoFormatAsYouTypeApplyHeadings = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    AutoFormatAsYouTypeApplyBorders = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    AutoFormatAsYouTypeApplyBulletedLists = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    AutoFormatAsYouTypeApplyNumberedLists = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    AutoFormatAsYouTypeReplaceQuotes = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    AutoFormatAsYouTypeReplaceSymbols = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    AutoFormatAsYouTypeReplaceOrdinals = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    AutoFormatAsYouTypeReplaceFractions = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    AutoFormatAsYouTypeReplacePlainTextEmphasis = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    AutoFormatAsYouTypeFormatListItemBeginning = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    AutoFormatAsYouTypeDefineStyles = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    AutoFormatPlainTextWordMail = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    AutoFormatAsYouTypeReplaceHyperlinks = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    AutoFormatReplaceHyperlinks = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    DefaultHighlightColorIndex = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    DefaultBorderLineStyle = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    CheckSpellingAsYouType = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    CheckGrammarAsYouType = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    IgnoreInternetAndFileAddresses = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    ShowReadabilityStatistics = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    IgnoreUppercase = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    IgnoreMixedDigits = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    SuggestFromMainDictionaryOnly = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    SuggestSpellingCorrections = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    DefaultBorderLineWidth = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    CheckGrammarWithSpelling = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    DefaultOpenFormat = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    PrintDraft = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    PrintReverse = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    MapPaperSize = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    AutoFormatAsYouTypeApplyTables = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    AutoFormatApplyFirstIndents = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    AutoFormatMatchParentheses = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    AutoFormatReplaceFarEastDashes = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    AutoFormatDeleteAutoSpaces = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    AutoFormatAsYouTypeApplyFirstIndents = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    AutoFormatAsYouTypeApplyDates = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    AutoFormatAsYouTypeApplyClosings = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    AutoFormatAsYouTypeMatchParentheses = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    AutoFormatAsYouTypeReplaceFarEastDashes = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    AutoFormatAsYouTypeDeleteAutoSpaces = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    AutoFormatAsYouTypeInsertClosings = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    AutoFormatAsYouTypeAutoLetterWizard = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    AutoFormatAsYouTypeInsertOvers = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    DisplayGridLines = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    MatchFuzzyCase = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    MatchFuzzyByte = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    MatchFuzzyHiragana = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    MatchFuzzySmallKana = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    MatchFuzzyDash = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    MatchFuzzyIterationMark = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    MatchFuzzyKanji = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    MatchFuzzyOldKana = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    MatchFuzzyProlongedSoundMark = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    MatchFuzzyDZ = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    MatchFuzzyBV = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    MatchFuzzyTC = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    MatchFuzzyHF = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    MatchFuzzyZJ = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    MatchFuzzyAY = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    MatchFuzzyKiKu = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    MatchFuzzyPunctuation = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    MatchFuzzySpace = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    ApplyFarEastFontsToAscii = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    ConvertHighAnsiToFarEast = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    PrintOddPagesInAscendingOrder = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    PrintEvenPagesInAscendingOrder = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    DefaultBorderColorIndex = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    EnableMisusedWordsDictionary = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    AllowCombinedAuxiliaryForms = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    HangulHanjaFastConversion = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    CheckHangulEndings = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    EnableHangulHanjaRecentOrdering = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    MultipleWordConversionsMode = property(_get, _set, doc = _set.__doc__)
##
##    def SetWPHelpOptions(self, CommandKeyHelp, DocNavigationKeys, MouseSimulation, DemoGuidance, DemoSpeed, HelpType):
##        '-no docstring-'
##        #return 
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    DefaultBorderColor = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    AllowPixelUnits = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    UseCharacterUnit = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    AllowCompoundNounProcessing = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    AutoKeyboardSwitching = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    DocumentViewDirection = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    ArabicNumeral = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    MonthNames = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    CursorMovement = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    VisualSelection = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    ShowDiacritics = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    ShowControlCharacters = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    AddControlCharacters = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    AddBiDirectionalMarksWhenSavingTextFile = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    StrictInitialAlefHamza = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    StrictFinalYaa = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    HebrewMode = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    ArabicMode = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    AllowClickAndTypeMouse = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    UseGermanSpellingReform = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    InterpretHighAnsi = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    AddHebDoubleQuote = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    UseDiffDiacColor = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    DiacriticColorVal = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    OptimizeForWord97byDefault = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    LocalNetworkFile = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    TypeNReplace = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    SequenceCheck = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    BackgroundOpen = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    DisableFeaturesbyDefault = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    PasteAdjustWordSpacing = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    PasteAdjustParagraphSpacing = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    PasteAdjustTableFormatting = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    PasteSmartStyleBehavior = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    PasteMergeFromPPT = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    PasteMergeFromXL = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    CtrlClickHyperlinkToOpen = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    PictureWrapType = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    DisableFeaturesIntroducedAfterbyDefault = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    PasteSmartCutPaste = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    DisplayPasteOptions = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    PromptUpdateStyle = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    DefaultEPostageApp = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    DefaultTextEncoding = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    LabelSmartTags = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    DisplaySmartTagButtons = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    WarnBeforeSavingPrintingSendingMarkup = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    StoreRSIDOnSave = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    ShowFormatError = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    FormatScanning = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    PasteMergeLists = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    AutoCreateNewDrawings = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    SmartParaSelection = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    RevisionsBalloonPrintOrientation = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    CommentsColor = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    PrintXMLTag = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    PrintBackgrounds = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    AllowReadingMode = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    ShowMarkupOpenSave = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    SmartCursoring = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    MoveToTextMark = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    MoveFromTextMark = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    BibliographyStyle = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    BibliographySort = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    InsertedCellColor = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    DeletedCellColor = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    MergedCellColor = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    SplitCellColor = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    ShowSelectionFloaties = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    ShowMenuFloaties = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    ShowDevTools = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    EnableLivePreview = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    OMathAutoBuildUp = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    AlwaysUseClearType = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    PasteFormatWithinDocument = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    PasteFormatBetweenDocuments = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    PasteFormatBetweenStyledDocuments = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    PasteFormatFromExternalSource = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    PasteOptionKeepBulletsAndNumbers = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    INSKeyForOvertype = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    RepeatWord = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    FrenchReform = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    ContextualSpeller = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    MoveToTextColor = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    MoveFromTextColor = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    OMathCopyLF = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    UseNormalStyleForList = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    AllowOpenInDraftView = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    EnableLegacyIMEMode = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    DoNotPromptForConvert = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    PrecisePositioning = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    UpdateStyleListBehavior = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    StrictTaaMarboota = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    StrictRussianE = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    SpanishMode = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    PortugalReform = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    BrazilReform = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    UpdateFieldsWithTrackedChangesAtPrint = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    DisplayAlignmentGuides = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    PageAlignmentGuides = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    MarginAlignmentGuides = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    ParagraphAlignmentGuides = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    EnableLiveDrag = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    UseSubPixelPositioning = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    AlertIfNotDefault = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    EnableProofingToolsAdvertisement = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    PreferCloudSaveLocations = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    SkyDriveSignInOption = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    ExpandHeadingsOnOpen = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    UseLocalUserInfo = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    CloudSignInOption = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    ShowPopupAddRowColToTable = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    LiveWordCount = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    AllowCoAuthoringOnFilesWithMacros = property(_get, _set, doc = _set.__doc__)
##

OMathDelim._methods_ = [
    COMMETHOD([dispid(100), 'propget'], HRESULT, 'Application',
              ( ['out', 'retval'], POINTER(POINTER(Application)), 'prop' )),
    COMMETHOD([dispid(101), 'propget'], HRESULT, 'Creator',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(102), 'propget'], HRESULT, 'Parent',
              ( ['out', 'retval'], POINTER(POINTER(IDispatch)), 'prop' )),
    COMMETHOD([dispid(103), 'propget'], HRESULT, 'E',
              ( ['out', 'retval'], POINTER(POINTER(OMathArgs)), 'prop' )),
    COMMETHOD([dispid(104), 'propget'], HRESULT, 'BegChar',
              ( ['out', 'retval'], POINTER(c_short), 'prop' )),
    COMMETHOD([dispid(104), 'propput'], HRESULT, 'BegChar',
              ( ['in'], c_short, 'prop' )),
    COMMETHOD([dispid(105), 'propget'], HRESULT, 'SepChar',
              ( ['out', 'retval'], POINTER(c_short), 'prop' )),
    COMMETHOD([dispid(105), 'propput'], HRESULT, 'SepChar',
              ( ['in'], c_short, 'prop' )),
    COMMETHOD([dispid(106), 'propget'], HRESULT, 'EndChar',
              ( ['out', 'retval'], POINTER(c_short), 'prop' )),
    COMMETHOD([dispid(106), 'propput'], HRESULT, 'EndChar',
              ( ['in'], c_short, 'prop' )),
    COMMETHOD([dispid(107), 'propget'], HRESULT, 'Grow',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'prop' )),
    COMMETHOD([dispid(107), 'propput'], HRESULT, 'Grow',
              ( ['in'], VARIANT_BOOL, 'prop' )),
    COMMETHOD([dispid(108), 'propget'], HRESULT, 'Shape',
              ( ['out', 'retval'], POINTER(WdOMathShapeType), 'prop' )),
    COMMETHOD([dispid(108), 'propput'], HRESULT, 'Shape',
              ( ['in'], WdOMathShapeType, 'prop' )),
    COMMETHOD([dispid(109), 'propget'], HRESULT, 'NoLeftChar',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'prop' )),
    COMMETHOD([dispid(109), 'propput'], HRESULT, 'NoLeftChar',
              ( ['in'], VARIANT_BOOL, 'prop' )),
    COMMETHOD([dispid(110), 'propget'], HRESULT, 'NoRightChar',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'prop' )),
    COMMETHOD([dispid(110), 'propput'], HRESULT, 'NoRightChar',
              ( ['in'], VARIANT_BOOL, 'prop' )),
]
################################################################
## code template for OMathDelim implementation
##class OMathDelim_Impl(object):
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Creator(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def E(self):
##        '-no docstring-'
##        #return prop
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    BegChar = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    SepChar = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    EndChar = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    Grow = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    Shape = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    NoLeftChar = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    NoRightChar = property(_get, _set, doc = _set.__doc__)
##

class IApplicationEvents(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{000209F7-0001-0000-C000-000000000046}')
    _idlflags_ = ['hidden', 'dual', 'nonextensible', 'oleautomation']
IApplicationEvents._methods_ = [
    COMMETHOD([dispid(1), 'restricted', 'hidden'], HRESULT, 'Startup'),
    COMMETHOD([dispid(2)], HRESULT, 'Quit'),
    COMMETHOD([dispid(3)], HRESULT, 'DocumentChange'),
]
################################################################
## code template for IApplicationEvents implementation
##class IApplicationEvents_Impl(object):
##    def Startup(self):
##        '-no docstring-'
##        #return 
##
##    def Quit(self):
##        '-no docstring-'
##        #return 
##
##    def DocumentChange(self):
##        '-no docstring-'
##        #return 
##

Bookmark._methods_ = [
    COMMETHOD([dispid(0), 'propget'], HRESULT, 'Name',
              ( ['out', 'retval'], POINTER(BSTR), 'prop' )),
    COMMETHOD([dispid(1), 'propget'], HRESULT, 'Range',
              ( ['out', 'retval'], POINTER(POINTER(Range)), 'prop' )),
    COMMETHOD([dispid(2), 'propget'], HRESULT, 'Empty',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'prop' )),
    COMMETHOD([dispid(3), 'propget'], HRESULT, 'Start',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(3), 'propput'], HRESULT, 'Start',
              ( ['in'], c_int, 'prop' )),
    COMMETHOD([dispid(4), 'propget'], HRESULT, 'End',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(4), 'propput'], HRESULT, 'End',
              ( ['in'], c_int, 'prop' )),
    COMMETHOD([dispid(5), 'propget'], HRESULT, 'Column',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'prop' )),
    COMMETHOD([dispid(6), 'propget'], HRESULT, 'StoryType',
              ( ['out', 'retval'], POINTER(WdStoryType), 'prop' )),
    COMMETHOD([dispid(1000), 'propget'], HRESULT, 'Application',
              ( ['out', 'retval'], POINTER(POINTER(Application)), 'prop' )),
    COMMETHOD([dispid(1001), 'propget'], HRESULT, 'Creator',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(1002), 'propget'], HRESULT, 'Parent',
              ( ['out', 'retval'], POINTER(POINTER(IDispatch)), 'prop' )),
    COMMETHOD([dispid(65535)], HRESULT, 'Select'),
    COMMETHOD([dispid(11)], HRESULT, 'Delete'),
    COMMETHOD([dispid(12)], HRESULT, 'Copy',
              ( ['in'], BSTR, 'Name' ),
              ( ['out', 'retval'], POINTER(POINTER(Bookmark)), 'prop' )),
]
################################################################
## code template for Bookmark implementation
##class Bookmark_Impl(object):
##    @property
##    def Name(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Range(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Empty(self):
##        '-no docstring-'
##        #return prop
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    Start = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    End = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Column(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def StoryType(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Creator(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return prop
##
##    def Select(self):
##        '-no docstring-'
##        #return 
##
##    def Delete(self):
##        '-no docstring-'
##        #return 
##
##    def Copy(self, Name):
##        '-no docstring-'
##        #return prop
##

Row._methods_ = [
    COMMETHOD([dispid(0), 'propget'], HRESULT, 'Range',
              ( ['out', 'retval'], POINTER(POINTER(Range)), 'prop' )),
    COMMETHOD([dispid(1000), 'propget'], HRESULT, 'Application',
              ( ['out', 'retval'], POINTER(POINTER(Application)), 'prop' )),
    COMMETHOD([dispid(1001), 'propget'], HRESULT, 'Creator',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(1002), 'propget'], HRESULT, 'Parent',
              ( ['out', 'retval'], POINTER(POINTER(IDispatch)), 'prop' )),
    COMMETHOD([dispid(3), 'propget'], HRESULT, 'AllowBreakAcrossPages',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(3), 'propput'], HRESULT, 'AllowBreakAcrossPages',
              ( ['in'], c_int, 'prop' )),
    COMMETHOD([dispid(4), 'propget'], HRESULT, 'Alignment',
              ( ['out', 'retval'], POINTER(WdRowAlignment), 'prop' )),
    COMMETHOD([dispid(4), 'propput'], HRESULT, 'Alignment',
              ( ['in'], WdRowAlignment, 'prop' )),
    COMMETHOD([dispid(5), 'propget'], HRESULT, 'HeadingFormat',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(5), 'propput'], HRESULT, 'HeadingFormat',
              ( ['in'], c_int, 'prop' )),
    COMMETHOD([dispid(6), 'propget'], HRESULT, 'SpaceBetweenColumns',
              ( ['out', 'retval'], POINTER(c_float), 'prop' )),
    COMMETHOD([dispid(6), 'propput'], HRESULT, 'SpaceBetweenColumns',
              ( ['in'], c_float, 'prop' )),
    COMMETHOD([dispid(7), 'propget'], HRESULT, 'Height',
              ( ['out', 'retval'], POINTER(c_float), 'prop' )),
    COMMETHOD([dispid(7), 'propput'], HRESULT, 'Height',
              ( ['in'], c_float, 'prop' )),
    COMMETHOD([dispid(8), 'propget'], HRESULT, 'HeightRule',
              ( ['out', 'retval'], POINTER(WdRowHeightRule), 'prop' )),
    COMMETHOD([dispid(8), 'propput'], HRESULT, 'HeightRule',
              ( ['in'], WdRowHeightRule, 'prop' )),
    COMMETHOD([dispid(9), 'propget'], HRESULT, 'LeftIndent',
              ( ['out', 'retval'], POINTER(c_float), 'prop' )),
    COMMETHOD([dispid(9), 'propput'], HRESULT, 'LeftIndent',
              ( ['in'], c_float, 'prop' )),
    COMMETHOD([dispid(10), 'propget'], HRESULT, 'IsLast',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'prop' )),
    COMMETHOD([dispid(11), 'propget'], HRESULT, 'IsFirst',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'prop' )),
    COMMETHOD([dispid(12), 'propget'], HRESULT, 'Index',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(100), 'propget'], HRESULT, 'Cells',
              ( ['out', 'retval'], POINTER(POINTER(Cells)), 'prop' )),
    COMMETHOD([dispid(1100), 'propget'], HRESULT, 'Borders',
              ( ['out', 'retval'], POINTER(POINTER(Borders)), 'prop' )),
    COMMETHOD([dispid(1100), 'propput'], HRESULT, 'Borders',
              ( ['in'], POINTER(Borders), 'prop' )),
    COMMETHOD([dispid(103), 'propget'], HRESULT, 'Shading',
              ( ['out', 'retval'], POINTER(POINTER(Shading)), 'prop' )),
    COMMETHOD([dispid(104), 'propget'], HRESULT, 'Next',
              ( ['out', 'retval'], POINTER(POINTER(Row)), 'prop' )),
    COMMETHOD([dispid(105), 'propget'], HRESULT, 'Previous',
              ( ['out', 'retval'], POINTER(POINTER(Row)), 'prop' )),
    COMMETHOD([dispid(65535)], HRESULT, 'Select'),
    COMMETHOD([dispid(200)], HRESULT, 'Delete'),
    COMMETHOD([dispid(202)], HRESULT, 'SetLeftIndent',
              ( ['in'], c_float, 'LeftIndent' ),
              ( ['in'], WdRulerStyle, 'RulerStyle' )),
    COMMETHOD([dispid(203)], HRESULT, 'SetHeight',
              ( ['in'], c_float, 'RowHeight' ),
              ( ['in'], WdRowHeightRule, 'HeightRule' )),
    COMMETHOD([dispid(16), 'hidden'], HRESULT, 'ConvertToTextOld',
              ( ['in', 'optional'], POINTER(VARIANT), 'Separator' ),
              ( ['out', 'retval'], POINTER(POINTER(Range)), 'prop' )),
    COMMETHOD([dispid(18)], HRESULT, 'ConvertToText',
              ( ['in', 'optional'], POINTER(VARIANT), 'Separator' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'NestedTables' ),
              ( ['out', 'retval'], POINTER(POINTER(Range)), 'prop' )),
    COMMETHOD([dispid(106), 'propget'], HRESULT, 'NestingLevel',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(107), 'propget'], HRESULT, 'ID',
              ( ['out', 'retval'], POINTER(BSTR), 'prop' )),
    COMMETHOD([dispid(107), 'propput'], HRESULT, 'ID',
              ( ['in'], BSTR, 'prop' )),
]
################################################################
## code template for Row implementation
##class Row_Impl(object):
##    @property
##    def Range(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Creator(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return prop
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    AllowBreakAcrossPages = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    Alignment = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    HeadingFormat = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    SpaceBetweenColumns = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    Height = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    HeightRule = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    LeftIndent = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def IsLast(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def IsFirst(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Index(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Cells(self):
##        '-no docstring-'
##        #return prop
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    Borders = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Shading(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Next(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Previous(self):
##        '-no docstring-'
##        #return prop
##
##    def Select(self):
##        '-no docstring-'
##        #return 
##
##    def Delete(self):
##        '-no docstring-'
##        #return 
##
##    def SetLeftIndent(self, LeftIndent, RulerStyle):
##        '-no docstring-'
##        #return 
##
##    def SetHeight(self, RowHeight, HeightRule):
##        '-no docstring-'
##        #return 
##
##    def ConvertToTextOld(self, Separator):
##        '-no docstring-'
##        #return prop
##
##    def ConvertToText(self, Separator, NestedTables):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def NestingLevel(self):
##        '-no docstring-'
##        #return prop
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    ID = property(_get, _set, doc = _set.__doc__)
##

Envelope._methods_ = [
    COMMETHOD([dispid(1000), 'propget'], HRESULT, 'Application',
              ( ['out', 'retval'], POINTER(POINTER(Application)), 'prop' )),
    COMMETHOD([dispid(1001), 'propget'], HRESULT, 'Creator',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(1002), 'propget'], HRESULT, 'Parent',
              ( ['out', 'retval'], POINTER(POINTER(IDispatch)), 'prop' )),
    COMMETHOD([dispid(1), 'propget'], HRESULT, 'Address',
              ( ['out', 'retval'], POINTER(POINTER(Range)), 'prop' )),
    COMMETHOD([dispid(2), 'propget'], HRESULT, 'ReturnAddress',
              ( ['out', 'retval'], POINTER(POINTER(Range)), 'prop' )),
    COMMETHOD([dispid(4), 'hidden', 'propget'], HRESULT, 'DefaultPrintBarCode',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'prop' )),
    COMMETHOD([dispid(4), 'hidden', 'propput'], HRESULT, 'DefaultPrintBarCode',
              ( ['in'], VARIANT_BOOL, 'prop' )),
    COMMETHOD([dispid(5), 'propget'], HRESULT, 'DefaultPrintFIMA',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'prop' )),
    COMMETHOD([dispid(5), 'propput'], HRESULT, 'DefaultPrintFIMA',
              ( ['in'], VARIANT_BOOL, 'prop' )),
    COMMETHOD([dispid(6), 'propget'], HRESULT, 'DefaultHeight',
              ( ['out', 'retval'], POINTER(c_float), 'prop' )),
    COMMETHOD([dispid(6), 'propput'], HRESULT, 'DefaultHeight',
              ( ['in'], c_float, 'prop' )),
    COMMETHOD([dispid(7), 'propget'], HRESULT, 'DefaultWidth',
              ( ['out', 'retval'], POINTER(c_float), 'prop' )),
    COMMETHOD([dispid(7), 'propput'], HRESULT, 'DefaultWidth',
              ( ['in'], c_float, 'prop' )),
    COMMETHOD([dispid(0), 'propget'], HRESULT, 'DefaultSize',
              ( ['out', 'retval'], POINTER(BSTR), 'prop' )),
    COMMETHOD([dispid(0), 'propput'], HRESULT, 'DefaultSize',
              ( ['in'], BSTR, 'prop' )),
    COMMETHOD([dispid(9), 'propget'], HRESULT, 'DefaultOmitReturnAddress',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'prop' )),
    COMMETHOD([dispid(9), 'propput'], HRESULT, 'DefaultOmitReturnAddress',
              ( ['in'], VARIANT_BOOL, 'prop' )),
    COMMETHOD([dispid(12), 'propget'], HRESULT, 'FeedSource',
              ( ['out', 'retval'], POINTER(WdPaperTray), 'prop' )),
    COMMETHOD([dispid(12), 'propput'], HRESULT, 'FeedSource',
              ( ['in'], WdPaperTray, 'prop' )),
    COMMETHOD([dispid(13), 'propget'], HRESULT, 'AddressFromLeft',
              ( ['out', 'retval'], POINTER(c_float), 'prop' )),
    COMMETHOD([dispid(13), 'propput'], HRESULT, 'AddressFromLeft',
              ( ['in'], c_float, 'prop' )),
    COMMETHOD([dispid(14), 'propget'], HRESULT, 'AddressFromTop',
              ( ['out', 'retval'], POINTER(c_float), 'prop' )),
    COMMETHOD([dispid(14), 'propput'], HRESULT, 'AddressFromTop',
              ( ['in'], c_float, 'prop' )),
    COMMETHOD([dispid(15), 'propget'], HRESULT, 'ReturnAddressFromLeft',
              ( ['out', 'retval'], POINTER(c_float), 'prop' )),
    COMMETHOD([dispid(15), 'propput'], HRESULT, 'ReturnAddressFromLeft',
              ( ['in'], c_float, 'prop' )),
    COMMETHOD([dispid(16), 'propget'], HRESULT, 'ReturnAddressFromTop',
              ( ['out', 'retval'], POINTER(c_float), 'prop' )),
    COMMETHOD([dispid(16), 'propput'], HRESULT, 'ReturnAddressFromTop',
              ( ['in'], c_float, 'prop' )),
    COMMETHOD([dispid(17), 'propget'], HRESULT, 'AddressStyle',
              ( ['out', 'retval'], POINTER(POINTER(Style)), 'prop' )),
    COMMETHOD([dispid(18), 'propget'], HRESULT, 'ReturnAddressStyle',
              ( ['out', 'retval'], POINTER(POINTER(Style)), 'prop' )),
    COMMETHOD([dispid(19), 'propget'], HRESULT, 'DefaultOrientation',
              ( ['out', 'retval'], POINTER(WdEnvelopeOrientation), 'prop' )),
    COMMETHOD([dispid(19), 'propput'], HRESULT, 'DefaultOrientation',
              ( ['in'], WdEnvelopeOrientation, 'prop' )),
    COMMETHOD([dispid(20), 'propget'], HRESULT, 'DefaultFaceUp',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'prop' )),
    COMMETHOD([dispid(20), 'propput'], HRESULT, 'DefaultFaceUp',
              ( ['in'], VARIANT_BOOL, 'prop' )),
    COMMETHOD([dispid(101), 'hidden'], HRESULT, 'Insert2000',
              ( ['in', 'optional'], POINTER(VARIANT), 'ExtractAddress' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'Address' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'AutoText' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'OmitReturnAddress' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'ReturnAddress' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'ReturnAutoText' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'PrintBarCode' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'PrintFIMA' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'Size' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'Height' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'Width' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'FeedSource' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'AddressFromLeft' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'AddressFromTop' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'ReturnAddressFromLeft' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'ReturnAddressFromTop' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'DefaultFaceUp' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'DefaultOrientation' )),
    COMMETHOD([dispid(102), 'hidden'], HRESULT, 'PrintOut2000',
              ( ['in', 'optional'], POINTER(VARIANT), 'ExtractAddress' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'Address' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'AutoText' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'OmitReturnAddress' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'ReturnAddress' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'ReturnAutoText' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'PrintBarCode' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'PrintFIMA' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'Size' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'Height' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'Width' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'FeedSource' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'AddressFromLeft' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'AddressFromTop' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'ReturnAddressFromLeft' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'ReturnAddressFromTop' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'DefaultFaceUp' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'DefaultOrientation' )),
    COMMETHOD([dispid(103)], HRESULT, 'UpdateDocument'),
    COMMETHOD([dispid(104)], HRESULT, 'Options'),
    COMMETHOD([dispid(22), 'propget'], HRESULT, 'Vertical',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'prop' )),
    COMMETHOD([dispid(22), 'propput'], HRESULT, 'Vertical',
              ( ['in'], VARIANT_BOOL, 'prop' )),
    COMMETHOD([dispid(23), 'propget'], HRESULT, 'RecipientNamefromLeft',
              ( ['out', 'retval'], POINTER(c_float), 'prop' )),
    COMMETHOD([dispid(23), 'propput'], HRESULT, 'RecipientNamefromLeft',
              ( ['in'], c_float, 'prop' )),
    COMMETHOD([dispid(24), 'propget'], HRESULT, 'RecipientNamefromTop',
              ( ['out', 'retval'], POINTER(c_float), 'prop' )),
    COMMETHOD([dispid(24), 'propput'], HRESULT, 'RecipientNamefromTop',
              ( ['in'], c_float, 'prop' )),
    COMMETHOD([dispid(25), 'propget'], HRESULT, 'RecipientPostalfromLeft',
              ( ['out', 'retval'], POINTER(c_float), 'prop' )),
    COMMETHOD([dispid(25), 'propput'], HRESULT, 'RecipientPostalfromLeft',
              ( ['in'], c_float, 'prop' )),
    COMMETHOD([dispid(26), 'propget'], HRESULT, 'RecipientPostalfromTop',
              ( ['out', 'retval'], POINTER(c_float), 'prop' )),
    COMMETHOD([dispid(26), 'propput'], HRESULT, 'RecipientPostalfromTop',
              ( ['in'], c_float, 'prop' )),
    COMMETHOD([dispid(27), 'propget'], HRESULT, 'SenderNamefromLeft',
              ( ['out', 'retval'], POINTER(c_float), 'prop' )),
    COMMETHOD([dispid(27), 'propput'], HRESULT, 'SenderNamefromLeft',
              ( ['in'], c_float, 'prop' )),
    COMMETHOD([dispid(28), 'propget'], HRESULT, 'SenderNamefromTop',
              ( ['out', 'retval'], POINTER(c_float), 'prop' )),
    COMMETHOD([dispid(28), 'propput'], HRESULT, 'SenderNamefromTop',
              ( ['in'], c_float, 'prop' )),
    COMMETHOD([dispid(29), 'propget'], HRESULT, 'SenderPostalfromLeft',
              ( ['out', 'retval'], POINTER(c_float), 'prop' )),
    COMMETHOD([dispid(29), 'propput'], HRESULT, 'SenderPostalfromLeft',
              ( ['in'], c_float, 'prop' )),
    COMMETHOD([dispid(30), 'propget'], HRESULT, 'SenderPostalfromTop',
              ( ['out', 'retval'], POINTER(c_float), 'prop' )),
    COMMETHOD([dispid(30), 'propput'], HRESULT, 'SenderPostalfromTop',
              ( ['in'], c_float, 'prop' )),
    COMMETHOD([dispid(105)], HRESULT, 'Insert',
              ( ['in', 'optional'], POINTER(VARIANT), 'ExtractAddress' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'Address' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'AutoText' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'OmitReturnAddress' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'ReturnAddress' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'ReturnAutoText' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'PrintBarCode' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'PrintFIMA' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'Size' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'Height' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'Width' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'FeedSource' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'AddressFromLeft' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'AddressFromTop' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'ReturnAddressFromLeft' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'ReturnAddressFromTop' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'DefaultFaceUp' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'DefaultOrientation' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'PrintEPostage' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'Vertical' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'RecipientNamefromLeft' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'RecipientNamefromTop' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'RecipientPostalfromLeft' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'RecipientPostalfromTop' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'SenderNamefromLeft' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'SenderNamefromTop' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'SenderPostalfromLeft' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'SenderPostalfromTop' )),
    COMMETHOD([dispid(106)], HRESULT, 'PrintOut',
              ( ['in', 'optional'], POINTER(VARIANT), 'ExtractAddress' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'Address' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'AutoText' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'OmitReturnAddress' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'ReturnAddress' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'ReturnAutoText' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'PrintBarCode' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'PrintFIMA' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'Size' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'Height' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'Width' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'FeedSource' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'AddressFromLeft' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'AddressFromTop' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'ReturnAddressFromLeft' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'ReturnAddressFromTop' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'DefaultFaceUp' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'DefaultOrientation' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'PrintEPostage' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'Vertical' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'RecipientNamefromLeft' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'RecipientNamefromTop' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'RecipientPostalfromLeft' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'RecipientPostalfromTop' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'SenderNamefromLeft' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'SenderNamefromTop' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'SenderPostalfromLeft' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'SenderPostalfromTop' )),
]
################################################################
## code template for Envelope implementation
##class Envelope_Impl(object):
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Creator(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Address(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def ReturnAddress(self):
##        '-no docstring-'
##        #return prop
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    DefaultPrintBarCode = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    DefaultPrintFIMA = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    DefaultHeight = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    DefaultWidth = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    DefaultSize = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    DefaultOmitReturnAddress = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    FeedSource = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    AddressFromLeft = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    AddressFromTop = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    ReturnAddressFromLeft = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    ReturnAddressFromTop = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def AddressStyle(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def ReturnAddressStyle(self):
##        '-no docstring-'
##        #return prop
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    DefaultOrientation = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    DefaultFaceUp = property(_get, _set, doc = _set.__doc__)
##
##    def Insert2000(self, ExtractAddress, Address, AutoText, OmitReturnAddress, ReturnAddress, ReturnAutoText, PrintBarCode, PrintFIMA, Size, Height, Width, FeedSource, AddressFromLeft, AddressFromTop, ReturnAddressFromLeft, ReturnAddressFromTop, DefaultFaceUp, DefaultOrientation):
##        '-no docstring-'
##        #return 
##
##    def PrintOut2000(self, ExtractAddress, Address, AutoText, OmitReturnAddress, ReturnAddress, ReturnAutoText, PrintBarCode, PrintFIMA, Size, Height, Width, FeedSource, AddressFromLeft, AddressFromTop, ReturnAddressFromLeft, ReturnAddressFromTop, DefaultFaceUp, DefaultOrientation):
##        '-no docstring-'
##        #return 
##
##    def UpdateDocument(self):
##        '-no docstring-'
##        #return 
##
##    def Options(self):
##        '-no docstring-'
##        #return 
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    Vertical = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    RecipientNamefromLeft = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    RecipientNamefromTop = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    RecipientPostalfromLeft = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    RecipientPostalfromTop = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    SenderNamefromLeft = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    SenderNamefromTop = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    SenderPostalfromLeft = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    SenderPostalfromTop = property(_get, _set, doc = _set.__doc__)
##
##    def Insert(self, ExtractAddress, Address, AutoText, OmitReturnAddress, ReturnAddress, ReturnAutoText, PrintBarCode, PrintFIMA, Size, Height, Width, FeedSource, AddressFromLeft, AddressFromTop, ReturnAddressFromLeft, ReturnAddressFromTop, DefaultFaceUp, DefaultOrientation, PrintEPostage, Vertical, RecipientNamefromLeft, RecipientNamefromTop, RecipientPostalfromLeft, RecipientPostalfromTop, SenderNamefromLeft, SenderNamefromTop, SenderPostalfromLeft, SenderPostalfromTop):
##        '-no docstring-'
##        #return 
##
##    def PrintOut(self, ExtractAddress, Address, AutoText, OmitReturnAddress, ReturnAddress, ReturnAutoText, PrintBarCode, PrintFIMA, Size, Height, Width, FeedSource, AddressFromLeft, AddressFromTop, ReturnAddressFromLeft, ReturnAddressFromTop, DefaultFaceUp, DefaultOrientation, PrintEPostage, Vertical, RecipientNamefromLeft, RecipientNamefromTop, RecipientPostalfromLeft, RecipientPostalfromTop, SenderNamefromLeft, SenderNamefromTop, SenderPostalfromLeft, SenderPostalfromTop):
##        '-no docstring-'
##        #return 
##

Section._methods_ = [
    COMMETHOD([dispid(0), 'propget'], HRESULT, 'Range',
              ( ['out', 'retval'], POINTER(POINTER(Range)), 'prop' )),
    COMMETHOD([dispid(1000), 'propget'], HRESULT, 'Application',
              ( ['out', 'retval'], POINTER(POINTER(Application)), 'prop' )),
    COMMETHOD([dispid(1001), 'propget'], HRESULT, 'Creator',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(1002), 'propget'], HRESULT, 'Parent',
              ( ['out', 'retval'], POINTER(POINTER(IDispatch)), 'prop' )),
    COMMETHOD([dispid(1101), 'propget'], HRESULT, 'PageSetup',
              ( ['out', 'retval'], POINTER(POINTER(PageSetup)), 'prop' )),
    COMMETHOD([dispid(1101), 'propput'], HRESULT, 'PageSetup',
              ( ['in'], POINTER(PageSetup), 'prop' )),
    COMMETHOD([dispid(121), 'propget'], HRESULT, 'Headers',
              ( ['out', 'retval'], POINTER(POINTER(HeadersFooters)), 'prop' )),
    COMMETHOD([dispid(122), 'propget'], HRESULT, 'Footers',
              ( ['out', 'retval'], POINTER(POINTER(HeadersFooters)), 'prop' )),
    COMMETHOD([dispid(123), 'propget'], HRESULT, 'ProtectedForForms',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'prop' )),
    COMMETHOD([dispid(123), 'propput'], HRESULT, 'ProtectedForForms',
              ( ['in'], VARIANT_BOOL, 'prop' )),
    COMMETHOD([dispid(124), 'propget'], HRESULT, 'Index',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(1100), 'propget'], HRESULT, 'Borders',
              ( ['out', 'retval'], POINTER(POINTER(Borders)), 'prop' )),
    COMMETHOD([dispid(1100), 'propput'], HRESULT, 'Borders',
              ( ['in'], POINTER(Borders), 'prop' )),
]
################################################################
## code template for Section implementation
##class Section_Impl(object):
##    @property
##    def Range(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Creator(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return prop
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    PageSetup = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Headers(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Footers(self):
##        '-no docstring-'
##        #return prop
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    ProtectedForForms = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Index(self):
##        '-no docstring-'
##        #return prop
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    Borders = property(_get, _set, doc = _set.__doc__)
##

TextRetrievalMode._methods_ = [
    COMMETHOD([dispid(1000), 'propget'], HRESULT, 'Application',
              ( ['out', 'retval'], POINTER(POINTER(Application)), 'prop' )),
    COMMETHOD([dispid(1001), 'propget'], HRESULT, 'Creator',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(1002), 'propget'], HRESULT, 'Parent',
              ( ['out', 'retval'], POINTER(POINTER(IDispatch)), 'prop' )),
    COMMETHOD([dispid(0), 'propget'], HRESULT, 'ViewType',
              ( ['out', 'retval'], POINTER(WdViewType), 'prop' )),
    COMMETHOD([dispid(0), 'propput'], HRESULT, 'ViewType',
              ( ['in'], WdViewType, 'prop' )),
    COMMETHOD([dispid(1), 'propget'], HRESULT, 'Duplicate',
              ( ['out', 'retval'], POINTER(POINTER(TextRetrievalMode)), 'prop' )),
    COMMETHOD([dispid(2), 'propget'], HRESULT, 'IncludeHiddenText',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'prop' )),
    COMMETHOD([dispid(2), 'propput'], HRESULT, 'IncludeHiddenText',
              ( ['in'], VARIANT_BOOL, 'prop' )),
    COMMETHOD([dispid(3), 'propget'], HRESULT, 'IncludeFieldCodes',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'prop' )),
    COMMETHOD([dispid(3), 'propput'], HRESULT, 'IncludeFieldCodes',
              ( ['in'], VARIANT_BOOL, 'prop' )),
]
################################################################
## code template for TextRetrievalMode implementation
##class TextRetrievalMode_Impl(object):
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Creator(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return prop
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    ViewType = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Duplicate(self):
##        '-no docstring-'
##        #return prop
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    IncludeHiddenText = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    IncludeFieldCodes = property(_get, _set, doc = _set.__doc__)
##


# values for enumeration 'XlGradientStopPositionType'
xlGradientStopPositionTypeExtremeValue = 0
xlGradientStopPositionTypeNumber = 1
xlGradientStopPositionTypePercent = 2
XlGradientStopPositionType = c_int # enum
OMathBreak._methods_ = [
    COMMETHOD([dispid(101), 'propget'], HRESULT, 'Application',
              ( ['out', 'retval'], POINTER(POINTER(Application)), 'prop' )),
    COMMETHOD([dispid(102), 'propget'], HRESULT, 'Creator',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(103), 'propget'], HRESULT, 'Parent',
              ( ['out', 'retval'], POINTER(POINTER(IDispatch)), 'prop' )),
    COMMETHOD([dispid(104), 'propget'], HRESULT, 'Range',
              ( ['out', 'retval'], POINTER(POINTER(Range)), 'prop' )),
    COMMETHOD([dispid(105), 'propget'], HRESULT, 'AlignAt',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(105), 'propput'], HRESULT, 'AlignAt',
              ( ['in'], c_int, 'prop' )),
    COMMETHOD([dispid(106)], HRESULT, 'Delete'),
]
################################################################
## code template for OMathBreak implementation
##class OMathBreak_Impl(object):
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Creator(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Range(self):
##        '-no docstring-'
##        #return prop
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    AlignAt = property(_get, _set, doc = _set.__doc__)
##
##    def Delete(self):
##        '-no docstring-'
##        #return 
##

TwoInitialCapsException._methods_ = [
    COMMETHOD([dispid(1000), 'propget'], HRESULT, 'Application',
              ( ['out', 'retval'], POINTER(POINTER(Application)), 'prop' )),
    COMMETHOD([dispid(1001), 'propget'], HRESULT, 'Creator',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(1002), 'propget'], HRESULT, 'Parent',
              ( ['out', 'retval'], POINTER(POINTER(IDispatch)), 'prop' )),
    COMMETHOD([dispid(1), 'propget'], HRESULT, 'Index',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(2), 'propget'], HRESULT, 'Name',
              ( ['out', 'retval'], POINTER(BSTR), 'prop' )),
    COMMETHOD([dispid(101)], HRESULT, 'Delete'),
]
################################################################
## code template for TwoInitialCapsException implementation
##class TwoInitialCapsException_Impl(object):
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Creator(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Index(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Name(self):
##        '-no docstring-'
##        #return prop
##
##    def Delete(self):
##        '-no docstring-'
##        #return 
##

XMLNodes._methods_ = [
    COMMETHOD([dispid(-4), 'nonbrowsable', 'propget'], HRESULT, '_NewEnum',
              ( ['out', 'retval'], POINTER(POINTER(IUnknown)), 'prop' )),
    COMMETHOD([dispid(2), 'propget'], HRESULT, 'Count',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(1000), 'propget'], HRESULT, 'Application',
              ( ['out', 'retval'], POINTER(POINTER(Application)), 'prop' )),
    COMMETHOD([dispid(1001), 'propget'], HRESULT, 'Creator',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(1002), 'propget'], HRESULT, 'Parent',
              ( ['out', 'retval'], POINTER(POINTER(IDispatch)), 'prop' )),
    COMMETHOD([dispid(0)], HRESULT, 'Item',
              ( ['in'], c_int, 'Index' ),
              ( ['out', 'retval'], POINTER(POINTER(XMLNode)), 'prop' )),
    COMMETHOD([dispid(100), 'hidden'], HRESULT, 'Add',
              ( ['in'], BSTR, 'Name' ),
              ( ['in'], BSTR, 'Namespace' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'Range' ),
              ( ['out', 'retval'], POINTER(POINTER(XMLNode)), 'prop' )),
]
################################################################
## code template for XMLNodes implementation
##class XMLNodes_Impl(object):
##    @property
##    def _NewEnum(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Count(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Creator(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return prop
##
##    def Item(self, Index):
##        '-no docstring-'
##        #return prop
##
##    def Add(self, Name, Namespace, Range):
##        '-no docstring-'
##        #return prop
##

Indexes._methods_ = [
    COMMETHOD([dispid(1000), 'propget'], HRESULT, 'Application',
              ( ['out', 'retval'], POINTER(POINTER(Application)), 'prop' )),
    COMMETHOD([dispid(1001), 'propget'], HRESULT, 'Creator',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(1002), 'propget'], HRESULT, 'Parent',
              ( ['out', 'retval'], POINTER(POINTER(IDispatch)), 'prop' )),
    COMMETHOD([dispid(-4), 'nonbrowsable', 'propget'], HRESULT, '_NewEnum',
              ( ['out', 'retval'], POINTER(POINTER(IUnknown)), 'prop' )),
    COMMETHOD([dispid(1), 'propget'], HRESULT, 'Count',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(2), 'propget'], HRESULT, 'Format',
              ( ['out', 'retval'], POINTER(WdIndexFormat), 'prop' )),
    COMMETHOD([dispid(2), 'propput'], HRESULT, 'Format',
              ( ['in'], WdIndexFormat, 'prop' )),
    COMMETHOD([dispid(0)], HRESULT, 'Item',
              ( ['in'], c_int, 'Index' ),
              ( ['out', 'retval'], POINTER(POINTER(Index)), 'prop' )),
    COMMETHOD([dispid(100), 'hidden'], HRESULT, 'AddOld',
              ( ['in'], POINTER(Range), 'Range' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'HeadingSeparator' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'RightAlignPageNumbers' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'Type' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'NumberOfColumns' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'AccentedLetters' ),
              ( ['out', 'retval'], POINTER(POINTER(Index)), 'prop' )),
    COMMETHOD([dispid(101)], HRESULT, 'MarkEntry',
              ( ['in'], POINTER(Range), 'Range' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'Entry' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'EntryAutoText' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'CrossReference' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'CrossReferenceAutoText' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'BookmarkName' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'Bold' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'Italic' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'Reading' ),
              ( ['out', 'retval'], POINTER(POINTER(Field)), 'prop' )),
    COMMETHOD([dispid(102)], HRESULT, 'MarkAllEntries',
              ( ['in'], POINTER(Range), 'Range' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'Entry' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'EntryAutoText' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'CrossReference' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'CrossReferenceAutoText' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'BookmarkName' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'Bold' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'Italic' )),
    COMMETHOD([dispid(103)], HRESULT, 'AutoMarkEntries',
              ( ['in'], BSTR, 'ConcordanceFileName' )),
    COMMETHOD([dispid(104)], HRESULT, 'Add',
              ( ['in'], POINTER(Range), 'Range' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'HeadingSeparator' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'RightAlignPageNumbers' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'Type' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'NumberOfColumns' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'AccentedLetters' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'SortBy' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'IndexLanguage' ),
              ( ['out', 'retval'], POINTER(POINTER(Index)), 'prop' )),
]
################################################################
## code template for Indexes implementation
##class Indexes_Impl(object):
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Creator(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def _NewEnum(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Count(self):
##        '-no docstring-'
##        #return prop
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    Format = property(_get, _set, doc = _set.__doc__)
##
##    def Item(self, Index):
##        '-no docstring-'
##        #return prop
##
##    def AddOld(self, Range, HeadingSeparator, RightAlignPageNumbers, Type, NumberOfColumns, AccentedLetters):
##        '-no docstring-'
##        #return prop
##
##    def MarkEntry(self, Range, Entry, EntryAutoText, CrossReference, CrossReferenceAutoText, BookmarkName, Bold, Italic, Reading):
##        '-no docstring-'
##        #return prop
##
##    def MarkAllEntries(self, Range, Entry, EntryAutoText, CrossReference, CrossReferenceAutoText, BookmarkName, Bold, Italic):
##        '-no docstring-'
##        #return 
##
##    def AutoMarkEntries(self, ConcordanceFileName):
##        '-no docstring-'
##        #return 
##
##    def Add(self, Range, HeadingSeparator, RightAlignPageNumbers, Type, NumberOfColumns, AccentedLetters, SortBy, IndexLanguage):
##        '-no docstring-'
##        #return prop
##

OMath._methods_ = [
    COMMETHOD([dispid(100), 'propget'], HRESULT, 'Application',
              ( ['out', 'retval'], POINTER(POINTER(Application)), 'prop' )),
    COMMETHOD([dispid(101), 'propget'], HRESULT, 'Creator',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(102), 'propget'], HRESULT, 'Parent',
              ( ['out', 'retval'], POINTER(POINTER(IDispatch)), 'prop' )),
    COMMETHOD([dispid(103), 'propget'], HRESULT, 'Range',
              ( ['out', 'retval'], POINTER(POINTER(Range)), 'prop' )),
    COMMETHOD([dispid(104), 'propget'], HRESULT, 'Functions',
              ( ['out', 'retval'], POINTER(POINTER(OMathFunctions)), 'prop' )),
    COMMETHOD([dispid(105), 'propget'], HRESULT, 'Type',
              ( ['out', 'retval'], POINTER(WdOMathType), 'prop' )),
    COMMETHOD([dispid(105), 'propput'], HRESULT, 'Type',
              ( ['in'], WdOMathType, 'prop' )),
    COMMETHOD([dispid(106), 'propget'], HRESULT, 'ParentOMath',
              ( ['out', 'retval'], POINTER(POINTER(OMath)), 'prop' )),
    COMMETHOD([dispid(107), 'propget'], HRESULT, 'ParentFunction',
              ( ['out', 'retval'], POINTER(POINTER(OMathFunction)), 'prop' )),
    COMMETHOD([dispid(108), 'propget'], HRESULT, 'ParentRow',
              ( ['out', 'retval'], POINTER(POINTER(OMathMatRow)), 'prop' )),
    COMMETHOD([dispid(109), 'propget'], HRESULT, 'ParentCol',
              ( ['out', 'retval'], POINTER(POINTER(OMathMatCol)), 'prop' )),
    COMMETHOD([dispid(110), 'propget'], HRESULT, 'ParentArg',
              ( ['out', 'retval'], POINTER(POINTER(OMath)), 'prop' )),
    COMMETHOD([dispid(111), 'propget'], HRESULT, 'ArgIndex',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(112), 'propget'], HRESULT, 'NestingLevel',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(113), 'propget'], HRESULT, 'ArgSize',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(113), 'propput'], HRESULT, 'ArgSize',
              ( ['in'], c_int, 'prop' )),
    COMMETHOD([dispid(114), 'propget'], HRESULT, 'Breaks',
              ( ['out', 'retval'], POINTER(POINTER(OMathBreaks)), 'prop' )),
    COMMETHOD([dispid(115), 'propget'], HRESULT, 'Justification',
              ( ['out', 'retval'], POINTER(WdOMathJc), 'prop' )),
    COMMETHOD([dispid(115), 'propput'], HRESULT, 'Justification',
              ( ['in'], WdOMathJc, 'prop' )),
    COMMETHOD([dispid(116), 'propget'], HRESULT, 'AlignPoint',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(116), 'propput'], HRESULT, 'AlignPoint',
              ( ['in'], c_int, 'prop' )),
    COMMETHOD([dispid(200)], HRESULT, 'Linearize'),
    COMMETHOD([dispid(201)], HRESULT, 'BuildUp'),
    COMMETHOD([dispid(202)], HRESULT, 'Remove'),
    COMMETHOD([dispid(203)], HRESULT, 'ConvertToMathText'),
    COMMETHOD([dispid(204)], HRESULT, 'ConvertToNormalText'),
    COMMETHOD([dispid(205)], HRESULT, 'ConvertToLiteralText'),
]
################################################################
## code template for OMath implementation
##class OMath_Impl(object):
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Creator(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Range(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Functions(self):
##        '-no docstring-'
##        #return prop
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    Type = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def ParentOMath(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def ParentFunction(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def ParentRow(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def ParentCol(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def ParentArg(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def ArgIndex(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def NestingLevel(self):
##        '-no docstring-'
##        #return prop
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    ArgSize = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Breaks(self):
##        '-no docstring-'
##        #return prop
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    Justification = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    AlignPoint = property(_get, _set, doc = _set.__doc__)
##
##    def Linearize(self):
##        '-no docstring-'
##        #return 
##
##    def BuildUp(self):
##        '-no docstring-'
##        #return 
##
##    def Remove(self):
##        '-no docstring-'
##        #return 
##
##    def ConvertToMathText(self):
##        '-no docstring-'
##        #return 
##
##    def ConvertToNormalText(self):
##        '-no docstring-'
##        #return 
##
##    def ConvertToLiteralText(self):
##        '-no docstring-'
##        #return 
##


# values for enumeration 'WdRoutingSlipDelivery'
wdOneAfterAnother = 0
wdAllAtOnce = 1
WdRoutingSlipDelivery = c_int # enum
RoutingSlip._methods_ = [
    COMMETHOD([dispid(1000), 'propget'], HRESULT, 'Application',
              ( ['out', 'retval'], POINTER(POINTER(Application)), 'prop' )),
    COMMETHOD([dispid(1001), 'propget'], HRESULT, 'Creator',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(1002), 'propget'], HRESULT, 'Parent',
              ( ['out', 'retval'], POINTER(POINTER(IDispatch)), 'prop' )),
    COMMETHOD([dispid(1), 'propget'], HRESULT, 'Subject',
              ( ['out', 'retval'], POINTER(BSTR), 'prop' )),
    COMMETHOD([dispid(1), 'propput'], HRESULT, 'Subject',
              ( ['in'], BSTR, 'prop' )),
    COMMETHOD([dispid(2), 'propget'], HRESULT, 'Message',
              ( ['out', 'retval'], POINTER(BSTR), 'prop' )),
    COMMETHOD([dispid(2), 'propput'], HRESULT, 'Message',
              ( ['in'], BSTR, 'prop' )),
    COMMETHOD([dispid(3), 'propget'], HRESULT, 'Delivery',
              ( ['out', 'retval'], POINTER(WdRoutingSlipDelivery), 'prop' )),
    COMMETHOD([dispid(3), 'propput'], HRESULT, 'Delivery',
              ( ['in'], WdRoutingSlipDelivery, 'prop' )),
    COMMETHOD([dispid(4), 'propget'], HRESULT, 'TrackStatus',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'prop' )),
    COMMETHOD([dispid(4), 'propput'], HRESULT, 'TrackStatus',
              ( ['in'], VARIANT_BOOL, 'prop' )),
    COMMETHOD([dispid(5), 'propget'], HRESULT, 'Protect',
              ( ['out', 'retval'], POINTER(WdProtectionType), 'prop' )),
    COMMETHOD([dispid(5), 'propput'], HRESULT, 'Protect',
              ( ['in'], WdProtectionType, 'prop' )),
    COMMETHOD([dispid(6), 'propget'], HRESULT, 'ReturnWhenDone',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'prop' )),
    COMMETHOD([dispid(6), 'propput'], HRESULT, 'ReturnWhenDone',
              ( ['in'], VARIANT_BOOL, 'prop' )),
    COMMETHOD([dispid(7), 'propget'], HRESULT, 'Status',
              ( ['out', 'retval'], POINTER(WdRoutingSlipStatus), 'prop' )),
    COMMETHOD([dispid(9), 'propget'], HRESULT, 'Recipients',
              ( ['in', 'optional'], POINTER(VARIANT), 'Index' ),
              ( ['out', 'retval'], POINTER(VARIANT), 'prop' )),
    COMMETHOD([dispid(101)], HRESULT, 'Reset'),
    COMMETHOD([dispid(102)], HRESULT, 'AddRecipient',
              ( ['in'], BSTR, 'Recipient' )),
]
################################################################
## code template for RoutingSlip implementation
##class RoutingSlip_Impl(object):
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Creator(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return prop
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    Subject = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    Message = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    Delivery = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    TrackStatus = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    Protect = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    ReturnWhenDone = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Status(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Recipients(self, Index):
##        '-no docstring-'
##        #return prop
##
##    def Reset(self):
##        '-no docstring-'
##        #return 
##
##    def AddRecipient(self, Recipient):
##        '-no docstring-'
##        #return 
##

OtherCorrectionsExceptions._methods_ = [
    COMMETHOD([dispid(1000), 'propget'], HRESULT, 'Application',
              ( ['out', 'retval'], POINTER(POINTER(Application)), 'prop' )),
    COMMETHOD([dispid(1001), 'propget'], HRESULT, 'Creator',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(1002), 'propget'], HRESULT, 'Parent',
              ( ['out', 'retval'], POINTER(POINTER(IDispatch)), 'prop' )),
    COMMETHOD([dispid(-4), 'nonbrowsable', 'propget'], HRESULT, '_NewEnum',
              ( ['out', 'retval'], POINTER(POINTER(IUnknown)), 'prop' )),
    COMMETHOD([dispid(1), 'propget'], HRESULT, 'Count',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(0)], HRESULT, 'Item',
              ( ['in'], POINTER(VARIANT), 'Index' ),
              ( ['out', 'retval'], POINTER(POINTER(OtherCorrectionsException)), 'prop' )),
    COMMETHOD([dispid(101)], HRESULT, 'Add',
              ( ['in'], BSTR, 'Name' ),
              ( ['out', 'retval'], POINTER(POINTER(OtherCorrectionsException)), 'prop' )),
]
################################################################
## code template for OtherCorrectionsExceptions implementation
##class OtherCorrectionsExceptions_Impl(object):
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Creator(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def _NewEnum(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Count(self):
##        '-no docstring-'
##        #return prop
##
##    def Item(self, Index):
##        '-no docstring-'
##        #return prop
##
##    def Add(self, Name):
##        '-no docstring-'
##        #return prop
##

FillFormat._methods_ = [
    COMMETHOD([dispid(1000), 'propget'], HRESULT, 'Application',
              ( ['out', 'retval'], POINTER(POINTER(Application)), 'prop' )),
    COMMETHOD([dispid(1001), 'propget'], HRESULT, 'Creator',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(1), 'propget'], HRESULT, 'Parent',
              ( ['out', 'retval'], POINTER(POINTER(IDispatch)), 'prop' )),
    COMMETHOD([dispid(100), 'propget'], HRESULT, 'BackColor',
              ( ['out', 'retval'], POINTER(POINTER(ColorFormat)), 'prop' )),
    COMMETHOD([dispid(101), 'propget'], HRESULT, 'ForeColor',
              ( ['out', 'retval'], POINTER(POINTER(ColorFormat)), 'prop' )),
    COMMETHOD([dispid(102), 'propget'], HRESULT, 'GradientColorType',
              ( ['out', 'retval'], POINTER(comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoGradientColorType), 'prop' )),
    COMMETHOD([dispid(103), 'propget'], HRESULT, 'GradientDegree',
              ( ['out', 'retval'], POINTER(c_float), 'prop' )),
    COMMETHOD([dispid(104), 'propget'], HRESULT, 'GradientStyle',
              ( ['out', 'retval'], POINTER(comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoGradientStyle), 'prop' )),
    COMMETHOD([dispid(105), 'propget'], HRESULT, 'GradientVariant',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(106), 'propget'], HRESULT, 'Pattern',
              ( ['out', 'retval'], POINTER(comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoPatternType), 'prop' )),
    COMMETHOD([dispid(107), 'propget'], HRESULT, 'PresetGradientType',
              ( ['out', 'retval'], POINTER(comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoPresetGradientType), 'prop' )),
    COMMETHOD([dispid(108), 'propget'], HRESULT, 'PresetTexture',
              ( ['out', 'retval'], POINTER(comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoPresetTexture), 'prop' )),
    COMMETHOD([dispid(109), 'propget'], HRESULT, 'TextureName',
              ( ['out', 'retval'], POINTER(BSTR), 'prop' )),
    COMMETHOD([dispid(110), 'propget'], HRESULT, 'TextureType',
              ( ['out', 'retval'], POINTER(comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoTextureType), 'prop' )),
    COMMETHOD([dispid(111), 'propget'], HRESULT, 'Transparency',
              ( ['out', 'retval'], POINTER(c_float), 'prop' )),
    COMMETHOD([dispid(111), 'propput'], HRESULT, 'Transparency',
              ( ['in'], c_float, 'prop' )),
    COMMETHOD([dispid(112), 'propget'], HRESULT, 'Type',
              ( ['out', 'retval'], POINTER(comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoFillType), 'prop' )),
    COMMETHOD([dispid(113), 'propget'], HRESULT, 'Visible',
              ( ['out', 'retval'], POINTER(comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoTriState), 'prop' )),
    COMMETHOD([dispid(113), 'propput'], HRESULT, 'Visible',
              ( ['in'], comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoTriState, 'prop' )),
    COMMETHOD([dispid(10), 'hidden'], HRESULT, 'Background'),
    COMMETHOD([dispid(11)], HRESULT, 'OneColorGradient',
              ( ['in'], comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoGradientStyle, 'Style' ),
              ( ['in'], c_int, 'Variant' ),
              ( ['in'], c_float, 'Degree' )),
    COMMETHOD([dispid(12)], HRESULT, 'Patterned',
              ( ['in'], comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoPatternType, 'Pattern' )),
    COMMETHOD([dispid(13)], HRESULT, 'PresetGradient',
              ( ['in'], comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoGradientStyle, 'Style' ),
              ( ['in'], c_int, 'Variant' ),
              ( ['in'], comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoPresetGradientType, 'PresetGradientType' )),
    COMMETHOD([dispid(14)], HRESULT, 'PresetTextured',
              ( ['in'], comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoPresetTexture, 'PresetTexture' )),
    COMMETHOD([dispid(15)], HRESULT, 'Solid'),
    COMMETHOD([dispid(16)], HRESULT, 'TwoColorGradient',
              ( ['in'], comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoGradientStyle, 'Style' ),
              ( ['in'], c_int, 'Variant' )),
    COMMETHOD([dispid(17)], HRESULT, 'UserPicture',
              ( ['in'], BSTR, 'PictureFile' )),
    COMMETHOD([dispid(18)], HRESULT, 'UserTextured',
              ( ['in'], BSTR, 'TextureFile' )),
    COMMETHOD([dispid(114), 'propget'], HRESULT, 'GradientStops',
              ( ['out', 'retval'], POINTER(POINTER(comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.GradientStops)), 'prop' )),
    COMMETHOD([dispid(115), 'propget'], HRESULT, 'TextureOffsetX',
              ( ['out', 'retval'], POINTER(c_float), 'prop' )),
    COMMETHOD([dispid(115), 'propput'], HRESULT, 'TextureOffsetX',
              ( ['in'], c_float, 'prop' )),
    COMMETHOD([dispid(116), 'propget'], HRESULT, 'TextureOffsetY',
              ( ['out', 'retval'], POINTER(c_float), 'prop' )),
    COMMETHOD([dispid(116), 'propput'], HRESULT, 'TextureOffsetY',
              ( ['in'], c_float, 'prop' )),
    COMMETHOD([dispid(117), 'propget'], HRESULT, 'TextureAlignment',
              ( ['out', 'retval'], POINTER(comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoTextureAlignment), 'prop' )),
    COMMETHOD([dispid(117), 'propput'], HRESULT, 'TextureAlignment',
              ( ['in'], comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoTextureAlignment, 'prop' )),
    COMMETHOD([dispid(118), 'propget'], HRESULT, 'TextureHorizontalScale',
              ( ['out', 'retval'], POINTER(c_float), 'prop' )),
    COMMETHOD([dispid(118), 'propput'], HRESULT, 'TextureHorizontalScale',
              ( ['in'], c_float, 'prop' )),
    COMMETHOD([dispid(119), 'propget'], HRESULT, 'TextureVerticalScale',
              ( ['out', 'retval'], POINTER(c_float), 'prop' )),
    COMMETHOD([dispid(119), 'propput'], HRESULT, 'TextureVerticalScale',
              ( ['in'], c_float, 'prop' )),
    COMMETHOD([dispid(120), 'propget'], HRESULT, 'TextureTile',
              ( ['out', 'retval'], POINTER(comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoTriState), 'prop' )),
    COMMETHOD([dispid(120), 'propput'], HRESULT, 'TextureTile',
              ( ['in'], comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoTriState, 'prop' )),
    COMMETHOD([dispid(121), 'propget'], HRESULT, 'RotateWithObject',
              ( ['out', 'retval'], POINTER(comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoTriState), 'prop' )),
    COMMETHOD([dispid(121), 'propput'], HRESULT, 'RotateWithObject',
              ( ['in'], comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoTriState, 'prop' )),
    COMMETHOD([dispid(122), 'propget'], HRESULT, 'PictureEffects',
              ( ['out', 'retval'], POINTER(POINTER(comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.PictureEffects)), 'prop' )),
    COMMETHOD([dispid(123), 'propget'], HRESULT, 'GradientAngle',
              ( ['out', 'retval'], POINTER(c_float), 'prop' )),
    COMMETHOD([dispid(123), 'propput'], HRESULT, 'GradientAngle',
              ( ['in'], c_float, 'prop' )),
]
################################################################
## code template for FillFormat implementation
##class FillFormat_Impl(object):
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Creator(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def BackColor(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def ForeColor(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def GradientColorType(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def GradientDegree(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def GradientStyle(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def GradientVariant(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Pattern(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def PresetGradientType(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def PresetTexture(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def TextureName(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def TextureType(self):
##        '-no docstring-'
##        #return prop
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    Transparency = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Type(self):
##        '-no docstring-'
##        #return prop
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    Visible = property(_get, _set, doc = _set.__doc__)
##
##    def Background(self):
##        '-no docstring-'
##        #return 
##
##    def OneColorGradient(self, Style, Variant, Degree):
##        '-no docstring-'
##        #return 
##
##    def Patterned(self, Pattern):
##        '-no docstring-'
##        #return 
##
##    def PresetGradient(self, Style, Variant, PresetGradientType):
##        '-no docstring-'
##        #return 
##
##    def PresetTextured(self, PresetTexture):
##        '-no docstring-'
##        #return 
##
##    def Solid(self):
##        '-no docstring-'
##        #return 
##
##    def TwoColorGradient(self, Style, Variant):
##        '-no docstring-'
##        #return 
##
##    def UserPicture(self, PictureFile):
##        '-no docstring-'
##        #return 
##
##    def UserTextured(self, TextureFile):
##        '-no docstring-'
##        #return 
##
##    @property
##    def GradientStops(self):
##        '-no docstring-'
##        #return prop
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    TextureOffsetX = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    TextureOffsetY = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    TextureAlignment = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    TextureHorizontalScale = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    TextureVerticalScale = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    TextureTile = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    RotateWithObject = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def PictureEffects(self):
##        '-no docstring-'
##        #return prop
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    GradientAngle = property(_get, _set, doc = _set.__doc__)
##

ChartBorder._methods_ = [
    COMMETHOD([dispid(1610743808), 'propget'], HRESULT, 'Color',
              ( ['out', 'retval'], POINTER(VARIANT), 'prop' )),
    COMMETHOD([dispid(1610743808), 'propput'], HRESULT, 'Color',
              ( ['in'], VARIANT, 'prop' )),
    COMMETHOD([dispid(1610743810), 'propget'], HRESULT, 'ColorIndex',
              ( ['out', 'retval'], POINTER(VARIANT), 'prop' )),
    COMMETHOD([dispid(1610743810), 'propput'], HRESULT, 'ColorIndex',
              ( ['in'], VARIANT, 'prop' )),
    COMMETHOD([dispid(1610743812), 'propget'], HRESULT, 'LineStyle',
              ( ['out', 'retval'], POINTER(VARIANT), 'prop' )),
    COMMETHOD([dispid(1610743812), 'propput'], HRESULT, 'LineStyle',
              ( ['in'], VARIANT, 'prop' )),
    COMMETHOD([dispid(1610743814), 'propget'], HRESULT, 'Weight',
              ( ['out', 'retval'], POINTER(VARIANT), 'prop' )),
    COMMETHOD([dispid(1610743814), 'propput'], HRESULT, 'Weight',
              ( ['in'], VARIANT, 'prop' )),
    COMMETHOD([dispid(148), 'propget'], HRESULT, 'Application',
              ( ['out', 'retval'], POINTER(POINTER(IDispatch)), 'prop' )),
    COMMETHOD([dispid(149), 'propget'], HRESULT, 'Creator',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(150), 'propget'], HRESULT, 'Parent',
              ( ['out', 'retval'], POINTER(POINTER(IDispatch)), 'prop' )),
]
################################################################
## code template for ChartBorder implementation
##class ChartBorder_Impl(object):
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    Color = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    ColorIndex = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    LineStyle = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    Weight = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Creator(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return prop
##


# values for enumeration 'WdPictureLinkType'
wdLinkNone = 0
wdLinkDataInDoc = 1
wdLinkDataOnDisk = 2
WdPictureLinkType = c_int # enum
BuildingBlockType._methods_ = [
    COMMETHOD([dispid(1000), 'propget'], HRESULT, 'Application',
              ( ['out', 'retval'], POINTER(POINTER(Application)), 'prop' )),
    COMMETHOD([dispid(1001), 'propget'], HRESULT, 'Creator',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(1002), 'propget'], HRESULT, 'Parent',
              ( ['out', 'retval'], POINTER(POINTER(IDispatch)), 'prop' )),
    COMMETHOD([dispid(1), 'propget'], HRESULT, 'Index',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(2), 'propget'], HRESULT, 'Name',
              ( ['out', 'retval'], POINTER(BSTR), 'prop' )),
    COMMETHOD([dispid(20), 'propget'], HRESULT, 'Categories',
              ( ['out', 'retval'], POINTER(POINTER(Categories)), 'prop' )),
]
################################################################
## code template for BuildingBlockType implementation
##class BuildingBlockType_Impl(object):
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Creator(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Index(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Name(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Categories(self):
##        '-no docstring-'
##        #return prop
##

StyleSheets._methods_ = [
    COMMETHOD([dispid(1000), 'propget'], HRESULT, 'Application',
              ( ['out', 'retval'], POINTER(POINTER(Application)), 'prop' )),
    COMMETHOD([dispid(1001), 'propget'], HRESULT, 'Creator',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(1002), 'propget'], HRESULT, 'Parent',
              ( ['out', 'retval'], POINTER(POINTER(IDispatch)), 'prop' )),
    COMMETHOD([dispid(-4), 'nonbrowsable', 'propget'], HRESULT, '_NewEnum',
              ( ['out', 'retval'], POINTER(POINTER(IUnknown)), 'prop' )),
    COMMETHOD([dispid(1), 'propget'], HRESULT, 'Count',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(0)], HRESULT, 'Item',
              ( ['in'], POINTER(VARIANT), 'Index' ),
              ( ['out', 'retval'], POINTER(POINTER(StyleSheet)), 'prop' )),
    COMMETHOD([dispid(2)], HRESULT, 'Add',
              ( ['in'], BSTR, 'FileName' ),
              ( ['in'], WdStyleSheetLinkType, 'LinkType' ),
              ( ['in'], BSTR, 'Title' ),
              ( ['in'], WdStyleSheetPrecedence, 'Precedence' ),
              ( ['out', 'retval'], POINTER(POINTER(StyleSheet)), 'prop' )),
]
################################################################
## code template for StyleSheets implementation
##class StyleSheets_Impl(object):
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Creator(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def _NewEnum(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Count(self):
##        '-no docstring-'
##        #return prop
##
##    def Item(self, Index):
##        '-no docstring-'
##        #return prop
##
##    def Add(self, FileName, LinkType, Title, Precedence):
##        '-no docstring-'
##        #return prop
##

Browser._methods_ = [
    COMMETHOD([dispid(1000), 'propget'], HRESULT, 'Application',
              ( ['out', 'retval'], POINTER(POINTER(Application)), 'prop' )),
    COMMETHOD([dispid(1001), 'propget'], HRESULT, 'Creator',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(1002), 'propget'], HRESULT, 'Parent',
              ( ['out', 'retval'], POINTER(POINTER(IDispatch)), 'prop' )),
    COMMETHOD([dispid(1), 'propget'], HRESULT, 'Target',
              ( ['out', 'retval'], POINTER(WdBrowseTarget), 'prop' )),
    COMMETHOD([dispid(1), 'propput'], HRESULT, 'Target',
              ( ['in'], WdBrowseTarget, 'prop' )),
    COMMETHOD([dispid(101)], HRESULT, 'Next'),
    COMMETHOD([dispid(102)], HRESULT, 'Previous'),
]
################################################################
## code template for Browser implementation
##class Browser_Impl(object):
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Creator(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return prop
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    Target = property(_get, _set, doc = _set.__doc__)
##
##    def Next(self):
##        '-no docstring-'
##        #return 
##
##    def Previous(self):
##        '-no docstring-'
##        #return 
##

class IApplicationEvents2(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{000209FE-0001-0000-C000-000000000046}')
    _idlflags_ = ['hidden', 'dual', 'nonextensible', 'oleautomation']
IApplicationEvents2._methods_ = [
    COMMETHOD([dispid(1), 'restricted', 'hidden'], HRESULT, 'Startup'),
    COMMETHOD([dispid(2)], HRESULT, 'Quit'),
    COMMETHOD([dispid(3)], HRESULT, 'DocumentChange'),
    COMMETHOD([dispid(4)], HRESULT, 'DocumentOpen',
              ( ['in'], POINTER(Document), 'Doc' )),
    COMMETHOD([dispid(6)], HRESULT, 'DocumentBeforeClose',
              ( ['in'], POINTER(Document), 'Doc' ),
              ( ['in'], POINTER(VARIANT_BOOL), 'Cancel' )),
    COMMETHOD([dispid(7)], HRESULT, 'DocumentBeforePrint',
              ( ['in'], POINTER(Document), 'Doc' ),
              ( ['in'], POINTER(VARIANT_BOOL), 'Cancel' )),
    COMMETHOD([dispid(8)], HRESULT, 'DocumentBeforeSave',
              ( ['in'], POINTER(Document), 'Doc' ),
              ( ['in'], POINTER(VARIANT_BOOL), 'SaveAsUI' ),
              ( ['in'], POINTER(VARIANT_BOOL), 'Cancel' )),
    COMMETHOD([dispid(9)], HRESULT, 'NewDocument',
              ( ['in'], POINTER(Document), 'Doc' )),
    COMMETHOD([dispid(10)], HRESULT, 'WindowActivate',
              ( ['in'], POINTER(Document), 'Doc' ),
              ( ['in'], POINTER(Window), 'Wn' )),
    COMMETHOD([dispid(11)], HRESULT, 'WindowDeactivate',
              ( ['in'], POINTER(Document), 'Doc' ),
              ( ['in'], POINTER(Window), 'Wn' )),
    COMMETHOD([dispid(12)], HRESULT, 'WindowSelectionChange',
              ( ['in'], POINTER(Selection), 'Sel' )),
    COMMETHOD([dispid(13)], HRESULT, 'WindowBeforeRightClick',
              ( ['in'], POINTER(Selection), 'Sel' ),
              ( ['in'], POINTER(VARIANT_BOOL), 'Cancel' )),
    COMMETHOD([dispid(14)], HRESULT, 'WindowBeforeDoubleClick',
              ( ['in'], POINTER(Selection), 'Sel' ),
              ( ['in'], POINTER(VARIANT_BOOL), 'Cancel' )),
]
################################################################
## code template for IApplicationEvents2 implementation
##class IApplicationEvents2_Impl(object):
##    def Startup(self):
##        '-no docstring-'
##        #return 
##
##    def Quit(self):
##        '-no docstring-'
##        #return 
##
##    def DocumentChange(self):
##        '-no docstring-'
##        #return 
##
##    def DocumentOpen(self, Doc):
##        '-no docstring-'
##        #return 
##
##    def DocumentBeforeClose(self, Doc, Cancel):
##        '-no docstring-'
##        #return 
##
##    def DocumentBeforePrint(self, Doc, Cancel):
##        '-no docstring-'
##        #return 
##
##    def DocumentBeforeSave(self, Doc, SaveAsUI, Cancel):
##        '-no docstring-'
##        #return 
##
##    def NewDocument(self, Doc):
##        '-no docstring-'
##        #return 
##
##    def WindowActivate(self, Doc, Wn):
##        '-no docstring-'
##        #return 
##
##    def WindowDeactivate(self, Doc, Wn):
##        '-no docstring-'
##        #return 
##
##    def WindowSelectionChange(self, Sel):
##        '-no docstring-'
##        #return 
##
##    def WindowBeforeRightClick(self, Sel, Cancel):
##        '-no docstring-'
##        #return 
##
##    def WindowBeforeDoubleClick(self, Sel, Cancel):
##        '-no docstring-'
##        #return 
##

UpBars._methods_ = [
    COMMETHOD([dispid(110), 'propget'], HRESULT, 'Name',
              ( ['out', 'retval'], POINTER(BSTR), 'prop' )),
    COMMETHOD([dispid(235)], HRESULT, 'Select',
              ( ['out', 'retval'], POINTER(VARIANT), 'prop' )),
    COMMETHOD([dispid(150), 'propget'], HRESULT, 'Parent',
              ( ['out', 'retval'], POINTER(POINTER(IDispatch)), 'prop' )),
    COMMETHOD([dispid(128), 'propget'], HRESULT, 'Border',
              ( ['out', 'retval'], POINTER(POINTER(ChartBorder)), 'prop' )),
    COMMETHOD([dispid(117)], HRESULT, 'Delete',
              ( ['out', 'retval'], POINTER(VARIANT), 'prop' )),
    COMMETHOD([dispid(129), 'propget'], HRESULT, 'Interior',
              ( ['out', 'retval'], POINTER(POINTER(Interior)), 'prop' )),
    COMMETHOD([dispid(1663), 'propget'], HRESULT, 'Fill',
              ( ['out', 'retval'], POINTER(POINTER(ChartFillFormat)), 'prop' )),
    COMMETHOD([dispid(1610743815), 'propget'], HRESULT, 'Format',
              ( ['out', 'retval'], POINTER(POINTER(ChartFormat)), 'prop' )),
    COMMETHOD([dispid(148), 'propget'], HRESULT, 'Application',
              ( ['out', 'retval'], POINTER(POINTER(IDispatch)), 'prop' )),
    COMMETHOD([dispid(149), 'propget'], HRESULT, 'Creator',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(253)], HRESULT, 'SetProperty',
              ( ['in'], BSTR, 'ID' ),
              ( ['in'], VARIANT, 'Value' )),
    COMMETHOD([dispid(254)], HRESULT, 'GetProperty',
              ( ['in'], BSTR, 'ID' ),
              ( ['out', 'retval'], POINTER(VARIANT), 'prop' )),
]
################################################################
## code template for UpBars implementation
##class UpBars_Impl(object):
##    @property
##    def Name(self):
##        '-no docstring-'
##        #return prop
##
##    def Select(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Border(self):
##        '-no docstring-'
##        #return prop
##
##    def Delete(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Interior(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Fill(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Format(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Creator(self):
##        '-no docstring-'
##        #return prop
##
##    def SetProperty(self, ID, Value):
##        '-no docstring-'
##        #return 
##
##    def GetProperty(self, ID):
##        '-no docstring-'
##        #return prop
##

XMLChildNodeSuggestion._methods_ = [
    COMMETHOD([dispid(1000), 'hidden', 'propget'], HRESULT, 'Application',
              ( ['out', 'retval'], POINTER(POINTER(Application)), 'prop' )),
    COMMETHOD([dispid(1001), 'hidden', 'propget'], HRESULT, 'Creator',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(1002), 'hidden', 'propget'], HRESULT, 'Parent',
              ( ['out', 'retval'], POINTER(POINTER(IDispatch)), 'prop' )),
    COMMETHOD([dispid(0), 'hidden', 'propget'], HRESULT, 'BaseName',
              ( ['out', 'retval'], POINTER(BSTR), 'prop' )),
    COMMETHOD([dispid(3), 'hidden', 'propget'], HRESULT, 'NamespaceURI',
              ( ['out', 'retval'], POINTER(BSTR), 'prop' )),
    COMMETHOD([dispid(4), 'hidden', 'propget'], HRESULT, 'XMLSchemaReference',
              ( ['out', 'retval'], POINTER(POINTER(XMLSchemaReference)), 'prop' )),
    COMMETHOD([dispid(100), 'hidden'], HRESULT, 'Insert',
              ( ['in', 'optional'], POINTER(VARIANT), 'Range' ),
              ( ['out', 'retval'], POINTER(POINTER(XMLNode)), 'prop' )),
]
################################################################
## code template for XMLChildNodeSuggestion implementation
##class XMLChildNodeSuggestion_Impl(object):
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Creator(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def BaseName(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def NamespaceURI(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def XMLSchemaReference(self):
##        '-no docstring-'
##        #return prop
##
##    def Insert(self, Range):
##        '-no docstring-'
##        #return prop
##

Conflict._methods_ = [
    COMMETHOD([dispid(1000), 'propget'], HRESULT, 'Application',
              ( ['out', 'retval'], POINTER(POINTER(Application)), 'prop' )),
    COMMETHOD([dispid(1001), 'propget'], HRESULT, 'Creator',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(1002), 'propget'], HRESULT, 'Parent',
              ( ['out', 'retval'], POINTER(POINTER(IDispatch)), 'prop' )),
    COMMETHOD([dispid(3), 'propget'], HRESULT, 'Range',
              ( ['out', 'retval'], POINTER(POINTER(Range)), 'prop' )),
    COMMETHOD([dispid(4), 'propget'], HRESULT, 'Type',
              ( ['out', 'retval'], POINTER(WdRevisionType), 'prop' )),
    COMMETHOD([dispid(5), 'propget'], HRESULT, 'Index',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(101)], HRESULT, 'Accept'),
    COMMETHOD([dispid(102)], HRESULT, 'Reject'),
]
################################################################
## code template for Conflict implementation
##class Conflict_Impl(object):
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Creator(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Range(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Type(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Index(self):
##        '-no docstring-'
##        #return prop
##
##    def Accept(self):
##        '-no docstring-'
##        #return 
##
##    def Reject(self):
##        '-no docstring-'
##        #return 
##

OCXEvents._disp_methods_ = [
    DISPMETHOD([dispid(-2147417888)], None, 'GotFocus'),
    DISPMETHOD([dispid(-2147417887)], None, 'LostFocus'),
]
Diagram._methods_ = [
    COMMETHOD([dispid(1000), 'propget'], HRESULT, 'Application',
              ( ['out', 'retval'], POINTER(POINTER(Application)), 'prop' )),
    COMMETHOD([dispid(1001), 'propget'], HRESULT, 'Creator',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(100), 'propget'], HRESULT, 'Parent',
              ( ['out', 'retval'], POINTER(POINTER(IDispatch)), 'prop' )),
    COMMETHOD([dispid(101), 'propget'], HRESULT, 'Nodes',
              ( ['out', 'retval'], POINTER(POINTER(DiagramNodes)), 'prop' )),
    COMMETHOD([dispid(102), 'propget'], HRESULT, 'Type',
              ( ['out', 'retval'], POINTER(comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoDiagramType), 'prop' )),
    COMMETHOD([dispid(103), 'propget'], HRESULT, 'AutoLayout',
              ( ['out', 'retval'], POINTER(comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoTriState), 'prop' )),
    COMMETHOD([dispid(103), 'propput'], HRESULT, 'AutoLayout',
              ( ['in'], comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoTriState, 'prop' )),
    COMMETHOD([dispid(104), 'propget'], HRESULT, 'Reverse',
              ( ['out', 'retval'], POINTER(comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoTriState), 'prop' )),
    COMMETHOD([dispid(104), 'propput'], HRESULT, 'Reverse',
              ( ['in'], comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoTriState, 'prop' )),
    COMMETHOD([dispid(105), 'propget'], HRESULT, 'AutoFormat',
              ( ['out', 'retval'], POINTER(comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoTriState), 'prop' )),
    COMMETHOD([dispid(105), 'propput'], HRESULT, 'AutoFormat',
              ( ['in'], comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoTriState, 'prop' )),
    COMMETHOD([dispid(10)], HRESULT, 'Convert',
              ( ['in'], comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoDiagramType, 'Type' )),
    COMMETHOD([dispid(11)], HRESULT, 'FitText'),
]
################################################################
## code template for Diagram implementation
##class Diagram_Impl(object):
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Creator(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Nodes(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Type(self):
##        '-no docstring-'
##        #return prop
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    AutoLayout = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    Reverse = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    AutoFormat = property(_get, _set, doc = _set.__doc__)
##
##    def Convert(self, Type):
##        '-no docstring-'
##        #return 
##
##    def FitText(self):
##        '-no docstring-'
##        #return 
##

OMathScrSup._methods_ = [
    COMMETHOD([dispid(100), 'propget'], HRESULT, 'Application',
              ( ['out', 'retval'], POINTER(POINTER(Application)), 'prop' )),
    COMMETHOD([dispid(101), 'propget'], HRESULT, 'Creator',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(102), 'propget'], HRESULT, 'Parent',
              ( ['out', 'retval'], POINTER(POINTER(IDispatch)), 'prop' )),
    COMMETHOD([dispid(103), 'propget'], HRESULT, 'E',
              ( ['out', 'retval'], POINTER(POINTER(OMath)), 'prop' )),
    COMMETHOD([dispid(104), 'propget'], HRESULT, 'Sup',
              ( ['out', 'retval'], POINTER(POINTER(OMath)), 'prop' )),
]
################################################################
## code template for OMathScrSup implementation
##class OMathScrSup_Impl(object):
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Creator(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def E(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Sup(self):
##        '-no docstring-'
##        #return prop
##

ListGalleries._methods_ = [
    COMMETHOD([dispid(-4), 'nonbrowsable', 'propget'], HRESULT, '_NewEnum',
              ( ['out', 'retval'], POINTER(POINTER(IUnknown)), 'prop' )),
    COMMETHOD([dispid(2), 'propget'], HRESULT, 'Count',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(1000), 'propget'], HRESULT, 'Application',
              ( ['out', 'retval'], POINTER(POINTER(Application)), 'prop' )),
    COMMETHOD([dispid(1001), 'propget'], HRESULT, 'Creator',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(1002), 'propget'], HRESULT, 'Parent',
              ( ['out', 'retval'], POINTER(POINTER(IDispatch)), 'prop' )),
    COMMETHOD([dispid(0)], HRESULT, 'Item',
              ( ['in'], WdListGalleryType, 'Index' ),
              ( ['out', 'retval'], POINTER(POINTER(ListGallery)), 'prop' )),
]
################################################################
## code template for ListGalleries implementation
##class ListGalleries_Impl(object):
##    @property
##    def _NewEnum(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Count(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Creator(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return prop
##
##    def Item(self, Index):
##        '-no docstring-'
##        #return prop
##

SpellingSuggestion._methods_ = [
    COMMETHOD([dispid(1000), 'propget'], HRESULT, 'Application',
              ( ['out', 'retval'], POINTER(POINTER(Application)), 'prop' )),
    COMMETHOD([dispid(1001), 'propget'], HRESULT, 'Creator',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(1002), 'propget'], HRESULT, 'Parent',
              ( ['out', 'retval'], POINTER(POINTER(IDispatch)), 'prop' )),
    COMMETHOD([dispid(0), 'propget'], HRESULT, 'Name',
              ( ['out', 'retval'], POINTER(BSTR), 'prop' )),
]
################################################################
## code template for SpellingSuggestion implementation
##class SpellingSuggestion_Impl(object):
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Creator(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Name(self):
##        '-no docstring-'
##        #return prop
##


# values for enumeration 'WdTabLeaderHID'
emptyenum = 0
WdTabLeaderHID = c_int # enum
TextColumn._methods_ = [
    COMMETHOD([dispid(1000), 'propget'], HRESULT, 'Application',
              ( ['out', 'retval'], POINTER(POINTER(Application)), 'prop' )),
    COMMETHOD([dispid(1001), 'propget'], HRESULT, 'Creator',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(1002), 'propget'], HRESULT, 'Parent',
              ( ['out', 'retval'], POINTER(POINTER(IDispatch)), 'prop' )),
    COMMETHOD([dispid(100), 'propget'], HRESULT, 'Width',
              ( ['out', 'retval'], POINTER(c_float), 'prop' )),
    COMMETHOD([dispid(100), 'propput'], HRESULT, 'Width',
              ( ['in'], c_float, 'prop' )),
    COMMETHOD([dispid(101), 'propget'], HRESULT, 'SpaceAfter',
              ( ['out', 'retval'], POINTER(c_float), 'prop' )),
    COMMETHOD([dispid(101), 'propput'], HRESULT, 'SpaceAfter',
              ( ['in'], c_float, 'prop' )),
]
################################################################
## code template for TextColumn implementation
##class TextColumn_Impl(object):
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Creator(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return prop
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    Width = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    SpaceAfter = property(_get, _set, doc = _set.__doc__)
##


# values for enumeration 'WdLanguageID2000'
wdChineseHongKong = 3076
wdChineseMacao = 5124
wdEnglishTrinidad = 11273
WdLanguageID2000 = c_int # enum
MailMergeDataSource._methods_ = [
    COMMETHOD([dispid(1000), 'propget'], HRESULT, 'Application',
              ( ['out', 'retval'], POINTER(POINTER(Application)), 'prop' )),
    COMMETHOD([dispid(1001), 'propget'], HRESULT, 'Creator',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(1002), 'propget'], HRESULT, 'Parent',
              ( ['out', 'retval'], POINTER(POINTER(IDispatch)), 'prop' )),
    COMMETHOD([dispid(1), 'propget'], HRESULT, 'Name',
              ( ['out', 'retval'], POINTER(BSTR), 'prop' )),
    COMMETHOD([dispid(2), 'propget'], HRESULT, 'HeaderSourceName',
              ( ['out', 'retval'], POINTER(BSTR), 'prop' )),
    COMMETHOD([dispid(3), 'propget'], HRESULT, 'Type',
              ( ['out', 'retval'], POINTER(WdMailMergeDataSource), 'prop' )),
    COMMETHOD([dispid(4), 'propget'], HRESULT, 'HeaderSourceType',
              ( ['out', 'retval'], POINTER(WdMailMergeDataSource), 'prop' )),
    COMMETHOD([dispid(5), 'propget'], HRESULT, 'ConnectString',
              ( ['out', 'retval'], POINTER(BSTR), 'prop' )),
    COMMETHOD([dispid(6), 'propget'], HRESULT, 'QueryString',
              ( ['out', 'retval'], POINTER(BSTR), 'prop' )),
    COMMETHOD([dispid(6), 'propput'], HRESULT, 'QueryString',
              ( ['in'], BSTR, 'prop' )),
    COMMETHOD([dispid(7), 'propget'], HRESULT, 'ActiveRecord',
              ( ['out', 'retval'], POINTER(WdMailMergeActiveRecord), 'prop' )),
    COMMETHOD([dispid(7), 'propput'], HRESULT, 'ActiveRecord',
              ( ['in'], WdMailMergeActiveRecord, 'prop' )),
    COMMETHOD([dispid(8), 'propget'], HRESULT, 'FirstRecord',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(8), 'propput'], HRESULT, 'FirstRecord',
              ( ['in'], c_int, 'prop' )),
    COMMETHOD([dispid(9), 'propget'], HRESULT, 'LastRecord',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(9), 'propput'], HRESULT, 'LastRecord',
              ( ['in'], c_int, 'prop' )),
    COMMETHOD([dispid(10), 'propget'], HRESULT, 'FieldNames',
              ( ['out', 'retval'], POINTER(POINTER(MailMergeFieldNames)), 'prop' )),
    COMMETHOD([dispid(11), 'propget'], HRESULT, 'DataFields',
              ( ['out', 'retval'], POINTER(POINTER(MailMergeDataFields)), 'prop' )),
    COMMETHOD([dispid(101), 'hidden'], HRESULT, 'FindRecord2000',
              ( ['in'], BSTR, 'FindText' ),
              ( ['in'], BSTR, 'Field' ),
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'prop' )),
    COMMETHOD([dispid(12), 'propget'], HRESULT, 'RecordCount',
              ( ['out', 'retval'], POINTER(c_int), 'prop' )),
    COMMETHOD([dispid(13), 'propget'], HRESULT, 'Included',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'prop' )),
    COMMETHOD([dispid(13), 'propput'], HRESULT, 'Included',
              ( ['in'], VARIANT_BOOL, 'prop' )),
    COMMETHOD([dispid(14), 'propget'], HRESULT, 'InvalidAddress',
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'prop' )),
    COMMETHOD([dispid(14), 'propput'], HRESULT, 'InvalidAddress',
              ( ['in'], VARIANT_BOOL, 'prop' )),
    COMMETHOD([dispid(15), 'propget'], HRESULT, 'InvalidComments',
              ( ['out', 'retval'], POINTER(BSTR), 'prop' )),
    COMMETHOD([dispid(15), 'propput'], HRESULT, 'InvalidComments',
              ( ['in'], BSTR, 'prop' )),
    COMMETHOD([dispid(16), 'propget'], HRESULT, 'MappedDataFields',
              ( ['out', 'retval'], POINTER(POINTER(MappedDataFields)), 'prop' )),
    COMMETHOD([dispid(17), 'propget'], HRESULT, 'TableName',
              ( ['out', 'retval'], POINTER(BSTR), 'prop' )),
    COMMETHOD([dispid(102)], HRESULT, 'FindRecord',
              ( ['in'], BSTR, 'FindText' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'Field' ),
              ( ['out', 'retval'], POINTER(VARIANT_BOOL), 'prop' )),
    COMMETHOD([dispid(103)], HRESULT, 'SetAllIncludedFlags',
              ( ['in'], VARIANT_BOOL, 'Included' )),
    COMMETHOD([dispid(104)], HRESULT, 'SetAllErrorFlags',
              ( ['in'], VARIANT_BOOL, 'Invalid' ),
              ( ['in'], BSTR, 'InvalidComment' )),
    COMMETHOD([dispid(105)], HRESULT, 'Close'),
]
################################################################
## code template for MailMergeDataSource implementation
##class MailMergeDataSource_Impl(object):
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Creator(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Name(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def HeaderSourceName(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def Type(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def HeaderSourceType(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def ConnectString(self):
##        '-no docstring-'
##        #return prop
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    QueryString = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    ActiveRecord = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    FirstRecord = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    LastRecord = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def FieldNames(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def DataFields(self):
##        '-no docstring-'
##        #return prop
##
##    def FindRecord2000(self, FindText, Field):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def RecordCount(self):
##        '-no docstring-'
##        #return prop
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    Included = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    InvalidAddress = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return prop
##    def _set(self, prop):
##        '-no docstring-'
##    InvalidComments = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def MappedDataFields(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def TableName(self):
##        '-no docstring-'
##        #return prop
##
##    def FindRecord(self, FindText, Field):
##        '-no docstring-'
##        #return prop
##
##    def SetAllIncludedFlags(self, Included):
##        '-no docstring-'
##        #return 
##
##    def SetAllErrorFlags(self, Invalid, InvalidComment):
##        '-no docstring-'
##        #return 
##
##    def Close(self):
##        '-no docstring-'
##        #return 
##

__all__ = [ 'wdWW6BorderRules', 'wdPageNumberStyleArabic',
           'wdTOFDistinctive', 'ApplicationEvents3',
           'wdLineStyleThickThinLargeGap', 'wdGenderFemale',
           'WdRevisionsView', 'wdInlineShapeGraphic',
           'wdStyleTypeList', 'wdOMathFunctionText', 'wdJobTitle',
           'wdColorViolet', 'wdSpanishVenezuela',
           'wdCustomLabelFanfold', 'xlLegendPositionRight',
           'xlPatternHorizontal', 'wdHelpExamplesAndDemos',
           'wdHighAnsiIsHighAnsi', 'wdRelativeVerticalPositionPage',
           'wdArtHandmade2', 'wdDecimalSeparator',
           'xlGeoMappingLevelState',
           'wdDialogFormatDrawingObjectTabPicture', 'wdSECell',
           'wdInFieldResult', 'wdOMathShapeMatch', 'wdTypeTextBox',
           'wdColorGray65', 'wdSpelling', 'wdTable', 'xlCap',
           'wdBorderRight', 'xlYellowGreen', 'wdStyleBibliography',
           'xlPlusValues', 'wdFrenchCotedIvoire',
           'wdStyleListNumber5', 'wdDialogToolsOptionsTabProofread',
           'wdReadingModeNavigation', 'wdUnderlineWavyHeavy',
           'BuildingBlockEntries', 'wdResetList', 'wdWithInTable',
           'wdRevisedPropertiesMarkDoubleUnderline',
           'wdTaskPaneProofing', 'wdLigaturesStandardHistorical',
           'wdSubscriberText', 'WdFlowDirection', 'wdTatar',
           'wdFELineBreak11', 'WdFramesetSizeType', 'wdHalfWidth',
           'wdFootnoteNumberFormatted',
           'wdDialogFormatFontTabAnimation',
           'wdCaptionNumberStyleGanada', 'wdMatchGraphic',
           'wdHelpPSSHelp', 'wdLinkDataOnDisk', 'wdSectionOddPage',
           'wdTextureDarkDiagonalCross',
           'wdDialogFormatBordersAndShadingTabShading', 'wdBorderTop',
           'wdStyleBodyTextIndent3', 'wdNoRevision',
           'wdDialogFilePageSetup', 'ConditionalStyle',
           'xlHAlignCenter', 'wdTiled', 'wdFieldIncludePicture',
           'WdDocPartInsertOptions', 'wdListDontMerge',
           'xlDodgerBlue', 'wdDialogEditTOACategory',
           'WdPageNumberStyle', 'xlHairline', 'wdKeyOpenSquareBrace',
           'wdDialogInsertCrossReference', 'Revisions',
           'xlGeoMappingLevelAutomatic', 'wdDialogTableDeleteCells',
           'WdSpellingWordType', 'wdDialogOrganizerTabStyles',
           'wdKey6', 'wdCustomLabelA5LS', 'wdWrapMergeThrough',
           'XlOrientation', 'wdNoMailSystem',
           'wdMoveFromTextMarkDoubleUnderline', 'Style',
           'xlFrontSides', 'wdHelp', 'wdFramesetNewFrameBelow',
           'wdMatchCommentMark', 'wdFieldBibliography', 'wdPashto',
           'wdNECell', 'wdDialogEditStyle', 'wdTableFormatElegant',
           'xlBisque', 'wdYiddish', 'wdFieldFillIn',
           'wdArtPushPinNote1', 'wdWrapMergeFront',
           'wdAlignParagraphCenter', 'wdLineWidth450pt',
           'WdTextboxTightWrap', 'WdOpenFormat', 'wdKeyBackSlash',
           'xlOldLace', 'wdListNumberStyleUppercaseBulgarian',
           'wdCaptionNumberStyleKanjiTraditional',
           'wdLineStyleThinThickSmallGap', 'wdEvenPagesFooterStory',
           'wdListNumberStyleBidi2',
           'wdRelativeVerticalPositionOuterMarginArea', 'wd75Percent',
           'wdPageNumberStyleKanjiDigit', 'WdCellColor',
           'wdDialogMailMergeOpenHeaderSource', 'wdRefTypeHeading',
           'wdArtTribal3', 'wdContentControlDateStorageDateTime',
           'wdFieldCitation', 'OMath',
           'wdNoteNumberStyleHebrewLetter1', 'CaptionLabels',
           'wdPaperEnvelope12', 'wdArtCheckedBarBlack',
           'WdNumberStyleWordBasicBiDi', 'wdSinhalese', 'XlAxisType',
           'xlGray50', 'XlPieSliceLocation', 'xlBlanchedAlmond',
           'wdJapanese', 'wdArtDiamondsGray',
           'wdDialogDocumentInspector', 'wdColorAqua',
           'wdLineStyleSingle', 'wdListRestartNumbering',
           'wdInsertPage', 'wdArtBalloons3Colors', 'ThreeDFormat',
           'wdInsertedTextMarkColorOnly', 'wdUpperCase',
           'wdStyleHeading5', 'wdStyleMacroText', 'wdFirstRow',
           'wdExpandShiftReturn', 'wdStyleHtmlSamp', 'wdArtSombrero',
           'wdStylisticSet12', 'wdCollapseEnd', 'wdFieldDatabase',
           'wdLineSpaceAtLeast', 'Broadcast',
           'wdLineStyleThinThickThinLargeGap', 'WdGutterStyleOld',
           'wdHelpContents', 'wdOutlineLevel3', 'wdControlLink',
           'wdDefaultFirstRecord', 'wdDialogOrganizerTabAutoText',
           'wdSpellingLegal', 'Paragraphs', 'wdAddress3',
           'WdStyleType', 'xlSlateGray', 'wdCellColorLightGreen',
           'wdFormattingFromCurrent', 'wdTableOverwriteCells',
           'wdXMLNodeLevelCell', 'WdWordDialog',
           'wdDialogToolsWordCount', 'WdMailerPriority', 'xlGold',
           'Revision', 'wdSeparateByTabs', 'wdBoth',
           'wdNumberSpacingTabular', 'wdTightFirstAndLastLines',
           'WdReadingLayoutMargin', 'wdIndexModern',
           'wdMainAndSourceAndHeader',
           'wdBalloonPrintOrientationPreserve',
           'wdPrinterTractorFeed', 'xlDarkTurquoise',
           'wdDialogToolsDictionary', 'WdMoveToTextMark',
           'wdFieldAuthor', 'wdRubyFirstName', 'wdHelpAbout',
           'wdFieldIndex', 'wdColorLightGreen',
           'wdDialogToolsUnprotectDocument', 'wdFieldEmbed',
           'wdDialogTableAutoFormat', 'BuildingBlock', 'Frameset',
           'wdDialogToolsOptionsEdit', 'Mailer', 'xlMarkerStyleNone',
           'wdTCSCConverterDirectionAuto', 'WdWrapType',
           'wdHelpQuickPreview', 'wdDialogToolsCustomize',
           'wdEndnoteContinuationSeparatorStory', 'wdMainAndHeader',
           'wdFieldLastSavedBy', 'wdLastColumn', 'wdLockNone',
           'xlDarkViolet', 'wdKeySingleQuote',
           'wdRelativeVerticalPositionInnerMarginArea',
           'wdArabicEgypt', 'xlShowPercent', 'wdStyleTableOfFigures',
           'wdOLEVerbHide', 'wdPosition', 'wdGoToSection', 'wdKeyF8',
           'wdPriorityLow', 'wdArtFlowersPansy',
           'WdBuildingBlockTypes', 'wdStyleIntenseReference',
           'wdStyleStrong', 'wdDialogSourceManager', 'xlStretch',
           'wdDeletedTextMarkNone', 'wdProtectedViewCloseEdit',
           'wdPreferredWidthAuto', 'wdTaskPaneMailMerge',
           'wdShowFilterStylesAvailable', 'wdOpenFormatAuto',
           'WdMeasurementUnitsHID', 'xlPatternUp',
           'wdStatisticCharactersWithSpaces', 'wdInMasterDocument',
           'WdSmartTagControlType', 'wdRevisedLinesMarkOutsideBorder',
           'wdEnglishPhilippines', 'wdKey4', 'wdFieldDisplayBarcode',
           'wdArtTribal4', 'wdTextOrientationHorizontal', 'xlThistle',
           'wdTimeSeparator', 'wdStyleNoteHeading',
           'wdNumberFormOldStyle',
           'wdDontBalanceSingleByteDoubleByteWidth',
           'wdDialogFilePageSetupTabMargins', 'xlEndSides',
           'wdWebPage', 'xlAzure', 'wdNumeralHindi',
           'xlRegionLabelOptionsNone', 'wdEnvelopes',
           'wdByelorussian', 'wdTextureDiagonalDown',
           'wdRevisionsMarkupSimple', 'xlErrorBarIncludeMinusValues',
           'wdSubscriberPict', 'xlUpward',
           'wdDialogTableOfContentsOptions', 'WdInternationalIndex',
           'ReadabilityStatistics',
           'wdHorizontalPositionRelativeToPage', 'xlBuiltIn',
           'wdMonthNamesEnglish', 'WdMeasurementUnits',
           'wdInlineShapeSmartArt', 'wdAzeriLatin',
           'XlCopyPictureFormat', 'wdTaskPaneResearch',
           'wdPaneFootnoteContinuationNotice', 'wdMoveToTextMarkNone',
           'wdRed', 'wdManipuri', 'ChartCategory',
           'wdRelativeVerticalSizeInnerMarginArea', 'WdRowAlignment',
           'wdCaptionNumberStyleHindiLetter1', 'wdApplyBreakingRules',
           'CustomLabel', 'wdWord8TableBehavior', 'DownBars',
           'wdPageNumberStyleUppercaseRoman', 'wdFieldPrint',
           'wdNewEmailMessage', 'xlDarkSlateGray', 'wdTaiwan',
           'wdShowSourceDocumentsOriginal',
           'wdSelectFieldWithFirstOrLastCharacter',
           'xlLegendPositionBottom', 'wdFirstPageHeaderStory',
           'wdKeyN', 'wdRelativeVerticalPositionMargin', 'wdFrench',
           'wdNoKey', 'WdFarEastLineBreakLevel',
           'wdLineBetweenColumnRectangle', 'wdTableFormatGrid3',
           'xlTimeScale', 'wdKey5', 'wdArabicSyria',
           'wdBalloonPrintOrientationAuto',
           'WdRevisionsBalloonPrintOrientation',
           'wdPageNumberStyleArabicFullWidth', 'wdOLELink', 'xlNoCap',
           'wdStyleHeading8', 'xlCategoryScale', 'wdStyleSortByFont',
           'XlRgbColor', 'wdTextureSolid', 'wdAskToConvert',
           'wdGoToAbsolute', 'XlValueSortOrder', 'WdSelectionType',
           'wdFormatStrictOpenXMLDocument',
           'wdPageNumberStyleHebrewLetter1', 'wdDialogFormatTheme',
           'xlHAlignGeneral', 'wdAlignRowCenter', 'xlSteelBlue',
           'wdDialogFormatFrame', 'wdPhoneticGuideAlignmentRight',
           'wdDialogWebOptionsFiles', 'wdPropertyCompany',
           'wdReadingModePanningArea', 'wdDialogTableProperties',
           'wdClassicRed', 'xlCategoryLabelLevelAll',
           'WdListNumberStyleHID', 'wdThemeColorMainDark2',
           'wdOMathFunctionFrac', 'wdCaptionNumberStyleKanjiDigit',
           'wdAlignPageNumberOutside', 'wdMergeSubTypeOutlook',
           'wdCROnly', 'wdArtMarqueeToothed',
           'wdDialogFormatParagraphTabTextFlow',
           'wdDialogFilePageSetupTabPaperSource',
           'wdUsePrinterMetrics',
           'wdRelativeVerticalSizeOuterMarginArea',
           'wdInContentControl', 'xlNextToAxis', 'xlPyramidToMax',
           'wdArtCirclesLines', 'wdColorTeal',
           'wdDontAdjustLineHeightInTable', 'wdFieldMacroButton',
           'wdArtTwistedLines2', 'wdModifiedBlock', 'EmailSignature',
           'wdNumeralSystem', 'wdPropertyHiddenSlides',
           'wdShapeRectangle', 'ListGallery', 'wdPaperEnvelopeC3',
           'wdMergeSubTypeWorks', 'wdDialogTemplatesLinkedCSS',
           'wdSweden', 'wdStylisticSet08', 'Comment', 'wdTypeFooters',
           'WdSectionStart', 'wdRussian', 'wdUnderlineDottedHeavy',
           'wdControlActiveX', 'wdKeyC', 'wdSalutationBusiness',
           'wdDialogUpdateTOC', 'wdManualUpdate', 'wdFullBlock',
           'wdTableFormatSimple2', 'wdPaperStatement',
           'wdContinueDisabled', 'wdGeorgian', 'wdMonthNamesArabic',
           'wdTableFormatList5', 'wdKeyEsc', 'wdDialogFormatTabs',
           'wdAnimationNone', 'wdTexture62Pt5Percent',
           'wdOpenFormatXML', 'wdArtFilm', 'wdNoteNumberStyleKanji',
           'Trendlines', 'wdPropertyRevision',
           'wdTableFormatColumns5', 'wdEditorEveryone',
           'wdStyleListContinue2', 'wdSpanishCostaRica', 'Find',
           'wdPrinterManualFeed', 'wdLayoutTableRowsApart',
           'wdAlignRowRight', 'xlSecondary', 'wdFootnoteNumber',
           'xlGray75', 'wdDialogToolsOptionsBidi',
           'wdArtConfettiStreamers', 'wdEmphasisMarkOverWhiteCircle',
           'wdDialogInsertDatabase',
           'wdDialogToolsOptionsTabHangulHanjaConversion',
           'wdMatchSectionBreak', 'wdStyleNormalTable',
           'wdDontVertAlignInTextbox',
           'wdPaneFootnoteContinuationSeparator',
           'xlHAlignDistributed', 'wdIndexRunin', 'wdCenter',
           'wdDialogEmailOptionsTabStationary',
           'wdDialogFormatDrawingObjectTabWrapping',
           'wdCaptionPositionAbove', 'xlLimeGreen', 'wdDivehi',
           'WdRelativeHorizontalSize',
           'wdDialogTemplatesXMLExpansionPacks', 'wdDialogFileOpen',
           'xlDownward', 'WdEncloseStyle',
           'wdDialogInsertIndexAndTablesTabTableOfFigures',
           'wdKanaHiragana', 'wdRDIEmailHeader',
           'wdHighAnsiIsFarEast', 'wdEstonian',
           'wdInsertCellsShiftDown',
           'wdDialogMailMergeSetDocumentType',
           'wdPaperEnvelopePersonal', 'wdArabicLibya',
           'AutoTextEntry', 'wdStyleList3', 'xlMillionMillions',
           'wd20Sentences', 'xlCategoryLabelLevelCustom',
           'wdPaneCurrentPageHeader', 'wdFieldSymbol',
           'wdOMathBreakBinBefore', 'WdMoveFromTextMark',
           'WdHorizontalLineWidthType', 'wdNoLeading',
           'xlThousandMillions', 'wdSelectionFrame', 'wdTaskPaneHelp',
           'wdDeletedTextMarkHidden', 'wdInlineShapeLinked3DModel',
           'xlLegendPositionCustom', 'wdTableDirectionRtl',
           'Subdocument', 'wdListNumberStyleGanada', 'wdFinland',
           'wdFormatXMLTemplateMacroEnabled', 'wdEditorCurrent',
           'wdSorbian', 'wdStyleListBullet5', 'wdTexture12Pt5Percent',
           'xlStack', 'wdRDISendForReview', 'xlFloralWhite',
           'wdAlignParagraphJustifyLow', 'wdColorRose',
           'wdArtScaredCat', 'wdSelOvertype',
           'wdFirstCharacterLineNumber', 'wdCalculationText',
           'wdShowSourceDocumentsBoth', 'wdUnderlineNone',
           'Hyperlinks', 'wdContinueList', '_Global',
           'WdEnableCancelKey', 'wdListPictureBullet',
           'xlTenThousands', 'wdTextOrientationVerticalFarEast',
           'wdListSimpleNumbering', 'wdStyleSubtleReference',
           'wdLithuanian', 'wdColorDarkGreen', 'wdDialogToolsMacro',
           'wdMainTextStory', 'wdArtFlowersTeacup',
           'wdTaskPaneRevPaneFlex',
           'wdInsertedTextMarkDoubleStrikeThrough', 'wdWord2010',
           'wdSectionNewPage', 'xlErrorBarTypeCustom',
           'WdEmailHTMLFidelity', 'wdDeleteCellsShiftUp', 'wdPoints',
           'wdStyleMessageHeader', 'wdStyleTableColorfulGrid',
           'Global', 'wdDocumentLetter', 'wdIndonesian',
           'wdDialogInsertTableOfAuthorities', 'OMathScrSub',
           'xlLightPink', 'wdInsertCellsEntireColumn',
           'wdPasteDeviceIndependentBitmap', 'wdDialogTwoLinesInOne',
           'xlPaleGoldenrod', 'wdArtFlowersModern2',
           'wdLineStyleDashSmallGap', 'wdChile', 'WdStatistic',
           'CustomProperties', 'DiagramNodeChildren', 'xlBar',
           'wdListApplyToSelection', 'CoAuthUpdate',
           'wdNoteNumberStyleArabicFullWidth', 'WdInsertCells',
           'wdListNumberStyleSimpChinNum4',
           'wdPageNumberStyleHanjaReadDigit', 'wdMergeIfIsNotBlank',
           'XlChartGallery', 'wdPhoneticGuideAlignmentRightVertical',
           'wdWord11KerningPairs', 'wdPreviousDataSourceRecord',
           'WdOMathFracType', 'wdTexture97Pt5Percent',
           'wdDialogPermission', 'WdMappedDataFields',
           'wdDialogEmailOptionsTabSignature', 'WdEditionType',
           'wdStyleTypeCharacter', 'wdConvMailMergeEsc',
           'wdHeaderFooterType', 'wdSpellingComplete',
           'wdTexture72Pt5Percent', 'WdShapePositionRelative',
           'wdColumnBreak', 'wdPaneNone', 'wdMergeSubTypeOAL',
           'wdRevisionsMarkupNone', 'wdArtPeopleWaving',
           'xlInterpolated', 'wdFieldHTMLActiveX', 'xlDarkOrchid',
           'wdNoteNumberStyleHindiLetter2', 'wdColorGray05',
           'wdListNumberStyleOrdinal', 'wdSpanishEcuador',
           'wdExportSelection', 'WdOMathType',
           'wdStyleTableMediumGrid1', 'wdCellAlignVerticalBottom',
           'wdProtectedViewCloseForced',
           'wdNoteNumberStyleTradChinNum1', 'WdTextOrientation',
           'wdDialogFileMacPageSetup', 'wdKeyK', 'WdPrintOutRange',
           'wdMacedonianFYROM', 'WdSummaryLength',
           'wdTypeCustomBibliography', 'wdFieldEditTime',
           'wdDialogWebOptionsFonts', 'wdEncloseStyleSmall',
           'xlAntiqueWhite', 'wdListNumberStyleHindiCardinalText',
           'wdTableFormatClassic2', 'wdStyleSortRecommended',
           'XlGradientStopPositionType', 'wdEmailHTMLFidelityMedium',
           'xlFrontEnd', 'wdLigaturesStandard', 'OMathPhantom',
           'wdOMathVertAlignTop', 'wdDialogReviewAfmtRevisions',
           'xlMarkerStylePlus', 'wdMoveFromTextMarkColorOnly',
           'wdKeyNumeric0', 'ReflectionFormat', 'wdKeyNumeric5',
           'ProtectedViewWindows', 'wdDialogMarkCitation',
           'wdEnglishBelize', 'HeadingStyle', 'WdColor',
           'wdShapeOutside', 'wdZulu', 'LeaderLines',
           'wdLinkTypeChart', 'wdUseWord97LineBreakingRules',
           'wdBalloonRevisions', 'wdOromo', 'HTMLDivisions',
           'wdGray50', 'WdParagraphAlignmentHID',
           'wdDialogMailMergeInsertSkipIf', 'wdArtMapleLeaf',
           'wdTypePageNumber', 'xlKhaki',
           'wdPageNumberStyleLowercaseLetter', 'WdIndexType',
           'wdRevisionConflictInsert', 'wdColorPink',
           'wdSectionBreakEvenPage', 'wdSpellword',
           'wdEnclosureDiamond', 'wdSortFieldStroke', 'wdTswana',
           'wdNorway', 'wdAutoFitWindow',
           'wdDialogToolsOptionsTabView', 'XMLSchemaReferences',
           'wdCaptionNumberStyleTradChinNum3', 'xlLawnGreen',
           'wdCaptionNumberStyleHebrewLetter1',
           'wdMoveToTextMarkUnderline', 'WdMailSystem',
           'WdDisableFeaturesIntroducedAfter', 'wdUrdu', 'xlPicture',
           'wdMAPIandPowerTalk', 'wdBaselineAlignTop', 'wdPublisher',
           'wdNumberSpacingProportional', 'wdTypeCustomCoverPage',
           'Index', 'xlColumns', 'wdDialogToolsCompareDocuments',
           'wdMainAndDataSource', 'wdListNumberStyleHanjaReadDigit',
           'Axis', 'wdHorizontalLineFixedWidth',
           'wdCaptionNumberStyleSimpChinNum3', 'wdFrenchHaiti',
           'wdGranularityCharLevel', 'wdOpenFormatRTF', 'wdNWCell',
           'wdArtStarsShadowed', 'xlMediumSlateBlue', 'XMLMapping',
           'wdColorLightYellow', 'WdBorderDistanceFrom', 'OMathBreak',
           'wdRegularText', 'wdRDIInkAnnotations',
           'wdFootnoteContinuationNoticeStory', 'XlErrorBarType',
           'wdOpenFormatEncodedText', 'WdOMathJc',
           'wdPropertyMMClips', 'wdInBibliography',
           'XlChartSplitType', 'WdPageMovementType', 'xlUserDefined',
           'SmartTagAction', 'wdIMEModeHangul', 'xlBackgroundOpaque',
           'wdDialogConvertObject', 'wdPrinterEnvelopeFeed',
           'Diagram', 'xlDarkMagenta', 'WdFrenchSpeller',
           'wdTableFormat3DEffects2', 'wdCaptionNumberStyleKanji',
           'xlPatternGray50', 'wdHelpActiveWindow', 'xlChartArea',
           'wdArtBasicThinLines', 'wdControlHelpURL', 'wdMalaysian',
           'xlNone', 'wdGoToGrammaticalError', 'wdStyleHtmlAcronym',
           'wdTableFormatList2', 'wdFieldNext', 'Application',
           'wdArtTrees', 'wdGenderMale', 'Lists',
           'wdSpanishNicaragua', 'Language', 'wdPropertyLastAuthor',
           'xlSolid', 'wdCapsLock', 'xlUnderlineStyleNone',
           'wdAzeriCyrillic', 'XMLSchemaReference',
           'wdArtHeartBalloon', 'xlChartTitle',
           'wdDialogFormatDrawingObjectTabHR', 'wdArtConfettiWhite',
           'wdExportFormatPDF', 'wdDialogLabelOptions',
           'BuildingBlockTypes', 'wdFieldNumWords',
           'wdMergeSubTypeOLEDBText', 'xlCrissCross',
           'wdCaptionNumberStyleThaiCardinalText', 'XlAxisCrosses',
           'wdFramesetNewFrameAbove', 'wdPaneFirstPageFooter',
           'wdListNumberStyleUppercaseRussian', 'wdStyleLineNumber',
           'wdSwahili', 'wdArtCheckered', 'TabStops',
           'wdArtSnowflakes', 'wdAlignParagraphJustifyHi',
           'wdPrintAllDocument', 'xlCenter',
           'WdXMLSelectionChangeReason', 'wdNumberFormDefault',
           'wdArtWeavingBraid', 'wdKeyNumeric4',
           'wdMergeInfoFromODBC', 'wdStyleTableColorfulList',
           'wdDialogTableInsertTable', 'wdTabLeaderHeavy',
           'WdThemeColorIndex', 'WdBorderType',
           'XlCategoryLabelLevel', 'wdMexico', 'xlLabelPositionBelow',
           'wdStyleSortByName', 'Replacement', 'CoAuthor',
           'wdLineWidth300pt', 'Variables', 'wdRevisedLinesMarkNone',
           'wdDialogInsertCaption', 'OCXEvents', 'wdKeyControl',
           'wdColorPaleBlue',
           'wdDontSnapTextToGridInTableWithObjects',
           'wdSummaryModeCreateNew', 'wdDialogTableSort',
           'wdRouteInProgress', 'wdHeaderFooterFirstPage',
           'wdPrinterManualEnvelopeFeed', 'xlErrorBarTypePercent',
           'wdDelayableFloatingTable',
           'xlTickLabelOrientationAutomatic', 'wdFieldShadingAlways',
           'wdIcelandic', 'wdPrintEnvelope',
           'wdDialogEditPasteSpecial', 'wdHeaderFooterPrimary',
           'wdSpanishDominicanRepublic', 'wdSendToPrinter',
           'wdInlineShapeLinkedGraphic', 'wdIMEModeNoControl',
           'wdTableFormatGrid2', 'wdCurrentFolderPath', 'xlDash',
           'wdSamiLappish', 'wdSeparateByDefaultListSeparator',
           'wdGoToPercent', 'wdMatchAnyDigit', 'wdStyleHtmlCode',
           'wdOMathBreakBinRepeat',
           'wdInlineShapePictureHorizontalLine', 'wdDanish',
           'wdStyleIndex6', 'wdKeyL',
           'wdCaptionNumberStyleTradChinNum2', 'WdFieldType',
           'wdLineStyleDashDotDot', 'TableOfFigures',
           'wdArtCandyCorn', 'wdCaptionNumberStyleHindiLetter2',
           'wdDialogToolsCreateLabels', 'xlBitmap',
           'wdPrinterUpperBin', 'WdCalendarType', 'wdFieldPrivate',
           'wdPrintSelection', 'wdArtTornPaperBlack',
           'wdWPJustification', 'wdDialogToolsOptionsFileLocations',
           'xlLabelPositionBestFit', 'WdKana', 'wdPropertyTemplate',
           'wdOLEVerbOpen', 'Line', 'wdFormatPDF', 'PageSetup',
           'wdStartupPath', 'wdColorBlue', 'UndoRecord', 'wdUK',
           'wdRDIDocumentManagementPolicy',
           'wdMergeIfGreaterThanOrEqual', 'XlDisplayUnit',
           'wdDialogTableFormula', 'wdUseNormalStyleForList',
           'TableOfAuthorities', 'wdStyleTableOfAuthorities',
           'wdRelocateUp', 'wdArtPumpkin1', 'WdCaptionNumberStyleHID',
           'wdArtEclipsingSquares2', 'Research', 'wdFieldData',
           'WdPrintOutItem', 'wdFieldIncludeText',
           'wdStyleTableMediumGrid3', 'wdPaperQuarto',
           'wdUnderlineDash', 'wdLineBreakJapanese', 'wdArtConfetti',
           'xlStackScale', 'wdSortFieldSyllable', 'xlMarkerStyleDot',
           'wdLao', 'xlAutomatic', 'Variable',
           'wdDialogTableInsertCells', 'wdIMEModeOn',
           'wdFormatDocumentDefault', 'FreeformBuilder',
           'wdDialogInsertFootnote', 'wdSelReplace', 'wd100Words',
           'System', 'wdContentControlLevelParagraph', 'wdChart',
           'wdFormatText', 'wdDialogTableColumnWidth', 'xlBlueViolet',
           'wdLigaturesHistoricalDiscretional', 'WdTemplateType',
           'wdControlSmartTag', 'wdStyleDate', 'wd10Percent',
           'wdDialogToolsOptionsTabCompatibility',
           'wdExportCurrentPage', 'WdReferenceType',
           'wdSeparatorEmDash', 'WdHorizontalInVerticalType',
           'wdDialogFormatDefineStyleLang',
           'wdSuppressTopSpacingMac5', 'FormField', 'wdTOCFancy',
           'AutoTextEntries', 'Comments', 'wdCalendarTypeBidi',
           'wdTemplateSet', 'wdTOFSimple',
           'wdDeletedTextMarkDoubleUnderline', 'wdAutoVersionOff',
           'wdSpanishBolivia', 'wdTableFormatWeb2', 'WdPartOfSpeech',
           'wdStyleSheetPrecedenceLowest', 'WdShowFilter',
           'wdFormatOriginalFormatting', 'wdFieldFormCheckBox',
           'wdVertical', 'SmartTagRecognizers', 'wdPostalCode',
           'wdSuppressTopSpacing', 'OMathArgs', 'wdKeyH',
           'wdGoToLast', 'xlGeoMappingLevelCountryRegion',
           'wdStyleIndex1', 'wdListNumberStyleLowercaseRoman',
           'XlChartPictureType', 'wdForward',
           'wdStyleTableMediumShading2', 'wdKeyCategoryStyle',
           'wdListNoNumbering', 'wdWord8ListBehavior',
           'wdStyleListBullet', 'wdBrowseField', 'wdNoSelection',
           'wdSelectionColumn', 'ProofreadingErrors', 'wdFieldShape',
           'wdStyleHtmlCite', 'WdSpanishSpeller',
           'wdSeekPrimaryFooter', 'wdKeyF16', 'wdPageNumber',
           'wdRelativeHorizontalSizeRightMarginArea', 'xlDouble',
           'View', 'wdTwoLinesInOneParentheses',
           'wdEmphasisMarkOverComma',
           'wdFormatXMLDocumentMacroEnabled', 'wdSingleCellText',
           'WdDocumentDirection', 'wdSimplifiedChinese',
           'XlColorIndex', 'wdNorwegianBokmol',
           'wdSectionDirectionLtr', 'Gridlines', 'xlPlum',
           'wdDialogFormatBulletsAndNumberingTabOutlineNumbered',
           'wdKeepTextOnly', 'wdStyleIndex9', 'wdOMathJcCenterGroup',
           'wdDialogToolsOptionsTabTrackChanges', 'wdKeyComma',
           'wdHangulWidthLikeWW11', 'wdDialogFilePageSetupTabPaper',
           'wdFilipino', 'wdBaselineAlignCenter',
           'xlBinsTypeCategorical',
           'wdDialogLetterWizardTabLetterFormat', 'wdTrailingSpace',
           'xlTeal', 'wdFrenchSenegal', 'wdArtFlowersModern1',
           'wdArtMapleMuffins', 'xlBackgroundTransparent',
           'xlSeriesNameLevelNone', 'Table',
           'wdDialogToolsAutoCorrectExceptionsTabFirstLetter',
           'wdNoTabHangIndent', 'wdKeySemiColon', 'xlPolynomial',
           'wdMasterView', 'wdPink', 'Shape', 'xlDarkGreen',
           'wdInternationalPM', 'ChartColorFormat', 'OMathScrSubSup',
           'xlMediumVioletRed', 'WdContentControlAppearance',
           'wdDialogTableWrapping', 'WdPageNumberAlignment',
           'wdDialogToolsOptionsTabFileLocations', 'KeyBinding',
           'wdIbibio', 'wdFieldUserName', 'wdEmailHTMLFidelityLow',
           'wdDialogToolsOptionsTabPrint', 'wdUniqueIdentifier',
           'wdTexture87Pt5Percent', 'WdBreakType', 'Chart',
           'wdDialogToolsThesaurus', 'wdOneAfterAnother',
           'wdLineWidth600pt', 'wdDialogWebOptionsPictures',
           'wdStyleIndex8', 'OMathRecognizedFunctions',
           'wdDialogPhoneticGuide', 'XlBinsType',
           'wdAnimationSparkleText', 'wdGrammar', 'wdColorGray50',
           'xlCategory', 'WdCaptionLabelID',
           'wdFramesetSizeTypeFixed', 'wdDialogFileSaveAs',
           'wdTamazightLatin', 'wdNoExtraLineSpacing',
           'FullSeriesCollection', 'wdDialogOrganizer', 'xlCoral',
           'SmartTagActions', 'wdContentControlRichText',
           'wdListBullet', 'wdBaselineAlignBaseline',
           'wdPaperA4Small', 'xlErrorBarTypeFixedValue',
           'wdFrenchPostReform', 'wdKey9', 'wdOMathFracLin', 'Zoom',
           'wdLineWidth075pt', 'wdRevisionSectionProperty',
           'Sentences', 'wdLeaveBackslashAlone', 'OMathMatRow',
           'WdTofFormat', 'xlEnd', 'OMathFrac', 'CoAuthLocks',
           'wdFieldNumChars', 'wdLinkTypeDDE', 'wdKanuri',
           'wdFieldSequence', 'xlGeneral', 'wdIcons',
           'wdOutlineLevel6', 'xlOrange', 'xlPatternSolid',
           'xlMajorGridlines', 'wdNumberRelativeContext',
           'wdRDIDocumentTasks', 'XlGeoMappingLevel',
           'xlGeoProjectionTypeMercator', 'wdEndOfSection',
           'xlMidnightBlue', 'wdArtCreaturesLadyBug',
           'wdLinkTypeReference', 'wdKatakana',
           'xlGeoMappingLevelCountryRegionList', 'wdRowHeightAtLeast',
           'wdDontUseHTMLParagraphAutoSpacing', 'wdTexture85Percent',
           'wdDialogMailMergeFindRecipient',
           'wdMoveFromTextMarkUnderline', 'PageNumbers',
           'wdFrameBottom', 'wdDialogMailMergeUseAddressBook',
           'OMathFunc', 'wdLanguageNone', 'wdLetterRight',
           'wdStylePlainText', 'OtherCorrectionsException',
           'wdDialogMarkIndexEntry', 'wdFarEastLineBreakLevelCustom',
           'WdRevisionsMode', 'wdKeyCloseSquareBrace',
           'wdActiveEndAdjustedPageNumber', 'wdShowFilterStylesInUse',
           'wdOMathJcLeft', 'WdCompatibilityMode', 'wdKeyPause',
           'xlLightYellow', 'wdPasteRTF', 'wdNotAMergeDocument',
           'wdDialogTCSCTranslator',
           'wdListNumberStyleKanjiTraditional2', 'XlLineStyle',
           'wdFieldMergeBarcode', 'SynonymInfo', 'wdStyleFooter',
           'wdIndexSimple', 'wdFieldDocProperty', 'wdSanskrit',
           'wdKeyF2', 'wdArtFlowersTiny', 'wdSpanishParaguay',
           'wdColorDarkRed', 'wdArtConfettiGrays',
           'wdFramesetNewFrameLeft', 'wdKeyNumericMultiply',
           'wdSelectionNormal', 'wdRDIRevisions', 'wdRDIAtMentions',
           'wdKeyU', 'wdArtBabyRattle', 'WdNoteNumberStyle',
           'wdPageNumberStyleKanji', 'wdPageNumberStyleThaiArabic',
           'wdCroatian', 'wdWhite', 'wdMixedRevisions',
           'wdHorizontalLineAlignLeft', 'wdCellAlignVerticalTop',
           'wdArtSouthwest', 'xlTenMillions', 'WdReplace',
           'wdTightNone', 'wdNumberGallery', 'xlLogarithmic',
           'wdColorDarkYellow', 'wd10Sentences', 'Versions', 'Rows',
           'wdFieldNoteRef', 'wdPolish', 'xlErrorBarIncludeBoth',
           'wdKeyF7', 'wdAutoNew', 'WdHorizontalLineAlignment',
           'xlYears', 'wdContentControlDropdownList',
           'wdPropertyAuthor', 'wd25Percent',
           'wdNumberSpacingDefault', 'TabStop',
           'XlRegionLabelOptions', 'wdTaskPaneStyleInspector',
           'wdGutterPosRight', 'wdTextureDiagonalCross', 'xlDiamond',
           'wdTCSCConverterDirectionSCTC',
           'xlGeoProjectionTypeRobinson', 'wdMatchField',
           'WdSubscriberFormats', 'WdSalutationGender',
           'SmartTagTypes', 'wdTableFormatApplyHeadingRows',
           'wdNumberFullContext', 'WdLayoutMode',
           'wdDialogHorizontalInVertical', 'wdOMathHorizAlignRight',
           'wdListNumberStyleTradChinNum1', 'wdFrenchMonaco',
           'wdColorGray25', 'WdCollapseDirection', 'wdKeyE',
           'wdGoToFirst', 'WdWindowState', 'wdWindowDocument',
           'wdArtHearts', 'WdSelectionFlags', 'wdWrapMergeTopBottom',
           'xlSlateGrey', 'wdTexture65Percent', 'MappedDataFields',
           'ShapeRange', 'wdTwoLinesInOneNone', 'wdGoToHeading',
           'wdUnderlineDotted', 'wdStyleTypeLinked',
           'FirstLetterExceptions', 'wdWord2007', 'BuildingBlockType',
           'Rectangles', 'wdLastDataSourceRecord', 'wdAmharic',
           'wdDeleteCellsShiftLeft', 'xlAutomaticScale', 'xlSquare',
           'wdRevisionReconcile', 'wdIMEModeAlpha',
           'wdMatchNonbreakingHyphen', 'wdFieldTemplate',
           'wdShapeRight', 'xlValueDescending', 'WdXMLNodeLevel',
           'wdIndexFilterAkasatana', 'wdPropertySecurity',
           'wdSpanishPeru', 'wdSelectPublisher',
           'wdProductLanguageID', 'wdListNumberStyleZodiac1',
           'wdSaveChanges', 'wdTableFormat3DEffects1',
           'wdRightLandscape', 'xlPatternNone', 'xlChartY',
           'wdFlowRtl', 'wdCellColorByAuthor', 'wdTableAppendTable',
           'wdCurrencyCode', 'wdDialogMailMergeFieldMapping',
           'wdColorGray90', 'WdHelpType', 'wdRevisionCellDeletion',
           'Points', 'wdPaperEnvelopeItaly', 'wdFormatUnicodeText',
           'wdWord9TableBehavior', 'wdGraphicsFiltersPath',
           'wdNoMergeInfo', 'wdKeyV', 'wdTextureDarkDiagonalDown',
           'LetterContent', 'wdInsertedTextMarkBold',
           'wdTypeCustomWatermarks', 'wdFormatHTML', 'wdKashmiri',
           'wdInFootnote', 'SmartTagType', 'xlMarkerStyleTriangle',
           'wdUserTemplatesPath', 'xlDarkSlateGrey', 'xlStError',
           'wdInlineShapeLinkedOLEObject', 'wdArtWeavingAngles',
           'wdOpenFormatDocument', 'wdTableFormatGrid4',
           'wdDialogFormatCallout', 'wdControlRadioGroup',
           'wdPrinterPaperCassette',
           'wdListNumberStyleUppercaseGreek', 'wdFieldFileName',
           'wdPronoun', 'xlSeriesLines', 'wdOutlineLevelBodyText',
           'wdStyleHtmlVar', 'wdUseDestinationStyles',
           'wdSortFieldAlphanumeric', 'WdLineEndingType',
           'wdKeepSourceFormatting', 'TableOfContents',
           'wdPanePrimaryFooter', 'xlBlue', 'wdFrameLeft',
           'wdFieldBarCode', 'WdAlertLevel', 'wdGoToPrevious',
           'wdStyleTOC2', 'DocumentEvents', 'xlAxis', 'Fields',
           'wdSindhi', 'wdArtMarquee', 'wdFieldCreateDate',
           'xlTickLabelPositionNextToAxis', 'wdThesaurus',
           'WdOMathHorizAlignType', 'wdAlignPageNumberLeft',
           'OMathFunction', 'wdOMathJcInline', 'wdListLevelAlignLeft',
           'WdOutlineLevel', 'wdTabLeaderSpaces', 'wdCaptionEquation',
           'WdIndexFormat', 'wdDialogInsertHyperlink',
           'wdStyleHeading4', 'wdPaperFolio', 'wdSomali',
           'wdSpanishTuteoOnly', 'wdCaptionNumberStyleArabic',
           'wdExactOnTop', 'wdKeyF13', 'wdMergeTargetCurrent',
           'xlPatternAutomatic', 'wdNormalTemplate',
           'xlAxisCrossesMaximum', 'WdListLevelAlignment',
           'wdFrameAuto', 'wdGoToProofreadingError', 'Lines',
           'wdDialogToolsCustomizeMenuBar', 'xlDarkOrange',
           'wdFieldSectionPages', 'WdNumberType', 'wdColorGray70',
           'wdScrollbarTypeNo', 'wdEnglishSouthAfrica',
           'wdContentControlBuildingBlockGallery', 'wdColorAutomatic',
           'ParagraphFormat', 'wdInClipboard',
           'wdHorizontalInVerticalNone', 'wdDropNormal',
           'wdAnimationShimmer', 'wdInlineShapePicture',
           'wdDialogToolsEnvelopesAndLabelsTabEnvelopes', 'wdHomeFax',
           'WdScrollbarType', 'wdDropNone', 'wdFrenchMali',
           'wdColorBrightGreen', 'wdParagraphFormatting',
           'wdInlineShapeOLEControlObject', 'wdPropertySlides',
           'wdInlineShapeChart', 'wdFormatXML', 'wdInterjection',
           'Envelope', 'wdDialogFormatBulletsAndNumbering',
           'wdFormatXPS', 'wdDialogFormatDrawingObjectTabWeb',
           'wdPrimaryFooterStory', 'wdFieldTOCEntry',
           'xlPatternGray8', 'wdDialogInsertIndexAndTables', 'wdCRLF',
           'wdUzbekCyrillic', 'HangulHanjaConversionDictionaries',
           'wdSelectionShape', 'wdRelativeVerticalSizeMargin',
           'Dictionaries', 'Section', 'ShapeNodes',
           'wdCaptionNumberStyleArabicLetter1', 'wdCalendarSakaEra',
           'WdAlignmentTabAlignment', 'wdDocumentEmail',
           'wdColorGray80', 'xlDarkGray',
           'wdListNumberStyleAiueoHalfWidth', 'Tasks',
           'wdDeletedTextMarkStrikeThrough', 'xlLightCoral',
           'XMLChildNodeSuggestions', 'xlLightSkyBlue',
           'XlTickLabelPosition', 'wdMoveFromTextMarkPound',
           'wdSubscriberRTF', 'wdGoToNext',
           'xlUnderlineStyleSingleAccounting',
           'wdArtCreaturesInsects', 'xlTan', 'wdKeyPageUp',
           'wdOMathShapeCentered', 'xlPercent', 'wdTOCModern',
           'xlRoyalBlue', 'wdMergeIfGreaterThan',
           'wdStyleTableLightListAccent1',
           'wdListNumberStyleNumberInCircle',
           'wdDialogInsertCaptionNumbering', 'wdFieldUserInitials',
           'wdLayoutModeGrid', 'wdFormatXMLTemplate',
           'wdArtBasicBlackDashes', 'wdHorizontalInVerticalFitInLine',
           'HangulAndAlphabetExceptions',
           'wdXMLSelectionChangeReasonInsert', 'wdStyleListNumber',
           'wdPicturesPath', 'WdWindowType', 'wdReplaceNone',
           'wdFieldSet', 'WdOMathFunctionType', 'wdFieldAutoTextList',
           'wdShapeBottom', 'wdMarathi', 'wdOMathFunctionMat',
           'WdMultipleWordConversionsMode', 'wdEndnotesStory',
           'wdDialogFormatParagraphTabTeisai', 'xlDarkBlue',
           'xlDeepPink', 'wdPortuguese', 'wdEnclosureTriangle',
           'wdAlignTabCenter', 'XlEndStyleCap', 'wdFrameTop',
           'wdFirst', 'wdKeyP', 'wdPaperEnvelope10',
           'wdListNumberStyleUppercaseTurkish',
           'wdStylisticSetDefault', 'wdStylisticSet19',
           'wdKeyNumeric2', 'wdTableFormatSimple3',
           'wdOMathFunctionDelim', 'wdArtClocks',
           'wdDialogInsertField', 'wdContentText',
           'wdTableDirectionLtr', 'wdPageNumberStyleHindiLetter2',
           'wdSectionEvenPage', 'InlineShapes', 'wdArtBats',
           'wdScrollbarTypeYes', 'wdKanaKatakana',
           'wdAlignPageNumberCenter', 'xlWhite', 'wdLowerCase',
           'wdNumeralContext',
           'wdDialogToolsOptionsSpellingAndGrammar',
           'wdNormalDocument', 'WdViewType', 'wdLastRecord',
           'wdControlLabel', 'wdArabicBahrain', 'wdGoToEndnote',
           'wdStyleCommentReference', 'wdUnderlineDotDotDashHeavy',
           'WdBaselineAlignment', 'wdMoveToTextMarkDoubleUnderline',
           'Paragraph', 'xlVertical', 'wdKeyD',
           'wdRevisionsMarkupAll', 'wdHelpPE2',
           'wdRevisionParagraphProperty', 'wdDialogInsertSource',
           'wdMoveToTextMarkStrikeThrough', 'WdViewTypeOld', 'xlHigh',
           'wdKey1', 'GroupShapes', 'wdSectionBreakNextPage',
           'xlThick', 'wdFirstDataSourceRecord', 'wdFormatDocument97',
           'wdDialogToolsOptionsAutoFormatAsYouType',
           'wdRevisionConflictDelete', 'wdRevisionParagraphNumber',
           'wdLayoutModeDefault',
           'wdTextOrientationHorizontalRotatedFarEast',
           'wdCheckInMinorVersion', 'wdCachedColBalance', 'xlLegend',
           'wdPaperEnvelopeC4', 'wdLigaturesHistorical',
           'wdStylisticSet03', 'wdThemeColorAccent6', 'XMLNamespaces',
           'xlVAlignDistributed', 'wdSwapBordersFacingPages',
           'wdOpenFormatXMLTemplate', 'xlPrinter', 'wd50Percent',
           'xlTurquoise', 'Window', 'xlUpBars', 'wdEndnoteNumber',
           'wdGrammaticalError', 'wdPageView', 'wdKeyNumeric7',
           'xlCornsilk', 'wdGoToPage', 'wdColorGray35',
           'xlTickMarkNone', 'xlWheat',
           'wdDialogToolsOptionsCompatibility', 'ListParagraphs',
           'wdByAuthor', 'wdSelection', 'WdFramesetNewFrameLocation',
           'wdArtCup', 'xlWhiteSmoke', 'wdReadingOrderRtl',
           'wdCellColorNoHighlight', 'wdPaperEnvelope11',
           'wdDialogFormatStyleGallery',
           'wdDialogFormatEncloseCharacters', 'wdRefTypeFootnote',
           'wdStylePageNumber', 'wdMatchEnDash', 'wdArtTriangleParty',
           'wdParagraph', 'wd70FE', 'wdPasteBitmap', 'CustomProperty',
           'wdOutlineLevel8', 'wd24HourClock', 'wdAnagram',
           'xlPivotChartDropZone', 'wdPaneFirstPageHeader',
           'wdMatchEmDash', 'LegendEntries',
           'XlPivotFieldOrientation', 'OMathMatCols', 'wdHelpSearch',
           'wdDialogToolsOptionsGeneral', 'xlGeoProjectionTypeMiller',
           'xlGeoMappingLevelPostalCode', 'wdWrapMergeSquare',
           'wdLineStyleDot', 'wdArtFans', 'wdItalian',
           'wdLinkTypeOLE', 'ListTemplates', 'WdListApplyTo',
           'wdKirghiz', 'wdPaperEnvelopeC5', 'wdUS', 'wdKorea',
           'wdRestartPage', 'wdHelpUsingHelp',
           'wdSelectionInlineShape', 'wdTextLine', 'xlHiLoLines',
           'wdDialogFormatFontTabFont', 'wdOnlyCaptionText',
           'WdNoteNumberStyleHID', 'wdHebrew',
           'wdListNumberStyleArabic', 'xlSlateBlue', 'wdFlowLtr',
           'xlMidClockwiseRadiusPoint',
           'wdDialogLetterWizardTabRecipientInfo',
           'wdListNumberStyleArabicLZ4', 'wdStyleTitle',
           'WdTabLeader', 'wdCatalan', 'wdArtHypnotic',
           'xlGeoProjectionTypeAlbers', 'wdFrameAtLeast', 'xlSalmon',
           'wdMillimeters', 'wdSuppressMargin',
           'wdGermanLiechtenstein', 'wdNotThemeColor',
           'wdControlButton', 'wdTexture25Percent',
           'wdMergeSubTypeOther', 'wdTexture17Pt5Percent',
           'wdSortFieldDate', 'xlSeashell', 'wdLineBreakClearRight',
           'wdDialogToolsAutoCorrectExceptionsTabHangulAndAlphabet',
           'wdFieldDDE', 'wdIndexClassic', 'wdAskToNotConvert',
           'wdDialogToolsAutoManagerTabAutoFormatAsYouType',
           'wdNepali', 'wdTexture92Pt5Percent', 'wdColorDarkTeal',
           'wdTableFormatClassic1', 'wdAlignVerticalTop',
           'wdNetherlands', 'wdStyleListContinue3', 'EmailOptions',
           'WdDocumentKind', 'wdOMathFracSkw',
           'wdActiveEndSectionNumber', 'wdDialogInsertAddCaption',
           'wdMergeFormatFromPrompt', 'wdRevisionCellSplit',
           'wdSemiBlock', 'wdTutorialPath', 'wdOMathJcRight',
           'wdArmenian', 'wdHausa', 'wdOLEVerbShow', 'wdTOFFormal',
           'wdBurmese', 'wdWrapAsk', 'wdControlTextbox',
           'WdPaperSize', 'wdPaperESheet', 'wdLayoutModeGenko',
           'xlParentDataLabelOptionsBanner', 'wdRightClockwise',
           'wdHangulHanjaConversion', 'OMathBox',
           'wdArtDecoArchColor', 'xlLinen', 'OMathLimLow',
           'wdArabicMorocco', 'wdColumnWidthWide',
           'wdDialogFormatFont', 'wdCentimeters', 'xlDeepSkyBlue',
           'Categories', 'wdPunjabi', 'wdGermanLuxembourg',
           'wdAlignParagraphThaiJustify', 'wdPriorityHigh',
           'wdFieldLink', 'wdOMathFracBar', 'wdControlListbox',
           'wdTableFormatContemporary', 'wdArtHandmade1', 'Styles',
           'wdIdiom', 'CoAuthUpdates', 'XlVAlign', 'wdStyleHeading3',
           'wdColumn', 'wdChartLinked', 'wdMergeSubTypeAccess',
           'wdCalendarTaiwan', 'XlDisplayBlanksAs',
           'xlPatternCrissCross', 'xlCornflowerBlue',
           'wdEnglishTrinidad', 'wdCaptionTable',
           'wdTexture35Percent', 'WdFramesetType', 'FileConverter',
           'TablesOfAuthorities', 'wdEvenRowBanding',
           'wdSelectionMode', 'wdSpanishTuteoAndVoseo',
           'wdTypeTableOfContents', 'wdDialogToolsCustomizeKeyboard',
           'wdDeletedTextMarkCaret',
           'wdRevisedPropertiesMarkColorOnly', 'wdColorYellow',
           'WdAutoFitBehavior', 'wdPageNumberStyleSimpChinNum2',
           'wdXMLNodeLevelRow', 'wdTexture30Percent', 'wdFieldOCX',
           'wdMoveFromTextMarkBold', 'wdTableCenter',
           'wdTaskPaneTranslate', 'wdColorTurquoise',
           'wdSeekCurrentPageFooter', 'wdArtPartyGlass',
           'wdPhoneticGuideAlignmentOneTwoOne',
           'wdCaptionNumberStyleChosung', 'wdNoun',
           'WdSortFieldTypeHID', 'xlDataTable',
           'wdDialogLetterWizardTabSenderInfo',
           'wdCaptionNumberStyleHanjaReadDigit',
           'wdColumnWidthNarrow', 'wdCaptionNumberStyleArabicLetter2',
           'wdBrowserLevelMicrosoftInternetExplorer5',
           'wdRevisionsViewFinal', 'wdTexture37Pt5Percent',
           'wdDialogCreateAutoText', 'wdStyleListBullet3',
           'wdVisualSelectionBlock', 'wdListLevelAlignCenter',
           'wdTexture80Percent', 'wdLinkTypeInclude',
           'wdDialogTemplatesXMLSchema', 'xlInnerClockwisePoint',
           'wdRDITaskpaneWebExtensions', 'wdListNumberStyleArabicLZ',
           'wdLeft', 'wdTelugu', 'wdDialogMailMergeInsertAsk',
           'wdFieldTitle', 'ConnectorFormat', 'wdInWordMail',
           'xlVAlignBottom', 'xlPrimary',
           'wdRelativeVerticalPositionTopMarginArea',
           'wdBottomOfPage', 'wdArtLightBulb', 'wdLetterTop',
           'wdBorderDiagonalDown', 'wdAlignParagraphDistribute',
           'wdContentControlDate', 'wdSpanishArgentina',
           'WdRevisionsBalloonMargin', 'WdFrameSizeRule',
           'wdDialogInsertPlaceholder',
           'wdNoteNumberStyleBidiLetter2', 'wdMove',
           'wdRefTypeNumberedItem', 'wdSutu', 'wdWindowStateMaximize',
           'Font', 'wdPaneRevisionsVert', 'wdFormatTemplate97',
           'xlLineStyleNone', 'xlHundreds', 'wdDialogListCommands',
           'wdPortuguesePostReform', 'xlOliveDrab', 'wdStyleEmphasis',
           'xlPatternRectangularGradient', 'wdTableFormatApplyFont',
           'wdCompareTargetSelected', 'wdArtHeartGray',
           'wdShapeCenter', 'WdRecoveryType', 'wdNickname',
           'wdThemeColorAccent2', 'wdSpanish', 'wdCustomLabelB4JIS',
           'wdEncloseStyleNone',
           'wdDeletedTextMarkDoubleStrikeThrough', 'DiagramNodes',
           'Shading', 'wdStyleIndex4', 'wdArtChainLink',
           'wdIndexFormal', 'Field', 'wdOMathFunctionRad',
           'wdDialogToolsOptionsView', 'wdSessionStartSet',
           'wdRDIDocumentWorkspace', 'wdCalendarTypeGregorian',
           'wdLigaturesStandardDiscretional', 'wdWindowStateMinimize',
           'wdOpenFormatXMLDocumentSerialized', 'wdPromptUser',
           'wdStyleSignature', 'wdAnimationBlinkingBackground',
           'wdDiacriticColorBidi', 'wdLastRow', 'wdLineStyleDouble',
           'wdStyleTypeParagraphOnly',
           'wdContentControlRepeatingSection', 'wdFieldInclude',
           'XlBarShape', 'wdTaskPaneXMLStructure',
           'wdSpellingCapitalization',
           'wdPageNumberStyleLowercaseRoman',
           'wdDialogToolsManageFields', 'wdEnglishZimbabwe',
           'xlMediumAquamarine', 'wdListNumberStyleIrohaHalfWidth',
           'ShadowFormat', 'wdAnimationMarchingRedAnts',
           'wdPageNumberStyleTradChinNum2',
           'WdFarEastLineBreakLanguageID', 'wdTabLeaderLines',
           'wdHeadingSeparatorNone', 'WdProtectionType',
           'wdIndexFilterFull', 'wdCellAlignVerticalCenter',
           'wdPrinterLowerBin', 'wdStatisticFarEastCharacters',
           'wdDialogInsertIndexAndTablesTabIndex', 'wdNextRecord',
           'xlLabelPositionInsideBase', 'wdMoveToTextMarkColorOnly',
           'xlSplitByValue', 'wdArtLightning1',
           'xlBackgroundAutomatic', 'WdNumberSpacing', 'CanvasShapes',
           'wdSendPublisher', 'WdRemoveDocInfoType', 'wdGalician',
           'wdOMathFunctionScrSup', 'xlSeriesAxis',
           'wdEnglishNewZealand', 'wdArtCertificateBanner',
           'Templates', 'wdLigaturesStandardContextual', 'Page',
           'wdStyleSubtleEmphasis', 'wdUkrainian', 'xlGainsboro',
           'wdArtDoubleD', 'wdColorRed', 'wdSummaryModeHighlight',
           'wdUnderlineThick', 'wdCancelPublisher', 'wdSyriac',
           'wdEvenPagesHeaderStory', 'AxisTitle',
           'TablesOfAuthoritiesCategories', 'wdMatchFootnoteMark',
           'WdRoutingSlipDelivery', 'wdKeyNumericSubtract',
           'xlVAlignJustify', 'wdWindowTemplate',
           'wdFormatEncodedText', 'wdStyleIndex3',
           'wdDialogEmailOptionsTabQuoting', 'wdUpdateSubscriber',
           'wdThemeColorAccent3', 'wdDialogFormatDropCap',
           'wdTabLeaderDashes', 'ChartTitle', 'ContentControls',
           'xlHoneydew', 'wdDialogToolsOptionsTabAcetate',
           'xlDistributed', 'WdIndexSortBy', 'wdRouteComplete',
           'wdStyleList', 'wdOMathFunctionGroupChar', 'wdColorGray15',
           'wdPageColorNone', 'wdOpenFormatAllWord',
           'xlMarkerStyleDiamond', 'wdStyleSalutation',
           'wdDialogFileDocumentLayout', 'xlLightSalmon',
           'wdFieldKindWarm', 'Borders', 'wdKeyReturn',
           'wdAdjustSameWidth', 'xlBinsTypeAutomatic',
           'WdFootnoteLocation', 'xlPatternDown', 'Characters',
           'Bibliography', 'AutoCaption', 'UpBars',
           'wdPreviousRecord', 'wdUnderlineDashHeavy',
           'XlTickLabelOrientation', 'wdGray25',
           'wdFieldFormTextInput', 'xlLegendPositionTop',
           'wdTCSCConverterDirectionTCSC', 'xlNavy',
           'wdFirstCharacterColumnNumber', 'wdLinkTypeText',
           'wdPropertyParas', 'wdContentControlHidden',
           'PictureFormat', 'wdArtStars', 'wdTypeFrameset',
           'wdLineSpaceMultiple', 'wdRomanian', 'wdCustomLabelA4LS',
           'wdUseWord2010TableStyleRules', 'OMathMatRows',
           'wdEndnoteNumberFormatted', 'Column', 'wdCharacter',
           'wdArtNorthwest', 'xlBox', 'wdSpanishVoseoOnly',
           'wdLockReservation', 'wdTextOrientationVertical',
           'wdTamazight', 'wdDialogCreateSource',
           'wdRDIRemovePersonalInformation', 'wdStyleTOC3',
           'wdSplitPgBreakAndParaMark', 'wdFootnotesStory',
           'wdDontAutofitConstrainedTables', 'WdHelpTypeHID',
           'wdDialogTableInsertRow', 'xlPatternLinearGradient',
           'WdRevisedLinesMark', 'wdColorGray95', 'wdRightPortrait',
           'wdKeyM', 'wdFieldFileSize',
           'wdAllowSpaceOfSameStyleInTable', 'wdDialogToolsTemplates',
           'wdTableFormat3DEffects3', 'xlXErrorBars', 'xlHAlignRight',
           'WdListGalleryType', 'IApplicationEvents4', 'TableStyle',
           'Rectangle', 'wdTypeCustomTextBox', 'xlLow',
           'wdDialogInsertAutoCaption',
           'wdLigaturesContextualDiscretional', 'ChartGroup',
           'wdStyleBodyTextIndent', 'wdBelgianFrench',
           'wdPaperEnvelopeB6', 'wdKeyF12', 'OMathBreaks',
           'wdTwoLinesInOneSquareBrackets', 'xlLegendPositionLeft',
           'xlLightUp', 'xlLightSlateGray', 'ListLevels',
           'WdAlignmentTabRelative', 'wdNewXMLDocument', 'wdKorean',
           'wdPageNumberStyleBidiLetter1',
           'wdDialogNoteOptionsTabAllEndnotes', 'WdTableFormatApply',
           'wdTypeCustom2', 'wdListNumberStyleVietCardinalText',
           'wdStatisticLines', 'wdShowFilterFormattingAvailable',
           'xlGray8', 'wdFootnoteContinuationSeparatorStory',
           'wdArtZigZagStitch', 'xlSides', 'wdFirstRecord',
           'wdMergeInfoFromODSO', 'wdFieldExpression',
           'wdSpanishGuatemala', 'wdBrazil', 'wdLockChanged',
           'wdLigaturesNone', 'wdMoveFromTextMarkDoubleStrikeThrough',
           'wdWordDocument', 'Walls', 'wdLineStyleEmboss3D',
           'wdFulfulde', 'wdVisualSelectionContinuous',
           'wdDialogFormatDefineStyleBorders', 'xl3DBar',
           'wdOMathFunctionEqArray', 'wdMarkupRectangle',
           'wdAlertsMessageBox', 'wdLeftPortrait',
           'WdApplyQuickStyleSets', 'wdMergeSubTypeWord2000',
           'AutoCorrectEntries', 'wdTOCSimple',
           'wdArtCirclesRectangles', 'wdColorBlack', 'wdBeneathText',
           'wdNewWebPage', 'wdAlbanian', 'WdTextOrientationHID',
           'wdMatchEndnoteMark', 'wdFrenchMorocco', 'wdKeyNumeric8',
           'wdTableFormatList6', 'xlHotPink', 'EmailAuthor',
           'wdAllowHyphenationAtTrackBottom',
           'wdDialogTableCellOptions', 'wdFramesetNewFrameRight',
           'wdNoteNumberStyleHindiCardinalText',
           'WdDocumentViewDirection', 'wdStyleTOC4', 'WdUnderline',
           'wdRDIAll', 'wdPasteText', 'wdInitialAlef',
           'wdInFootnoteEndnotePane', 'WdTabLeaderHID', 'ListFormat',
           'WdSpellingErrorType', 'LinkFormat', 'xlDownBars',
           'wdTypeCustomPageNumber', 'wdTOATemplate', 'Zooms',
           'wdDialogTablePropertiesTabColumn', 'Conflict',
           'wdFieldPrintDate', 'wdSortByName',
           'wdAlignVerticalCenter', 'wdYi',
           'wdDontWrapTextWithPunctuation',
           'wdDialogFileMacPageSetupGX', 'WdBrowseTarget',
           'wdCaptionNumberStyleArabicFullWidth',
           'wdDialogFormatBordersAndShadingTabPageBorder',
           'wdFieldGoToButton', 'wdFormatDOSText', 'wdStyleHyperlink',
           'xlTransparent', 'wdTibetan', 'wdStyleTypeParagraph',
           'MailMergeField', 'wdMergeIfIsBlank', 'WdPageColor',
           'wdArtMosaic', 'wdBlue', 'wdPaperA5', 'wdArtTribal2',
           'wdKeyJ', 'Dialogs', 'wdNoteNumberStyleArabicLetter2',
           'wdColorSeaGreen',
           'wdBrowserLevelMicrosoftInternetExplorer6',
           'wdTextureVertical', 'wdLineStyleThinThickLargeGap',
           'wdRevisionStyle', 'wdFieldHyperlink', 'wdTypeAutoText',
           'wdArtBirds', 'xlFill', 'WdOrganizerObject', 'wdPicas',
           'WrapFormat', '_Font', 'wdTextureNone',
           'wdNoteNumberStyleThaiCardinalText', 'wdAdjective',
           'wdVietnamese', 'wdDialogFormatPicture',
           'wdArtChampagneBottle', 'wdStory', 'wdFormatWebArchive',
           'WdContentControlDateStorageFormat', 'WdStyleSort',
           'wdDialogToolsOptionsSmartTag', 'wdStylisticSet20',
           'wdStyleTableLightShading', 'wdArtShadowedSquares',
           'wdDialogInsertIndexAndTablesTabTableOfContents',
           'wdStylisticSet02', 'WdStatisticHID',
           'wdTypeCustomTableOfContents', 'wdTextOrientationUpward',
           'Options', 'wdUnderlineDashLong',
           'WdProofreadingErrorType',
           'wdUseDestinationStylesRecovery', 'xlPaleGreen', 'wdKeyR',
           'wdPaperB4', 'xlPapayaWhip', 'xlPeachPuff',
           'wdTableFormatColorful2', 'wdTableFormatColorful3',
           'xlRegionLabelOptionsBestFitOnly',
           'xlTickLabelPositionLow', 'wdPaper10x14',
           'wdOpenFormatXMLTemplateSerialized', 'wdArtStars3D',
           'wdTableTop', 'ListGalleries', 'WdShapeSizeRelative',
           'wdAutoVersionOnClose', 'wdContentControlPicture',
           'wdPaperEnvelopeDL', 'wdArtStarsBlack',
           'wdInsertedTextMarkDoubleUnderline', 'wdStyleTOC8',
           'DataTable', 'wdArtFirecrackers',
           'wdDialogToolsAdvancedSettings', 'wdCalendarHebrew',
           'wdArtMusicNotes', 'ApplicationEvents', 'xlPlus',
           'wdSortSeparateByTabs', 'RepeatingSectionItemColl',
           'wdOLEVerbPrimary', 'wdNoHighlight', 'Bookmark',
           'wdTypeHeaders', 'wdPasteShape',
           'wdJustificationModeExpand', 'wdDiacriticColorLatin',
           'wdWindowStateNormal', 'WdDeletedTextMark',
           'wdTempFilePath', 'wdStylisticSet13', 'wdNextCase',
           'wdListNumberStyleArabicLZ2',
           'wdNoteNumberStyleLowercaseLetter', 'wdItaly', 'xlPower',
           'xlCross', 'wdSubscriber', 'wdPaperEnvelopeB5',
           'WdAutoMacros', 'wdDropMargin', 'xlMarkerStylePicture',
           'wdArtFlowersRedRose', 'wdStyleNormal',
           'wdTexture40Percent', 'wdOpenFormatText', 'wdTypeCustom3',
           'xlTickLabelPositionNone', 'xlOuterClockwisePoint',
           'wdPrimaryHeaderStory', 'xlPlotArea',
           'wdInlineShapePictureBullet', 'wdFormatRTF',
           'wdOutlineLevel9', 'WdPortugueseReform', 'wdFindStop',
           'wdStyleFootnoteText', 'wdSalutationOther', 'wdKeyDelete',
           'wdOMathFunctionPhantom', 'wdTableFormatGrid8',
           'wdFieldAddressBlock', 'xlDashDotDot', 'WdLigatures',
           'OMathAutoCorrectEntry', 'wdLineStyleNone',
           'wdFieldShadingNever', 'wdArabicOman',
           'wdForgetLastTabAlignment', 'xlLegendKey',
           'wdEditorEditors', 'wdBusinessFax',
           'wdStartOfRangeColumnNumber', 'wdArtGems', 'CoAuthors',
           'LegendEntry', 'wdKeyO', 'wdUnderlineWords', 'wdEnglishUK',
           'wdFrenchCongoDRC', 'wdStyleIndex5', 'wdArgentina',
           'wdColorGold', 'WdLineSpacing', 'XlSizeRepresents',
           'wdNone', 'wdTypeCustomFooters', 'wdCurrentDateText',
           'wdColorSkyBlue', 'wdKeyOption', 'WdKey',
           'wdSerbianCyrillic', 'wdKeyW', 'WdWordDialogHID',
           'wdKeyCategoryNil', 'wdWrapSquare',
           'wdCaptionNumberStyleSimpChinNum2', 'wdFieldRefDoc',
           'wdTigrignaEritrea', 'wdBalloonWidthPercent',
           'wdMongolian', 'xlDisplayUnitLabel',
           'wdTableFormatApplyColor', 'xlLightGoldenrodYellow',
           'wdTaskPaneRevealFormatting', 'wdDialogFormatColumns',
           'wdEmphasisMarkUnderSolidCircle',
           'wdOMathFunctionLiteralText',
           'wdRelativeVerticalSizeBottomMarginArea',
           'wdOMathFunctionNary', 'wdSlovenian', 'wdSlovak',
           'wdRevisionInsert', 'xlLightVertical',
           'wdDialogToolsAutoCorrectExceptions',
           'WdRelativeVerticalSize', 'wdDialogXMLOptions',
           'wdEmailMessage', 'wdKey3', 'wdWrapTight', 'wdKeyNumeric6',
           'wdKeyF15', 'WdTrailingCharacter', 'CoAuthLock',
           'wdCaptionNumberStyleVietCardinalText',
           'wdDialogInsertIndex', 'wdDialogMailMergeQueryOptions',
           'wdArtBasicBlackDots', 'wdMatchCaretCharacter',
           'wdStyleSortByType', 'wdPaneFootnotes',
           'xlLabelPositionInsideEnd', 'DropDown', 'wdGoToComment',
           'wdDialogCSSLinks', 'wdGenderNeutral', 'wdMWSmallCaps',
           'xlSplitByPosition', 'xlCorner', 'wdArtCelticKnotwork',
           'wdDialogFontSubstitution', 'wdFieldBidiOutline',
           'OMathRecognizedFunction', 'wdRevisionsViewOriginal',
           'EmailSignatureEntries', 'xlNavajoWhite',
           'wdMergeFormatFromOriginal',
           'xlChartElementPositionAutomatic', 'wdColorGray375',
           'WdCursorType', 'StyleSheet', 'OMathFunctions',
           'wdOrganizerObjectCommandBars', 'wdKeyF11', 'wdEMail',
           'wdListNumberStyleChosung', 'XlBackground',
           'wdWidthFullWidth', 'wdTextConvertersPath',
           'wdFrenchLuxembourg', 'wdLine', 'wdArtEarth1', 'wdKeyF10',
           'wdPropertyKeywords', 'RepeatingSectionItem',
           'wdArtZigZag', 'XlDataLabelPosition',
           'wdListNumberStyleHangul', 'wdPaperEnvelope14',
           'wdDialogContentControlProperties',
           'wdDialogWebOptionsGeneral', 'wdProgramPath',
           'WdStoryType', 'Editor', 'wdTypeCustomHeaders',
           'wdPortugueseBoth', 'xlVAlignTop', 'wdStylisticSet16',
           'wdGoToBookmark', 'WdListNumberStyle', 'XMLNodes',
           'wdOMathFunctionFunc', 'wdSpellingCustom',
           'wdCaptionNumberStyleUppercaseLetter',
           'wdDialogConsistencyChecker',
           'wdDialogToolsHighlightChanges', 'wdAdjustFirstColumn',
           'wdCalendarUmalqura', 'wdState',
           'wdDialogFormatDefineStyleFrame', 'wdDialogIMESetDefault',
           'wdPrintProperties', 'wdStyleNavPane',
           'wdMatchAnyCharacter', 'wdHanjaToHangul', 'Corners',
           'wdIndexSortByStroke', 'Task', 'xlNavyBlue',
           'wdPageNumberStyleNumberInDash',
           'wdRelativeVerticalPositionBottomMarginArea',
           'wdDialogFormatFontTabCharacterSpacing',
           'wdTextFrameStory', 'xlGrid', 'wdDialogInsertDateTime',
           'wdDialogToolsHyphenation', 'TaskPane',
           'wdDialogMailMergeFindRecord', 'xlGray25', 'xlTriangle',
           'wdFontBiasDontCare', 'wdDialogInsertNumber',
           'wdCellColorPink', 'WdReadingOrder', 'wdStyleNormalIndent',
           'wdStyleBodyTextFirstIndent', 'wdTypeCustomQuickParts',
           'WdMailMergeState', 'wdTableFormatColorful1',
           'wdAutoFitContent', 'wdSectionDirectionRtl',
           'wdFrenchCameroon', 'wdMergeTargetSelected',
           'xlHorizontal', 'wdTexture5Percent',
           'wdOpenFormatTemplate', 'wdColorPlum',
           'wdRDIDocumentServerProperties', 'wdOMathJcCenter',
           'wdLineSpaceDouble', 'MailMergeFields',
           'wdOMathBreakSubMinusMinus', 'wdTaskPaneSignature',
           'wdPowerTalk', 'RecentFiles', 'wdTableFormatSubtle1',
           'wdKeyScrollLock', 'wdFramesetTypeFrame',
           'wdAlignParagraphLeft', 'wdDialogEditObject',
           'wdClassicBlue', 'wdStyleTableMediumGrid2',
           'wdStylisticSet05', 'xlLightSteelBlue',
           'wdPromptToSaveChanges', 'wdDateLanguageLatin', 'wdToggle',
           'XlConstants', 'wdLatinAmerica', 'xlSlantDashDot',
           'wdPhoneticGuideAlignmentCenter',
           'wdTaskPaneDocumentUpdates', 'HorizontalLineFormat',
           'wdDontBreakConstrainedForcedTables',
           'wdArtCheckedBarColor', 'wd80', 'wdArtBabyPacifier',
           'wdContentControlBoundingBox',
           'wdRelativeHorizontalSizeLeftMarginArea',
           'wdInlineShapeScriptAnchor', 'wdIceland',
           'xlHundredMillions', 'ChartArea', 'wdDialogEditLinks',
           'xlCenterPoint', 'xlDarkSeaGreen', 'wdCustomLabelB5',
           'wdTableFormatColumns4', 'wdAlertsAll',
           'wdSortSeparateByCommas', 'xlOlive', 'Sections',
           'wdKeySlash', 'wdVerb', 'wdDialogMailMergeInsertNextIf',
           'wdFramesetSizeTypePercent', 'TextEffectFormat',
           'xlConeToMax', 'wdConjunction', 'wdControlImage',
           'wdListNumberStyleUppercaseRoman', 'wdPaper11x17',
           'xlJustify', 'wdLineWrapLikeWord6', 'WdPrintOutPages',
           'wdToolsPath', 'xlSingle', 'wdTexture2Pt5Percent',
           'wdOMathFunctionScrSub', 'wdShapeLeft',
           'wdInsertedTextMarkItalic', 'wdAutoClose',
           'wdMarkupRectangleMoveMatch', 'xlConeToPoint',
           'wdPageFitFullPage', 'wdTableOriginalFormatting',
           'wdSalutationFormal', 'wdMAPI', 'wdBrowseHeading',
           'wdSwedishFinland', 'wdDialogMailMergeInsertFillIn',
           'wdRevisionDelete', 'wdBorderDistanceFromPageEdge',
           'wdProofingToolsPath', 'TwoInitialCapsException',
           'wdDialogMailMergeOpenDataSource', 'WdBuiltInProperty',
           'wdDialogOMathRecognizedFunctions', 'wdStatisticWords',
           'wdKeyCategoryPrefix', 'wdRhaetoRomanic',
           'wdSpouseCourtesyTitle', 'wdArtStarsTop',
           'wdFormatTextLineBreaks', 'WdRelativeVerticalPosition',
           'wdFormatFlatXMLMacroEnabled',
           'wdDialogFormatBordersAndShading', 'wdThemeColorAccent4',
           'wdCustomLabelVertHalfSheet',
           'wdRevisedPropertiesMarkDoubleStrikeThrough',
           'WdCompatibility', 'xlPatternLightHorizontal',
           'wdCustomLabelHigakiLS', 'WdInsertedTextMark',
           'wdFieldAutoNum', 'wdNoteNumberStyleUppercaseLetter',
           'XlSeriesNameLevel', 'wdSortFieldKoreaKS',
           'wdControlCheckbox', 'xlPatternGray75', 'WdToaFormat',
           'ChartGroups', 'wdCommentsStory',
           'wdDialogToolsOptionsTabTypography', 'wdTOFTemplate',
           'Endnotes', 'wdPropertyNotes', 'wdBrightGreen',
           'OLEFormat', 'wdTOCFormal', 'WdAutoVersions',
           'wdColorGray625', 'wdTableFormatGrid5', 'wdFieldPageRef',
           'WdArabicNumeral', 'XlTimeUnit', 'wdReplaceOne',
           'wdFieldDDEAuto', 'wdStyleSheetPrecedenceHighest',
           'WdWordDialogTabHID', 'xlDimGray', 'wdExportFormatXPS',
           'wdLineStyleSingleWavy', 'wdRight', 'wdSeparatorPeriod',
           'wdDialogToolsOptionsTabUserInfo',
           'wdNoteNumberStyleSimpChinNum1', 'wdKeyCategoryMacro',
           'wdStyleHeading1', 'wdInternationalAM',
           'wdListNumberStyleThaiArabic', 'WdGoToDirection',
           'xlInside', 'wdOpenFormatAllWordTemplates', 'xlDarkRed',
           'wdArtIceCreamCones', 'wdDialogOrganizerTabCommandBars',
           'wdIndexFilterMedium', 'wdPaneEndnotes', 'Frames',
           'WdAnimation', 'wdCellColorLightOrange',
           'wdListNumberStyleHanjaRead', 'ReadabilityStatistic',
           'wdPersian', 'wdPropertyTimeLastPrinted',
           'wdFrenchWestIndies', 'wdFrameInside',
           'wdContentControlLevelCell', 'wdHangulToHanja',
           'wdCurrent', 'HTMLDivision', 'wdTightAll',
           'xlLegendPositionCorner', 'wdLineStyleEngrave3D',
           'xlOuterCounterClockwisePoint', 'wdUserOptionsPath',
           'wdContentControlText', 'wdDialogToolsAutoCorrect',
           'Panes', 'WdHeadingSeparator', 'WdListType', 'wdBackward',
           'wdRevisedLinesMarkLeftBorder', 'OLEControl',
           'wdGutterPosTop', 'XlCategoryType', 'xlMaximum',
           'wdTruncateFontHeight', 'wdRelativeVerticalSizePage',
           'wdChineseMacaoSAR', 'wdWrapRight',
           'wdDialogToolsOptionsSave', 'wdDialogMailMergeCheck',
           'CategoryCollection',
           'wdMoveToTextMarkDoubleStrikeThrough', 'wdLatin',
           'WdUseFormattingFrom', 'wdArtLightning2',
           'wdDialogInsertPicture', 'wdOutlineLevel2',
           'wdBrowseComment', 'WdFindWrap',
           'wdTableFormatApplyFirstColumn', 'wdStyleTableLightList',
           'wdOddColumnBanding', 'wdFieldSubject',
           'wdDialogHelpAbout', 'wdBaselineAlignAuto',
           'xlSpringGreen', 'WdLineStyle', 'wdFinalYaa',
           'WdWordDialogTab', 'WdKeyCategory', 'xlTickMarkCross',
           'wdTypeCustomPageNumberBottom', 'wdFieldAutoNumOutline',
           'wdPropertyPages',
           'wdDialogToolsEnvelopesAndLabelsTabLabels', 'wdBulgarian',
           'wdKeyCategoryAutoText', 'WdStyleSheetLinkType',
           'wdDialogToolsOptionsTabGeneral',
           'wdDocumentControlRectangle', 'wdDialogFormFieldOptions',
           'wdSortByLocation', 'WdUnits', 'wdTextOrientationDownward',
           'xlFloor', 'xlVAlignCenter', 'WebOptions',
           'wdDialogToolsCreateEnvelope', 'wdOpenFormatDocument97',
           'XlLegendPosition', 'wdArabicKuwait', 'wdKonkani',
           'WdShapePosition', 'wdShapeInside', 'wdLFCR',
           'wdArtFlowersRoses', 'WdReferenceKind', 'xlGreenYellow',
           'wdTableFormatColumns3', 'wdCursorNorthwestArrow',
           'WdEnvelopeOrientation', 'wdBalloonWidthPoints',
           'AutoCorrect', 'wdInlineShapeWebVideo',
           'wdDialogFormatStyle', 'wdPrinterLargeFormatBin',
           'ChartFormat', 'wdKeyF6', 'xlBottom', 'OMathEqArray',
           'WdUpdateStyleListBehavior', 'wdFieldAutoNumLegal',
           'wdExportFromTo', 'wdArtCouponCutoutDashes',
           'wdNeverConvert', 'wdTexture45Percent',
           'ContentControlListEntries', 'wdEnglishIndonesia',
           'wdRevisionMovedTo', 'wdIndexSortBySyllable',
           'wdSendToFax', 'xlTickLabelOrientationVertical',
           'wdTypePageNumberPage', 'wdSeekFootnotes',
           'wdGutterStyleLatin', 'wdAutoExit', 'wdRomanianMoldova',
           'wdKeyCategoryFont', 'wdTaskPaneSharedWorkspace',
           'WdMailMergeDataSource', 'wdArtSnowflakeFancy',
           'wdCheckInMajorVersion', 'Row', 'wdFrameCenter',
           'wdStyleList5', 'wdLetterLeft', 'xlBinsTypeBinSize',
           'wdSindhiPakistan', 'xlAxisCrossesMinimum',
           'wdStyleTableLightGrid', '_ParagraphFormat',
           'wdDialogFitText', 'wdTaskPaneSearch',
           'wdEvenColumnBanding', 'xlChecker',
           'wdTexture82Pt5Percent', 'xlRTL', 'wdFieldImport',
           'wdTaskPaneDocumentManagement', 'wdMixedScript', 'xlRed',
           'xlYErrorBars', 'FillFormat', 'wdSeekPrimaryHeader',
           'wdKeyAlt', 'wdInLineRevisions', 'Dictionary',
           'wdBrowseSection', 'xlDarkGoldenrod', 'wdNumberParagraph',
           'xlMarkerStyleStar', 'wdDialogToolsOptionsTabSave',
           'OMathAutoCorrect', 'xlMinimum', 'wdWrapNone',
           'wdDialogFileVersions', 'wdXMLNodeElement', 'wdFindAsk',
           'wdColorLightBlue', 'wdAlignParagraphRight',
           'wdTexture70Percent', 'xlFront', 'InlineShape',
           'wdOMathVertAlignCenter', 'wdHeaderFooterEvenPages',
           'wdListBehaviorAddBulletsNumbering', 'wdUnderlineWavy',
           'wdLineWidth050pt', 'wdMergeSubTypeWord',
           'wdLigaturesContextual', 'WdTableFieldSeparator',
           'wdColorGray10', 'XlSeriesColorGradientStyle', 'xlBeige',
           'xlChartElementPositionCustom', 'WdRelocate',
           'wdTOAClassic', 'MailMergeDataSource', 'DocumentEvents2',
           'wdLineStyleDashDot', 'wdInsertedTextMarkStrikeThrough',
           'xlDataLabelsShowValue', 'wdStyleHtmlNormal',
           'wdArtBasicWhiteSquares', 'WdExportRange',
           'wdDialogSchemaLibrary', 'wdSendToNewDocument',
           'wdDontUseAsianBreakRulesInGrid', 'wdRightMargin',
           'wdPropertyTimeCreated',
           'xlUnderlineStyleDoubleAccounting', 'wdColorGray75',
           'wdArtSawtoothGray', 'WdTablePosition',
           'wdDialogMailMergeInsertIf', 'Footnote',
           'WdPhoneticGuideAlignmentType',
           'HangulAndAlphabetException', 'wdTexture15Percent',
           'wdHeadingSeparatorLetter', 'wdTexture60Percent',
           'WdCharacterCase', 'wdListNumberStyleGBNum1',
           'wdArtCrossStitch', 'wdTurquoise', 'xlDarkSlateBlue',
           'wdNoteNumberStyleTradChinNum2', 'wdMoveToTextMarkBold',
           'wdStyleTOC5', 'xlSizeIsArea', 'wdOnlineView',
           'WdCheckInVersionType', 'wdWelsh',
           'wdStyleTableMediumList1Accent1', 'wdTaskPaneThesaurus',
           'wdLFOnly', 'xlInnerCounterClockwisePoint',
           'wdXMLValidationStatusOK', 'wdCity', 'wdPropertyFormat',
           'wdSubFontBySize', 'wdAutospaceLikeWW7',
           'wdDialogFormatAddrFonts', 'SoftEdgeFormat',
           'wdMainDocumentOnly', 'wdListSeparator', 'xlDarkSalmon',
           'wdLineStyleDoubleWavy', 'wdInlineShape3DModel',
           'wdDialogStyleManagement', 'WdOLEVerb',
           'wdSeekCurrentPageHeader',
           'wdDialogToolsAutoManagerTabAutoText',
           'OtherCorrectionsExceptions', 'wdListApplyToWholeList',
           'wdKeyNumericDecimal', 'wdDialogTableRowHeight',
           'wdLineWidth150pt', 'WdHeaderFooterIndex', 'wdSideToSide',
           'wdTypeDocument', 'FontNames', 'wdMatchColumnBreak',
           'wdNotYetRouted', 'wdTypeCustom1', 'wdArtTwistedLines1',
           'wdFarEastLineBreakLevelStrict', 'Version',
           'wdContentControlGroup', 'wdPreposition',
           'wdMonthNamesFrench', 'wdReferenceOfType',
           'wdDialogFormatBordersAndShadingTabBorders',
           'wdNoteNumberStyleUppercaseRoman', 'wdAutoSync',
           'wdMergeIfLessThan', 'wdSentence', 'wdXMLNodeAttribute',
           'wdDialogFormatDefineStylePara', 'WdXMLNodeType',
           'WdEndnoteLocation', 'xlTickLabelOrientationUpward',
           'wdFirstPageFooterStory',
           'wdDialogFormatDrawingObjectTabPosition',
           'wdDialogToolsAutoSummarize', 'wdTypeCustomPageNumberTop',
           'wdOMathSpacingMultiple', 'WdGoToItem',
           'wdTexture90Percent', 'Adjustments',
           'wdListNumberStyleBidi1', 'XMLChildNodeSuggestion',
           'HiLoLines', 'wdSystem', 'xlThousands', 'MappedDataField',
           'WdSaveFormat', 'wdCaptionNumberStyleZodiac2',
           'WdSectionDirection', 'wdArtPyramidsAbove',
           'wdBorderDiagonalUp', 'emptyenum',
           'wdRelativeVerticalSizeTopMarginArea', 'wdFormatFlatXML',
           'wdStyleEnvelopeReturn',
           'wdDialogToolsAutoManagerTabAutoFormat', 'wdStyleHeading9',
           'wdCzech', 'wdTypeWatermarks', 'wdDialogViewZoom',
           'WdSeparatorType', 'wdDialogToolsOptionsTabFuzzy',
           'wdPageColorSepia', 'wdOverType', 'wdCanada', 'wdKeyF4',
           'xlPatternGray25', 'wdFrenchPreReform',
           'wdOMathFunctionLimUpp',
           'wdDialogToolsAutoCorrectExceptionsTabInitialCaps',
           'wdListNumberStyleArabicLZ3', 'wdTypeCoverPage',
           'TextRetrievalMode', 'wdNumLock',
           'wdDialogInsertTableOfFigures',
           'wdTypeCustomPageNumberPage',
           'wdDialogToolsAutoManagerTabAutoCorrect', 'wdKey2',
           'wdNumberAllNumbers', 'wdArtEggsBlack', 'SeriesCollection',
           'wdSortFieldJapanJIS', 'xlErrorBarIncludeNone',
           'wdDialogInsertWebComponent', 'xlCadetBlue',
           'xlIndexAscending', 'wdTableFormatGrid6',
           'wdOpenFormatXMLDocumentMacroEnabledSerialized',
           'wdWildcard', 'WdLetterStyle', 'HeadersFooters',
           'xlDataLabelsShowNone', 'wdPrintComments', 'wdBengali',
           'Hyperlink', 'wdAlignTabLeft',
           'wdPageNumberStyleHindiCardinalText',
           'wdCaptionNumberStyleZodiac1', 'wdPaperFanfoldLegalGerman',
           'wdTexture10Percent', 'xlTickLabelOrientationHorizontal',
           'WdConstants', 'wdLineBreak', 'TextFrame',
           'wdColorDarkBlue', 'wdNextDataSourceRecord',
           'wdDialogFormFieldHelp', 'xlShowLabelAndPercent',
           'wdNoteNumberStyleSymbol', 'wdDeletedTextMarkItalic',
           'WdRevisedPropertiesMark', 'xlDataLabel',
           'wdStyleTableMediumList2', 'wdListNumberStyleZodiac2',
           'wdTableFormatApplyLastColumn', 'wdIndexFancy',
           'wdLineStyleThinThickMedGap',
           'wdOpenFormatXMLTemplateMacroEnabledSerialized',
           'wdFieldTOC', 'wdTableFormatProfessional',
           'wdDialogEditFrame', 'wdLineStyleThickThinMedGap',
           'wdArtBasicWideMidline', 'wdArtBasicBlackSquares',
           'xlSilver', 'MailMergeFieldNames', 'wdPageBreak',
           'wdStyleTOC9', 'wdEntireCaption', 'ListTemplate',
           'wdTigrignaEthiopic', 'wdKeyF14',
           'wdHorizontalLinePercentWidth', 'wdDialogFileRoutingSlip',
           'WdWrapTypeMerged', 'wdRelativeHorizontalPositionPage',
           'wdPrinterSmallFormatBin', 'wdCursorWait',
           'FileConverters', 'wdTexture55Percent',
           'wdListNumberStyleKanji', 'wdTypeCustomAutoText',
           'xlTickMarkInside', 'WdWrapSideType', 'wdPasteOLEObject',
           'KeyBindings', 'XlCategorySortOrder', 'xlZero',
           'WdRevisionType', 'wdDialogCopyFile', 'xlPatternVertical',
           'wdYoruba', 'xlFuchsia', 'wdCalendarJapan',
           'wdInlineShapeHorizontalLine', 'WdNewDocumentType',
           'wdStyleBlockQuotation', 'wdStyleList4',
           'WdLetterheadLocation', 'WdPaperTray', 'xlAbove',
           'ShapeNode', 'wdDialogWebOptionsBrowsers',
           'wdThousandsSeparator', 'wdPropertyCharacters',
           'wdKeyHome', 'wdDocumentNotSpecified', 'wdArtPoinsettias',
           'wdListNumberStyleHanja', 'List',
           'wdStyleBodyTextFirstIndent2', 'wdInFieldCode',
           'wdHorizontalLineAlignRight', 'XlDataLabelSeparator',
           'wdHorizontalInVerticalResizeLine',
           'wdMoveToTextMarkItalic', 'wdDialogToolsRevisions',
           'wdShapeTop', 'wdMalayalam',
           'xlTickLabelOrientationDownward', 'wdStyleBodyText',
           'wdStyleCaption', 'DropCap', 'xlMediumOrchid', 'wdSWCell',
           'wdThai', 'wdFieldSaveDate', 'wdTextRectangle',
           'wdGuarani', 'wdLineStyleThickThinSmallGap',
           'wdSpanishChile', 'wdEndnoteSeparatorStory', 'wdKeyEquals',
           'wdWPSpaceWidth', 'ChartFont', 'wdExportAllDocument',
           'XlBorderWeight', 'xlHorizontalCoordinate', 'xlBurlyWood',
           'wdListNumberStyleHindiLetter1', 'wdRDIRoutingSlip',
           'wdDialogMailMergeCreateDataSource', 'xlRowField',
           'CheckBox', 'wdSpanishModernSort', 'wdFieldFormDropDown',
           'WdOMathBreakBin', 'wdMailNavArea', 'wdCenterPortrait',
           'wdTOCDistinctive', 'wdPaperCustom', 'wdTextureDarkCross',
           'wdTextureHorizontal', 'xlChartX', 'wdFieldSubscriber',
           'xlLightGreen', 'ListLevel', 'xlAllFaces',
           'wdArtTornPaper', 'wdRevisedPropertiesMarkItalic',
           'wdPrinterOnlyBin', 'wdArtDoubleDiamonds', 'xlDot',
           'wdTexture50Percent', 'wdDateText',
           'wdDialogInsertSymbolTabSpecialCharacters',
           'wdDateSeparator', 'wdColorGray20', '_Application',
           'Footnotes', 'xlLinear', 'wdGoToLine',
           'wdListNumberStyleKanjiDigit', 'wdChina', 'wdFieldEmpty',
           'AutoCaptions', 'xlLabelPositionAbove', 'xlShowValue',
           'wdArtSkyrocket', 'wdPhoneticGuideAlignmentLeft',
           'wdLinkNone', 'WdNumberingRule',
           'wdNoteNumberStyleHindiArabic', 'wdSectionBreakContinuous',
           'wdPageNumberStyleArabicLetter2', 'OMathScrPre',
           'wdDialogInsertSymbolTabSymbols',
           'wdDialogInsertSubdocument', 'wdRevisionMarking',
           'wdArtCornerTriangles', 'xlMarkerStyleSquare',
           'wdDialogFilePageSetupTabPaperSize', 'BuildingBlocks',
           'wdCountryRegion', 'wdMailFormatPlainText',
           'wdAlignPageNumberInside', 'wdLineBreakSimplifiedChinese',
           'wdFieldPage', 'WdOLEType', 'wdKeyInsert',
           'wdTexture67Pt5Percent',
           'wdDialogFileMacCustomPageSetupGX', 'wdFrameExact',
           'wdTOADistinctive', 'WdLinkType',
           'wdLigaturesContextualHistorical', 'wdAtEndOfRowMarker',
           'Breaks', 'wdGranularityWordLevel', 'wdIndexTemplate',
           'wdTitleWord', 'wdRow', 'xlMediumBlue',
           'wdDialogToolsAutoCorrectExceptionsTabIac',
           'xlMarkerStyleX', 'xlBlack', 'wdArtPyramids',
           'WdParagraphAlignment', 'wdOMathSpacingDouble',
           'wdArabicLebanon', 'wdPropertyBytes',
           'wdListNumberStyleLowercaseBulgarian',
           'xlCategoryDescending', 'wdInlineShapeLinkedPicture',
           'wdMailingLabels', 'CustomLabels', 'wdPaperLegal',
           'wdStylisticSet18', 'ProtectedViewWindow',
           'wdNoteNumberStyleNumberInCircle',
           'wdDialogFormatDrawingObjectTabTextbox', 'xlLightGray',
           'MailMerge', 'Columns', 'wdRDITemplate', 'wdOutlineView',
           'wdOrientLandscape', 'wdCaptionNumberStyleLowercaseRoman',
           'WdDefaultListBehavior', 'XSLTransform',
           'wdDialogInsertTableOfContents',
           'wdListNumberStyleThaiCardinalText',
           'wdMatchManualLineBreak', 'MailMessage', 'xlLightCyan',
           'wdPaperTabloid',
           'wdLigaturesContextualHistoricalDiscretional',
           'WdOMathVertAlignType',
           'wdRelativeVerticalPositionParagraph',
           'wdTabLeaderMiddleDot', 'Point', 'WdDocumentType',
           'wdFrisianNetherlands', 'wdAllowOnlyComments',
           'WdExportFormat', 'WdBorderTypeHID',
           'wdLineStyleThinThickThinMedGap', 'wdPaperEnvelopeMonarch',
           'xlSeries', 'wdDialogToolsProtectSection', 'Break',
           'wdIndexIndent', 'wdCellColorLightYellow',
           'WdBrowserLevel', 'wdPasteHyperlink', 'wdArtSwirligig',
           'wdInlineShapeLinkedPictureHorizontalLine',
           'wdTypeBibliography', 'xlHAlignFill', 'wdFrameOutside',
           'wdDialogFormatDrawingObject', 'wdMaximumNumberOfRows',
           'wdRefTypeBookmark', 'wdLigaturesDiscretional', 'xlCustom',
           'wdReadingView', 'wdKeyF1', 'WdMailMergeDefaultRecord',
           'wdInsertCellsEntireRow', 'wdStyleTableMediumList1',
           'TwoInitialCapsExceptions', 'WdIndexFilter', 'TickLabels',
           'wdOrganizerObjectAutoText', 'xlShape', 'xlGrey',
           'wdDialogFilePrintOneCopy', 'wdTajik',
           'wdStartOfRangeRowNumber', 'wdStyleSheetLinkTypeLinked',
           'XlPattern', 'ColorFormat', 'wdTypeTemplate',
           'wdStyleIntenseEmphasis', 'wdTaskPaneSelection',
           'xlRegionLabelOptionsShowAll', 'wdLatvian', 'wdWindow',
           'wdStyleSheetPrecedenceLower', 'wdKeyPeriod',
           'wdDialogFileSaveVersion', 'wdReplaceAll',
           'wdStyleListParagraph', 'wdDialogWebOptions',
           'wdOMathSpacingSingle', 'wdOMathSpacing1pt5',
           'wdArtPalmsBlack', 'xlPatternLightDown',
           'wdOMathFunctionBorderBox', 'wdOriginalDocumentFormat',
           'wdIMEModeOff', 'xlDefaultAutoFormat', 'wdDepartment',
           'WdRowHeightRule', 'WdMailMergeMailFormat',
           'wdStyleHtmlPre', 'wdPrintFromTo', 'wdPaperFanfoldUS',
           'wdWord2003', 'xlBoth', 'wdFieldKindCold', 'wdKeyNumeric1',
           'wdCaptionNumberStyleBidiLetter2', 'wdMexicanSpanish',
           'xl3DSurface', 'wdOpenFormatUnicodeText',
           'wdTexture32Pt5Percent', 'wdFieldMergeField',
           'wdDialogMarkTableOfContentsEntry',
           'wdListNumberStyleLegal', 'wdMatchManualPageBreak',
           'xlCorners', 'wdStyleSheetPrecedenceHigher',
           'wdArabicQatar', 'Floor', 'wdFrenchBoth',
           'wdDialogExportAsFixedFormat', 'wdShowBreaksInFrames',
           'wdDialogToolsBulletsNumbers', 'wdBrowseFootnote',
           'wdPageNumberStyleThaiCardinalText',
           'wdTaskPaneXMLDocument', 'wdDialogTablePropertiesTabCell',
           'wdRubyLastName', 'ChartCharacters',
           'wdCaptionNumberStyleHanjaRead',
           'wdPageNumberStyleBidiLetter2', 'wdFieldStyleRef',
           'wdCompareTargetNew', 'wdMergeFormatFromRevised',
           'wdArtBasicWideOutline',
           'wdDialogMailMergeInsertAddressBlock',
           'wdPaperFanfoldStdGerman', 'wdSelStartActive', 'Dialog',
           'wdRowHeightExactly', 'wdDialogToolsLanguage',
           'wdTableFormatApplyShading', 'wdCalendarKorean', 'wdKeyQ',
           'wdDialogMailMergeInsertFields', 'wdStyleListContinue4',
           'wdLinkDataInDoc', 'MailMergeDataField',
           'wdExportDocumentContent',
           'wdDialogFormatParagraphTabIndentsAndSpacing',
           'wdColorGray85', 'xlExponential',
           'wdFootnoteLayoutLikeWW8', 'wdDialogNoteOptions',
           'wdContentControlLevelInline',
           'wdNoteNumberStyleKanjiDigit', 'XSLTransforms',
           'DefaultWebOptions', 'wdDoNotSaveChanges', 'xlYellow',
           'wdKeyF', 'wdKey8', 'wdPrintStyles',
           'wdStyleEnvelopeAddress', 'xlMonths', 'wdGaelicIreland',
           'xlAxisCrossesCustom', 'wdAdjustNone',
           'WdCellVerticalAlignment', 'wdMatchTabCharacter',
           'wdPrintEvenPagesOnly', 'xlPatternLightVertical',
           'wdWrapNever', 'WdDictionaryTypeHID',
           'wdTwoLinesInOneNoBrackets', 'wd70',
           'wdDialogLetterWizardTabOtherElements', 'wdArtOvals',
           'wdAutoDetectHighAnsiFarEast', 'CalloutFormat',
           'wdDialogToolsOptions', 'wdExtend', 'wdYellow',
           'WdOMathSpacingRule', 'wdDialogToolsOptionsTabBidi',
           'xlCombination', 'wdDirectory', 'wdAutomaticMargin',
           'XlTickMark', 'wdThemeColorMainLight2',
           'wdMatchNonbreakingSpace', 'wdDialogToolsOptionsSecurity',
           'xlMedium', 'xlSplitByPercentValue', 'wdTypeEquations',
           'wdTypeCustomTables', 'Border', 'wdArtPostageStamp',
           'xlMediumSeaGreen', 'wdDialogMailMerge',
           'wdContentControlLevelRow', 'wdCollapseStart',
           'wdFieldTOA', 'wdDialogToolsAutoManager', 'WdFontBias',
           'wdSelectionRow', 'wdFieldRevisionNum',
           'wdCaptionNumberStyleHindiCardinalText', 'WdMergeSubType',
           'wdTurkmen', 'wdDialogToolsMacroRecord', 'WdGranularity',
           'wdTrailingNone', 'xlMillions', 'wdEnglishUS',
           'wdPropertyManager', 'wdColorGray125', 'wdStyleClosing',
           'wdWord9ListBehavior', 'wdEmphasisMarkNone', 'xlBelow',
           'wdDialogFormatSectionLayout', 'wdMergeIfNotEqual',
           'wdRelativeHorizontalPositionMargin', 'wdFrameIsSelected',
           'wdDialogFileFind', 'WdDropPosition',
           'wdInsertedTextMarkNone', 'xlFireBrick', 'wdNumberListNum',
           'wdControlCombo', 'wdAutomaticUpdate',
           'wdPaneCurrentPageFooter', 'WdSortSeparator',
           'wdInlineShapeOWSAnchor', 'wdLeftLandscape',
           'wdDialogConnect', 'wdLinkTypeDDEAuto', 'wdGaelicScotland',
           'OMathBar', 'wdEnglishAUS', 'wdStyleListContinue',
           'wdChineseHongKongSAR', 'wdColorIndigo', 'wdOddRowBanding',
           'xlOrangeRed', 'wdStyleTOC6', 'wdStyleQuote',
           'wdMergeInfoFromWord', 'wdArtCakeSlice',
           'wdTableFormatWeb1', 'wdChineseSingapore',
           'wdStyleTableMediumShading1', 'wdPaneEvenPagesHeader',
           'DropLines', 'wdPrintView', 'wdOLEVerbUIActivate',
           'Selection', 'wdTableFormatColumns2',
           'wdTextureDarkDiagonalUp', 'wdItem',
           'wdOLEVerbInPlaceActivate', 'wdWidthHalfWidth',
           'WdPageNumberStyleHID', 'wdPageBorderRectangle',
           'OMathMatCol', 'FirstLetterException',
           'wdDialogMailMergeRecipients', 'xlMarkerStyleDash',
           'wdArtWhiteFlowers',
           'wdDialogFormatBulletsAndNumberingTabBulleted',
           'wdMixedAuthorizedScript', 'wdPriorityNormal',
           'wdWrapLeft', 'WdMailMergeDestination',
           'wdPasteEnhancedMetafile', 'wdCompareDestinationNew',
           'wdShapeSizeRelativeNone', 'wdTableFormatSubtle2',
           'wdTableFormatGrid1', 'MailMergeDataFields', 'wdKeyZ',
           'xlAnyGallery', 'xlTop', 'wdIndexBulleted',
           'WdBookmarkSortBy', 'wdTableFormatApplyAutoFit',
           'wdLinkTypeImport', 'WdTaskPanes',
           'wdThemeColorMainLight1', 'wdTexture57Pt5Percent',
           'wdWrapBoth', 'XMLNode', 'WdCaptionPosition', 'Pane',
           'wdFramesetSizeTypeRelative', 'wdOMathFunctionScrSubSup',
           'wdExportCreateWordBookmarks', 'wdTexture27Pt5Percent',
           'wdColorLightOrange', 'Email',
           'wdDialogToolsHangulHanjaConversion', 'wdCell',
           'wdFloatOverText', 'wd500Words', 'wdPaperB5',
           'wdKeyNumericAdd', 'wdEndOfRangeColumnNumber',
           'wdDialogDrawAlign', 'WdMovementType', 'wdSpanishPanama',
           'wdPageNumberStyleTradChinNum1', 'xlAquamarine',
           'wdTextWrappingBreak', 'wdOMathFunctionAcc', 'xlCylinder',
           'xlOpaque', 'WdXMLValidationStatus', 'wdTOFCentered',
           'xlAliceBlue', 'WdLineWidth', 'wdNoProofing', 'wdViolet',
           'wdPrintPreview', 'wdPrintColBlack',
           'wdListOutlineNumbering', 'WdVisualSelection',
           'xlSplitByCustomSplit', 'OMaths', 'wdLastName',
           'GlowFormat', 'LineFormat',
           'wdRevisedPropertiesMarkUnderline', 'wdWord10ListBehavior',
           'IApplicationEvents3',
           'wdDialogStyleManagementTabRecommend', 'wdFormatPlainText',
           'wdNoteNumberStyleBidiLetter1', 'wdStylisticSet06',
           'wdDialogXMLElementAttributes',
           'xlSeriesColorGradientStyleSequential', 'wdColorBlueGray',
           'XlErrorBarDirection', 'xlMoccasin', 'xlLeft', 'wdKazakh',
           'xlLightSlateGrey', 'Pages', 'wdDialogSearch',
           'wdDialogToolsOptionsEditCopyPaste',
           'wdRevisionTableProperty', 'wdDialogWindowActivate',
           'xlParentDataLabelOptionsOverlapping',
           'wdGoToSpellingError', 'wdPaperA3', 'xlGoldenrod',
           'wdPaperDSheet', 'wdAutoPosition', 'wdMatchAnyLetter',
           'xlLightDown', 'wdHelpIchitaro', 'xlAxisCrossesAutomatic',
           'wdArtRings', 'wdListNumberStyleIroha', 'wdWebView',
           'wdAddress1', 'wdFieldDocVariable',
           'wdDialogToolsCustomizeMenus', 'wdXMLNodeLevelParagraph',
           'xlValueAscending', 'wdPaneEndnoteContinuationNotice',
           'wdDontULTrailSpace', 'TablesOfContents', 'Category',
           'wdTableFormatGrid7', 'xlLightHorizontal', 'WdNumberForm',
           'wdAlignPageNumberRight', 'WdOMathShapeType',
           'wdTOASimple', 'SpellingSuggestions',
           'wdDialogToolsOptionsTabEdit', 'wdArtCrazyMaze',
           'wdPartialScript', 'wdRefTypeEndnote',
           'wdRelativeHorizontalPositionColumn', 'wdNormalView',
           'wdStylisticSet11', 'xlMediumSpringGreen',
           'xlPatternChecker', 'wdTexture95Percent',
           'wdAllowOnlyFormFields', 'wdKeyF3',
           'wdMatchDestinationFormatting', 'wdHawaiian',
           'wdPropertyVBATotalEdit', 'wdTableFormatList8',
           'wdPageNumberStyleThaiLetter', 'wdFrenchReunion',
           'wdDialogHelpWordPerfectHelpOptions',
           'wdDialogFormattingRestrictions', 'wdLineWidth225pt',
           'xlValueNone', 'wdAllowOnlyRevisions', 'wdPasteHTML',
           'wdWrapMergeTight', 'wdPaneEvenPagesFooter',
           'wdCellColorLightBlue', 'wdRowHeightAuto',
           'wdKeyNumeric5Special', 'wdRevisionMovedFrom', 'wdKeyS',
           'wdIndent', 'EndnoteOptions', 'xlGray',
           'wdInsertedTextMarkUnderline', 'WdMergeTarget',
           'wdInHeaderFooter', 'wdSeparateByCommas',
           'wdOMathBreakBinAfter', 'wdTableFormatNone',
           'wdMoveFromTextMarkNone', 'wdArtCompass',
           'WdOMathBreakSub', 'wdRevisedLinesMarkRightBorder',
           'xlOuterCenterPoint', 'xlLabelPositionOutsideEnd',
           'WdFramePosition', 'wdSerbianLatin',
           'wdPageNumberStyleNumberInCircle', 'wdTexture22Pt5Percent',
           'wdTextureDarkVertical', 'wdArabicUAE', 'wdSpanishUruguay',
           'wdTamil', 'XlGeoProjectionType', 'wdBrowseEdit',
           'wdSpellingCorrect', 'xlTickLabelPositionHigh',
           'wdWorkgroupTemplatesPath',
           'wdRelativeHorizontalPositionInnerMarginArea',
           'wdOutlineLevel5', 'wdPropertyTimeLastSaved',
           'WdEnclosureType', 'WdCursorMovement', 'RoutingSlip',
           'wdKeyCategoryCommand', 'xlSeriesNameLevelAll',
           'ChartData', 'WdCharacterWidth', 'ListEntries',
           'wdTOAFormal', 'wdAlignTabRight', 'wdStyleHtmlAddress',
           'xlNotPlotted', 'wdStyleCommentText',
           'wdPropertyHyperlinkBase', 'wdColorGray60',
           'wdPrintDocumentContent',
           'wdListNumberStyleKanjiTraditional', 'Words',
           'wdArtPapyrus', 'wdContentControlDateStorageDate',
           'wdDialogToolsCreateDirectory', 'wdWrapMergeBehind',
           'wdThemeColorText1', 'wdAllowOnlyReading',
           'wdSeparateByParagraphs',
           'wdRelativeHorizontalPositionOuterMarginArea',
           'wdCaptionNumberStyleHebrewLetter2',
           'wdLigaturesStandardHistoricalDiscretional',
           'wdTaskPaneNav', 'wdFieldKeyWord', 'wdAlignVerticalBottom',
           'wdSection', 'xlBrown', 'TableOfAuthoritiesCategory',
           'wdFieldDate', 'wdStyleListBullet4', 'xlRadarAxisLabels',
           'wdStylisticSet15', 'wdStyleDefaultParagraphFont',
           'WdMailMergeComparison', 'wdColorBrown', 'wdColorTan',
           'wdArtCreaturesButterfly', 'WdIMEMode', 'xlDays',
           'wdPaperEnvelope9', 'xlLeaderLines',
           'wdStyleTableColorfulShading', 'wdDialogFileNew',
           'wdCherokee', 'wdJustificationModeCompress', 'wdHomePhone',
           'wdMarkupRectangleArea', 'wdSuppressBottomSpacing',
           'wdHelpKeyboard', 'wdFieldKindHot',
           'wdTexture52Pt5Percent', 'wdOpenFormatTemplate97',
           'wdEnclosureCircle', 'wdLayoutModeLineGrid',
           'wdExportCreateHeadingBookmarks', 'Axes',
           'wdArtBasicWhiteDots', 'wdEnglishCanadian',
           'wdXMLSelectionChangeReasonMove', 'wdArtZanyTriangles',
           'DisplayUnitLabel', 'wdStyleBookTitle',
           'wdNoteNumberStyleThaiLetter',
           'wdDialogStyleManagementTabEdit', 'WdCharacterCaseHID',
           'wdBorderDistanceFromText',
           'wdLigaturesStandardContextualHistorical', 'WdLockType',
           'wdOnlyLabelAndNumber', 'xlScaleLinear',
           'wdLineBreakClearLeft', 'wdCursorMovementLogical',
           'Trendline', 'wdArtFlowersDaisies',
           'wdStyleSheetLinkTypeImported', 'wdGoToGraphic',
           'wdTransparentMetafiles', 'wdSpain',
           'xlPivotChartFieldButton', 'wdAlignTabBar',
           'wdLockEphemeral', 'wdNoteNumberStyleArabicLetter1',
           'wdSeekFirstPageHeader',
           'wdLigaturesStandardContextualDiscretional',
           'wdFormatDocument', 'wdFormatXMLDocument',
           'wdPasteDefault', 'wdTableFormatClassic3',
           'xlGradientStopPositionTypeExtremeValue', 'Series',
           'MailingLabel', 'wdBrowseFind', 'wdKeyHyphen',
           'WdEditorType', 'xlDarkGrey', 'wdStyleHyperlinkFollowed',
           'wdRussianMoldova', 'wdDialogFormatStylesCustom',
           'wdCalendarTranslitEnglish', 'wdDocumentViewRtl',
           'wdGoToObject', 'wdPrintKeyAssignments',
           'xlDataLabelsShowLabelAndPercent', 'xlVerticalCoordinate',
           'wdDialogControlRun', 'XlDataLabelsType', 'xlLightGrey',
           'wdFullScript', 'wdMergeTargetNew',
           'wdActiveEndPageNumber', 'wdKey7',
           'wdOMathVertAlignBottom', 'wdDialogEditPublishOptions',
           'wdArtWeavingRibbon', 'wdDeleteCellsEntireColumn',
           'wdNoteNumberStyleThaiArabic', 'wdBulletGallery',
           'wdTableFormatApplyBorders', 'wdDeletedTextMarkBold',
           'wdControlDocumentFragment', 'wdKeyA', 'wdArtWoodwork',
           'wdStyleNormalObject', 'wdTableFormatList4',
           'wdListContinueNumbering', 'xlGhostWhite',
           'wdDialogFormatRetAddrFonts', 'wdColorGray45', 'AddIn',
           'wdArtPeople', 'wdListNumberStyleGBNum2', 'wdPaperCSheet',
           'WdTCSCConverterDirection', 'xlErrorBarTypeStError',
           'wdCustomLabelA4', 'wdTaskPaneApplyStyles',
           'WdCaptionNumberStyle', 'wdStyleEndnoteText',
           'wdListNumberStyleLowercaseTurkish',
           'wdShapeLayoutLikeWW8', 'wdExportOptimizeForPrint',
           'wdOrganizerObjectProjectItems', 'wdPaneComments',
           'wdDialogInsertMergeField', 'wdNumberOfPagesInDocument',
           'wdKeyCategoryDisable', 'wdIndexFilterNone',
           'wdCenterClockwise', 'wdDialogTableToText',
           'wdDialogFormatParagraph', 'ContentControlListEntry',
           'wdInuktitut', 'wdDialogLetterWizard',
           'wdLineSpaceExactly', 'WdContentControlLevel',
           'OMathDelim', 'wdFullMargin', 'wdSpouseLastName',
           'WdDateLanguage', 'wdStyleTableMediumShading2Accent1',
           'xlColorIndexAutomatic', 'wdPageFitNone', 'Windows',
           'wdShowFilterFormattingInUse',
           'wdNoteNumberStyleKanjiTraditional',
           'wdMaximumNumberOfColumns', 'xlUnderlineStyleDouble',
           'wdDialogInsertFile', 'wdBorderHorizontal',
           'wdExportDocumentWithMarkup', 'wdBusinessPhone',
           'wdFieldTime', 'wdStyleGalleryPath',
           'wdTaskPaneDocumentActions', 'wdDialogMailMergeHelper',
           'wdCatalog', 'wdInsertContent', 'wdOMathSpacingExactly',
           'wdSubscriberBestFormat', 'AutoCorrectEntry',
           'wdArtDecoBlocks', 'wdDialogEmailOptions', 'wdKyrgyz',
           'wdNoSpaceRaiseLower', 'wdLinkTypePicture',
           'wdWrapThrough', 'wdLeftToRight', 'wdDialogEditGoTo',
           'wdRelativeHorizontalSizeInnerMarginArea', 'OMathMat',
           'wdOMathFunctionBar', 'OMathGroupChar', 'WdConditionCode',
           'wdTabLeaderDots', 'xlCrimson',
           'wdCaptionNumberStyleUppercaseRoman',
           'wdDontVertAlignCellWithShape', 'wdFieldCompare',
           'wdCellColorLightPurple', 'wdCursorNormal', 'xlStar',
           'FootnoteOptions', 'xlSemiGray75', 'wdWebPageURL',
           'xlGeoMappingLevelWorld', 'Interior',
           'wdUnderlineDotDotDash', 'xlColorIndexNone',
           'wdListNumberStyleLegalLZ', 'xlMintCream', 'xlDimGrey',
           'LegendKey', 'wdPaneEndnoteContinuationSeparator',
           'wdDialogMailMergeCreateHeaderSource', 'wdFieldKindNone',
           'wdLineStyleThinThickThinSmallGap', 'wdTightLastLineOnly',
           'wdThemeColorAccent5', 'xlBinsTypeBinCount',
           'wdSeparatorColon', 'wdWrapTrailSpaces',
           'wdDialogToolsOptionsTabSecurity', 'xlIndianRed',
           'wdSectionBreakOddPage', 'wdIgbo', 'wdWrapTopBottom',
           'wdTypeQuickParts', 'wdGermanAustria',
           'wdUnderlineDashLongHeavy', 'wdCellColorLightGray',
           'wdDialogFilePageSetupTabCharsLines', 'wdFieldAdvance',
           'wdStatisticParagraphs', 'wdIMEModeHiragana',
           'wdFullWidth', 'xlRows', 'wdPrintMarkup', 'xlContinuous',
           'xlCategoryLabelLevelNone', 'wdDialogInsertPageNumbers',
           'wdBaselineAlignFarEast50', 'wdCurrentTimeText',
           'wdArtFlowersBlockPrint', 'WdPageFit', 'Bookmarks',
           'ContentControl', 'xlOrchid', 'wdStyleListBullet2',
           'wdPaperLetterSmall', 'wdKeyBackspace', 'WdSpecialPane',
           'wdFieldGreetingLine', 'wdGoToFootnote',
           'MailMergeFieldName', 'xlErrorBarTypeStDev', 'Browser',
           'wdDialogInsertIndexAndTablesTabTableOfAuthorities',
           'wdStyleListNumber4', 'WdHebSpellStart',
           'wdDontUseIndentAsNumberingTabStop', 'wdKeyNumeric3',
           'wdTextureDarkHorizontal', 'wdDutch',
           'wdListNumberStyleSimpChinNum3', 'wdDialogDrawSnapToGrid',
           'wdAutoFitFixed', 'xlSeriesColorGradientStyleDiverging',
           'wdListNumberStyleLowercaseGreek', 'wdDisableOTKerning',
           'wdNoteNumberStyleHindiLetter1', 'wdOutlineNumberGallery',
           'wdHorizontalPositionRelativeToTextBoundary',
           'wdFormattingFromPrompt', 'LineNumbering', 'wdFinnish',
           'wdTeal', 'wdDialogToolsEnvelopesAndLabels',
           'wdFieldNextIf', 'wdInLine', 'xlScaleLogarithmic',
           'wdKeyNumeric9', 'wdOMathHorizAlignCenter',
           'wdTypeCustom4', 'wdOMathBreakSubPlusMinus',
           'wdSpellingError', 'XlTrendlineType',
           'wdStyleTableDarkList', 'wdThemeColorText2',
           'wdFieldUserAddress', 'wdArtHolly', 'wdLigaturesAll',
           'wdSectionNewColumn', 'wdCustomLabelHigaki', 'xlAxisTitle',
           'wdStyleTOC1', 'xlScreen',
           'wdNoteNumberStyleHebrewLetter2',
           'wdListNumberStyleGBNum4', 'wdHelpHWP',
           'wdOpenFormatXMLTemplateMacroEnabled', 'wdArabicIraq',
           'wdJapan', 'wdNoProtection', 'OMathScrSup', 'wdAutoExec',
           'wdGoToEquation', 'wdDialogMailMergeInsertGreetingLine',
           'wdHorizontalLineAlignCenter', 'wdSesotho',
           'wdProtectedViewCloseNormal', 'wdKeyTab', 'wdArtEarth2',
           'wdListCombineWithExistingList',
           'wdDialogToolsOptionsTypography', 'TextInput',
           'wdIMEModeHangulFull', 'Subdocuments',
           'wdUseWord2013TrackBottomHyphenation', 'xlTrendline',
           'wdBrowseEndnote', 'wdPropertyAppName', 'xlRight',
           'wdCalendarArabic', 'wdFieldInfo', 'wdTOFClassic',
           'wdSpanishPuertoRico', 'wdStyleSortByBasedOn',
           'xlDataLabelsShowBubbleSizes', 'xlHidden',
           'wdBorderBottom', 'wdPageNumberStyleUppercaseLetter',
           'wdEmphasisMarkOverSolidCircle', 'wdOrientPortrait',
           'wdFindContinue', 'wdArtTribal1', 'wdHungarian',
           'wdSwissItalian', 'wdIndexFilterLow', 'WdInformation',
           'wdCompareDestinationRevised', 'ApplicationEvents4',
           'wdLineStyleTriple', 'wdInCitation', 'wdTextureCross',
           'wdListNumberStyleTradChinNum3',
           'wdPrintBodyTextBeforeHeader', 'WdMailMergeMainDocType',
           'wdStyleHtmlKbd', 'wdStylisticSet17', 'wdNumeralArabic',
           'wdGreek', 'wdOMathHorizAlignLeft',
           'wdDialogToolsOptionsUserInfo', 'xlDarkCyan',
           'wdTightFirstLineOnly', 'wdDarkBlue',
           'wdDialogMailMergeInsertSet', 'SmartTagRecognizer',
           'wdVenezuela', 'WdTextFormFieldType', 'WdBuiltinStyle',
           'wdCharacterFormatting', 'wdFontBiasDefault',
           'wdShapePositionRelativeNone', 'wdCompareTargetCurrent',
           'wdArtPackages', 'wdStyleFootnoteReference', '_Document',
           'wdNoColumnBalance', 'wdLineSpaceSingle',
           'xlLavenderBlush', 'WdPasteOptions', 'wdStylisticSet14',
           'xlParentDataLabelOptionsNone', 'xlPink', 'wdRDIComments',
           'wdPropertyComments', 'xlGeoMappingLevelCounty',
           'wdTableInside',
           'wdDialogFormatBulletsAndNumberingTabNumbered', 'wdPeru',
           'WdTwoLinesInOneType', 'wdTableBottom', 'wdArtSafari',
           'wdWrapFront', 'Document', 'wdDialogWebOptionsEncoding',
           'XlParentDataLabelOptions', 'CaptionLabel',
           'wdDialogEditSubscribeTo', 'TextColumns',
           'wdNumberFormLining', 'WdDiacriticColor', 'wdSeekEndnotes',
           'xlLightBlue', 'wdSelAtEOL', 'wdFontBiasFareast',
           'wdCursorIBeam', 'wdFax', 'WdStylisticSet',
           'wdPaneEndnoteSeparator', 'WdLineType', 'wdColorOrange',
           'wdCursorMovementVisual', 'wdKeyT', 'wdStylisticSet04',
           'wdFieldSection', 'wdFieldFootnoteRef',
           'wdColorLightTurquoise', 'wdInlineShapeDiagram',
           'wdPanePrimaryHeader', 'wdUnderlineSingle',
           'OMathAutoCorrectEntries', 'wdBrowseGraphic',
           'WdInlineShapeType', 'wdOLEEmbed', 'wdBrowseTable',
           'wdDarkYellow', 'wdTableRow', 'wdTableInsertAsRows',
           'wdCaptionNumberStyleHindiArabic', 'wdDialogShowRepairs',
           'wdListNumberStyleArabicFullWidth',
           'wdFormatDOSTextLineBreaks', 'StoryRanges',
           'wdDialogInsertBreak', 'wdListNumberStyleGBNum3',
           'wdFormattingFromSelected', 'wdSpouseFirstName',
           'wdDialogTemplates', 'wdPrinterLargeCapacityBin',
           'wdPortuguesePreReform', 'wdDialogFilePageSetupTabLayout',
           'wdControlSeparator', 'WdShowSourceDocuments',
           'xlHAlignCenterAcrossSelection',
           'wdCaptionNumberStyleThaiArabic',
           'wdStyleTableMediumShading1Accent1',
           'xlGradientStopPositionTypeNumber',
           'wdRelativeHorizontalPositionLeftMarginArea',
           'xlPatternGrid', 'WdDictionaryType', 'wdStyleIndex7',
           'wdListLevelAlignRight', 'WdRelativeHorizontalPosition',
           'wdDeletedTextMarkPound', 'wdSpanishElSalvador',
           'wdSwedish', 'wdInsertParagraph', 'wdTableOutside',
           'WdEditionOption', 'wdShowSourceDocumentsNone',
           'wdOpenFormatOpenDocumentText', 'wdStylisticSet09',
           'wdListNumberStyleLowercaseRussian',
           'wdOMathFunctionScrPre', 'xlMaroon', 'wdWW11IndentRules',
           'wdControlDocumentFragmentURL', 'wdSwissGerman',
           'wdPrinterAutomaticSheetFeed', 'WdContinue',
           'wdStyleTableLightGridAccent1', 'xlCircle', 'Reviewers',
           'XlRowCol', 'wdListNumberStyleHebrew2',
           'wdDialogFormatDefineStyleFont',
           'wdDeletedTextMarkUnderline', 'wdDialogFileSummaryInfo',
           'wdPrinterFormSource', 'wdThemeColorHyperlink',
           'wdFootnoteSeparatorStory', 'wdEnglishCaribbean',
           'xlInnerCenterPoint', 'xlMinusValues',
           'wdPageNumberStyleHindiArabic', 'xlMarkerStyleAutomatic',
           'wdDialogInsertObject', 'WdOLEPlacement',
           'wdRevisedPropertiesMarkBold',
           'wdPhoneticGuideAlignmentZeroOneZero', 'wdPaperEnvelopeC6',
           'wdKeyNumericDivide', 'wdLayoutRawTableWidth',
           'wdDocumentViewLtr', 'wdFormatFilteredHTML', 'wdDarkRed',
           'xlOutside', 'wdAdverb', 'wdStyleListNumber3', 'wdKey0',
           'WdOrientation', 'wdArtBasicWideInline',
           'wdCustomLabelVertHalfSheetLS', 'xlLegendEntry',
           'wdOMathFunctionLimLow', 'wdCompany', 'WdAraSpeller',
           'wdInlineShapeLockedCanvas', 'KeysBoundTo',
           'wdDialogNoteOptionsTabAllFootnotes', 'HeaderFooter',
           'wdXMLValidationStatusCustom', 'xlDarkOliveGreen',
           'wdMiddleName', 'wdDialogEditFind', 'wdPropertyTitle',
           'wdSpacingInWholePoints', 'wdTexture20Percent',
           'wdDialogToolsAcceptRejectChanges', 'wdMargin',
           'wdPaneRevisions', 'wdArtPencils',
           'wdFormatFlatXMLTemplateMacroEnabled', 'wdBelgianDutch',
           'wdDialogCompatibilityChecker',
           'wdPageNumberStyleHindiLetter1', 'xlLemonChiffon',
           'PlotArea', 'wdRestartContinuous', 'wdEditorOwners',
           'wdDialogNewToolbar', 'wdGenderUnknown',
           'wdDontOverrideTableStyleFontSzAndJustification',
           'wdChineseHongKong', 'HeadingStyles', 'wdOther', 'wdWord',
           'wdPrintRangeOfPages', 'WdExportItem', 'AddIns',
           'wdCustomLabelA5', 'wdFieldListNum', 'wdStyleHeading6',
           'wdDialogFileNew2007', 'xlMidCounterClockwiseRadiusPoint',
           'xlDarkKhaki', 'ErrorBars', 'wdStyleBodyTextIndent2',
           'OMathLimUpp', 'wdTaskPaneFaxService',
           'wdDialogToolsOptionsFuzzy', 'wdSpouseNickname',
           'wdLineBreakTraditionalChinese', 'xlMinorGridlines',
           'wdArtTribal5', 'Range', 'wdJustificationModeCompressKana',
           'wdRelativeHorizontalPositionCharacter',
           'wdDeleteCellsEntireRow', 'xlSnow', 'wdTaskPaneXMLMapping',
           'wdStyleEndnoteReference',
           'wdVerticalPositionRelativeToPage',
           'wdTableFormatApplyLastRow',
           'xlGradientStopPositionTypePercent',
           'wdListApplyToThisPointForward',
           'wdFormatOpenDocumentText', 'wdInCoverPage',
           'wdListNumberStyleTradChinNum2', 'wdAddress2',
           'wdStyleIndexHeading', 'wdDocument',
           'wdDialogEditAutoText', 'wdCreatorCode',
           'WdDefaultTableBehavior', 'FormFields', 'wdHiragana',
           'wdRevisionStyleDefinition', 'WdHighAnsiText',
           'ApplicationEvents2', 'wdPropertyWords',
           'xlTickMarkOutside', 'wdFormatTemplate',
           'wdFieldShadingWhenSelected', 'wdEmailHTMLFidelityHigh',
           'XlErrorBarInclude', 'wdMatchParagraphMark',
           'wdGutterPosLeft', 'wdExportCreateNoBookmarks',
           'wdDialogToolsProtectDocument',
           'wdDialogEditSubscribeOptions', 'wdStylisticSet07',
           'xlSeriesNameLevelCustom', 'xlGeoProjectionTypeAutomatic',
           'wdHyphenation', 'xlIvory', 'WdFieldShading',
           'WdSalutationType', 'wdEndOfDocument', 'wdSwissFrench',
           'wdMergeIfLessThanOrEqual', 'xlHAlignJustify',
           'wdRDIVersions', 'wdLineStyleInset',
           'wdOpenFormatXMLDocument', 'wdPrintCurrentPage',
           'wdMatchOptionalHyphen', 'wdIndexFilterAiueo', 'WdCountry',
           'wdReadingOrderLtr', 'wdScreen', 'wdAutofitLikeWW11',
           'wdNoteNumberStyleArabic', 'wdListNumberStyleHindiLetter2',
           'wdStyleBodyText2', 'wdEndnoteContinuationNoticeStory',
           'wdRevisionDisplayField', 'wdInCommentPane',
           'xlDataLabelsShowLabel', 'wdCaptionNumberStyleThaiLetter',
           'wdPaperEnvelopeB4', 'wdDialogToolsOptionsTrackChanges',
           'wdRevisionCellMerge', 'wdDocumentsPath',
           'wdTableFormatList1', 'wdRestartSection',
           'wdPageNumberStyleVietCardinalText', 'wdLSPS',
           'wdTableFormatList7', 'wdArabicYemen',
           'WdChevronConvertRule', 'wdPortugueseBrazil',
           'wdArtSharksTeeth', 'wdColorWhite', 'wdZoomPercentage',
           'wdOLEVerbDiscardUndoState', 'WdFieldKind', 'wdArtSun',
           'xlValue', 'wdPreferredWidthPoints',
           'wdThemeColorBackground2', 'wdPreferredWidthPercent',
           'wdUnderlineDotDash', 'wdDialogDocumentStatistics',
           'xlLabelPositionCustom', 'wdMatchWhiteSpace',
           'wdSpellingNotInDictionary', 'wdArtWaveline',
           'wdInsertCellsShiftRight', 'wdFarEastLineBreakLevelNormal',
           'xlLTR', 'wdPrintDocumentWithMarkup', 'wdFieldGlossary',
           'wdFormLetters', 'wdArtPaperClips',
           'wdRevisedPropertiesMarkNone',
           'wdDialogTablePropertiesTabTable',
           'WdStyleSheetPrecedence', 'wdEnclosureSquare',
           'DataLabels', 'WdRoutingSlipStatus',
           'wdOMathBreakSubMinusPlus', 'wdAlertsNone', 'xlIndigo',
           'wdMoveFromTextMarkCaret', 'xlContext', 'wdFirstName',
           'OMathNary', 'wdStyleTOC7', 'xlDataLabelsShowPercent',
           'wdLineBreakKorean', 'xlMistyRose',
           'wdOrganizerObjectStyles', 'wdRDIContentType',
           'wdDialogFormatDefineStyleTabs', 'wdTOCClassic', 'Indexes',
           'wdOutlineLevel7', 'xlColumn', 'WdArrangeStyle',
           'wdOpenSource', 'wdExportOptimizeForOnScreen',
           'wdSingleCellTable', 'wdSeekFirstPageFooter', 'wdBlack',
           'wdStyleIndex2', 'WdColorIndex', 'xlErrorBars',
           'xlLavender', 'wdDialogBuildingBlockOrganizer',
           'wdDontBreakWrappedTables', 'xlDropLines', 'DiagramNode',
           'xlDataField', 'OMathRad', 'xlPurple', 'XlAxisGroup',
           'wdGlobalTemplate', '_LetterContent', 'wdListListNumOnly',
           'wdStyleHeading7', 'WdCustomLabelPageSize',
           'wdOpenFormatWebPages', 'Endnote', 'wdGutterStyleBidi',
           'RecentFile', 'wdPageNumberStyleSimpChinNum1',
           'Model3DFormat', 'wdFlipMirrorIndents',
           'wdDialogTableSplitCells', 'wdTOCTemplate',
           'wdNoteNumberStyleLowercaseRoman',
           'wdListNumberStyleZodiac3', 'wdArtBalloonsHotAir',
           'wdNoteNumberStyleSimpChinNum2', 'wdKeyB', 'wdInEndnote',
           'wdGrowAutofit', 'wdPrinterMiddleBin', 'wdDialogFilePrint',
           'wdTableFormatClassic4', 'wdArtXIllusions',
           'wdFormatSurroundingFormattingWithEmphasis',
           'wdMergeInfoFromMSQueryDDE', 'wdLineStyleDashDotStroked',
           'wdLineWidth025pt', 'wdArtGingerbreadMan',
           'wdListNumberStyleUppercaseLetter',
           'wdPageNumberStyleKanjiTraditional', 'wdWrapMergeInline',
           'wdStyleHtmlDfn', 'wdDialogInsertSymbol', 'wdPaperLedger',
           'wdPageColorInverse', 'TextColumn', 'wdChangeAttributes',
           'wdVerticalPositionRelativeToTextBoundary',
           'wdArtSawtooth', 'WdCompareTarget', 'WdMonthNames',
           'xlSienna', 'wdBrowserLevelV4',
           'wdDialogToolsGrammarSettings', 'wdCustomLabelMini',
           'WdGutterStyle', 'wdFramesetTypeFrameset',
           'XlChartPicturePlacement', 'wdBorderArtPath',
           'WdPasteDataType', 'wdListNumberStylePictureBullet',
           'wdLeftClockwise', 'wdTexture47Pt5Percent',
           'wdLineStyleOutset', 'wdAlignParagraphJustifyMed',
           'wdDialogFrameSetProperties', 'wdKeyY', 'wdKhmer',
           'wdDialogTableFormatCell', 'xlGeoMappingLevelDataOnly',
           'wdSeekEvenPagesFooter', 'wdTwoLinesInOneCurlyBrackets',
           'wdCalendarTranslitFrench', 'wdKeyPageDown', 'Frame',
           'wdAssamese', 'wdIndexFilterChosung',
           'IApplicationEvents2', 'wdShowFilterStylesAll',
           'wdDialogFormatDrawingObjectTabSize', 'wdArtVine',
           'wdControlHelp', 'wdWord2013', 'wdMalayBruneiDarussalam',
           'wdRelativeHorizontalSizePage', 'xlLabelPositionRight',
           'WdDeleteCells', 'wdWrapAlways',
           'wdListNumberStyleLowercaseLetter',
           'wdListNumberStyleNone', 'xlMediumPurple',
           'wdDialogInsertBookmark', 'wdCancelDisabled',
           'WdTabAlignment', 'XlPieSliceIndex',
           'wdDialogStyleManagementTabRestrict', 'Languages',
           'wdThemeColorAccent1', 'wdTextureDiagonalUp',
           'WdSortFieldType', 'TablesOfFigures', 'wdWrapInline',
           'wdRelativeHorizontalSizeMargin',
           'wdRelativeVerticalPositionLine', 'wdUnderlineWavyDouble',
           'wdDialogEditGoToOld', 'wdStyleTOAHeading',
           'wdRelativeHorizontalSizeOuterMarginArea',
           'wdEnglishIreland', 'wdNoteNumberStyleHanjaRead', 'Legend',
           'wdArtWeavingStrips', 'wdDialogFilePrintSetup',
           'wdRevisionConflict', 'wdFieldMergeRec',
           'wdArtChristmasTree', 'wdOMathFracNoBar',
           'wdMoveFromTextMarkStrikeThrough', 'xlMarkerStyleCircle',
           'wdAfrikaans', 'wdArtPalmsColor', 'wdPageFitTextFit',
           'wdCaptionNumberStyleBidiLetter1',
           'wdDialogToolsMergeDocuments', 'wdGreen',
           'wdContentControlTags', 'wdPaneFootnoteSeparator',
           'wdRevisionReplace', 'wdSectionContinuous', 'wdTableRight',
           'wdTableFormatWeb3', 'wdNewBlankDocument',
           'wdTaskPaneFormatting', 'WdMergeFormatFrom',
           'wdSpouseMiddleName', 'wdOrigWordTableRules',
           'wdCaptionNumberStyleNumberInCircle',
           'wdArtCouponCutoutDots', 'wdMailFormatHTML', 'wdArabic',
           'wdBrowsePage', 'xlPatternLightUp', 'wdPropertySubject',
           'wdUzbekLatin', 'wdStyleTypeTable', 'wdAlwaysConvert',
           'wdDialogFormatPageNumber', 'WdRevisionsWrap',
           'xlPaleTurquoise', 'wdListNumberStyleOrdinalText',
           'ChartFillFormat', 'wdColumnWidthDefault', 'xlShowLabel',
           'WdFindMatch', 'wdNoteNumberStyleVietCardinalText',
           'wdOMathInline', 'WdRulerStyle', 'wdAutoRecoverPath',
           'wdContentControlDateStorageText', 'xlLime',
           'wdTypeTables', 'wdTrailingTab', 'wdAlignVerticalJustify',
           'wdEmailAddress', 'wdEncloseStyleLarge', 'wdLineSpace1pt5',
           'wdKeyEnd', 'wdSpanishColombia', 'wdListNumberStyleBullet',
           'wdStyleTocHeading', 'wdArtShorebirdTracks', 'OMathAcc',
           'wdEnglishJamaica', 'wdArtMapPins', 'wdSeparatorHyphen',
           'wdPaperExecutive', 'wdAlignRowLeft', 'wdBasque',
           'wdPropertyCharsWSpaces', 'wdTsonga', 'xlMovingAvg',
           'wdArtSeattle', 'wdAdjustProportional', 'wdWrapBehind',
           'wdDialogEditReplace', 'wdDialogToolsOptionsPrint',
           'wdListNumberStyleCardinalText',
           'wdCaptionNumberStyleLowercaseLetter', 'WdDocumentMedium',
           'wdNoSpaceForUL', 'wdListNumberStyleHindiArabic',
           'Template', 'WdPictureLinkType', 'wdVenda',
           'wdNorwegianNynorsk', 'wdDialogEditCreatePublisher',
           'EmailSignatureEntry', 'wdListNumberStyleTradChinNum4',
           'wdTexture7Pt5Percent', 'IApplicationEvents',
           'wdRevisionCellInsertion', 'wdCenterLandscape', 'Shapes',
           'wdTypePageNumberBottom', 'wdTurkish', 'wdCalendarThai',
           'Editors', 'Source', 'wdListBehaviorKeepPreviousPattern',
           'wdColorGray40', 'wdXhosa', 'WdRevisionsMarkup',
           'wdDialogTableTableOptions', 'xlErrorBarIncludePlusValues',
           'wdThemeColorMainDark1', 'xlRosyBrown',
           'wdSeekMainDocument', 'wdCustomLabelLetter',
           'wdStyleIntenseQuote', 'wdStatisticPages',
           'wdUsePre2018iOSMacLayout', 'xlMediumTurquoise',
           'wdStyleListContinue5', 'wdSummaryModeInsert',
           'wdArabicJordan', 'xlPatternGray16', 'wdCancelInterrupt',
           'xlPyramidToPoint', 'wdListNumberStyleAiueo',
           'wdArtBasicWhiteDashes', 'SpellingSuggestion', 'wdGerman',
           'wdColorGreen', 'wdBalloonPrintOrientationForceLandscape',
           'wdArtConfettiOutline',
           'wdRelativeHorizontalPositionRightMarginArea',
           'WdTableDirection', 'wdPropertyCategory',
           'wdAlignParagraphJustify',
           'wdDialogTableOfCaptionsOptions', 'xlSizeIsWidth',
           'wdRelocateDown', 'wdColorGray875', 'wdDataSource',
           'wdAuto', 'wdOMathFunctionNormalText', 'wdHindi',
           'WdMailMergeActiveRecord', 'WdRectangleType',
           'wdSortOrderDescending', 'wdShowSourceDocumentsRevised',
           'wdToggleCase', 'wdArtBirdsFlight', 'XlScaleType',
           'WdTocFormat', 'wdFieldIndexEntry', 'wdPrinterDefaultBin',
           'wdRevisedPropertiesMarkStrikeThrough', 'wdBrowseGoTo',
           'wdArabicTunisia', 'wdMergeInfoFromAccessDDE', 'wdFieldIf',
           'wdContentControlComboBox', 'xlSandyBrown',
           'wdCourtesyTitle', 'wdCheckInOverwriteVersion',
           'wdNoteNumberStyleHanjaReadDigit',
           'wdCompareDestinationOriginal', 'wdArtQuadrants',
           'wdArabicAlgeria', 'wdArtGradient', 'SeriesLines',
           'wdEnglishTrinidadTobago', 'wdIMEModeAlphaFull',
           'wdAttachedTemplate', 'wdFieldFormula',
           'wdDialogInsertFormField', 'WdColumnWidth',
           'wdMoveFromTextMarkItalic', 'wdThemeColorBackground1',
           'wdMaltese', 'wdSelectionIP', 'wdSuffix', 'PageNumber',
           'xlCategoryAscending', 'wdSpellingMedical',
           'xlUnderlineStyleSingle', 'wdInches',
           'wdDialogToolsAutoManagerTabSmartTags',
           'wdMergeInfoFromExcelDDE', '_OLEControl', 'wdConflictView',
           'wdKeyI', 'wdHeadingSeparatorBlankLine', 'wdPaperA4',
           'wdUnderlineTabInNumList', 'wdListNumberStyleArabic1',
           'wdKeySpacebar', 'wdRightToLeft', 'wdCaptionPositionBelow',
           'wdGermany', 'wdArtPeopleHats', 'xlPeru', 'wdFrance',
           'SmartTags', 'wdStyleHeader', 'wdOLEControl',
           'wdNumberText', 'wdArtPartyFavor', 'wdEdo',
           'wdRevisionProperty', 'xlPageField', 'xlIndexDescending',
           'wdListNumberStyleArabic2', 'wdTypeCustom5', 'CoAuthoring',
           'WdTextureIndex', 'ChartBorder', 'WdCalendarTypeBi',
           'wdFieldRef', 'wdArtApples', 'wdChartPicture',
           'wdFieldMergeSeq', 'xlForestGreen', 'WdSummaryMode',
           'wdDateLanguageBidi', 'wdColorGray30', 'wdOutlineLevel1',
           'wdPaperLetter', 'wdAnimationLasVegasLights',
           'xlLabelPositionLeft', 'wdDefaultLastRecord',
           'wdFieldAddin', 'wdPaperEnvelopeC65', 'wdStyleSubtitle',
           'XlPictureAppearance', 'xlFixedValue',
           'wdStyleListNumber2', 'WdLanguageID',
           'wdTraditionalChinese', 'wdMergeSubTypeOLEDBWord',
           'wdSuppressSpBfAfterPgBrk', 'wdAlignTabList',
           'wdMarkupRectangleButton', 'wdHeadingSeparatorLetterFull',
           'xlPowderBlue', 'xlNothing', 'wdFieldTOAEntry',
           'wdSpanishHonduras', 'wdThemeColorHyperlinkFollowed',
           'wdPrintAllPages', 'wdNoActiveRecord', 'wdGujarati',
           'XlHAlign', 'StyleSheets', 'wdFaeroese', 'wdGoToTable',
           'wdKeyCategorySymbol', 'wdTexture42Pt5Percent',
           'wdNumberNoContext', 'wdScrollbarTypeAuto',
           'wdStyleHtmlTt', 'XlMarkerStyle', 'Reviewer', 'ListEntry',
           'xlColumnField', 'wdFirstColumn', 'xlAqua',
           'wdListNumberStyleThaiLetter', 'wdSelectionBlock',
           'wdArtPushPinNote2', 'WdPreferredWidthType',
           'wdEndOfRangeRowNumber', 'wdPageNumberStyleHanjaRead',
           'wdArtMoons', 'XlChartItem', 'xlThin',
           'wdOMathFunctionBox', 'wdTypePageNumberTop',
           'wdListNumberStyleSimpChinNum2', 'wdSelActive', 'Cells',
           'wdArtEclipsingSquares1', 'wdDialogTextToTable',
           'wdTableFormatSimple1', 'wdUseWord2002TableStyleRules',
           'wdArtArchedScallops', 'wdSeekEvenPagesHeader',
           'wdArtTribal6', 'wdFieldAsk', 'wdSortFieldNumeric',
           'wdKeyF5', 'xlScale', 'WdRevisionsBalloonWidthType',
           'wdDialogOrganizerTabMacros', 'wdStatisticCharacters',
           'wdHangulHanjaConversionCustom', 'wdAlignTabDecimal',
           'Conflicts', 'wdPaperNote', 'wdLeftMargin', 'DataLabel',
           'wdListNumberStyleHebrew1', 'wdCalendarWestern',
           'wdGoToRelative', 'wdKannada', 'xlChartreuse',
           'wdPageFitBestFit', 'wdMergeIfEqual', 'wdColorGray55',
           'wdArtCreaturesFish', 'wdXMLNodeLevelInline',
           'wdTaskPaneDocumentProtection',
           'wdTwoLinesInOneAngleBrackets', 'WdVerticalAlignment',
           'wdHeadingSeparatorLetterLow', 'Documents', 'Sources',
           'XlUnderlineStyle', 'wdArtClassicalWave',
           'wdFieldNumPages', 'wdChineseMacao', 'wdOriya',
           'wdSeparatorEnDash', 'wdPageNumberStyleHebrewLetter2',
           'xlDataLabelSeparatorDefault', 'WdSaveOptions',
           'wdStyleHeading2', 'xlLightSeaGreen', 'wdAutoOpen',
           'wdKeyCommand', 'wdPageNumberStyleArabicLetter1',
           'wdIMEModeKatakana', 'xlHAlignLeft', 'wdStyleBodyText3',
           'WdOriginalFormat', 'wdStyleList2', 'wdSalutationInformal',
           'wdOutlineLevel4', 'wdDialogMyPermission',
           'xlPatternSemiGray75', 'xlViolet', 'wdDenmark',
           'wdSortOrderAscending', 'xlDashDot', 'wdNewFrameset',
           'wdAlignTablesRowByRow', 'WdExportOptimizeFor', 'xlGreen',
           'wdKeyBackSingleQuote', 'wdHelpIndex',
           'wdTypeCustomEquations', 'WdJustificationMode',
           'wdAnimationMarchingBlackAnts', 'wdFrameRight',
           'wdPrintAutoTextEntries', 'wdIMEModeKatakanaHalf',
           'wdFieldSkipIf', 'xlPaleVioletRed', 'wdTexture75Percent',
           'wdUndefined', 'wdSortSeparateByDefaultTableSeparator',
           'wdBorderVertical', 'wdKeyG', 'wdDeletedTextMarkColorOnly',
           'wdPasteMetafilePicture', 'WdTableFormat',
           'WdLanguageID2000', 'TaskPanes',
           'wdDialogFormatDrawingObjectTabColorsAndLines',
           'WdProtectedViewCloseReason', 'wdKeyF9', 'wdTitleSentence',
           'xlWalls', 'WdExportCreateBookmarks',
           'wdPaneRevisionsHoriz', 'xlGray16', 'RevisionsFilter',
           'wdSummaryModeHideAllButSummary', 'WdPageBorderArt',
           'wdXMLSelectionChangeReasonDelete', 'wdStylisticSet01',
           'wdStylisticSet10', 'wdFormatFlatXMLTemplate',
           'wdDialogToolsOptionsAutoFormat', 'wdGoToField',
           'wdSendToEmail', 'XlChartElementPosition', 'wdColorLime',
           'wdArtDecoArch', 'wdDialogTablePropertiesTabRow',
           'wdWrapLargest', 'wdOpenFormatXMLDocumentMacroEnabled',
           'wdArtHouseFunky', 'wdArtCabins', 'xlSeaGreen', 'xlTomato',
           'XlReadingOrder', 'wdTableFormatColumns1', 'wdBorderLeft',
           'wdDialogToolsSpellingAndGrammar', 'Tables',
           'WdDefaultFilePath', 'wdUnderlineDouble',
           'wdDialogHelpWordPerfectHelp',
           'wdStyleTableLightShadingAccent1',
           'wdContentControlCheckBox', 'wdLetterBottom',
           'wdListNumberStyleSimpChinNum1', 'wdCaptionFigure', 'Cell',
           'wdTableLeft', 'wdFrenchCanadian', 'wdFieldComments',
           'xlLabelPositionCenter', 'wdKeyX', 'xlSkyBlue',
           'wdInlineShapeEmbeddedOLEObject', 'SmartTag',
           'OMathBorderBox', 'wdColorOliveGreen',
           'WdContentControlType', 'xlLabelPositionMixed',
           'wdMoveFromTextMarkHidden', 'WdCompareDestination',
           'wdCustomLabelLetterLS', 'wdAllAtOnce',
           'xlHundredThousands', 'wdShowFilterFormattingRecommended',
           'wdListMixedNumbering', 'WdSortOrder', 'wdPropertyLines',
           'wdPrintOddPagesOnly', 'wdArtHeebieJeebies',
           'wdDialogFormatChangeCase', 'wdRDIDocumentProperties',
           'WdSeekView', 'wdLineStyleDashLargeGap', 'WdEmphasisMark',
           'wdOMathDisplay', 'wdFieldQuote', 'wdTexture77Pt5Percent',
           'wdTableFormatList3', 'wdLineWidth100pt', 'wdArtTriangles',
           'wdColorLavender', 'xlBinsTypeManual', 'XMLNamespace',
           'wdFieldAutoText', 'wdUnderlineDotDashHeavy', 'wdKeyShift']
from comtypes import _check_version; _check_version('')
